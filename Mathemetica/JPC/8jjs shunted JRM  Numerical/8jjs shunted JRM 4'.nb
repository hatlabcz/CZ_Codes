(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1732017,      31464]
NotebookOptionsPosition[   1725385,      31355]
NotebookOutlinePosition[   1725757,      31371]
CellTagsIndexPosition[   1725714,      31368]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ColorBar`\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7378873562790003`*^9, 3.7378873643710003`*^9}, {
   3.737997853458*^9, 3.737997853841*^9}, 3.737997909674*^9},
 FontSize->12,
 CellLabel->"In[1]:=",ExpressionUUID->"41b9eada-926d-4f9b-b6cf-5982c86c502e"],

Cell[CellGroupData[{

Cell["Precompute joint element", "Section",
 CellChangeTimes->{{3.7082743526810417`*^9, 3.708274359420642*^9}, {
  3.708952452776116*^9, 3.7089524569271927`*^9}},
 FontSize->12,ExpressionUUID->"6969e32b-6cd5-4880-8da6-9cc177d65628"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"precomputeElement", "[", 
     RowBox[{"EJ1_", ",", "EJ2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t1", ",", "\[Phi]", ",", "\[Phi]1", ",", "int1", ",", "res"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t1", "=", 
        RowBox[{"Monitor", "[", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"res", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"FindMinimum", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "EJ1"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
                    RowBox[{"EJ2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]", "-", "\[Phi]1"}], "]"}]}]}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", " ", "s1"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", 
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]", ",", 
                  RowBox[{"\[Pi]", "/", "3."}]}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Phi]", ",", " ", 
               RowBox[{"Min", "[", "res", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"\[Phi]", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "\[Pi]"}], ",", 
              RowBox[{"2.", "\[Pi]"}], ",", 
              RowBox[{"\[Pi]", "/", "1000."}]}], "}"}]}], "]"}], ",", 
          "\[Phi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Interpolation", "[", "t1", "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Return", "[", "t1", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergy", "[", 
    RowBox[{"int1_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"int1", "[", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"\[Phi]", "+", 
            RowBox[{"2", "\[Pi]"}]}], ",", 
           RowBox[{"4", "\[Pi]"}]}], "]"}], "-", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergyJJ", "[", 
    RowBox[{"EJ_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"-", "EJ"}], "*", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergyLinInd", "[", 
    RowBox[{"EL_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{
        FractionBox["EL", "2"], 
        SuperscriptBox["\[Phi]", "2"]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7089524605567417`*^9, 3.708952687697946*^9}, 
   3.708952719907143*^9, {3.7089527648183813`*^9, 3.708952833352254*^9}, {
   3.708952977892933*^9, 3.708952979186363*^9}, {3.708955098041913*^9, 
   3.70895511812256*^9}, {3.708955195108472*^9, 3.708955195309194*^9}, {
   3.708957127322783*^9, 3.7089571283011417`*^9}, {3.708957773593704*^9, 
   3.708957773818112*^9}, {3.7090673829525194`*^9, 3.7090673863403287`*^9}, {
   3.70907199867183*^9, 3.7090720005438333`*^9}, {3.7120557773951874`*^9, 
   3.712055784469592*^9}, {3.737887962359*^9, 3.737888025382*^9}, {
   3.737889710583*^9, 3.737889763663*^9}, {3.73788983759*^9, 
   3.7378898624700003`*^9}, {3.737889920576*^9, 3.737889923333*^9}, {
   3.7378899818389997`*^9, 3.737890008269*^9}, 3.7378900503900003`*^9, 
   3.7378902795039997`*^9, {3.737890427167*^9, 3.737890497502*^9}, {
   3.737890568049*^9, 3.7378905984700003`*^9}, {3.737890801935*^9, 
   3.737890836358*^9}},
 FontSize->12,
 CellLabel->"In[3]:=",ExpressionUUID->"54b54782-c0ea-4eed-912c-f75c74c0e58a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set up", "Section",
 CellChangeTimes->{{3.7143455389010515`*^9, 
  3.7143455514051533`*^9}},ExpressionUUID->"8ea9f4e5-c859-46c2-b708-\
7d315745f382"],

Cell["In the unit of GHz", "Text",
 CellChangeTimes->{{3.7089783824622836`*^9, 
  3.7089783875985775`*^9}},ExpressionUUID->"0bfa07cf-22b2-4fc4-82c1-\
12fab99d6641"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sf", "=", 
   FractionBox[
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]], 
    RowBox[{"2", " ", "\[Pi]", " ", "1", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "34"}]]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ic1", "=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"5", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ",", "\"\<Ampere\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EJ1", "=", 
   RowBox[{"sf", "*", 
    RowBox[{"UnitConvert", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"Quantity", "[", "\"\<FluxQuantum\>\"", "]"}], 
         RowBox[{"2", "\[Pi]"}]], ")"}], "Ic1", 
       FractionBox["1", 
        RowBox[{"Quantity", "[", "\"\<Joule\>\"", "]"}]]}], ",", 
      "\"\<SI\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"EJ2", "=", 
    RowBox[{"\[Alpha]", " ", "EJ1"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"EL", "=", 
    RowBox[{"\[Beta]", " ", "EJ1"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["H", "arm"], "[", "\[Alpha]_", "]"}], ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"precomputeElement", "[", 
     RowBox[{"EJ1", ",", 
      RowBox[{"\[Alpha]", " ", "EJ1"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.708953559345889*^9, 3.7089537340931396`*^9}, {
   3.708953765042852*^9, 3.708953765176115*^9}, {3.708954686754141*^9, 
   3.708954703143943*^9}, {3.708978357676866*^9, 3.708978372005686*^9}, 
   3.7090288410703506`*^9, {3.709032663436978*^9, 3.709032685485239*^9}, 
   3.70905493502884*^9, {3.7090674011789675`*^9, 3.7090674039243746`*^9}, {
   3.7090721757451935`*^9, 3.709072177730397*^9}, {3.7090726085814724`*^9, 
   3.709072612760689*^9}, {3.712056147979384*^9, 3.7120561485474167`*^9}, {
   3.7120570878381405`*^9, 3.712057091512351*^9}, {3.712057579255248*^9, 
   3.7120575798202806`*^9}, {3.7144872238709865`*^9, 3.714487245802241*^9}, {
   3.7144896701689067`*^9, 3.7144896729110637`*^9}, {3.7146602368715043`*^9, 
   3.7146602399006777`*^9}, {3.7146604599162617`*^9, 
   3.7146604705168686`*^9}, {3.7146607966885242`*^9, 3.714660806654094*^9}, {
   3.7146609895015526`*^9, 3.714660993859802*^9}, {3.7146611925411654`*^9, 
   3.714661193108198*^9}, {3.714661412152727*^9, 3.7146614131317825`*^9}, {
   3.7146616050377593`*^9, 3.714661631852293*^9}, {3.71466203147815*^9, 
   3.714662031988179*^9}, {3.714662812253808*^9, 3.714662927662409*^9}, {
   3.714663158663622*^9, 3.714663159898692*^9}, 3.714663281470646*^9, {
   3.7146634336473494`*^9, 3.7146634811950693`*^9}, {3.7146690509506407`*^9, 
   3.714669053277774*^9}, 3.714669892470773*^9, {3.71467021358314*^9, 
   3.71467021445319*^9}, {3.714733281299407*^9, 3.714733283295521*^9}, 
   3.714738379217991*^9, {3.7157099415351534`*^9, 3.7157100120181847`*^9}, {
   3.715710047404208*^9, 3.715710060611964*^9}, {3.7157116280386157`*^9, 
   3.7157116281406217`*^9}, {3.7160540686273885`*^9, 
   3.7160540718785744`*^9}, {3.7160562669861274`*^9, 
   3.7160563029681854`*^9}, {3.7160563628976135`*^9, 
   3.7160563682989225`*^9}, {3.7160565350644608`*^9, 3.716056636072238*^9}, 
   3.7160570607395277`*^9, 3.716057423341267*^9, {3.716057885867722*^9, 
   3.716057886146738*^9}, {3.7161135087831707`*^9, 3.7161135098932343`*^9}, {
   3.7161138013749065`*^9, 3.7161138032290125`*^9}, {3.7162051958513713`*^9, 
   3.716205261358118*^9}, {3.716386394117633*^9, 3.716386419841676*^9}, {
   3.716742421925771*^9, 3.716742447859255*^9}, {3.71674373841607*^9, 
   3.7167437386590843`*^9}, {3.7167446831311045`*^9, 3.716744745155652*^9}, {
   3.7167474407858334`*^9, 3.7167474726576567`*^9}, {3.7194073664429226`*^9, 
   3.719407379264656*^9}, {3.724498122979927*^9, 3.724498125050045*^9}, {
   3.724498162602193*^9, 3.724498169227572*^9}, {3.7244983017541523`*^9, 
   3.7244983358171005`*^9}, {3.7244990138978844`*^9, 3.7244990142519045`*^9}, 
   3.725031178368044*^9, 3.725031851617551*^9, {3.7252143742376585`*^9, 
   3.725214376066764*^9}, 3.7252788031067796`*^9, {3.7252790881020803`*^9, 
   3.7252791322876077`*^9}, 3.72528127284704*^9, {3.7252813265631127`*^9, 
   3.7252813266981206`*^9}, {3.7252829799536815`*^9, 
   3.7252829884381666`*^9}, {3.727350257419738*^9, 3.7273502899405975`*^9}, {
   3.727351197341498*^9, 3.7273512238440137`*^9}, 3.7273516801961155`*^9, {
   3.7273532635156765`*^9, 3.7273533080122213`*^9}, {3.727353881820041*^9, 
   3.727353885899275*^9}, {3.7378892738459997`*^9, 3.737889325215*^9}, 
   3.737890378873*^9, {3.737890878992*^9, 3.737890879207*^9}, {
   3.737891033751*^9, 3.7378910551029997`*^9}, {3.7378915706879997`*^9, 
   3.737891624571*^9}, {3.737901837448*^9, 3.737901837856*^9}, 
   3.7380044247539997`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"b02f79c5-1699-4357-a47d-01fc21ef7a5d"],

Cell[BoxData["2618.9421416573730182793`7.900542288395337"], "Output",
 CellChangeTimes->{
  3.737890016271*^9, 3.7378900558380003`*^9, 3.737890169891*^9, {
   3.7378902572349997`*^9, 3.7378902845810003`*^9}, 3.737890379785*^9, 
   3.737890510046*^9, 3.737890880506*^9, 3.737891056859*^9, 3.737891627883*^9,
    3.7378955928719997`*^9, 3.737899114969*^9, 3.737900421492*^9, 
   3.737900555006*^9, 3.737901839513*^9, 3.7379022409309998`*^9, 
   3.737902419591*^9, 3.7379034389*^9, 3.737903938624*^9, 3.73790409344*^9, 
   3.737905514968*^9, 3.737905684302*^9, 3.737913131973*^9, 3.737914478821*^9,
    3.737919438917*^9, 3.737974060652*^9, 3.737978418877*^9, 
   3.737996029316*^9, 3.738004426098*^9, 3.7380660774300003`*^9, 
   3.7380754698199997`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"498bbcde-8f60-4c5e-bb80-02a3c0aad671"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hamiltonian on the arms", "Section",
 CellChangeTimes->{{3.7379048416809998`*^9, 
  3.7379048674969997`*^9}},ExpressionUUID->"4905469d-de32-4058-bb2b-\
f92c640f70d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Alpha]list", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"0.1", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5", ",", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]listname", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<\[Alpha]=\>\"", "<>", 
      RowBox[{"(", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[Alpha]list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7379228372320004`*^9, {3.737922961807*^9, 3.7379230152460003`*^9}, {
   3.7379233226400003`*^9, 3.737923336492*^9}, {3.737923421826*^9, 
   3.737923539709*^9}, {3.737923673401*^9, 3.737923744455*^9}, 
   3.737974179627*^9, {3.7379771493059998`*^9, 3.737977151297*^9}, {
   3.737990658086*^9, 3.737990665106*^9}, {3.73800445721*^9, 
   3.738004462369*^9}, {3.73800543317*^9, 3.738005440626*^9}, 
   3.7380068285620003`*^9, {3.7380072118900003`*^9, 3.73800723021*^9}, {
   3.73800876845*^9, 3.738008771865*^9}, {3.738009161723*^9, 
   3.7380091687530003`*^9}, {3.738066086546*^9, 3.7380660878570004`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1488c04b-ad32-4201-aa59-ca2c1baab2ea"],

Cell[BoxData[
 RowBox[{"{", "0.5`", "}"}]], "Output",
 CellChangeTimes->{{3.737922832381*^9, 3.737922838324*^9}, 
   3.737923017635*^9, {3.737923330915*^9, 3.737923337441*^9}, 
   3.737923430535*^9, 3.737923481142*^9, {3.737923517903*^9, 
   3.737923540244*^9}, 3.7379236794709997`*^9, {3.737923724148*^9, 
   3.737923744936*^9}, 3.7379740660439997`*^9, 3.737974180483*^9, 
   3.7379771551429996`*^9, 3.737978423199*^9, {3.7379906629849997`*^9, 
   3.737990665484*^9}, 3.737996035697*^9, 3.7380044629519997`*^9, 
   3.73800544563*^9, 3.738006830741*^9, 3.7380072306689997`*^9, 
   3.738008772729*^9, 3.738009196507*^9, 3.7380660887*^9, 
   3.7380754751470003`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"0ff00345-53d2-4c26-8410-e3067a18f939"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["listH", "arm"], "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["H", "arm"], "[", 
        RowBox[{"\[Alpha]list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"\[Alpha]list", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7089527386422663`*^9, 3.708952773186026*^9}, {
   3.708952987117523*^9, 3.7089530002113132`*^9}, {3.7089544115672703`*^9, 
   3.708954455193282*^9}, {3.737891404477*^9, 3.7378914261*^9}, {
   3.737891479165*^9, 3.737891504428*^9}, {3.737891743242*^9, 
   3.7378917475629997`*^9}, {3.737891878068*^9, 3.737891920012*^9}, {
   3.73789202934*^9, 3.737892037276*^9}, {3.737892082935*^9, 
   3.737892097708*^9}, {3.7378922137320004`*^9, 3.737892228684*^9}, 
   3.737892301259*^9, {3.7378942274309998`*^9, 3.737894284741*^9}, 
   3.7378943424370003`*^9, {3.737894375132*^9, 3.737894537558*^9}, {
   3.737895007781*^9, 3.737895008844*^9}, {3.737895052966*^9, 
   3.737895079212*^9}, {3.737895166343*^9, 3.7378952169890003`*^9}, {
   3.7378953339709997`*^9, 3.737895334418*^9}, 3.737895403742*^9, {
   3.7378954354300003`*^9, 3.737895475836*^9}, {3.737895521462*^9, 
   3.737895524947*^9}, {3.737900619666*^9, 3.737900680979*^9}, {
   3.737900713559*^9, 3.737900816222*^9}, {3.737900920273*^9, 
   3.737900924973*^9}, {3.737901008663*^9, 3.737901038925*^9}, {
   3.737901285954*^9, 3.737901336276*^9}, {3.73790143023*^9, 
   3.7379014366280003`*^9}, {3.737901558828*^9, 3.737901602005*^9}, {
   3.7379016845179996`*^9, 3.7379017050290003`*^9}, {3.737901833133*^9, 
   3.737901835476*^9}, {3.737902202903*^9, 3.7379022066280003`*^9}, {
   3.737902525795*^9, 3.73790258254*^9}, {3.7379040564*^9, 
   3.737904104493*^9}, {3.737905211903*^9, 3.7379052126359997`*^9}, {
   3.737916348991*^9, 3.737916432533*^9}, {3.737916525575*^9, 
   3.737916582389*^9}, {3.737916612585*^9, 3.737916640101*^9}, {
   3.737916719592*^9, 3.737916720068*^9}, {3.7379167626140003`*^9, 
   3.73791676694*^9}, {3.7379227946470003`*^9, 3.73792284366*^9}, 
   3.738004490899*^9, 3.738005453418*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"22cf45a3-2ca1-49ba-9eac-6d27afc99f6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["xH", "arm"], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["listH", "arm"], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], "-", 
      RowBox[{"getEnergy", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["listH", "arm"], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    SubscriptBox["xH", "arm"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Pi]"}], ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.737901611691*^9, 3.737901629013*^9}, 
   3.7379022150109997`*^9, 3.737902591237*^9, {3.737902649369*^9, 
   3.7379026963570004`*^9}, {3.73790525208*^9, 3.737905254453*^9}, {
   3.73791604355*^9, 3.7379161039969997`*^9}, {3.7379165723459997`*^9, 
   3.737916578007*^9}, 3.737916714454*^9, {3.737916773943*^9, 
   3.737916827112*^9}, 3.737923366801*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"f5b14626-761d-4254-a232-ba78fd801876"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
D/7/93r/A3GUNzQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$124583#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {0., 
        2618.9408657913928`}}, {{-6.283185307179586, 6.283185307179586}, {0., 
       2618.9408657913928`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]=0.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737901432389*^9, 3.737901799299*^9, 3.737902384782*^9, 
   3.7379025182939997`*^9, 3.73790262323*^9, {3.737902654625*^9, 
   3.737902697289*^9}, 3.737902747341*^9, 3.737902810151*^9, 
   3.737904127744*^9, {3.7379052434969997`*^9, 3.737905255141*^9}, 
   3.7379055467799997`*^9, 3.737913163778*^9, 3.737914512602*^9, 
   3.7379159769379997`*^9, {3.737916047557*^9, 3.7379160599110003`*^9}, 
   3.737916113807*^9, 3.737916598157*^9, 3.73791667529*^9, {3.737916747926*^9,
    3.737916750373*^9}, {3.737916798347*^9, 3.737916827825*^9}, 
   3.737919469317*^9, {3.737923348802*^9, 3.737923368332*^9}, {
   3.737923520972*^9, 3.7379235307860003`*^9}, 3.7379236848710003`*^9, 
   3.737923746264*^9, 3.737974158233*^9, 3.737974202106*^9, 3.737977249001*^9,
    3.7379785179049997`*^9, 3.737996151207*^9, 3.7380045168640003`*^9, 
   3.7380057752539997`*^9, {3.738006832774*^9, 3.738006849532*^9}, {
   3.7380072382019997`*^9, 3.73800726771*^9}, {3.738008775553*^9, 
   3.7380087893199997`*^9}, 3.738009199507*^9, 3.7380092778570004`*^9, 
   3.7380661012790003`*^9, 3.7380754876289997`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"5be9a5d5-725b-4961-a7c1-2176e3e07139"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["xH", "arm"], "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "y"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", 
         SubscriptBox["listH", "arm"], "]"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708954806576679*^9, 3.708954829357175*^9}, {
   3.7089548954405537`*^9, 3.708954905734559*^9}, {3.737894629811*^9, 
   3.737894676638*^9}, {3.737894894981*^9, 3.737894998453*^9}, {
   3.737895241594*^9, 3.73789530906*^9}, {3.7378956619960003`*^9, 
   3.7378956914449997`*^9}, {3.7379014446070004`*^9, 3.737901475277*^9}, 
   3.737902218675*^9, {3.7379027109449997`*^9, 3.737902739461*^9}, {
   3.737902789921*^9, 3.737902800737*^9}, {3.737905260226*^9, 
   3.7379052623970003`*^9}, 3.73791683154*^9, 3.737923754217*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"f65a3e19-1355-4f3a-a2c2-25d20524d50b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$124942#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{(-4) Pi, 4 Pi}, {-1309.4689042102425`, 
        1309.4665860247942`}}, {{-12.566370614359172`, 
       12.566370614359172`}, {-1309.4689042102425`, 1309.4665860247942`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]=0.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737895260332*^9, 3.737895302533*^9, 3.7378953494*^9, 
   3.7378957015880003`*^9, 3.7378991664560003`*^9, 3.737899313914*^9, 
   3.737901507684*^9, {3.7379027120959997`*^9, 3.737902811653*^9}, 
   3.737904133851*^9, {3.737905246693*^9, 3.7379052629379997`*^9}, 
   3.737905548579*^9, 3.737913165815*^9, 3.7379145146359997`*^9, 
   3.737915979492*^9, 3.7379168325*^9, 3.737919471631*^9, 3.737923756212*^9, 
   3.737974161653*^9, 3.737974204962*^9, 3.737977251992*^9, 3.737978520201*^9,
    3.737996153855*^9, 3.738004518117*^9, 3.738005785314*^9, 
   3.738006851082*^9, 3.738007269351*^9, {3.738008777461*^9, 
   3.738008790731*^9}, 3.738009279922*^9, 3.738066103242*^9, 
   3.738075489968*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"bef50bee-6d13-43a8-b5df-dc198cedb19b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Total Hamiltonian", "Section",
 CellChangeTimes->{{3.737904913843*^9, 
  3.737904954499*^9}},ExpressionUUID->"5a99d994-908d-4150-81e1-531ce0275825"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", 
    RowBox[{
    "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_", ",", 
     "\[Phi]5_", ",", "\[Phi]ext_", ",", "Harm_", ",", "\[Beta]_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]2", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]3", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", " ", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]4", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]1", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "-", 
      RowBox[{"4", 
       RowBox[{"getEnergy", "[", 
        RowBox[{"Harm", ",", "0"}], "]"}]}]}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]5"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn", "[", 
    RowBox[{
     RowBox[{"\[Phi]1_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]2_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]3_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]4_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]5_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]ext_", "?", "NumericQ"}], ",", "Harm_", ",", 
     RowBox[{"\[Beta]_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]2", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]3", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", " ", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]4", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]1", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "-", 
      RowBox[{"4", 
       RowBox[{"getEnergy", "[", 
        RowBox[{"Harm", ",", "0"}], "]"}]}]}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]5"}]}], "]"}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7378179385014*^9, 3.7378179492293997`*^9}, {
   3.7378184952874002`*^9, 3.7378185573414*^9}, {3.7378995866219997`*^9, 
   3.737899598349*^9}, {3.737899688446*^9, 3.73789971227*^9}, {
   3.7379000170620003`*^9, 3.73790002276*^9}, {3.737900066966*^9, 
   3.737900136755*^9}, {3.737900167718*^9, 3.737900182398*^9}, {
   3.737900274271*^9, 3.73790031558*^9}, {3.737901767541*^9, 
   3.737901783579*^9}, {3.737901898888*^9, 3.7379019159189997`*^9}, {
   3.737901950145*^9, 3.737902013043*^9}, {3.7379030951219997`*^9, 
   3.737903095389*^9}, {3.737904236712*^9, 3.737904277109*^9}, 
   3.737904665656*^9, {3.737918372722*^9, 3.737918392887*^9}, 
   3.7379741685950003`*^9},
 FontSize->12,
 CellLabel->"In[17]:=",ExpressionUUID->"c152647a-67b7-4d47-ba23-8bcce28fd3a9"],

Cell[CellGroupData[{

Cell["Fix \[Beta], Varying \[Alpha]", "Subsection",
 CellChangeTimes->{{3.737914895508*^9, 
  3.737914964284*^9}},ExpressionUUID->"e90ec7eb-29c1-426f-ba17-d648abb9c5b0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ip", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "4"}], "]"}], ",", "20"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7379020934379997`*^9, 3.737902159835*^9, {3.737902287484*^9, 
   3.737902355144*^9}, 3.737903396604*^9, {3.737904363743*^9, 
   3.737904386573*^9}, 3.737904461568*^9, {3.737904508034*^9, 
   3.737904553243*^9}, 3.7379046842390003`*^9, 3.73790498071*^9, {
   3.737907121486*^9, 3.7379071223970003`*^9}, {3.737914523454*^9, 
   3.7379145238199997`*^9}, {3.737914773718*^9, 3.7379147827799997`*^9}, {
   3.737915898439*^9, 3.737915898908*^9}, {3.7379752084849997`*^9, 
   3.737975213281*^9}, {3.737996004218*^9, 3.737996004409*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"f4546922-6b78-442b-9994-811c33321bf4"],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt1", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"zt", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"res", "=", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    RowBox[{"Hn", "[", 
                    RowBox[{
                    "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4",
                     ",", "0", ",", "\[Phi]ext", ",", 
                    RowBox[{
                    SubscriptBox["listH", "arm"], "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\[Beta]"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]2", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]3", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]4", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\[Phi]1", ",", 
                    "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "}"}], "/.", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "ip", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"zt1", "=", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\[Phi]ext", ",", " ", 
                 RowBox[{"zt", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "}"}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]ext", ",", 
             RowBox[{
              RowBox[{"-", "4"}], "\[Pi]"}], ",", 
             RowBox[{"4", "\[Pi]"}], ",", 
             RowBox[{"\[Pi]", "/", "5"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", "\[Phi]ext"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"listt1", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt1", ",", "t1", ",", "j"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\[Alpha]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737907081333*^9, 3.7379070989639997`*^9}, {
   3.737907134652*^9, 3.737907195244*^9}, {3.7379072447*^9, 
   3.7379072546289997`*^9}, {3.737907292842*^9, 3.737907295564*^9}, {
   3.7379073292279997`*^9, 3.737907337475*^9}, {3.7379075008120003`*^9, 
   3.737907502916*^9}, 3.737913191933*^9, {3.737913581718*^9, 
   3.73791363679*^9}, {3.7379136824379997`*^9, 3.737913741782*^9}, {
   3.737913862362*^9, 3.73791386276*^9}, {3.7379143833859997`*^9, 
   3.73791439188*^9}, 3.7379147871879997`*^9, {3.73791504117*^9, 
   3.737915054889*^9}, {3.737915363762*^9, 3.737915369966*^9}, {
   3.737915918145*^9, 3.737915937817*^9}, {3.737916001534*^9, 
   3.737916002047*^9}, {3.7379170469969997`*^9, 3.737917053241*^9}, 
   3.737917108684*^9, {3.737917213142*^9, 3.7379172430220003`*^9}, 
   3.737917455209*^9},
 CellLabel->
  "In[252]:=",ExpressionUUID->"66fc426c-75a0-4d9e-b7cd-d9c4bfbaa955"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt1.txt\>\"", ",", "listt1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738059128291*^9, 3.738059149777*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"c6a1c4d7-c240-46b6-afe2-46ca0f9488df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"listt1", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "All", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "listt1", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Total Flux\>\"", ",", "\"\<Energy\>\""}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.737914320328*^9, 3.737914363591*^9}, {3.737914619841*^9,
    3.7379146200629997`*^9}, 3.737923799209*^9},
 CellLabel->
  "In[253]:=",ExpressionUUID->"e98a9a52-b65c-4c99-9a6a-9ba6c61c4ef2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxVUlsog3EUH5OyQoqNlEzumeXyQrHjFt7ceZjLhCiMlCfyIERZo5BLq9VI
WrnMUOg7D0pIIh54QPIgcpspIVn5fQ++Og9f53/O+d2UtfqieqlEIolxlZur
3F0VqMou+VLGsFya4905vEGyqgtt3nUUf2dKF+vKNujb0FY/ZopkRXiN8LC6
Tk+CZ+uNNoJXZt0b221rdP0y06kODufPLMHuqbPTiTKpp+s8jDP8nC+yIxvt
FO0N7E0o+d3g0Mf7rtBab7VRXhbKj8U/QxGJS1TQ9JCwGx3CJe2j224GKyUf
KLJ0s8Hc3HFperXP0x++IE603A6+OSzAI+fjodPUqQoz7vvzyGRfTtTzNO75
8f2VbNVrawz7fdiqylcsq43Y58UnTRnNH5v9mPdgS6Eq4Ezbjfc/QmOKOlZv
bkPfKUzbzC1WeyX+b4XBsAXr1kEaSfCVx+2Pvxpz09DXpKOPeY0J89ivafi3
34PmcB/4SMQH/DQP/OBHd+AH/iTyhz50CH2gH4n6QV/SQ1/oT6XQH/6QA/7A
P3LCP/hL2fAX/pPoP/JBYj6QHxLzg3yRmC/kj8T8/QI2PDMR
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxVUlkoRGEUvpZkKaVkyZLLGDPWLC9omhMSGaWhicmSKUnZSR5sIUqSNJIl
olA8WBokcQ+JJp48DaWYvFgSUgrJlO8+uHUebuc/53ybaGrQV7kIgqB2lJOj
nB0VEJdV9CWqudA2mVRcwuRZflWacxPFOt3TbV0y0/dIY9X4rJI7J00Jcw0S
PUtu9fbSSJ5uDZlaftqnm5eZtoQgBdtrI07bv/foQkzu7rgMZ3dllFfowS4d
662D1gmR9ffVMev5O7TdVzHqZwjjdEsNfR5ZqKDmMfFUFcqdRSrLUOImpZz5
Z1YuBnG8UjhZ0K/RH75A5ivV/XL9CvD48cC8zs18voj7vmyz5y7Fds3jng+L
o2JZj2Ia+73ZuDE1kRdtxj4PbjJ9XJdnDWPelcfSXtOtqb14/yOpFQbNz2wr
+u+S7S03pbLahP87yXfVM3irOYMEfNlqc6/xwaBBX9uMPua155jHfm34v/2u
JN8HPmoBPuCnYuAHPwoEP/CnS/CHPtQPfaAfHUI/6EuyvtCfuqA//CEN/IF/
VAj/4C95wF/4T3fwH/mgGeQD+SE5P8gXyflC/kjO3y83qip1
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDiamond]\"", FontSize -> 10.88, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHPh06v6ys77ADV9ytGI8H6gc+
RPrfzGk87PCnryB16jy1AzXLC2+e8T7s8G4/W96jGNUDT69LcdTlHXJ48GFO
mb60ygGrbE+jdqmDDpcUjetrbiodSDygvu+H1X6HI0En209OVzwgLbh10xWR
PQ7bmuMniIUpHPi/54u07f0dDgGZrw2Pa8gduDK5rXPr+q0OJqfFnROXSh/I
OHa74uC0TQ4Q90keOCXzMOuY03qoe8QOlO6+vsh0y0qo/SIHHq7dIis+eQnU
PsEDkv6qp2feng81n+/ADecVvHsWTIeax3lgVsJq2fmdE6D6WQ4wStu6Vfq2
QtX/2+/YzuqvLFoBlf+yn/t19VWx6lQo/8n+WP3IgsI2VwcGKChdlXvBTsLa
FipvrwSVh+q3l4Dqh5pv745iPosDzH6o+xxmQt0Hdb8DzP1Q/zlIQf0H9b/D
A6j/oeHjAAsfaPg5nISGHzR8HbKh4QsNf4fr0PCHxo8D015I/EDjzwEWf9D4
dUiCxi80/h1soPEPTR8OsPQBTT8OtdD0A01fDp+h6Qua/hw+Q9MfAOJNMWo=

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledUpTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoH4oo5V/HeOerAFXcrxuOB+gH/
CfVqT4D8P30FqVPnqR04MuVnkMWtow7v9rPlPYpRPfD24N/PwluOOjz4MKdM
X1rlgEvhnlv/fxx2uKRoXF9zU+mAhITtnPlShxyOBJ1sPzld8cBn44UGM/QO
OGxrjp8gFqZwINNE7vjBtj0OAZmvDY9ryB3Iun++3+vYDgeT0+LOiUulD7x5
nr3zjdZWB4j7JA+sU1hnXXtgI9Q9Ygceyjhs1VdcC7Vf5ICkT5drtdtyqH2C
B1KFZ+cl/1sINZ/vAEeznNGhFbOg5nEe4NQ53OWyZBJUP8uBkomGT0/8a4eq
/7d/yb+/d3tlqqHyX/bLtV8+F6GTAeU/2e+mf+HmNnMPBwYoeLDkmJp9lZot
VN5eESoP1W/PD9UPNd9+GYr5LA4w+6Huc4C5D+p+B5j7of5zgPkP6n8HGaj/
oeHj8AQaPtDwc4CFHzR8HWDhCw1/hxxo+EPjxyEHGj/Q+HP4Ao0/aPw6SEPj
Fxr/Dm7Q+IemD4dP0PQBTT8OR6HpB5q+HIKg6Qua/hwSoOkPAO9XN64=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDownTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHVu1sYbGfedyBK+5WjMcD9QOv
VeY5hi467vCnryB16jy1A6/L+Mpbdx93eLefLe9RjOqBS/Knd4bcOe7w4MOc
Mn1plQORO38VqPYec7ikaFxfc1PpQIP/FpbKgCMOR4JOtp+crnhg1S51Rh+h
Qw7bmuMniIUpHBDtlJ4zde9+h4DM14bHNeQOVAp0Cmyu2e1gclrcOXGp9IGw
JW4Ws/O2O0DcJ3nggurp6Ia5m6HuETvwo7bS5b3gBqj9IgeMXIWTqpethNon
eIDRuORg9/nFUPP5DlRYvVwgEzIXah7ngSSPfR/u1U2B6mc5cPnuu7LCuC6o
+n/7Uzc/vJh8ohYq/2W/0MPWJ/E9WVD+k/1WHrP+357u5cAABS0/Px2p++du
C5W3F/GEyEP12/tD9UPNt09GMZ/F4RDUfqj7HDKg7oO63wHmfqj/HFig/oP6
38EE6n9o+Dj8hIYPNPwcYOEHDV+HSGj4QsPfARb+0PhxEIHGDzT+HGDxB41f
B1j8QuPfIRoa/9D04QBLH9D04/AGmn6g6cvhFTR9QdOfwxpo+gMAeL01sA==

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyCircle]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHmqIdp937esKBK+5WjMcD9QMd
j3W+sbOcdPjTV5A6dZ7agf/+p44v0z3p8G4/W96jGNUDc+In/5qTf9LhwYc5
ZfrSKgea2915Rc6ecLikaFxfc1PpwLFi2Y/zbY45HAk62X5yuuKBSSu+nfHa
fthhW3P8BLEwhQNXzKuslrsedAjIfG14XEPuwEquf7NY7ux1MDkt7py4VPpA
+i9emU9ZOx0g7pM8oGbxb8Yth61Q94gd6N6j7l+auhFqv8gBWy3jVLv9q6H2
CR4QfLHK6GnWUqj5fAeUxEW+uG2cDzWP80Dyuvn/VypPg+pnOXBRhV95W2UP
VP2//YYb06VvCjdA5b/s73/y7NGCFTlQ/pP9vutOCSVu8XFggIJ3pwyfvXoR
ZQuVt58ElYfqtz8K1Q81394ExXwWhxNQ+6Huc0iEug/qfgdNqPuh/nMQhfoP
6n8HmP+h4eMACx9o+DnAwg8avg450PCFhr/DKmj4Q+PH4TI0fqDx5wCLP2j8
OhyHxi80/h1aoPEPTR8OsPQBTT8OsPQDTV8OsPQFTX8OsPQHAIhhN1M=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptySquare]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoH9Njv9HXwnXLgirsV4/FA/QBD
TfjWO/KnHP70FaROnad2gGNpDX9e8CmHd/vZ8h7FqB7oWXfz/NPlpxwefJhT
pi+tcoBVTmRRRfgph0uKxvU1N5UO9B11XP/swXGHI0En209OVzxQ7uj85ari
UYdtzfETxMIUDlzkWPfnQ80hh4DM14bHNeQOuNRLtfG82+9gclrcOXGp9AGm
kM3PbmrsdoC4T/LAqrnRvo6btkHdI3ZAL4xZbdrETVD7RQ44bNiXIjl7LdQ+
wQOa77c3FtxYBjWf78ANp3Bf3mcLoOZxHvjjkffh1azpUP0sBxL5hXjNovug
6v/tf/dVIsVSuREq/2X/BqfA2Ue686D8J/u9+HLffZju58AABY80g6zLn7vY
QuXtY/kh8lD99seg+qHm239BMZ/FoQRqP9R9Dp+g7oO63+EW1P1Q/znoQv0H
9b+DDdT/0PBxgIUPNPwcVkDDDxq+DhzQ8IWGv4MbNPyh8eNwCRo/0PhzqIDG
HzR+Hfqh8QuNfwc2aPxD04dDHzR9QNOPAyc0/UDTl8P/akj6gqY/B1j6AwDc
ODCz
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 13647.795405588371`}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Energy\"", TraditionalForm], None}, {
        FormBox["\"Total Flux\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-7) Pi, -21.991148575128552`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "7"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-5) Pi, -15.707963267948966`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "5"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[5 Pi, 15.707963267948966`], 
          FormBox[
           RowBox[{"5", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[7 Pi, 21.991148575128552`], 
          FormBox[
           RowBox[{"7", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 13647.795405588371`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], FontSize -> 10.88, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDownTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledUpTriangle]\"", ",", "10.24`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDownTriangle]\"", ",", "10.24`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "10.24`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "10.24`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737904708442*^9, 3.737904986757*^9, 3.737905737642*^9, 3.737914368734*^9, 
   3.737914451465*^9, {3.737914599884*^9, 3.73791462074*^9}, 
   3.737914862499*^9, {3.737917159776*^9, 3.737917164525*^9}, 
   3.73791728127*^9, 3.7379184403859997`*^9, 3.7379195200620003`*^9, 
   3.737923927141*^9, 3.7379742368599997`*^9, 3.737977369332*^9, 
   3.737978657507*^9, 3.7379964852209997`*^9, 3.738006047366*^9, 
   3.7380068708120003`*^9, 3.738007309177*^9, 3.738008807102*^9, 
   3.73800935921*^9},
 CellLabel->
  "Out[253]=",ExpressionUUID->"5e126f80-dab1-4393-aa65-8e7727e71f9c"]
}, Open  ]],

Cell[TextData[StyleBox["Find Derivatives",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.737974639395*^9, 
  3.737974721185*^9}},ExpressionUUID->"7c32633e-ac44-4f33-9e6f-bac726fb1023"],

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt2", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t2", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Phi]ext", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", 
               ",", "\[Phi]4"}], "}"}], "=", 
             RowBox[{"listt1", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "1", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                 "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"\[Phi]f", "=", "0"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"h0", "=", 
             RowBox[{"H", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"a", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]1"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]2"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]3"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]4"}], 
               ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "a"}], " ", "\[Phi]w"}], "+", "\[Phi]f"}], ",", 
               " ", "\[Phi]ext", ",", 
               RowBox[{
                SubscriptBox["listH", "arm"], "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "\[Beta]"}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\[Phi]ext", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "2"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{"ND", "[", 
                RowBox[{
                 RowBox[{"ND", "[", 
                  RowBox[{
                   RowBox[{"ND", "[", 
                    RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]y", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Phi]z", ",", "1"}], "}"}], ",", "0"}], "]"}], 
               ")"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"xyzvalue", ","}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"ND", "[", 
                   RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]y", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "4"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "4"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "24"}]}], "\[IndentingNewLine]", "}"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"listt1", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"listt1", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"listt2", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt2", ",", "t2", ",", "j"}], "]"}]}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\[Alpha]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73790578819*^9, 3.737905817094*^9}, {3.737905928505*^9, 
   3.737905930734*^9}, {3.7379060343719997`*^9, 3.73790605558*^9}, {
   3.737915080697*^9, 3.7379151033570004`*^9}, {3.737915136238*^9, 
   3.737915163516*^9}, {3.7379152018859997`*^9, 3.737915204744*^9}, {
   3.737915262869*^9, 3.737915265118*^9}, {3.737917350358*^9, 
   3.7379173675039997`*^9}, {3.7379173983310003`*^9, 3.73791744863*^9}, {
   3.7379175632139997`*^9, 3.737917573197*^9}, {3.737917777321*^9, 
   3.737917812045*^9}, 3.737917948777*^9, {3.737917993009*^9, 
   3.737917995005*^9}, {3.7379212371359997`*^9, 3.737921270576*^9}, {
   3.7379213273640003`*^9, 3.737921437196*^9}, {3.737921468924*^9, 
   3.7379215051*^9}, {3.737977046237*^9, 3.7379770828190002`*^9}, {
   3.738004914422*^9, 3.738004937666*^9}, {3.738006245283*^9, 
   3.738006273587*^9}, {3.738006884381*^9, 3.7380068941870003`*^9}, {
   3.738009248573*^9, 3.738009256731*^9}, {3.73800976548*^9, 
   3.7380097714119997`*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"7a5beacc-ffae-4c9a-96de-1baaa80a76e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt2.txt\>\"", ",", "listt2"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738059086571*^9, 3.7380591067460003`*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"10e7b32b-c15e-44f7-a91e-0d990b781413"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x2\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyz\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x2y2\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x4\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.715555019587125*^9, 3.7155550757633376`*^9}, {
   3.7155551108593454`*^9, 3.715555139947009*^9}, {3.727351599610506*^9, 
   3.7273516022006545`*^9}, {3.7273542435197296`*^9, 3.727354244807803*^9}, {
   3.7281387925755587`*^9, 3.728138820592161*^9}, {3.728139436319379*^9, 
   3.728139440495618*^9}, {3.7281406529759674`*^9, 3.7281406795034847`*^9}, {
   3.737918101132*^9, 3.737918114972*^9}, {3.737918232457*^9, 
   3.737918290958*^9}, {3.7379184810559998`*^9, 3.737918525321*^9}, {
   3.737919099275*^9, 3.737919170507*^9}, {3.7379193986099997`*^9, 
   3.737919402597*^9}, {3.7379195434849997`*^9, 3.737919563053*^9}, 
   3.737920967723*^9, {3.737921222774*^9, 3.737921224389*^9}, {
   3.737977128842*^9, 3.737977133697*^9}, {3.737990190083*^9, 
   3.737990194211*^9}, {3.738006906724*^9, 3.738006908578*^9}, {
   3.738009263699*^9, 3.7380092662980003`*^9}, {3.738009776106*^9, 
   3.738009778466*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"ed235432-2ae6-451c-982c-f86a0d1a39dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<2rd\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xyz\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<3rd\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2y2\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Cross-Kerr\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x4\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Self-Kerr\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.737918530818*^9, 3.7379186407720003`*^9}, {
   3.737918694449*^9, 3.737918699797*^9}, {3.737919345267*^9, 
   3.737919351876*^9}, {3.737919555417*^9, 3.73791959533*^9}, {
   3.737919630546*^9, 3.7379197487799997`*^9}, {3.737919789435*^9, 
   3.7379197912799997`*^9}, {3.73791983059*^9, 3.7379199810950003`*^9}, {
   3.737920025667*^9, 3.737920083672*^9}, {3.737922266773*^9, 
   3.7379223096429996`*^9}, {3.737922366888*^9, 3.737922468296*^9}, {
   3.7379743415880003`*^9, 3.7379743703310003`*^9}, {3.737974914842*^9, 
   3.737974928793*^9}, {3.737977437043*^9, 3.737977465868*^9}, {
   3.737990212413*^9, 3.7379902157539997`*^9}, 3.738006350171*^9, {
   3.738006393299*^9, 3.7380064890699997`*^9}, {3.738006531491*^9, 
   3.73800654641*^9}, {3.738006919731*^9, 3.7380069443380003`*^9}, {
   3.7380085316870003`*^9, 3.738008534163*^9}, {3.738009269716*^9, 
   3.738009271826*^9}, {3.738009780804*^9, 3.738009782418*^9}, {
   3.738061838877*^9, 3.73806190294*^9}, {3.7380620234449997`*^9, 
   3.738062041163*^9}, {3.738062406172*^9, 3.738062435099*^9}, {
   3.738062528076*^9, 3.738062622811*^9}, {3.7380627235810003`*^9, 
   3.738062783013*^9}, {3.738062875197*^9, 3.7380628983310003`*^9}},
 CellLabel->
  "In[633]:=",ExpressionUUID->"13fdade2-56ae-4899-9bdc-483635922e11"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
13XLv/uL/78Pgb6m6v+7D/kf+zAUcA==
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt2Xk8VO/3AHDZQypEZVfca0lCypJ7UkhSkmwtlCxtlFChUNY7E8q+zUSy
tEiLNdxLZU3lY20hsoYkS0no+/R7/f6a1/v1mrn3OefcOed5ZuSPe1q5cHJw
cFQu4eD497rbTHjHH3ll+jvX4eT5CiboFwZM8Mso06lPdjlw3WOCmvxouvha
ZbokIfSEUwIThH/Xzm4SUaYNlro/kTzHhObc4Hx3TmUauiSqGRgTqsUmDvku
4vTOK28O6Yoz4UnQ0aUhczid4/rqty4PE+Ls9E+wJ3E6VXaMrdnPADv+mTXt
X3B6zNNl3c+7DDDzdq7t68bpL7ddz2okMkCvp9n7xwec1tiY5FsWwQCpkvy3
Qi04XX+We335GQb0uLmH7niB000lZpdPbWVAc0u75n4Kpy3XiptLqDGgmjDu
Ofocp2W+cSaukGNAloSCvt9TnL41UTg3yM8At9qPEwV3cPrxs/pAiW4S7LR2
syrZOH14sLdAqpWEXewS89epOL0jXUDidAMJKhfjs4dicboui6ent5gEyT4u
65lonHaaiz2/9BEJQvu8lnAxcXrT53vxl7JJGFfad1gmBKe9nEYmVRNI+Hyr
YqlaEE73LHnr4BlFwrtF1WLdAJy+avDsyWwYCU/a+UUOeuO0Wfhs9MdLJNwx
ukgdP4c+nya6U9uLhLj8gTPnzuB0jXWOcfNpEnzDqmsZJ3B6qKQgqt2RBLdJ
DZ9kJ5x+cvILt6EDiucoWyHnME5n1HIrDVuToKcTcKXaGr0/LraG05wE1cwR
lXeWOK23tNzby4QEKWH7zq49OP1A20J1nREJCwObtX7vxOm+MvnlJnoonv1Z
PbzbcfruWvnTxTokdFeIRIltw+lA/SUb3LVIeKscrK+gi9MTsnJjthok0PHf
hzduxmnfho9E2AYSHi85mrBtE05Hb7tFTaqQkHn29Q7zDThd6p/BmY6TEPte
74edMk57h7vdDlEiIcQ4j+WqiNPbnI008taj6zH8LGXlcdqh467CiAIJ883m
nJ1SOL2n/3vheXkStq6WfhazGqcLat6cIORIuHB03MVMDKfXP5/Is5IlIT+L
kuBcgdMmi1wc92VIGBmJqS8TxOlnr4t6TZGVNh33v8CH08uci+tx5OMXtTao
ceH0+MJTTQtkVgX35/5FjJ5575D4DPk9V3tM+hxGV2k5eB1F1xfbnWNk8xOj
v5s6Ge5G97eMuTQtPInRMgckfS+i9THbzbJrv2H06E3duAG0/jopSbugrxg9
DSdF41B83M5jS3UHMPp9mp3HNRQ/kVfx/EcPRut8KZQtQPnx+x519t4njL5n
sTFTSpWEos1Oss6dGN0ieeFcLcrvpP+mZslWjN4buZGnAOVfvZrzeutbjC77
T+RjG6rPKf5W7RuNGF2k3Xhm6xYS7u69O2hci9GfR3k3d6D6Sn003V1cidEb
91QdqEX1t5NfM+9ZhtG3PNLYEqbo+XMbeYgXYXRq51OhTPT8CE4zV6Y8xOhV
vpabnQ+SMCf0X2dAGkb/uLhPNQI9nzoH7pCbkzC67pLkWMp5ErySvQ3GYzFa
Ozv+Tt9FEr4qStx2ZGC0yWWLXrFQEjoND7sZ+WF0QsZ7zuEMlM/QDWv++GC0
c65if2oeymfjYsPT82j99M2bwY9JqLXNUFc8idFuq6/r91ShfJwbnOGzw2hd
nvc6n/pRPoqKc+gDGB2oq92/fBzlYyHC/vI+jNY/Ia91/heKP1K1YsQEo29G
n7pdJsCAuMxzIU2bMXqyu2adgxYDzrfOicSKYnT3KSklWyYDEqz2OcQtR/Xs
cxg7jPpT+bs7GfGCGD1opUZcz2QAb9MejSQujDbqdu3cWMqAtFcsi/QpJfov
n9Xc/BAD6oqMInJalGii9jk3vzkTZJLJheexSvSsY866dvkb0HBk7XC/qBKt
T7n/8J+KgoXKewV6axTpL/InZsO9b0Lfkx839y9dT9/f8Z+eHxkLOhm8rTcE
19FP266+vG4ZDwYK/6kzZuXpwRIn3qOLCSDlL3yFOSJH9/398+bFiSR4l7bJ
zrVLli7Uq2sbDEyGt+5PhzY/l6Y945pMgq6nQLZy81bLCklab9tmh0HLVNBI
eXfOq34N/ew/g9CXC6kgr7Htg/h9CTpIJvH2C1YajJQZ8/A+XkW3GWlFiMml
g+Tp58cuMkVpAW3d+2NJ6bDYIHJ34vxKuvuc3ZLbi+lwgRCyPvlLmP4x3vtM
1pIFO3dQoc6DwvQOs5Zo1/0sEDf1Kj7SJkyLJbtFPbBiQcnezrVWT4VpZZHf
vzYfZMH8kaxePU9humsrEW7owIKQAANPoaFl9OaHujfxEyxIKD1DPmoXoi/E
zFs6XkSf12qiZwoF6COyZb22qSzQkLixSyRbgLYpElO0S2NB7tyed+oJAnTt
8NIS23QWJFW9/uzmK0Aftk9rsmaz4OK+14vvdQTokLndFSZ3WKBzutGgsngp
rVsj2b30PgueZdaXhJXy0+9iyIAVZSx4tLKmQKKCl9ZoHr+o1M4Cq6Mrd/fc
56VbGqr0hDtY8PPe4b7cFF7aPpvQn0E22Dm1Su8SLz2jMDtDv2dBna+c/2Et
Xrp7ZbDtvi4W9Hz0M87I46G/Va2ZNu1nwcrsjR9UErjpXBPWp7wf6P6Tfhem
QrjpS5Njjy5PssCOqBEqv8BNhwTW1uyaYgGr8zBhsZ+b1j/yieqfZoGKIJnl
KcRN311wWiU2ywKjc/0ez65x0QqQLLJ/kQUX9JK5DD056WSP2XRCgA1xcZKf
bI5y0rh3JN8M8rPx9GeeFpy0wK1EKk+QDT8zM10yVDnpoPEMyZXL2HBJ8EEt
9/AS2mbFo7CO5Wy4+qmS0ei0hL6C3zPasYoNEVf7Re2tOOiQTdIKibJsyO10
HTu/nYP+QvXG6cixoV7z60tSg4N2X//Bvg1ZYOibT7kwB33ftOvDCgU2rGWP
PyIS/lKyXWfKA9ezQXG72Nam8EWK5V0gsU2ZDXqhjruGT81T5uK7lulqouvN
Xrl71HyeKnZJGyxFtjuTxtmmOk9luR9X1dNig8+B9+VVY3+oz8lBv7Zqs6FA
/sCmVI8/1A/Zx6kbddiAVZqs3es1R+05bSi/RI8NYr82jD29PEsJhg4xNm9n
w51Te8xUHGYp8hzvjzvImt2nsm/rzVLXEgJfrDRig+WrHKcbf35RpZkVBaPI
jFj5Ntcrv6ijmmL5STvZwKmxqnJN8E/K/HPY9g5TNnx3n48OjJimmmccdYYs
2NCav2nFXtdpSrKhR858LxvKpl1jpHZOU19fGx7LRw4Jao4p/TtFia4sXvDa
h/KTlH1zyneK+nq8hjltyYadtZaxbi6TVF1uWWfHATYoLwsT1dkxSWUH2phu
smaD8IHnsdzyk1Sva5QQify+WzEu49MPSsl6IUX3IBs8fs7FfTzwg+JX4a6P
sWFDkuLdhH1GExTXyzUXZO3ZcOX0B3EZuQkqLOCqpQfyq+Oy6u//fKf2zauE
liM7+E2ri174TnkRYdM2DmwIzWNphB8bp5Zbe41dP8SGD3xTWp6GY1Roccju
yiNsuP4yVY+YHaKWeTwRKDzGhuE3urEuJUOU3YcwsVHkve87RhmXhigORS+m
3HEU77hoeufsIDVhXFATiVwgwfx7/vcApb+bcjnozIauUwEvs+b6qHem7OPN
J9hg5LNWurGsj+r4KXN6ETk3sMTnh18fZbNn6xcVFzZ4x00rGf75QumI7JC6
hixQeSay408vVSbNRyu7onwolKWJzX2mattK6464sUF3y0+LY36fqZ1MhfJg
ZO49mn8fznVTq8L3y9xFTvW5d8z0TxelfH7ZxhHkuroUJb/5j5S9qvm1s+5s
iO1q76gJ+Eg9Xa09xkQ+OikSKbrwgdqX/PvlfeQZScbog4X3VLW/4oshZAVP
/4LPix3U2/d7J+1OsuHb9eJjaoEd1AWfUy0XkEuSpkQu/22nTKYurYtC3ld9
2keEo536Xn55RRVywKrDesZLWilGmp2M3Ck2mKokjd4MbqEGjthf1EEWIVrT
upe0UA6WzsQe5Dz3PX8vcv5HrZxIl/JFbn9u8PIe1ztqTH1e8AWy1OXj3ZNC
bymzMJfQVmSmn7l2jMgbyi4v5sIA8ukr0j0N0q8p4TadfJ7TqN5XeXXc1zVS
szLFc2LIu4O+M3iUG6i1xVzl65BVrldtAe06irQWSieQU0Lu3ejSraXWpjaV
70EWCIvt8yNqKPcnLvvtkUciXKILd7+k6Lb1788hO5B7B6wsX1DC6/a/9kdu
YGzRnzhYTbFeHNUOQ86LWjqkcoymlgfjzsnImnIDl2OaKinNz1+VM5FF1hUr
NnaWUzKiiS73kCcVI5t5+sso7wpN8SfIzfihK/C9hOq4SumXIheoblD2nyui
Bn8R7RRyjPrf1kKeQsq4vmjgFfK5Tc1BEyueUvGxSqcakS2176ipSj2mfH/d
dH6H7OgxUtC4N58i4/80tyLLeEfxb3e5R3kLuxZ2Indf1nQq8s+mWjlbl31C
Tg9sL1a9lUmZi+762I1cIjAjY7Q/nbrS81K6F3mL+LY3alfjqaWCFm1fkE/v
EPijbsOgbmr1LelHfvdM+ym/00WqeC7yzj+3ej8w1HzsSFCrZOl/Tr9o/NUy
7ToRJLnc+Z8tCxxebcu4SUwLrvTv+xd/loj4Ae9kIsBEgf/f9fP2uGg9u3Ob
8FUBgZ5/9TCp+mh4I4swknAP7vpXz+3SIfW+uQRxJvHsh3/r0b+sZu30gHgd
0fimHbk95dSp7+sLiF2vl9z9D/lnYlLlszVPCLGELRNNyOLxNSJ+ws+IKONT
BXX/4rs17UpwFRGr9BIHqpHtohWec88WE0tbnkeXI19iWi5vGCslGjzb8gv/
5SfsQbF1ewWhptllno3cef2D4NpGirghXlOfjhwA3AXfP9PEloDk8rh/8W/T
5C5srSYGds1wBCOrG5jlS7x9QeR4XLLyRa7Uc7Lzq39JaMR+XH36X322RD0g
KmsIUZst3AeQPXTu2mSW1BJqT1WUTZAXtcs5eJ7WERHMqeqt/+qrOWLdkNNA
MDb9sZb6V381kwXrm28IuadJk5/Q98UgKTvq5+23ROKS2u0NyELXuFbssXtH
mB0Q/VaE/PWbc8Y3t2ZCO37WNgo589X6lxrhLYTY3cSrm5Fj/rQylyxvJcxk
7fKlka9uCj34X0IrcapGUo8H+VD6wOCF7DbCRIPt8h/qB2I+2UuLX3UQViFb
hVyQOe/b/Bdu0Uk0XXwmuQt5ooc31a6tk+ivWh2ugty0x01trv89QY0zz39D
/ShsPb5vG/cnQrTiVdxp5Pmv1g3H5HuIG88jV5qhfjfF/VB9t0sPgZGzXfLI
I7I8sZp5PQTFuZZ3DvXTzoOFh7g29RJVYW4nc5ELq1Z9y4IvxO/RN/4LqP96
JLcvH3bsJzwtJociUL92eabu/e5OP2F/+UmELfLht2GdJUP9hIBhb4gisjnP
loxIzwHCNNIpmkL9Hz+fqKkaOEh8GKVGR9F86N1ld9CDNUyk874rUUTzxHAg
4FhT1zCRn2S6bNwJ9ZvgjLNq0l+JgqpPzYXIVmUjoSOpX4nSR9vu70CuVr1S
5Jo8QmzqHkm3c0T5F86UcIwbI1wTL/u7ofm1eK9mXWXLGLH9XX2TErKD6ehG
adFvxLv5/OiBw6i/BGnv+njzG2HAL378GPL1HzWXbKPHiYwGN7BC81BzZGYM
M54gTFZkfFyN5qfTVv4LHScmCJlyYt1bOzZEha39HRYyQZwpGXkfgjyiQPAM
vpggMi7viBu3Res5FCGdZfSDqOBYafAczWvRprV75WCScNe+Y6mL5vv0I+LR
av1pIuJIn2cd2j+8VtUXOXdkmpCV3DJ+AvlOjo5PbeA0cWbnFM2BbMXeoO/7
cpo4wmnjrIP2I4+jJGtbLGaI2Z3pycnmqD5nf3VHOf0kBAumyohdbBhSeSTM
EzZLMHxqTATQfqgy+975w7mzxG6FX6o3gQ0JCtmtTxtmif0Ba5wlkE3Wpqcc
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
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
GuqZn1oWTIeVtm9Dvc5RESswdYteEB2SOX8/Mk5R0SnnOvE3gXRQ+aS4NcuB
iko+PQj9hJ2tuiuywhbnwza9zBa313By/NxyHMdHuxkXiMcryg7SHzxCRakR
K6+nx9Jh45cc9ow5Fb0yqu5el0WHCvUXI+IHqahFHpZqP8D5zxdP3GZIRXr8
GeFurTi/xXG/GVuoaHtl8d0pcQYcn6gwydKlIi05ZkKnEgM+bHyXVbGOikTC
Na7JbmDAcLmyxSBBRfTUq6FVlgz4W5lXtE2WirbcVu46n8aAph5tsVlpnM/N
e858LcX7aerhqcfLqOi3ZZtwYxMD9LS4CnrCeD81ExuL/zDAK7k9fMdvCrov
Y2s4rhEJU95zp+E1Bc2cC/7IGx0JY1tMlP+LoiBkb1Fv6xEFyKLdRzCCgvrt
xK5cCIwCxkWrrtrbFPTY9Gd+JCsKtHLsGXv9KSh1Cgr5H0TBeZmrfw0vUJCp
xpg0YywKhidTu/cb4/HAIsnifDRUSFA3iu2joMPwJJbXNxpC1uZFNu2hoL1L
jLMLw6OBcHq411iPgmiCX96J5EeDc0d9iYkGBU1snHvHGY6G/uKfUYcWU9Cv
42YnZy2ZkCQ4c+PYIgpa4Zi8NdmOCYeP8bk58OLx/LqdN51jQj2v1GH3P6po
n/nlFhN/Jtw7qLsq/qsq0pbds2dlHhOu/fBI/9CgipxDLZdLzDFBbM1c8YVQ
VaR0OFGuJJ4Fz30FMq8FqaKgrbfmDDNYcL1NjB1wQxUlkw13O/JZ8POa/FWm
lyp6vrwkuJ3Lgs46/e1lZ1WRZex6zoVBFqQ5BVTPG6mi/qN38ynabNiUJtgR
IaqKPNYtmU3C9dq2lksNO4VUkdGihsav+P7T/9tbOcmnipoP7g5f28KG/44+
yD0xo4I4e77/jsf37REJO7+1X1VQpYvLjKBgDFwLeLSmuVYFyUYrrVtkHAOP
TroEiN1QQdRy8+KNHTFQyXjjgXxV0COBG8Ene3G98nSXi5unCsr6JaYZOBAD
jbKyR3ovqqCHmkL8DydioKftuWa+rQpS2rqhrkg6FmZ2Knbt36GCXtLCk9ea
x4KeyiutsGll5FicoOHSGAscKVFd8wllVON5qNKvLRb4F+3ZunpMGX2CfSfD
u2Kh8XPJ7ruflVFrl/RU5FAsWBXEW73oVEYz116sNeSLA7ctJ2+IligjRu26
c+5b4iDfZOx12CVlpCNeKqbOiQM576W+4cNK6L2HjySPTTycyWyUSR5SQvel
bxXrOMRDaXNQccEnJVT95xrX/nQ8HFJa+PyyRwkdjUzXfXA5HoKej5pJvFBC
K+/prVYIjodR8TYi5q4SoqQ3misVxsOzTGZHqosSSlfYsWdmNh5ak9ZbOb9T
RKJ5YPI0NAF4Mi/EvOtQREdfSq2xYCTAursFHRZNimjKc25yiJkAkY/UD+1+
rIhMtnlc5ElOgIOdykZK8YqIS/10kb8wAVrFJfV6LBTRt+5D2cavsG+MK5o0
KaCGfbtkpVYkQsvpB583PpZHSnE64XeZifDq/e+D+g/k0b5Z/fNEbCJ0Htar
+O+uPOIZLL6fnpAIvXuehx9JlEd7ZSpdGWmJMKz0Zr2ntzyyDqyd31eYCALd
M95Ptsujr9PVaQaNibBt365lu5/IoeY61oHT84mQrd625eDT1ajwcN78oG0S
rEtovXi5QRbxFWZuOro4GZTX7ehZcVcGOX4bmxrNSobhCoNFgveXo1VRdo9c
VVNg9bnHJ6+GSyHRASq7Ly4F5hsls8YuSaD2XOGWJXMpcIUUszjzeyna+YJx
u39/KpTrNKPJEhEUZn1uZJidCutkIgwls0WQZzPj+eeYVMiZOdCqFSOCnhZQ
JvtjUyGuqun9KQ8R5H3GyqonPhWumjbNd28SQatDJ3S4yamw6dwLvcqyxcjd
zOn0maxUeJjeUB70SBgd2vm6bdfDVCiUqC2SeSqIuJtDz4i3poKZjYTRh7uC
iFdVSHwSeyrPuj8nQRBVpi6a7m5LBb09v5ZvuyaIDk8psNPaU6HeQ8nbWkcQ
VTz8sqD2JhU+vPUySMtdhA5aL3ok0ZcKEtnaPWtiBJBHUOOzo9/w+ONeV37d
EkDKlqPKxEgqWJG1Yk+uCKCHM2YNk9gpXdak8SEBpHfF9Sf9RyqsEQ3NvCAm
gPxOm3aW/0yFXRcHXB/e4Ed/coeSv/1OhSvb4vn1L/ChzZI25wd4OcBire49
bMOHzM/eytPn48DDH8kPLxjzoevxpZFx2FPp6U5pGnyIl9fFaj8/B66J5tcJ
fOFFnMijnfkCHLjeWxn2wo4XRUfpxtgKceD29QGpo2Y86LZ0lPstMQ7kdDmP
XNrJg0R26A+3Yzds+FoTuo4HBVg7LFZdwgGRz9/dnyzlQSYCu/ci7FWpPwrJ
mAWuITPm2dRSDlB3Sm9pDp7nCtNvVplLcGBboK3hl7Nz3JhDFsIty3F/075Z
NvvnuN2/jC3EV3DAyiWJ77XGHNfzcu9hU2x38+4nVSOzXJXzL/1eYhcpm69P
dJ3lHt6QcbJBhgNqlf+tMrk8w135curMfVkOSP9eO/LAc5rb1O3z0EieAxln
D+xbc2yau50x8i4Ae0Pf2WzOtmkuyyGzshz74PM7dhGzv7mWbXzZVAUOhDGV
Xzv7/uYeTJRZMofNt255pWzAFHeuInhnohIHRk/PMfxuT3CnysrPZqhyoOPe
+mUmzhPcUfNO59fYFRPOkXJ7Jrh6SgeWClE4cMu/LfLRwi/u5XzdM2ewV8Vl
R/3y+MXVOO9rsIbKgT11B5mnnMa5vj0j1CQaB9SXBElt2j3ODVzgHarHXmr+
mCmgPM7dWfTg0CR2dx+Vldb7k3t0elbDWI0DrlMzrLfmP7nds6Ej09hx1KwY
011j3H0xf3BnHPA917NCQWmMe9cuTe409nN7Ra3u2VHu5xqVPQzsY14TWlJX
Rrk+KVUxvdiBuSnrgk/+4Ha59hhdWcOBHqFfOhf0R7hRRi0/IzU4cLMmcRs5
/ZlboOhjGbGWA19ebmU6lX/merhPncnBNul+8y3s2meu7JDfxmrsVT+kkrum
h7gGt5p+/sYukglfuPRnkFuQl7FwQosD78761GTO9HNfhsZfldPmwC73VfIv
Kvq5/IK+QjrYOX7l7j+9+rk/l6eY7MN2Y03Q9Gc/cff3JPG5Y4tUuoS8mf3I
1d6Zw9uA7apSkSQ9857r8rXV2mEdB7ZunjI+6fWeW1HAd9IdW+DAhoWCmT7u
Ik6AXDB2onveyb2z77hDE2cf5WLX1yfQvObechfnC4Z9w2a+63xT6/OW6635
dN8sts24ZIjU3x4u/U49V2Q9ByZXh33L/9vNHbjyqY3AVrngXfR+/g339n09
+kns7zfLTmr6veGuNy8VuoBdHvdL0nOhk7v6SfgWH2zTZ+fcJXk6uYKN5oiN
7bPcepsBbwfXVcX59HPsvWvivkUFtHNPGH1MasWWJDuS+njbudqCVbffYuee
PrBwle8Vt02xOGgMu/OxXk0efyuXVPNYLbOBA3Ke9n3jYi1cUZ3ffYrY4V77
dSMlX3Lt1cqsCexzvvIfGuWbuOYev4O2YPdcF9x0WvUFd+cdTx3ANvIfDVuk
3si1O6+fsBd7zc2qzaBbz33txIyxxE64lRfxbmsd19+VqmmNLRLE7Pcia7m8
j/5622MP33ZilBjVcLXRLSNX7GOhJoNmB6u52uYbG65gN4Zt3j5m+Yxb0KHN
54mdS1/8ec1JxG0wFcy4gb1BadAzsrmS+0hxQCQYW1K1jPqi6wneL+Jrw7DH
qSFtiwYquOt9QhYzsNuI474wWs4VfW/GicYu0lir7j1Tyg1KcfnJxo7UWugo
WVTCbcp6MxeHfXF9m//YsgdcoQ+sZ4nYB3UzNDXk7nNtt2TtSsG2dR0uemFy
j7sQv9iXg63gRhfe6ZTHXTb27FI6dp/nBrtS72zuU+orpUzsZL/OMo3odO5a
2pbQLOxykUmFXYeSueG9kwXZ2JtX7HipeZ3N5dcVC7/zL/+7RWa1Dodxn8j4
UHKwWx/qPhC2u8p9f/m/q//c4Zavv+G+LXnN6FrQPydfNfh6MOkm6SO77PA/
Hyw69nxHWhS5qIPvw7/+2jIlV5i7xZPf6KaUf8494KTzMINDCtpOqvwbf/i/
qrf6EZmkxtFfb//Nd81O+VsNHjmkTrShaca/+Wz31LSwyycnFCZ80rA7E86e
HaUUkQbSk46p2FOxcZUPZYvJv0FGQsnYK9i1kl5LH5ITYb8cEv7FFz3hTPKX
kjxbRr1isa0YKo8FpsvIP6l6B1jY18IPijeOPCJLunreRP7LT1B+mUXnU7JD
XFAhBLvrZo/oqhdccnBzVNctbB8QKBp9j8gVt84Y+/+Lf8cGgZKOZ6Ru718n
D2wtvX33ZFqqyRaJ8sWXsCu32Vl5NdSQg5WPT537tz6b6flkZS3Z/yrRzBbb
dVPW4fTyOvKag8d7K+x53Sc8ix7Uk0OVMTSzf+u7Ydii8U4jma2e1b/73/pr
/vfXIuolCSver6Rg68Vl06c4LWRADe3RKmyxG/zLDli1ktoVlkIS2F+/O6R9
P9VG9jY6Fszh5zH9OaVmXXA7mZJHU/r3/EbOdoTzineQV58Ga9dgX18faPkq
poNsLKkdKcM+njw4dCX7Nfkxq/tiCra0e/bisudvSP6CDamnsPnuHn4VbNxF
vpK2lz+KPfZBMNHqdRdJ5XHeZ4TdfOCU5sxAN2lXNJSngR1EIUx3CPSSlpw8
5jA+v+a+WjSeVP5AugttmrXC/iVQoGXk9IHcNax02AB7WHERc0PuBzI/vNlm
PXaXZclx/vUfyWO2pzyFsUuqln/PhE+koZNPe/G/8za+U/yL7QAp2tWlOo3P
c6eHWm6tGQOkH2vI4T22dUtQV/nnAXIXJeVQLfb+RZvTQi4MkrkvZjcysYlL
sRs0/IbIO4nCKurYHw2tLF1TvpBfjFVvGeD7Qn/Q52Tzuy+k6FGBVHXshIC0
85ryX0mTm38vLcE2qxgOHE78SvaJa0KHJgeeafiWOscPkxX8VF8b7PSl6TK2
rBFyhUafhxO+v+bzalUr20fIb3UdEgbYx/Z+05aX+k76/yh2pGBL+usavo36
TkY9kN3wCd9/N3/WXjvC+EF+ltE7dwx7w/DkiJrBGCmloGmxA9+XdluEr7xx
HCMZU1ouK7HpQav+BN0aI89Uf9n+i8D5VCEXDVWPkQPS7nw52OnHb8tn7vpJ
3oxK1FiKLdW8ykQJxkml2qvfmvD9PlFIFq7cPkE2NSfKSON6oUlju+TFExNk
+vXjpp9wfZFxZ5N7nd8E6bj90foibLPUtds9aibIq8Prp4yw79NX17UbT5JW
ica+Pip4fc7/7qPbTZFrNXt8W3D98nlN4dJFQdMkTePO8o24/qnMzrtknTNN
bvpNYU7LcSBGJbvjQeM06X/iaMVj7P9WJSfYi/8hw0UaFu3EzlwcRkNxf0gh
hz+Mvatx/F+c9b3vzpB3fu47twfXXz1ZCq4/W+fIlOzFon+lOVAqmG+WMz5H
Lu9kLpRiM09t3Wwr/ZdM6JTmXMQ+oG7B03zkL9k9/H7gkxSeT35IdE7fXzIQ
9fhUS3Ig7cFEqe3IPDlwLHWn+zJc39oNLgzd5IGymy6x8aIc8HZ9bGiZygex
r1+1f+TB9QM56bi0kA8afJLvhWOLLNMOqKvkg3tyczs2Y8fdT3+0tY8PHAzT
JlYspELpRMgaBXl+kKvOb7WbS4VxLyuxzwn8IK6Srto1lQpngydbrsUIwFBD
9qrDuJ634mgfSYoQhCbHxJmgV6kwIdR3MjdFELKOKbRn4veFyAvhLqWFgjBy
s2e8Cr9PNOh/DWhtE4RuuXNCMy9TYdu79HyBFULwVG7I/+SLVJBbtYLvfIoQ
rP8jzF5SkwrvmXP5OwqF4a6hNnTj9xXn4Aa+960iIPLtHG0HKxWqb2lohL9Y
Cqrt1BdypqlgIzH4TPqoBJjafv1pyJMKv7bV6X/0kAKi0nNUNTkFCi8s+WN/
cTkUFHQXb9mQAgJ+QwH2LBlYmCvXnrqbDAHxqvtkWLIQoNzT+1E2GfYL+KnX
hKyG8rankVmXk8Du6baOPdGr4dDlurKoC0ng4TF1/XnCavheuijT2yUJ0r+c
76i9uxqsKtdx9zsnwXSTtV9D82rYfmqqoOdoEmSyt71+KSEHt3yX7w6BJJij
Tfl3x8vBE8dbG6XFkuDevvNdP3LlodB+Q+iWxEQYi1ax6rsvD4/OryCf4ffb
Db1v3jQ/kofWslUn9rESodR115v8BnlYYVbeaBqRCFymTOfZr7h9conaDr9E
aH1X1T5EKMDeYN/uWPtE+HVpRUvfHQUo+hTHjVBLhC0J3OcvsxQh5LbE56M5
CTCgVah3+p4iDPffdmjNSICo6pQHvGWKoL5H8/Wu1AQYHvFN061XBGszlcDV
MQmQROr5Jgwrwh7bGWbizQTwv2y96oGMEtwXbjV5dSIBBmW6265bK8FLsZW/
+MUTQO/TwYgXdkrgl/NQ/vfiBIjOrzdc6aQEgn/G0gYFEkB/Zzn3/nkluKLJ
Tno4Ew9xZ2MLBq4rwTehjFTZoXgwemoZYpSmBMnDEYtmHsfDPftXsGJICR4R
52IGHeIh64zPiMmwEmxs3ss+ZBMPSRdpccE/lGC2d9ao3CoeQq97jU5PKYFw
QVaVu3E8OCWopLwVUoaS5UoaRZviQe7V5VmOujLk7yg6JS+M2++UKtU4jz8P
JU0LsuMgwPDpScdLytC8rv2bAycOrpmeWpLsrgw2ZbLu0glx4HzisePS68oQ
0+Gl6xARBzs9HaR+0pXho2VBSemVOJguenCxtEgZ5loirPaTuL2ShcbOCWV4
Q7MZTW6LhSujXjvXTyvDebX+vfwvYsG/Mu2I8pwyDB3RYdjXxEKi9ehNXgEV
qO6oaFtaFgutcaG9VVIqMC61xFs+KRa2SlRF7NJRAeXDk/xLnWJBjE9rbPdl
FVhyLHSlxHgMyLZZCOp6qMDm/6gXcoZjgMbxlqN4qcDemrKxLf0xsFO/wVDg
hgpY8O2zNuiIAQ8vx7SaKBWYOF6tLloaA+/HE8wM7quAgY7JboNrMVDcL1Ty
35gKFHecJpf8ZoNb14vasAkVgI8y7gvf2bC5mdHVOq0Cv1y4L78MsOFJqczc
MV5V4Or19nBeseF5iNruC5KqYHkstDWrgA1d2nvbYnVVYfpiFv/CSTbMewd9
/3JNFSII/ZXN1SxAF40W1vqqgm5mSFjCIxbcdFoqcSVAFWw8RkNsClkgbBqj
+zdEFdYe/SHdmMACCZVsb4lEVSBKpt5pXWIBpf754m1PVUEyT2GphhwLhp6E
rParUoUs95eTNhIsyL1vvLbmuSqcvqkuFyLIAq3E1wdNXqrCVc5zCTTGhM2u
g7H271VB2bd9VXkNE4ykF9HCeCmglrnBo+ksE1TbDNKDF1GAlWh7lmLHhLmI
IIVbiynwQiI48YolEwqEhGV8JSiQ+31L1m+SCUE1hkzP5RRoF/vrrrmRCTYB
IeIeshTolNd2s1qDx9NvDLssTwGjJUqKzvJMWDYrInxBmQKj/YHPO5Yy4UvZ
/lvnqBQ4bAhft/MwocotnOe0OgUCUgjHpJ/RcPnHkj926ylgXfSl9kBHNLz+
uGzYbCcFqMe/S92Mjwa7Qrl7qwIoEPP5P2+xoijY6nJijUwgBc63FeZWpkWB
pHpKtlQIBWaX5CReZ0ZBdbpiqlgUBRzF89drXI0CWoxK5DyHAq6Uhj8mZBR8
8yEuf0IUUFJixPm1R0LN1jM/+mooMCfbIe9WGwlJU7ln39ZTYP0dfYFbjyLB
5KKGQ0crBcpFh4//SY2EIgcti9oPFPD4YSdi5hoJHka6m/J4qLA9Q5DPSyIS
RnffSY8WoILJe9XjVYKRcHrHKnFvYSqwPGM17aYZcHwdz5f9y6iQ/NqrZUkL
A2BFU/x3RSrMTp7vsPNnQIU4KdipSgVniwsR0ecZoLO4+HKlGhX419P7FI8z
gDYXu5+hTQWXG8QD880MEP3k8HcdSYU3liOixhN0uPW284zsbipcdJ86d3uA
DvMd+zp591IhwoS2RfM1Ha6+fLJr2IiK74E5kW21dBir0y58ZUKFlftnrz8o
o8PZqvTVj82oYOmbrpWQS4f+iuW3Mw5ToSnoysPRRDpYP7w9EXaMCkOuo3kl
dDp0FszaudlQ4XL2aqW0IDqY3nFttranwg1/uen5QDrUcz5uNXCmwvuV0VYv
sXclWGSvPUsF4z6xjUtx+8fMOskVrlSIJuUDnmLrRmzzm7+E+7trvu5tMB3u
BRV8G3KnQnEkbHIOoYOav5JViycVZG3cgk6E0YHjyawp8/2XDz9pFEEH2SuC
6zkBVHB1GW8Pj6RDtItn8u1APN/QE+XPmHQQcx5ZfCmECgkHDpXYxdIh0NbW
42gEXi8lm0onHN+81atPO6OoUOsmXdeaSodrZgama9hUeFEuUM3JxPkx0CBm
k6gQ1Nhhf64Q50c/hdXPoUK9++vvDiU4P1skeJsyqZD34tC2p49xPjR+dyfl
U8F+w8JgRAPOB+Xsf4FFVHimdEiTvw3nQ+Fd8fmHVOhys+N73YXjl6gO039C
hfWL/2iEfqVDgcimaRqiAq9ahvO5cTrQBHIdxWvw/J0OLGTO4nh/03d8eEEF
4OlbKS/OgPneY6MBb6nQW98Qyb+NAdc6m4+ffU+FMJGttqEGDPjZAvVm/VRY
07+GOHmIAQPPaGmq36hgJd11deYMAxpyxs2ez+D9yKQUV6YwYLqO7zHfAhXa
NPObuwvw/vuMD0N+Glw7sVdq31MG3KDq/KoQpcHDZZeqFN4xQC/9CrNIjgaz
1SZsWIafl8SJ9kR9Giz4W8t5H4uEvgoBve5dNIgjItKOOkbCkh7pzBV7aTBf
tCXwCH6ezq7c6BZlSgPrXOuKezcigcJ2lw62o8GEnI1ceX4kxNGnLC7foEGj
jkc1Z1EU1BYIPi0MokGYAPUNRSIKJptWUL+H0mC6kRv9VC4KzEQ3T55i0oD/
+nKLNbpRIHb7KvtEJg2M7yXVZDhEgX/A9GvDWhqIngjTptdEwWm3mcOKImpQ
rfVK7ExENBQcD1aXXqoGRkIb6gCfR+O7pOeEJdUAOQ4PrsyKBm8JrbRxWTV4
d/yGYf2TaKDfO/ntuboadE0rnFs+Eg0lX+r9XPapwaJ3t11+72MC34nYnEe3
1UC/finrwAIT9u6heN8LV4Ml+u+FNoqwIFzjvnFGpBrIZ05ylixnwfKZxvHw
ODU4/UNie8QaFhCx83p2OWqQuLXrTZkFC0zanNoE69WgKF52xjCLBczy8YzZ
F2rA51z9euoeC7pS/TzGWvB4Xepl4eUsOOkav7rnjRr0Hje66fqCBW6izU4F
n9UgKzl38dwoCxINdGfMhQjImrFZ3qzDhryCI7GVogQ0f9hcm6PHhvLl3rrq
ywhYKdnmYG3Ahs7BKtf5lQRM/5GONjyMlzzItD9nDQENR2MnlDzYoPjjsr+U
NgGi0moGOb5s0DocI39dhwDqyZW9vIFs2E97d8Rcj4DHR8YWqzPZEFR7tumv
MQFn1q9J1cH3LVuLfua0GQEOf72stz5gQ2bMfcH2wwR8zXj5SPQRG6qcpyHH
loArFNMAqRo2tL5c3SfpSIDjwYGAvQ1s6NtEevuexv3PHDA1eMmGOcGgErNL
BHi4nvFNfMMG0Qu5Zk/dCagNCXQbf8uGVW+aRtW8CDhSZ+C07AMbCHIsPPo6
AfIH+xIm+nG9cEdqzd8bBCwzvmmX8pkN/4lvrjsVTIDa59O8S76xweLqMcdX
YQRY7a2uJ3+wweG9L++OSALiY2p5N/1kw+W9aSl3WAR8/Jv9+8cvNgQU1myX
jCeAlh03eWaKDZEyX7p8kgmwLW/5L3uaDSl+oh6f0wgIOOG/KWOGDQWftaTM
sgkIrOwTt5vD9YqpWdGTPALsBBQVev+yobHM3VitkABhK/f8FQts6FaMH456
QID7p+WC4jwx8CX4SfBcGQFJTboeNdi/R99TTj0hwI0UNNzEGwOCVvzP2hAB
vxwqax2wpRHNVu85ARIOUTsOYKsSRnPZDQRUOz34/QN/f0Pk+XiJlwTwsK1g
PzZMR27yeUVApWyJvR0e39TuYftQJwGTcn9z186zwab+zcVDb3E+6hxPFuP5
n183u+TJewLSdyl1fMfx+cQp3KUNECBU5mD8HscfyrPLMOoL7s/YYWUQzk/8
aafB2RECnmib+3/E+ctpvX3D+ScBfwJPtY6NsaF0S75i2yQBLp4d5g9wffec
0/Jk+wwBIjovLYlhNnQI/zqaPU9A49vbyqZDbOi/uOL3Mn51yEjawqf2iQ3j
XVtZ3kLqEJYisbvwHRt4dp5YPySqDp4ihtqfu9ggnuv/8uAydbBfvEzyZTsb
FCQyzz2WVgf9muRNDnh/aXrWCdNk1UHAkfolq54N2z8OZ0XKq0OOxNtL7Gds
+P/v+0Blalzh3+/7/gfVh/tJ
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/+8FoZj7efi/3wv+DwwRgps=
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53172177#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt2nk4VN8bAPDsWbKXkGVmzCK+EqUS5q2knaIkqaRQWqikIkrKWiiUZeaO
ka1SJEuF7lGWkBAhCi2WKCT7+js9z++fmefzzJ1z3/Oee857zvNcipO7tbPg
vHnzLuGPf99bt0hvmKJoI/2ZX1cL5HmwNvfy4Hx1baRUru6fg61L6eMuUtFG
adz4qQxstVv7tmkt0kb806sGkrGlJ8rHl8trozLmO3sO9txRo1S2tDZqzltm
GoU9WJtss0NCG8WJr4kJwa5L939yTFAb6TyN5Xtiv1Yc3O81y0JXv3JsjmNn
Xz0ofn2ShYJvJnkdwI62W3uUN8RCBeLSkubYdvNHlBu/sVANv3u7BPYWzyPl
39tYqC/9ksukHA+MO+o8/7SwUHlsSfdP7CXPn9RI1bPQm58dS8qxF2ip+arU
sJALw/F9DvZsRNhSVhULVQsOf+Njd7geu7HhDQsN7crV98auq2802EWykEFi
pKsz9mv2xo6DBSxksvHztBV2shJ1rfczFsrfqmlGw3Ytbx3Mus9Cp8y/TBbL
4ngNtxKveCyks7VIOB17M+/5tncJLPRKsfTILeylF2JSu6NYyD0zbYktdj/D
ykH9OgspTRvva5fhQfudInHdqyz0RLu1j8SundXJX3OZhZih9pU87OzG+fJ7
PFnodby1ywFsr8DX5WFHWahy6sFEjTSOZ0j/fJwjC8UUl1Y+xLY7yKOmObDQ
DtbFtuvYxkaXfV/vZqHQiOm3RtgznSsNJ8xZ6ECZSOjtBTy4vvEB4UJnofQ2
7ecUKR6gMO+dGhQW6hV7MNQnyYPpum2CzUtYKOtB/Opc7HMH+523KLJQsnlf
hzm20wXD/3SFWIixr/WSnQQPiCLh9h+zTHS9PKhLBfuTUGMkd5KJloR+sP4s
zoOdkReHpYeY6MOEnZYDNvtBUcGfDibaLvzG32o+D7wHwk89/MxEp2KmisWx
81Y6ahxpZiIf29mR12I80HstGNBQw0RrbS8aGmAvad20Nf8VE62vbmoREuXB
pNSH5sscJlrGl408K8QDI5v7oStjmahY1m+/KvbZOE+T/igmeuS6QOiNIA9+
0pUSD4Ux0YEXaR3S2M1mDq7rvZlo1amjGbHz8P09ukbE7Jjomnql8bkZAoby
8tOQDROpfO9eJI6tNxO875IVE521uJLPnSYgJUSnqNeCiUya9OHNFAHRSR7X
q1cykVHSaou5CQLONEzKRykw0aXO1E9rRgm4a21lHy3DRLkF+1+8GSGgsPY+
P0aSichnp89sxxat3q4fK8REqV5tzvbDBHBKiR3cvwyUsnG52bEhAt7mrQ9O
q2egO2NCvK39BKjHhc4URDEQrLe1/tRJgLlSu3lRBAMt//B14xXs4zGGN1+F
MdCmouxMGnbO7c8qxQEMdPm7Pt/1BwFbQvVWl51joC2M4cUt3wg4PT/gSrk7
AxEb530+gx0d2FT29gQDWZq6hYlht127uqfqCAPtGz7ipvuVAE+fD2drbRjI
YZW5hX07AfETjJd1VgxUVhMd0t5GAHnBR6B+GwOhov3LnLAlPLUiP25gIKFP
dgcOfSGAd9LrcYshA829dnZc1UpA5QGVnh8KDPR80cXflo0EWPFM2JMy+P78
vMyUjwQ0dBy8KyPFQAtlH3SONxDw5ch9c2NhBtJzzDoRXU/A4HFdfsQwHe1e
cVGZqCXg/CPL8eRBOjLeeiO7sYaAyV8eVi9/0dH6WhtTSWxhj9yZHz/o6PHQ
2m7XagKUvMzsjT/SETnpWvq7Auc/3/GpVR0dXZrKpAtja05cm+9cTUcbx8tG
Fr4lYOnl8ryIUjqSzDiWrFNGgNm1nQqduXS02OWhp9prAo6GO72LuEtH/meT
Hkq9IOBnzXVayh068nBNcfuQj/Mtl+b9MpyOrD3u3L2TR8CF6D5WZyAddQYs
/yOQQ0BovOcN4wt0pLLkWW/8EwJkPt/9bHWOjo6rGG0weIzHR+2FobM7HSU8
z7rx5hEB3MSZrxGudJQUHxVUn04A9ZvGmpQjdHR23RWGdRoBqbT1kS8P0ZG6
5fHTlSkE6Dgf7a7ZT0cVR68GSycTkJUaaNa5l442vJV5/4FPwMqe9JhJGzrq
O3moMJJHwEvtql8yO+nIL3/d8c1cAt5kyCQYb6ajHXVitimxBDRmx45FrKaj
CVVum1IEATOvHmYZK9PRD33hkiFvAt61LJOaUqSj+tE7c2oXcX5Hc1wLZOmo
fHWxz4bzBJjokeom8+kovcYlxdedAG9u/U3TMS3UyUcVT48QMOozfQw+aqFG
jkDe8m14vFdbUixua6FKWSslGyUCvmf/ub1LXAt9MKQyB9K4wBGdvGYvooX8
5Cb2QTIXbO0FPY8IaKHj4s4QlciFtwIKtucnaKjkuuGUWRwXnuxcoRL3k4bE
bP4beBbKhYv9XkkdFTR0Je6B8PrTXFi+/krUz1IaCjPetrzcjQu9MUHXh4pp
aKzn4MFdrlw4YBrrIvyShvIeKtw678iF9TdfLGU9pCH2iZVCQjZckFo6ne0e
SkOWuu6Bjmu4UOornHwxkIbI1w+9LY244FcnFeN/jYae7FtZaG7IhT8X1S5E
edPQx9LTk1v/40JjudnafDcayoIR7RIKFyJVN+kiFxqKvq5jNanOhS3uVmoV
TjQUuF7jmPESLhQucpxrsachp+Nemz8t4gLf2f/N7FYacpNyCbknxQX7FyE5
YptoaF2lhAJNgguKC+6kyG6goXyfVqOXYlwIzEkKoq6loa2jqzSlhLhwUqhk
m4UODfn/PQTmkxyg731nYsWkoaqxrsMG4xxoe9jwnx2NhjYen1/y3ygHdll3
yrip0lBk7S61HUMcMOKLNtySpKGJff69hn0cMK45U7FOjIZ8lugEuP/kgNnM
51cjgjR0aTCeX9jNAYt9zx4cmKQitUf8yzd/cGBrkDpPbpSKvsy7T8p854Bl
bkh06R8qsrRgx6R85cBeOccr//2kIi8/NRGJdg44sKs8v/6goi0dFfRPXzjg
eMrILaaDiubJdnUWfObA0QT+oS2fqUhnY1pwdisHjlVI7ZlpoqL+6XtfPbBP
jl3Y+rSeiuJOhB+Owtd70L+znWuo6HzntpoK3N5F/xdLq8uoSOpH3bYzHRy4
nKml6f+aik4eOF/2Fcdz9UvEwpWvqGhTVYyoM443eI3LPG4uFRWcEspM6uLA
Tde6kZ1PqWjirk6AQw8HImNM+oQfU9EMN3CY2cuB2D/yjSeTqShRLyxw6DcH
OBp+VZqJVNSVIaPwZ4ADiTt+ooYEKlo7dFlxHs5v+gPykUkUFTkVlO+wxPl/
cfikv9Q1KkpNV7p6f44DryKavJAvFV1ArXFqglx4XbT+pOclKvp9ZrgpRZgL
lcrKez97UJFC2KfYdnEutNSV6mYcoiKrsRMKg4pcmFyn0bzNlIqqycuq5vh5
nHUPrZ5bTUXpb1uLffW5IEiMvH62goqsZV37EH5+JSarHqvqUtH+jc95TsZc
UM2+GNCnQkU708zOSW7mggn1g17YOAWJ26SOPD3KhUQFyRU2wxRkuMa7yeoY
F4REzNeoDlLQ3ooz7kMncHzduRsedVPQmssnH5if44Ld4zi7qkYK0jMdjl94
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172177#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 835.7699159934142}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 835.7699159934142}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"2rd\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.738064593807*^9},
 CellLabel->
  "Out[633]=",ExpressionUUID->"2d845973-d686-422f-91b3-397b0a58b991"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Cuqgd3eId0sahf///wLyO6ICr+Un1PwfEPXq3Q==
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3fc+sZr/A3EfmNY=
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VUjT/wA4eQgF
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53172292#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtmXk0ld/3xyOpkCEiKtzn3ucikkolGbYxGpCQuZDpGpNKZL7cB0lF5gwl
QxkjRYOtKCrJEBo/imSqJJVK+t7fWr+/znqtvc/a+/0+Z+3zx6G5Bli68y5Y
sOANz4IF/7fuNBU2+ENTwgVRZTrzcbZN26+fnFoiq4RRgUbaxSeGm1RoExck
ZZRwUKWyKMlzpkn418PZDcuVUO3Thj6+PXzYVRpd6cWrhIp7LEaiZCXQdsl3
6b73ihjiKfKE85iOng9fTVVfUsTW0LX1LUabkG1UludBKuKC52uWfq/XR0wK
tZCjKaIZWdvM4DfAua5dvAOrFbG8wHP+qLUBHnH+7G4qoYgR6lMj8TMG6Hp8
0zqVhYq4IvVpSYm6EeqW3bn1dVABfxpsiRVu2oG/hboHTuYqYK6aa/DdZXtw
y75LiZszFZD/4Pv4Ufc9GJQVrPU5VQFNs85tir27B8dIqYIDSQq408hIR+Kw
GQ7oOHrqhypgi5H+7vFX5lgfOPJ9sa0Cbomipne478XDvb+Xp4orYJrQi8/x
p60w3dLcPk1EAT1FNBrC0ApvP7tUeF5QAZvV9Hhapq2Qv2O3WuZCBXzKGyi6
z9Yac1vz9lz4xkSv3eI2HAUbvGfwLS3vC5fL0zXUHW3wY/OO1/kTTBQ9t+Cy
1lkb3Hh3inVxiIlXaMW0Q3M22FavT5X0MLGrUfC5Uv9+/Kye0VnayUTj6vQN
ncK2KF47IXnlMRP9zhkyBoxt0bkq7XL5fSautFDoXnnTFmPXjU1WNDHR38jn
jOVXWyy9qq1edYuJ4/ZT49/W2uG3kpF7NbVMfCL9OvRwvh2uZG4XqK1iIu+b
vbXmL+1Qpyhlb91VJvZ+Y57OWmGPbsRw5vUSJsLEeyGLvfZIFWgM1l9iorTF
sg3ByfZYKZuscDOfiWpV6+b4H9ljT+47/4YcJk6uLBLNN3TAWZkt9Y0ZTFS8
mqgpOuCAslmJf2+lMlE99abkMx9HNJT6z/BOChPX9RsbPv7niN7nN526m8SN
h5u5fk51wrqzr2WaY5nYyK866XzbGU0TVTUeHGHigMN3sw9xBzE4rDvo2T4m
hn3I759od8XsX8zGLnMmaoSLaOWJumHT8TCenl1MbPsee7bdxg0Fghlnnhsw
Ueh8xZ5D79ww3/dYxctNTGQMutzN/nwIHznJjA6LMzHASG/12UEPNM/X0v0t
wsSC3sBHitKe2DvonC4ixMSjn8T7yiw88Y3bJUNNPiaG/PKIMrjtia6XW3PM
FzDRQDDwtemUJ46MfJw+NEeizHCe6Aq6F055qxSmzJC4UFH+5HO2Fx69ajZb
NEViZ83jwJu1Xvh7MtC8cZLEb7rmN7e/80K+wOt/h4dJzCs+0zi/1RsTavqt
fg+S2HWhZKOKizcKf/t1VeQNifV9JiHPKW+UOqZjr/mcxNmdr0eO9Xhj7o2D
NeZdXC5S6HD84Y3yv2KWuHeQKBhR9SdLioWXNS8fCG0n8bi7/F5yKwvXnnxY
n9JKYs44s/y7FQur7owtu9xM4tPcgAmewyxU/yfo3niHRHfBkk+QxMIGUL3d
2UDizdYTZ8susVAnxkL8w3USVzmkXd/YyML794NYv2tI/Gh/SaPnKQtNFp1v
Fqkk8bDVvl/R71j4xPjGSvIKieL9Fn2bp1m4l3oRoFlM4uogk8oPC3ywr/3P
A/OL3P11IweoZT5oLygr655H4mPVgXaJlT743244GprNrRfQ/iha3gcPnXZ9
kpJO4vpFnnoPmD441smmXz5HonOUk9CLtT7oL1YS2niaxPkAO4EaFR+ctmzv
6kzk6nFbLGPE5eNpE4of4kkcHxOXOaXkg3PPl0X9jiFx+Jzy2EmGD0ZJqfWL
RJJY/Om3u/AaH1xkZ6lKhpGYmKAasFXcBxOzg+M0j3P7/R409JnfB0Vep782
P0Ki2L3gQuVZFqatadjkHkDigfBBzvAIC1ceeJUY6kMiccP1qGgPCy8U/H2X
4kni7fkSk+LbLCTey2277EbiySHHwVyuv8V0/TONB0isnVm3aoLDQmX3Qx87
HUicy86Ls7FmYXVxvM6H/Vyu3SARMe6Nm0dLz//eR+JFpSNGP096Y6PS40kR
CxItTpXdaxfyxvvlIjmaJiSq2osYZzG8sO9a5s8UDRKtho7N3NzsgX/vXqnW
lCZRgid4WdWwCz55uV7ojwSJL3PtqksMXDD3R53nLVES5T8J1C4vOIhaqk2y
WktITPsiO9Fx0RlDL/Sc0v7JQMbFqgh1VTv8ETbnBc8ZaNuWkDf2eidOaZjR
jM8yMPP8SM7VFlNAq56T/MkMPJPZRnUa7IGUQNuBBxQDJ8X3ytEPWYBqqWvK
jigGPrCTf7hjah/4SR3/axLAwLwEpg5JOsD49/wXu/YwMGJQeWjp7CEYuvb1
7N6l3Hw1U8/1WkGQy/87xn4RA/WXjNTfuR4ENva8wW48DBx1fRdisf4ItPGI
2xz9RUetD/uv+hHBUGmhLpM1RseTX3lUvyw+BiGfj10cbKdj9VONtr2PT4DQ
2rlrAYl0lHPtkeuPj4LWcL6ikHg6bt/WnVF8NwoiuoTOR8fQ8aHT2WLajyj4
GrLmeGooHXOreetEDkVD30Od7TdYdHzqeQYjt8dAoXv0/fmddLzsb75+b18s
2Dck1C3eQUeepZs2nl/MBoll5y6LGtCx5Fh+qJ0GG+LrLnKI7XSkPrUsts1k
g+/Cll3GynQM3kQzerc3DrYU8vcmC9KR/4jkq9bSeNDsPNyut5iOHmuLt67q
jQedv6/vfuelY77sUb+S+Xgwtqstc/pN4Mr1O3Jt9nJgJ0c2X+wHgSvYi2qC
TnDA7HpCWutXAj04J/puFHBgv9jByHVjBB4V+JVYNckBR93Hwe+GCfx6r2mz
gxgFB/22sM4PEmiUc02R2EzBoZzCA6avCXywvurrAlsKvNqFrP/2E5gtq+67
/jAFvj+P76zpIfCyL+fR0hMUBJJDuu6dBJavb/v+O5KC4H1mm6UfE6jQNe3C
H09BSHTD2o4HBJ5uXBi7PomCk1UM+eh7BNpa/3xyIoWCqDcpKzbfJfCvwKPa
0XMUsAX/CIw1EPjDMORq5HkKqG0eCy5cJ/CW77yCfgYFpzy7vlvUENgyYXth
UyYFZ85rTfBVEEgpsyP3czntfsngzVICI8+f1K/h5md+Xd7nW0Qgkapjb5hO
Qa5cxGP5AgJHkx9oSqRRULBnDHtzCNz5RdSWcZaCojCreiqDQJSXYYYkU1Ba
1nRVK5XLSW9XiidQUN6/tnDqNIGtWfZFs7EUVC9KTy9KJNCwLlFLJYKCuk08
p2zjCbxp6GNdc5yCBhffaKEYAjPrZl2TAim4m9J/DMMJdPRb/+KOFwX37uj7
Bp8gMHRAUGX3QQoeSUvvfx1IYLFPydbEPRQ83cHefcaXyx4HBsCAgu6jX/QM
vQh811BJumhQ8LKrVaX8AFeP8KL0SXkK3v5TIw46cM9niK/QWYKC9+typST2
Exhen6xospiC8YQg3pNmBDrPKYenTHDgt57cwC5tApec2zJpXsmB+YDEjn8a
BN4dlE56e4EDvHnf79WqE2h+wtt4QTIHBH4/rlilQuDQOt33AiwOrLoWEjsh
Q+C3dQedL8hxQIvoVk2apWFBt9WH22HxUCAuqL5vhobiBc+IaI94WLjIcNuq
KRraseGC2N54ePTxusHVjzQE/G1fRMaDbUWW7eM+GgrteXJ88kkc3M7rdkrt
puHwytcy/vVxIHdG0M3hKQ3X2r2W7cuPg5GgcL+JVhqOu5c7eATFQbCGS4zg
dRo2/wxnDknGwYBSNqenmoZDlXzm3/6xYfuqnlM55TQU0wiZWzjGBt55wwzl
Ihoe+0Kf3XSLDR5fwnO/5dNQYrNDp10RG9oH6wtv5dDwVFi4dnIyG1S6vxTH
ZtAw+6vGWOlxNpy5r1i+K5Xbn8kqHx5/NszUudSIp9BwgZ1mmd8hNuwvzq5/
lUjDq3odIZ/s2SCbINTsE0PD66uUaQombCg3m3qedJiG4T5PR8PpbBAFpVf7
/Lj9NaTyxciw4cgG18FV3jRc/ybOIVOMDZoSveNXD3L9UewQ+fMvFtpe3Pj3
2JyG6npfhlLfxMLwoUglIVUanjW58+hTTiysDhMOPzUujwdGnCWkGLHgXfRI
6sKIPPbm/dxKrYmF+o74axXv5bF2TX0qn1Qs7JX/9/HpS3l8KXHXS1YgFuJb
v1iKPZbH30cqbndPxcAXkS7F9KvyqGReXCaHMXCvKLU331ceDxoPsfe7x8Cz
3A22Hm/ksM9f+11tQzQsKApIf9Mrh0ssnTdsrIsGtasVvVZP5LBOedKkvjIa
zjQo7TW4JYc7AlVTOi9Fg0Ufbad8lhwOz7PuGp6Ohmciy7VeWsmh/ZZrA8rc
efwsZlrO7IksGmwYi40Qj4ZOr9qPm2+tQTG2AiUcFgXFSl0aFndW4TX7Ut2U
dxGglv0sMKhdGj+vrNRT/HQSaGraLyWvSuHfG0vkXnSHwnij0SL+mhXI1ChM
WNwXAqt8brkcPyWOjvn3I0IKj8H8o+WXpw6LoWnZ1YA4z2A4oitk5f1TGK0S
x9SsjILg5qYO/H5dAPdbaoX8fRQAVWIPqqXu8OPJf8TneD0fOKKZtVAngBfv
2Za83abtAZpxB0xGWXNN6hGmpx01XeCL11xKJDXTtPnUsgzJOVuIbcnR1J39
2DT3LtWwUXsP9N3Sarmy8FnTrJvXFqWUTXBAxfiv1dmnukf2TFf2X9mI70xs
rf3zRnVLay81f1xshjNVulUrt8/oMh20TQrybPHlZVn/r8/mdA13FGrvPO6C
Yf63TKzzeSEjXcrw0VEPtC1Yvz83mR8M1Ii19QI+3Hejnfe/ZwLAeCzd4TYW
gPfZysqnHguD//cOp7XrgtBZ7MM9CTsxoFmm2T3bHYzfNB/qvDsmDszhPr1P
icewKmDZL9fAFUCdSlljkBaCfJEj0a5pUtDiENq85XYoRmfRTaXSpGEworrB
8eZJ3MUXqdSSsApc79nNHKmIwEpTv4HPZWug6bGEXu7hKJw6R9i+rVkD5aPr
u78ejcKNr/v7OxrWQMibs96moVFY76/fX96+BvKXnmmaj4nCplSpPtbYGnhA
aWfEpEXhszfNPSOKsmCerjg+fSMKvx2W7HxbIgsx9dPRZfNRqJHd1Pr0shx0
WK5z2Z4ejcOqVVpelXJgdXcLVZoTjWfv59Xy3JCDJ/2qRqsKo3F8MrxQvU0O
VCSim8XKozFXVys8e1wO1KsfcgzvRWNUkKNMrZQ8OLtU+HR+icYPUi+6Ihzl
4TNjp80e8xjUem+R/PggN57VGEVYx+C58jaTle7ycOuqy+l/9jGoo3ezqcZP
HoKz45Z0e8RgJiujYjhCHpQ3xPi+iYjBnXesE3YWysNUh2b69eoYrHTtBskR
eTgmJUyVro7Fy94nJ83G5aH/b6FVNT0WcwOZmZzP8rCCb2R969pYTIwI/TL7
g1tP+McdyW2x6J5N5L1aTIP2oLBRJ5tYXN0d9KdAiQbPmca/ClNjUfzF6pIX
62hwrmCw7XROLAoMPrBcvpEGsXVLrZMuxeLsJ5krsZo0yDaNNKurjcWepfdt
PXbR4HqE9rFHvdx6euL1yn404LSqrVonw8Zokzsuhw7TQCWk4bESnY0h5p7L
LhylgbNu1YiGChs9nG4dEo6gwcIrdotTdNjodMhddEcMDZpXP3Lt28FGKx+R
25HxNLioL9ertpeNeifcxL+epoG78ZdLcofYqBG1rEkplQZp30jbOj82qnJu
sFwzaBA6fbPD8TgbydMukjk5NEhEqv/NKTauPi94ryefBj2DkxUVl9gonnvd
T6iIBmO7PTSSGtkocOmAtFEpDYwFXqkd6WLjbHVtYH01DR6fNttn/Y+NX244
rf5SR4OJg9JfTSTjcOTu4jaFBhoYZB8f3rYuDnufOMhlNdMg2Ta+lt8hDqtG
Fz4N66aBzIUVJlPX49BD3kpZb4YG95fDDOkRj0e+hOptmOXmL6t3+H0iHqPu
Fu6nzXH7j0xclp8cjzmOX2J5+AgQWCdUZVYXj88yE183ixPw27cgam4+Ht94
1kzXSBEw9HZr9xIxDo5vGVhycRUB7DOlys8IDvI9JzfH0AnYLtVjFWfEwW1i
zcn6mwiIDQyV0uVw0Hjw46WNWwnYlrdU90U6B62qhBuJ7QRA76SydDEH/fc4
jvAaEBB2x7cu8j4Hw1bHzk0bEzBAeP0r6OIgNVG2fGgnAU9ngv2d/uPgxYSf
OvctCejQj5K68IuDVbay1rU2BPwNfLNgFT+FtxWMfC7ZEyASuNRPaTmF/a3n
MmJdCVhnlKTySZHC4bSGiiMeBNh36K6/sInCabfB+24sAm4mRon3aFMoxKs6
ZRBEgMHSQ/+1WlAo3WXFr36MgKyT7sfC7ShkFoStZoQS4JVQvafahUL1gIsb
JSIIaKFmbjt4U6in027CF0PAnZ7BVeGBFJotm3KeiePm32fcEztOoeNryaPD
CQT0Vwcslgqn0PuqdlJvMgGrvgcaJMZQeCz0UGHLWQJMx/o7vDgUxpom3ag7
T0DQyL75qiQKz6y81lGURcAVozQVpxQKL3wcGEq7QADfQZNqv3MUXqn/94td
SMDZ03Lv3qZReCOOKXr0MgEea9slK9MpbLHaw3QvIyD11EzpQAaF3fRgLesK
AlSF935xyKTwv+lsS6MaAoyXnNbbzOXJ5mavzdcJmOqx/+nCzf99ZjSCbCBA
95GH13/nKVx8UOT8ijsEGBq6TF5JpVBi/Zari5oJEM/59bL5DIW0ecfm7y0E
NCn8l0RLplC1I7b/QxsBdgbNNg8pCrfnXvn0/AkBP4zNU6tjKTTx6Vr44BkB
JUkaWS+5/lhrzkrX9xIQyVJBfa5/rkvl1IoHuPq0Xh4YCaAwcMDIOP01AcKz
7xZkWVMYXuLrGD9IgEy4c2jeZgoTj6UGHRsm4OU28a+DEhRmGjVSHqMEzNu/
E3T7xsFrQ4uvG08RQIWbtatVcjB44PGDpBkCLo4LmB7n3t+tHSkDz2YJSJ/e
5jh6gIO366Xm7Hno0N1w595+YQ62JigYBCynA2/wX41HLvE4sH5HV4Y6HdoE
vES+fWBjNkNw6LUGHbTXBQSH1HLnj3TnDE2bDpJx8mznKDa+592/styIDk9u
mSvZr2TjxHOPA2hDh4zU6E3+erE4Hxb/aTSEDkoHtU/Nh0YjBu78ty6cDn2D
S3YyIBpj3YXFjkTTIXhDffsgXzQuMU9X/5tAhwNK7DTl5CgUI4rDxHK4cfYa
nqcbI5HR1rpU8w4dBKS6P/cah+FOiUXMJB4G+GwWFMtdewTpXUYXOYsYsHvR
7UVu1UE4lxwvy17KgFmPquuqW4KwYvESqXAxBvT+MDId1zuMon8ElgTQGBDM
OL41oc0fn78THbfUY0BEkt7SwnxPPFi1ulImmgG+GiWjDRn7cJuv01qpOAZE
JRp0vZ/ci8uV8orFExigVVrtbWBogfcvyuULnWVAZtvs2YFvpshMJ87MFzCg
tNDMmy2giRMnFYPeI5fnEFcWboWWbd6f37YwwIvOuahToA25P8pYr9oYIME4
Na7drgdmgcpuvc8YYJFiPpBbsgOq3VStHgwygDVlfbyc2gvHdqpvubKABOc3
p7fr6zjCF4OSi+f4SOB5rr8t8qQTeGnLiIQtISFtOlrqSr0zOKgtGN0lSsLJ
fXmmxikHASSfZH2SIyH5XKCy3xtXaBTR5e+jk7CtaYWEv48bbFp6LeiuAgmv
4nIElH66AXMuY1fKehIY7pLVlYvdQfC92181XRIk+Lxa6EKewH7V5y1tQIJf
dvVCeY4nzPea9vHsIIHeHeyf9c8Tph6ur+o2IyGvVNv6w6gXsJovrrplSYLn
0rLMUjtvGGpcQV2yIWH4tFP6o4fe4FhHzSTZk7AiW/iawSYW9FX8ORjsTMLa
8jyDsAgWmJf4dzi6cuunev/8k82CtoJ324w8uPosVtv01rFAP9uqeB2LBJ36
c4eXPWHBrdSHyyX9SWCmlzpUD7JAPVkzcv4wCcL3tjEfTLOgMr5iYuQoCb2C
xNB+Xh9QiJK37TxBgqGRdpG/iA8UnEhtuRFOgiZ4honL+ID0Ef4NBdEknHoa
FmpO+MA53xMXqDgSRO/Z1Cor+oCQx+TSwwlcvZM9W2uUfSDuwIFjdskkCMl3
So+p+MC8bfd7vbMkqKkyfF5z4yGWRuZrz5MwOFqpncbd/3XXzVvLs0j4Rtt1
SZruAywjZcU/uSToX+2tOLrKB4Z08tKGCkgosFEIqBHzAUcNMZ4nRSR8/C77
6/kiH+jbwParKyVh1D7DafIn1y/lny9yy0mI2u9b+fcj1y8GyziumgT2nRN/
l/dx/ZJ9c82vjoQW5xzHzfe4fklZyNncJIG2rOKNXznXL7H7STq3SfDPTjzX
msaCCoEts0wkIXJAJNkojAVMvrJDIi0krMta+d+PAyyQ/nlae/AxCdVj9C4x
BgvOTfFcaeskQWPN27TkhSwQGg+WrOkhoVIm6afzO2+Yf23/JfoVCRONKu+Y
md4Q0tfhwPqPhJ08L5LWH/aGr53QZjlEAp/dx9XXTLxh+B6zkD5BQmNs1jbT
b17QXjpt2fqbhJcNznvvbPWC2Ye8t3j/ce9Dv9kJPR4vYH7kDruFTPC0Mmm2
aPeEGHLTt0ZBJkSV2/DrWnuC1sUjqdWrmeCY9epGnpMHVOfM9OToMMGa7WiR
rHkI3jbyab3QZ8If8on/hmk3WPZSokhyBxO+K+rzyJS5AWvl5uCz5kyoToX+
EQk3YJw/KsE5yIT2pujs2g8ukHn6h1VQDBPsaf3KIZPO8KCC/05VPBOoGuvn
a82d4fsTSfJTIhPKlrwSflHjBIxJZvLaFCYoPBzhzZZwAkvBrd89U5nglzz7
in3cEaLW7nC6nMGErD8pLdUvHaDKdH/r+xwmdNSofFTXcYC3Xp7r5AuY8MHg
Lh68bw9C1PHzTkVMMGyQnGHG2oNmCedvdikTzN0cL3sb2IP3gwz3gXIm+Edy
ChT47OEB383N+64zYQFfQJEoxw6iomefmzxgwrqfZRuOnrOFyoIlOvGPmLBz
Qi860MYW3jStLL7/lAlq2tGhb2RsQXNe45hOPxN8p/qyFl/eDzOhJyTVR5ng
smfRq9C7NuAV/NtGTkAB5ksvDXbyWUOFA0dJQpjLQft+fOi2gml9ibklyxXg
76sqS7NCKwgTUy2cllYA9TrrH2K6VnC60mWiVUkBWi6UJJhG7IPro22RvqYK
YG73/X2egCXwOmWUNlAK4C0fPSZRagY5Ruq/9y1WhMqBiqBdI4ZwpWJ/xl1B
Rdgp4zSdlWoIN1eEqSuJKkJznMYOaT1D6PvQ7D+/UhH4y3en5OcagGi8+VDp
WkU4+70/MMJaH+IfsJ783aMIwh+fHTbJ1IWgHYV5JWmKcKqquVoweDNEV7Vs
X56lCFu2bHmz75k6nJEaHTh5QREyN54pNFdRh4qPquKWxYrwSa14/e6hjTDK
uc2Zu6EIfM2bxZp3q4FzW3/g3leKQGpHdFWKcc9d7c+y2/8pQkb0zdzMWww4
mSl7lTmsCPk9O+O2H6JDlpf7hz+TXD1jL5Wia+Shd8k3u+J5RSi40gT1RyVh
KFDyp+hCJQjmo/s2XhOH6YFtaWGLlSAv535TzKQoiJRFPbUQVYJdCvwVYuX8
ICtW5HNLQgl6QwTWbhHkAZUTD5cwpZVg/JnKI+8HP3S3vxu/fGaNEhRMqXsk
dI7o/v//LcwILvcf89zf9D/i+h1r
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172292#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"3rd\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.738064593954*^9},
 CellLabel->
  "Out[634]=",ExpressionUUID->"bf0d4dac-10d9-4840-92b0-f4e5e789202c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
//8/PTqQOJRsg13//wDybKYy
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
zQl6VA3l6L8DZMgOeuhs8OcDXZ7lRfoneTJ0d2fJhG69p6+EKYe2yZEh5cPI
aGf4e3r1nRQ2XYypq/xxAn/f0VvV/BnbZMnwUzxh8fHft3TmM5e1+0hkwPmG
VX3cHqWb8l2DPzJkWLr21Fn+yih9tO7Ww5sYP8v4wX/p3widW6XhrxTGZq1e
QfwMI/QnP9U+WBDIEL7bQV1/xzBdyDfVvx9PBgO5jMXbUa/ppsw6aYEY81OG
cyZ2vKYntz6UEMe4zN3k30XGIfqZyWh7fxwZRp5rtj9kGqAHPv5LU5ciw55L
LhOrXP/Rd0Yc4V+TJENi6HHFZP5+emP/no1KjL0uS0z2SvTRcZd25Chg/C6C
Vdkd/5JenfHD9vs+MhhHLiewyPbSd7XFO9RjLHetRQUpdtPH2+4qGWCcFf3w
5ge1LjrJiYVDAGOOmJTpUEonffUOG/7TXjIsxLom1Rm306sMGiSjMbaPN52x
NG+jX05yYrbDuDdBRWPlVCs95HeC3CGMy27tnJNzBvpjOlVzRgKrd8mZS8mv
mulNn/7KtGHMj39KeDn2gl5RzWtZgPEqIW6Q5XMj3YtfoOk6xoOk05fR8jP6
5GzkeU+Mq/YfkA3brKf/5hsxt8A4WeHfcB1LHb0g+FaIOsZ+hwcjV3hr6L2/
CBMEjM0VC+T376mm24WIRAlgfMZnoeqlaQVd+/0nJyaM99Juseu4PqS7Mm2H
/9xDholLR5zqw4rpDa/nh79gfO/KyNP9d/LppIN73Scxfsbxc6+uxT16zoao
8luMVYS0+uUj0ujMArbawxh76XH8UbBOoBs5W0UOYjxQq1jD7nSRbt8Z/2cA
42HaY+0j1WcoB+6kx/1v/d5F/S/mOdco5wtwS/9bN6+y79DKu03pXC6OG8J4
sJBf6CQtkyIsUHJmBOMyE1dybcEDinxZse84xgvHWt5r3yykDJ2QbfyMsZyO
RHRPcCnlbc4TyvL/9NG4JG/l9JjCf6STYQvjkSxPz2XpKopx2dxfDsz+9bsZ
zbWiTygW97NU9mAslNbJH8pdS1l/7FJxEGOVO2tuFKZ6yk7/Nhd9jG2TcM+Z
N55S7GLQKUeMQxLNeXq/NlDqYx1jLmL8LObxU6uRJspg2/XiJxiPXXvHKfaS
TlFQzEh/jXE4Yq5a/giUYQa7rnWM72kdYa4bbqWo7137qofli4KmUYXwf22U
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
4NYAvQ==
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
go9drsehZJ0u67aXSbAYSfKfBhy6lSa1bkROhqeqbt8/PMXm3wgOo4bJULRe
6f6+D4eYPsnvzJ1PBhNfmfMjgzj0PmgP863sZKg/L2fVM4VDrE/uttItJEOK
uM/g4y84xKLPKZW6nQznJuuMqHPY+LIqhEtcKcBtc/ho6zIOcarKSL9QSYFg
AwWlKho8elj0Ms4wKgV+6JYXZzPgEb+jwPSbKyngqinIHsGER1PqXdefFqXA
6UM0c4YceHQ2PmbhaWsKjEgHWCnw4JE7X6/7UHcKmEh9BWF+PMrk6OVVeZ0C
iPfltW9ieNQfY/50z3wKPGSnMI5K4ZG2GEudz68UIO954N9JxKMwv4kC/L8U
qKbDfyyTwSMpljO/SIypQNgqMMw4iEffonFKIWypcGuNuTWEjEfR55+P7OVN
Bf4fF3EOynh0Sf+r7oJwKmTPLWceV8ej2m72jT1SqcAyff7fIQoe3fH44ORO
SoWE96NuArp4xDIwT7vnQCpsj+iP0h7Do8L4Z+jzoVQIedWhs2CARxvC+wrW
yamw3Huw7rUJHg3KXQhDSqng3lUs1G6BR6+MTOw6lVPh88N9ySUn8Ogms0ej
l0oq2DUmr14+hUeLf83XDTGP1vx1CLTHo2mD7dvTMqlgWu7db3cOW78+2+mr
e1Oh7/Yn1aPOeFQVZ+cR9T0F2nN6uXi98WjoXKDqYk0K3A7LedpyEY+Et0eV
mqRSQCCA8fDtWDw6tylicnonGbI9w24kX8IjXBWO0/xdMlw6ezb45BU8Mps6
fFQ9PRncj8qQ/hbhEV1/Jkfo9yRQ4HxyWasD628kJZ0mNxGeVaxYdG9i6926
v9GSHg8bvXTtdDt4pCHfvafAJh4Is1gwoScgeDEeqiYeD3F48q+HLARUWIkL
mK6PA43igJx6YQLiSDg2qzMYC/WFq8OFWgS0ZHbxaBlLDHx4yKDxVoeAjEjR
3/TKomHvO55S3mMENOIqLuKuGA3u/IqBWaYExLCPZs7CKgpweUE8SQ4EdJMG
b9CTFwlX09et/OMI6PWZtINrB8Ogp4bxUV0iAT0Vlvsi2xMKay958d9SCeh6
ElPIgTOhgFsiXNmfQUApZw7M06yFYPWP8ppLDgH1nKlVv38lBGL2Hztzt4CA
rI7d8DlODIE6fZvu6UICUnvLkjjYFQwfXF0OiN8moEXuwTvgHQysySF5Z0oJ
qDeueFJWPRjUypP+Xa8goHc65pn5TMHg1lPgNF5NQJNv7Fc2R4Ogh6FV0bKJ
gFYibpdVBAdBTOzGm+M9BFT2h35bvysQam8zaSU+J6C98T9OqucHwiSVv+zJ
KwJK/mYszekZCGrbKsFaYwS06unFcFYwEFbDw3gV5rD+9C6+U4wNAMnrKVF+
SwT0mFmP5p9dAJi3Xftau0xAzx7lnclWDYDa323N0n8IqGFj+Lbwmj+4Bm6e
EGMmIv1fnKGOQf5QczpJmoeNiLQa7Tv1T/rDig7PFhMXEWme2XR4rekPEZxy
d1YEiEjDu/dBO5M/pNc6LnZLE9HfdhuTurt+MJz3/dHDA0R04NtDjdPpfsB/
MSKz7jARCfJQg/NC/KDYME/xmioRbelbdt8z9IOmub5oT30ien7JIFt80xc2
B6wtHI2JqCXXqmTnqy9otUzjTpgTEU+5+Y9TI77Qd2nrGeUkEb2b6D94sd4X
JiQP8XC7EVF5hxf/YW9fkGB+9HW3FxH189b1PLD3Beef+m1bvkS0N07x1k1T
X/hBPW//NZSImrIf9tyT9wW6MwUVbcnYfK6muLdt+sCxI7iI2jQiaugsXJ/6
5ANpMveNSzKJ6J/ERFPrMx/Yt/l8Je0qEW3Xqj5yLvQBUsG2hkMFEbnplIVr
6fmAV9RldutqIrrU6CrjJu8DD5z4p/XriSg7+t83MTEfUFeQTyK3EpGq3HKB
2KY3mAw5DTH2EZGLsQrzfJM35LSulPx9QUTTX1+MrN31hvFb0cHLA0RUt/om
wz3fGxy9rwm9GyOiH+G3esJCvSGQpd+pZpaIXmTpPa5H3lB4VGHTcjcJnZsd
M7wy6QVVNTYFnSwklPz2/avSQS9o3RehIM1BQtcieHCfn3jB6EyX9zY/CemQ
NqXaq7yAI9H0c8V+EoKsgCxSmBeIffeP4T5IQqx+fx71eHqB3Il8kSgyCS3f
dwg/6eAFhoRJG0sNErK/Xxmre8wLEnvcX/4zJqFKHrrpMG4vyJNLd3O1IKFS
b5+7rIxeUJp/n3H4BAnNvXdvdtzwhC7nDVRxloRI+tO3VCc8YYsxscnCj4Sc
Juoqlm95AotPpcWjIBIq0HJfnsnwBMGxlz+I4ST0xOmsrke0JyiXc+//F4f1
d3pwnvWMJ/gfu3OzPJeEVKwrzbY4PSG27qk61zUS2m/My/z4nwdk8s2NR94g
od5297SZOQ+omZXjtigjoSnr289lH3lAh6lFfUcVCXXXLK3plnnA85YgY2Id
Ccm/We+7le4Bc0kdSVstJOS6KHiU9YwH/P7xEefSQUJ3GG+f4dD1AEZb+sdD
QELKBm1bFJIHSJEMtsqekZBNSVQN07I72PeN+Zq/x9pZDv/MCHQHr0N/93Z8
JCE0Rj6BLN0h8qroPcIX7PqLITvzh9zhmqvTzN8lEsqoL/jHPu8GI0y/TpZt
k9C8OD+sG7rBZ1/e3xz00shIZtu+S8INVsZVcyN2SyOvrqEdi3VXYK+MeWXG
IY365/kIDwpdQZSz1KOdRxr5VKwJBni6gmxYLxNBQBo1GhYsf1J3BfVPC3cz
RaTRQ7cH9ht7XOH//2+Inl7dEq4fdYH/AQjIrrQ=
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9zPCWsD/jsa+
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172407#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Cross-Kerr\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.738064594111*^9},
 CellLabel->
  "Out[635]=",ExpressionUUID->"6ebc1aad-5084-48ce-bf2e-c92229ea2b83"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtmnk01N//x+3GvpNlZt5jHUuyZc9cKdlCSCpEZalsRRTJUh9UiqJCaUGK
VJQtYl4l+76rKGVX9iVZf+/vOb9/Zs7jvM/c+3w9X8u9c2Yox/3tPJgYGBiW
8Zf/vVuY85qsURTh/R3J6CPdCBkUXZolkBQh0ENkZRJnFcrvdFEJRYA48yDL
HoSINw9byooqQtxFc51LOPP+q11RF1SEt4XZUeE4b53UzqbxKoJcyXySDc6z
bVn2+zkVoW6j8vU8vt6goRDjUTZFuMKaLuiFc/uLqNfeTIpgZElieNWF0Cfh
2aPBm1T4YdlV8rkTobeRrhxXV6mw/6pt6OsOhDL/NBXfXqbCubOycafbEUp2
Mjj5eJ4KGok/Kf9aEfrvc47Aq2kqhLiIxx1pQShYbRu9bJIKVEeXtVtNCHk9
jPGpG6WC0l+jD/caEHIiLIn3/KKCd4UN17k6hMyDTtQOfadCjRxFkVKDkP5g
e9DcVypsf7XHMasKIanS163cnVQo5K4bVKhEiEeWGC7RSoWn3y3o1HKENhNu
KFEbqbCzyuPNZgker5f3fyZVVJgqyalRKsDj7ezROECnwuDHJb+oV3i8tL2D
ruVUEO0gK7/OQShLTNog9B0VJlfsf15/iuut/Tabn0mFaA75g04JuF5Ni0eV
j3F/pi3zPK8jZPa41LLpARXef/wmuf8/hJRC7maPJVHhukyEaWYoQtPyNs6k
q1T4Fln5JewEQj/uVHCoRFIhNIzIYueCUNumconeJSp0WJyzZDqE+91DEDwY
RAWroyaa8+a4fzGfam+cpELBH58QUVVcz7za+VQ33C/tk6mf5XE9ro+lnztT
QchwoN+ajPulfSn8kwMVhvzSGlb4ENoY2an5bw8VfHQcM+x+0NDVvTmPPOWo
QHs/InTmAA3BjVBbMoUKsoVx56cNaWi93ZKpT4oKzj6/+BSoNBToOu1hLkyF
h57DkWUbRuh4iOZ2FWYqZNIt7C89M0K0nIryuUEFWPjz6+3a2C60yt3Rd+mh
AhRdtlU4tcsQadtnXt+ZogC/mix8OjBDdC41yHA6SQFOeVmHsbIYogk5sSfH
bijAic4H1xrrDVCfkbPX7lAF2P85xHPCzgAVB4wusTspAGXhvMT6UX10tmtV
MElIASpb0nZu7NdF9+xsjiTzKYBK0Z1T0qq66ENb5tO7XApQXcNHU+LVRWzN
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
+Hr//3969ES/vvp//6f/P5tvQJo=
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mCCliIrSz1ItexD6/+8BUQl7ZEyqK0L/B3A+b8Y=
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
u1ThcX7FBP7//5vI5llqysMEE/gfzHT1YA==
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RUIebcwGpWieQ/D/v59DLkM2Y2LuCP4HDvCaNg==
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
zshaiPKKMcBUHqlm
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
QP9lLNrxOR7ASkkOQ/shKUCZBMmsPwgewKR4sME=
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172522#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Self-Kerr\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.73806459429*^9},
 CellLabel->
  "Out[636]=",ExpressionUUID->"3cad1df9-7fba-4b2f-a87c-88dfdd6ab212"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.737918246744*^9},ExpressionUUID->"37217412-a6fa-43a5-8f5c-c38761a96037"]
}, Closed]],

Cell[CellGroupData[{

Cell["Phase Diagram \[Alpha]", "Subsection",
 CellChangeTimes->{{3.737974971333*^9, 3.737974998705*^9}, {3.737975404993*^9,
   3.737975423785*^9}},ExpressionUUID->"5ddef5c8-b972-4641-9cf9-e24edaa3b92e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"len\[Phi]", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"-", "4"}], "Pi"}], ",", 
        RowBox[{"4", "Pi"}], ",", 
        RowBox[{"Pi", "/", "5"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len\[Alpha]", "=", 
   RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.73797620533*^9, 3.7379762473129997`*^9}, {
  3.737976284322*^9, 3.7379762957609997`*^9}, {3.7379763382980003`*^9, 
  3.7379763511689997`*^9}, {3.73800819205*^9, 3.7380081957860003`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"0f92135d-211e-481a-81ff-046ef142ffe3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"table\[Alpha]crossvs3rd", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"listt2", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"\[Alpha]list", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"listt2", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i", ",", "4"}], "]"}], "]"}], "/", 
            RowBox[{"listt2", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "len\[Alpha]"}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"table\[Alpha]selfvs3rd", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"listt2", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"\[Alpha]list", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{"Log10", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"listt2", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "5"}], "]"}], "]"}], "/", 
             RowBox[{"listt2", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "len\[Alpha]"}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
   RowBox[{"table\[Alpha]crossvs3rd", ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
       "\"\<\[Alpha]\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "/", "2"}], "\[Pi]", " ", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "6", "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Phase Diagram lg(Cross-Kerr/3rd)\>\"", ",", "14"}], 
      "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Mesh", "\[Rule]", "1"}], ",", 
    RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"MeshFunctions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Boole", "[", 
        RowBox[{"Greater", "[", 
         RowBox[{"#3", ",", 
          RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"ColorData", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<TemperatureMap\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}], "]"}], ")"}]}], 
    ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"table\[Alpha]selfvs3rd", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
      "\"\<\[Alpha]\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], "\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "6", "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Phase Diagram lg(Self-Kerr/3rd)\>\"", ",", "14"}], "]"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "1"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"Greater", "[", 
        RowBox[{"#3", ",", 
         RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"ColorData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<TemperatureMap\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}], "]"}], ")"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.73797580141*^9, 3.737975818946*^9}, {3.737976069203*^9, 
   3.7379761658900003`*^9}, {3.737976198626*^9, 3.7379762012019997`*^9}, {
   3.737976278546*^9, 3.7379763261540003`*^9}, {3.737976358067*^9, 
   3.737976381625*^9}, {3.7379764999*^9, 3.73797650185*^9}, {
   3.737976617804*^9, 3.737976625043*^9}, {3.737976692995*^9, 
   3.737976739178*^9}, {3.7379767719300003`*^9, 3.7379767929779997`*^9}, {
   3.737976850282*^9, 3.737976872026*^9}, {3.737976912866*^9, 
   3.73797691445*^9}, {3.737976956859*^9, 3.7379769579779997`*^9}, {
   3.737977316083*^9, 3.737977323498*^9}, 3.737977556731*^9, {
   3.737977657102*^9, 3.7379776587869997`*^9}, {3.737977798851*^9, 
   3.737977816033*^9}, {3.7379778634449997`*^9, 3.737977864707*^9}, 
   3.737978381763*^9, {3.737978732571*^9, 3.73797873529*^9}, {
   3.737978786091*^9, 3.737978818499*^9}, {3.737978870899*^9, 
   3.737978908058*^9}, {3.737978963587*^9, 3.7379789717139997`*^9}, {
   3.737979024594*^9, 3.73797911101*^9}, {3.737979141788*^9, 
   3.7379791501619997`*^9}, {3.737979267949*^9, 3.7379792693780003`*^9}, {
   3.737990362604*^9, 3.7379903697460003`*^9}, {3.738001643547*^9, 
   3.73800164677*^9}, {3.738001683811*^9, 3.738001741262*^9}, {
   3.7380067942679996`*^9, 3.7380068005950003`*^9}, {3.738006953028*^9, 
   3.738006957139*^9}, {3.738006990523*^9, 3.738007018116*^9}, {
   3.738007056459*^9, 3.738007110858*^9}, {3.7380071783389997`*^9, 
   3.738007179627*^9}, {3.738007507723*^9, 3.738007516034*^9}, {
   3.738007569483*^9, 3.738007663098*^9}, {3.738008044365*^9, 
   3.738008113875*^9}, {3.7380082310360003`*^9, 3.7380082685550003`*^9}, 
   3.738008501932*^9, {3.738008560028*^9, 3.7380086016289997`*^9}, {
   3.738008652093*^9, 3.738008657075*^9}, {3.738010081998*^9, 
   3.738010109508*^9}, {3.7380584103710003`*^9, 3.73805841217*^9}, {
   3.7380596222279997`*^9, 3.738059662611*^9}, {3.7380600764849997`*^9, 
   3.738060126212*^9}, {3.73806033527*^9, 3.738060346343*^9}, {
   3.738060416994*^9, 3.738060466634*^9}, {3.738060502084*^9, 
   3.7380605030179996`*^9}, {3.738060577884*^9, 3.738060633924*^9}, 
   3.738060671293*^9, {3.7380615645959997`*^9, 3.738061568435*^9}, {
   3.7380615995810003`*^9, 3.738061602692*^9}, {3.7380616397*^9, 
   3.7380616404110003`*^9}, {3.738062937132*^9, 3.738062942363*^9}, 
   3.7380633409309998`*^9},
 CellLabel->
  "In[589]:=",ExpressionUUID->"b378d9d1-f660-4e5b-bd70-2b26059dc113"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxlmG2oZVMYx8/oeDlMpw67c21TJ9uc2eYoSXOLGlorL/FRk4SZjJc7jJrw
hQhN8YEvjEgi+TCIiS+aUij7flBmGhQajOvmXvugjby1Q8Zc2tf5P7fnd/eX
6d991vnN2uv/f9ZaO7v5zi07jmu1WpvXtFrNv6efe9nVR7PR7PSm5vk0SD/3
bPMcMd1afhaCry9N33Zr83yH8ZXpDz9onp/CyTd8ue3KhbONJy2etHi+vjQt
nh9fmRbvn8fv2vH0C7nxpMWTFs/Xl6bF8+Mr0+L9XJxwxzfbNhhPWjxp8Xx9
aVo8P74yLd7Cr8/fc966ofGkxZMWz9eXpsXz4yvT4n2Sbdr9wJGzjCctnrR4
vr40LZ4fX5kW770tBx85+ExmPGnxpMXz9aVp8fz4yrR4bz68/Yn+NWcaT1o8
afF8fWlaPD++Mi3eVbf/eP77GwfGkxZPWjxfX5oWz4+vTIs3fWjq0pteXmc8
afGkxfP1pWnx/PjKtHj/5z9Ff0nRX1L0lxT9JUV/SdFfUuS9j7z3kfc+8t5H
3vvIex957yN/CfKXIH8J8pcgfwnylyB/CfLQQx56yEMPeeghDz3koYc89ODP
LvzZhT+78GcX/uzCn134swu/dOCXDvzSgV868EsHfunALx2sXxvr18b6tbF+
baxfG+vXxvq18T6XCv8+lwr/PpcK/z5VX5r271PjK9N+fnXh51cXfn514edX
F35+deHnVxd+fjV4Y/DG4I3BG4M3Bm8M3th4rckjnrR4LfcsoL40LZ4fX5nG
/ALmFzC/gPkFzC9gfgHzC1g/8GrwavBq8GrwavDqAH8G+DPAn8bz9ebPAH8G
+BPza0fkLyJ/EfmLyF9E/iLyF9FfIvpLRH8xnq+3/hLRXyL6S0T/jOifEf0z
+vfZjeifEf0zon9G7A8R+0PE/mA8X2/7Q8T+ELE/ROx/WL8E65dg/RKsX4L1
S7B+ScT+bjxp7O/G8/W2v0fs78aTxvkFfknhlxR+SeGXFH5J4Zc04nxmPGmc
z4zn6+18FnE+M540zp/w5wD+HMCfA/hzAH8O4M9BxPnaeNI4XxvP19v5OuJ8
bTxp3B+Qhwx5yJCHDHnIkIcMecgi7kfGk8b9yHi+3u5HEfcj40nj/of8DZG/
IfI3RP6GyN8Q+Rsab3L/NJ407rfG8/V2vzWeH2/3W+Q9R95z5D1H3nPkPUfe
c+Q9N97k+4HxpPF9wni+3r5PGM+Pt+8T6C8j9JcR+ssI/WWE/jJCfxmhv4yM
99XW4vhf/s1n9Xu3vPLH0hvH8tnln/t9Iby6+9Cfd+9b+V6h7xtrmvJd8+Gk
o/ddfOLalfH6+/L47mL4dnTd3A/1yvcHfa9YHv/6517PzIW/v3/wqVMfWv39
otH7Zw6HGy+Yeee3R9fb31/8+IrPLn93fdzZTHftYfHsfU3q7X3u2XP/ObG3
IX7UTP+MOef/5vcn87XxL+18bGrj3on/LvxC/79Vftd8vp7fN3z7r9V+1/z2
X3Rs1yVTE79duxiuH9x74K3TJv54bT5M731y0O6t+Mn585R579/Ni+E/vNe4
Vg==
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwtkVkKwkAQRCcSFEwQN4wIivseTdS43sIjeAC9vf6pr0l9PKie1FQXk8Hj
dX8WnHMd8OHsOdeAJlxgBWPOe7A0DW10HSboKUTorr7bbF7zzNEDCNBl6KOH
8tdg5OUZlmUe8ybwRX9gjd7Cz+VnMXoPvjyJ+lhWpH0LL+9i80z7quiWZutg
XaraHyvLMg9whKJ22u5McwhXL+9k3d6w0R27G8AOUnmLyrpBBUpwkieQJ1Vm
qDc/y1PS/Uz/oKkMy/oDVwAW4w==
           "]]}]}, {}, {}, {}, {}}, {{}, {
        GrayLevel[0], 
        LineBox[{297, 295, 290, 291, 288, 289, 293, 292, 296, 294, 298, 299}, 
         VertexColors -> None], 
        LineBox[{302, 300, 304, 307}, VertexColors -> None], 
        LineBox[{308, 301, 303, 310, 305, 306, 308}, VertexColors -> None], 
        LineBox[{309, 314, 312, 313, 315, 311, 309}, VertexColors -> 
         None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
R3U+4v8DvngP2A==
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Alpha]\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-7, 2] Pi, -10.995574287564276`], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"7", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-5, 2] Pi, -7.853981633974483], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-3, 2] Pi, -4.71238898038469], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
          FormBox[
           RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
          FormBox[
           FractionBox["\[Pi]", "2"], TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[Rational[3, 2] Pi, 4.71238898038469], 
          FormBox[
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[5, 2] Pi, 7.853981633974483], 
          FormBox[
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[7, 2] Pi, 10.995574287564276`], 
          FormBox[
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     FrameTicksStyle -> Directive[6], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram lg(Cross-Kerr/3rd)\"", 14, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
      0.30000000000000004`, 0.9}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJzt1Ps31HkYB3CKSoNKd7cWncoal1WbVNu7sRXadlMuKRVFJJdIahGaELUq
ku1GFAqJSpdBMkouGZNRk7vcjZnvfD+1SnaFnf0f9sf54TnnOa/zOed5zvN8
Ph+9/Ye3H5isoKBQIwtFWfyX5wV3H3lm1Q9O0BRJprsIypxDovuqBPa7HYf3
6A0gt2d+QcKsQbBZC8O79AlGrapDJiYGkGpvGHSibBBjr6tmaVgSZBquGUvv
ECHh5WqLg35ihDgcu221lWDzzPyTVqWDOLV8y6i9lgRf2hevCTpAkLdT9SUV
KsbsYW8q/L4EPRw9hfm/EzgoliZ+YUhwvcvSz2AxhRoHzX1UjKxutp/beIoE
+nUqdPVlCgUfNV6UJ8nq2umaTjWhkMtp9vdnSJEczzC4fJNgywh/bEYZBfPM
HDI7UoqwZUrRvgUEQ2mRvAV2UhRdCAko+kuKfRXfelmlBCnWZtf1uqRghdl+
2utJw9rty8b5tQScyVTTxqU00q68CIy6TsM+u/U1M5DAQ/9MtJoHjVVtZg2N
1TT6s+CweTrBTNYSM2E6jYZFaebMYRrHMzLavTJoPHN92ZrSTsPHXS3ppAHB
tJtTvWLW0vCKcIv10CRQuhM29M6O4PoNn4+3hFLMTh0zZ+4guCEetDeMIGCm
vAnh+kvRZmaw6GAUwX1GpntMKgGlleDT2UJh6qYr7N8SCWqtvD9syCDYcXZr
VfRnCcxd1HpXpBH0h5i4KOUQcEfUDQzVJdgTcGqT1j0CxQdD71/mExh58SPq
looRF/M1W7GEQFvE2R71iCBZeK4lkDWIwmu+DFE1gcWiCL5VMYHChl9XznMR
oaOgy4//nmC708+bJ3EJvB+qXiw+OoA4dbYBW+YnGQ8P/C0772ur3iSc04/l
ZSNHld8STH6iZXK6kCCwb1vN06u9aD8cUHnmDUGMW8ywRh5BEDu5+KpuD+K+
E81X58nmxSDP0zIJjus03w3L6IK5wNX7oqyfs4+dY5myOZwo0k7ds6wT7ezG
4nmvCNTcXmwtSiaYyOVqR+5qR6pzcMKTxwSFrtWKQx4EhoZU3i5hC3baLjcV
xxIYPMuSBL+m4ZTQdzc6sBlzV3+q09lFkLQgSjhiSuPU147cfLUm1H9f4LuN
STAp2K0sLFmKe3ubcppy3iNey48RM07jiOCnnPF/KLS8EmRP2iSEjapRLqee
RpexVhLbTbYn49o7zO63UBoT2VC3aNidHTmhVCnb06WK204RDeiLihfTsvtX
lHaIOfeDGM3+rUu7hQJc6G/Ln7eExj2/zqrx9kHwdn+zjvMTwNLWOGhdnxTp
a5zcRW0iPN+sc9BEWYCeu+EWnplSXFLhjQtaB/Bg1bq4dyn1OKfOHz3nLkVs
I+taSUs/Mpa4ZoeuqIdFoC73sb4UoVlPf8xq7oORoUIi68obDPUaex7qoeBk
vr+qurEXJRsCb2jX8mEhaCwfzaEw8wel6ImGHkxXKc3wYfBxopStcy6AQq3p
7fUr+d1wrpuWU/xLHbg5RiG6FhRiTGzGfGu6cCfRIV8lngflP4XvCsYkWG8s
Lsqo6MSwY3qhM68WtqcizVgVsv9ixwLpo8gP2KBJce6o1uK8v2F8w1kJvB13
e+ofa0dSh8Xz4S2vUbKXO7jfUYLBvItpZU9aEG3Tfz72TA3+CHft7tGToHzh
53jNtEYsE6RYWldUwyVlvMWDFuPqacfQ4Nh34O20750yUQWjktS3fcViBAw9
8ao/LEBAt8qFSssqjDav5XnGipHINct1us/DHB+u5emjlagdaa0YsBdj/bWh
aFV2JThDx3o3FrzC3GqKGSp7T3NcWG81jMrBmvHYb4Gy3OUud7nLXe5yl7vc
5S53ucv9//Z/AcC97zo=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000001, -112.50000000000001`}, {
                7.500000000000001, 112.50000000000001`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -92.64705882352942}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -92.64705882352942}]}, {{
                    7.500000000000001, -48.52941176470589}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -48.52941176470589}]}, {{
                    7.500000000000001, -4.411764705882353}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -4.411764705882353}]}, {{
                    7.500000000000001, 39.70588235294118}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    39.70588235294118}]}, {{7.500000000000001, 
                    83.82352941176471}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    83.82352941176471}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.500000000000001, -103.6764705882353}, 
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -103.6764705882353}]}, {{
                    7.500000000000001, -81.61764705882354}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -81.61764705882354}]}, {{
                    7.500000000000001, -70.58823529411765}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -70.58823529411765}]}, {{
                    7.500000000000001, -59.558823529411775`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -59.558823529411775`}]}, {{
                    7.500000000000001, -37.50000000000001}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -37.50000000000001}]}, {{
                    7.500000000000001, -26.47058823529412}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -26.47058823529412}]}, {{
                    7.500000000000001, -15.441176470588237`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -15.441176470588237`}]}, {{
                    7.500000000000001, 6.61764705882353}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    6.61764705882353}]}, {{7.500000000000001, 
                    17.647058823529413`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    17.647058823529413`}]}, {{7.500000000000001, 
                    28.676470588235297`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    28.676470588235297`}]}, {{7.500000000000001, 
                    50.735294117647065`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    50.735294117647065`}]}, {{7.500000000000001, 
                    61.76470588235295}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    61.76470588235295}]}, {{7.500000000000001, 
                    72.79411764705883}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    72.79411764705883}]}, {{7.500000000000001, 
                    94.8529411764706}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    94.8529411764706}]}, {{7.500000000000001, 
                    105.88235294117648`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    105.88235294117648`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -92.64705882352942}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -48.52941176470589}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -4.411764705882353}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    39.70588235294118}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    83.82352941176471}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.6666666666666665`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.308746, 0.441842, 0.940894], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2058306666666667, 0.29456133333333334`, 
                    0.6272626666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.308746`", ",", "0.441842`", ",", "0.940894`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.308746, 0.441842, 0.940894]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.308746, 0.441842, 0.940894], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.935699, 0.951565, 0.993729], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6237993333333334, 0.6343766666666667, 0.662486], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.935699`", ",", "0.951565`", ",", "0.993729`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.935699, 0.951565, 0.993729]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.935699, 0.951565, 0.993729], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.995282, 0.992317, 0.727853], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6635213333333334, 0.6615446666666667, 
                    0.48523533333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.995282`", ",", "0.992317`", ",", "0.727853`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.995282, 0.992317, 0.727853]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.995282, 0.992317, 0.727853], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.955963, 0.863115, 0.283425], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6373086666666667, 0.57541, 0.18895], FrameTicks -> None,
                     PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.955963, 0.863115, 0.283425]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.955963, 0.863115, 0.283425], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6028180000000001, 0.438666, 0.161198], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.858405, 0.449932, 0.203562], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5722700000000001, 0.2999546666666667, 0.135708], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.858405`", ",", "0.449932`", ",", "0.203562`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.858405, 0.449932, 0.203562]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.858405, 0.449932, 0.203562], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.8800672823808062`"}], ",", 
                   "7.250037030925988`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.738012068666*^9, 3.738058412704*^9, {3.738059624211*^9, 
   3.738059663867*^9}, {3.738060082033*^9, 3.7380600947790003`*^9}, 
   3.738060127388*^9, 3.7380603366*^9, {3.738060418663*^9, 
   3.7380604675620003`*^9}, 3.738060504355*^9, {3.7380605860039997`*^9, 
   3.73806063474*^9}, 3.738060673535*^9, 3.738061569402*^9, 3.738061603573*^9,
    3.738061641546*^9, {3.738062926834*^9, 3.7380629431610003`*^9}, 
   3.738063341958*^9},
 CellLabel->
  "Out[591]=",ExpressionUUID->"8cd47702-15ab-436e-82a4-e67361eadfc6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxtmG1sU1UYxwtpMCVS1nktXDYrl5VCE9Ag44MQOScBcVEgvCuCe2FBRiJK
MBkZvqDh7QOmAZGgCIgRwhSRBAaKwroPiEMHIjSFAcKy2zHuSsSQqwLqYnt7
n6c5/3q/LP/0Ofe3c87zf557jrHotVmL+3o8noY+Hk/27+DRk+f8bURbysdm
nwuC9PaPsk87a4/zdAg13mS95OXscwPGW6zPtGWfW6J/5eWFFR0jmEeaeKSJ
p8abrImnjrdYE++f2PLFW3dFmEeaeKSJp8abrImnjrdYE++3eL9XOxcOZx5p
4pEmnhpvsiaeOt5iTbyO33fUP14SZh5p4pEmnhpvsiaeOt5iTbzzxtjVb7YP
Yx5p4pEmnhpvsiaeOt5iTbyTs05vOL3NYB5p4pEmnhpvsiaeOt5iTbyja6o2
BecNZR5p4pEmnhpvsiaeOt5iTbwZS9NjfhgZYh5p4pEmnhpvsiaeOt5iTbzy
nwZNqtlbwjzSxCNNPDXeZE08dbzFmng5/+tQX3SoLzrUFx3qiw71RYf6ooPf
g+D3IPg9CH4Pgt+D4Pcg+D0I/tPAfxr4TwP/aeA/Dfyngf808EMA/BAAPwTA
DwHwQwD8EAA/BCA//ZCffshPP+SnH/LTD/nph/z0Q774IF98kC8+yBcf5IsP
8sUH+eKD/fPC/nlh/7ywf17YPy/snxf2zwvr2RtX17M3rq5nb1xdT4o3Wavr
SeMt1ur87Lg6Pzuuzs+Oq/Oz4+r87Lg6Pzuuzs8GXgp4KeClgJcCXgp4KeCl
mOdxH+KRJp5HeTog3mRNPHW8xRrmJ2B+AuYnYH4C5idgfgLmJ2D/gGcDzwae
DTwbeDbwbAH5KSA/BeQn89R4zk8B+SkgP2F+Xgn+k+A/Cf6T4D8J/pPgPwn1
RUJ9kVBfmKfGc32RUF8k1BcJ9VNC/ZRQP6W6nn4J9VNC/ZRQPyX0Bwn9QUJ/
YJ4az/1BQn+Q0B8k9D/YPw32T4P902D/NNg/DfZPk9DfmUca+jvz1Hju7xL6
O/NIw/cL5IsO+aJDvuiQLzrkiw75okv4PmMeafg+Y54az99nEr7PmEcavj8h
P0OQnyHIzxDkZwjyMwT5GZLwfc080vB9zTw1nr+vJXxfM480nB/ADwb4wQA/
GOAHA/xggB8MCecj5pGG8xHz1Hg+H0k4HzGPNJz/wH9h8F8Y/BcG/4XBf2Hw
X5h57vmTeaThfMs8NZ7Pt8xTx/P5FvweAb9HwO8R8HsE/B4Bv0fA7xHmufcH
zCMN9xPMU+P5foJ56ni+n4D6EoX6EoX6EoX6EoX6EoX6EoX6EmXeuQ1pa/zr
+fuV889+81n7Mve+ZGCnGLVi4yvDluTvRzrePlUf2ureP8xM8H3Hx1m97LJ4
onl82eza/H0G/Z69W3rnmU5x4P78FR3v5u9Dmio+GPK87sY3XlPvO365Llqn
VdW2Ti0ruL9wfj96Rayqvbl57XL3fmHNRfW+YMclUfzYzOo3vnTP4+mEeh+w
MSmurnvu2MoLRsH9gqOrb4npMuC7Ny7Ucjar5+TP/32yvLaEaJpktlRPNlqc
5b6b5t/rstrsUc/j8zL1ZtLnuwZF3fP79vx5nHQyubN7ZfIRXp+K4q0VL43I
n9+V83ayW0yfv2Xvtul6ixP+Sf487Pw/sRtiU+mRg7Njg////NrQJSprW4v7
n3k4pxd08fnSed+aLtFdGnt6XewhZ/5TD3eJ+z/L+paTxfy+O5cPjht9L5Cb
byecHxu6xfHyylBde1FuPvtuivK6mlF9Y0U8nz9fbEx8WFrk5Ienp0esqvq0
+dL7A/P3E7l4zt+mmuDXf4wpyuV7TZriC753iO/+vwXfEzS/PY2+7l8Pa9LZ
zz1dav/PrM8LC/b7S/RBufE/dtF68vtGHts37SuP26835fs5rX9Tc9IO6G5/
XHBBHN/SO3PCt0Ny8Zu71f6c2c/m+L+3H+w7VI7Lxl9PUD4U9GPKp359Tg2o
W12aqwdrb1K+8HpdjY3+vp76dT7fWFcOuF1y7C+3fy5Kcr+k/P5i9YmR9xOP
5t63v4d/d/Ihk9+H4omJS3sM6Sy/fVHtlxl/TdltlD6ZcPvxxjT5uaDfkt/O
H7qYfi89TDr15Kl2kVgyo8x7oiz3voYrar/L+HveWwcOTTns8tffIj9zPjRP
NO/cnRuWDi5xTe1vmfrh1jf+f4IN322rmhZx5td2LkH1rKB/UX3qaTs7oXX3
cIc/dT3XN96vB+Y2l8ytd/vBkStUbwv6E9VP0lQv/wPMAJLH
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
d75JzIaM0zX+D+zBfGM=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlMdzDVAUxu818cyIQchghUSitwieRElEgogSiRo1T3tREiXa/8YGC1bY
YJiJMqMtlAViRv19c77Fb9533zvtnnvOqykN9QyOSSntgwo4lFN6w+cLfYcu
wzf0LziPboNj6OOwCX0ORtFf4ST6MLxFv4Mj6BPwKUWM0+hTOWw/Kga6P4dW
zoOKncNXPiX0Viih+2ELeic8QN+FHbZ/j34FRx3/C/qH61H+zylsSs73IYWN
8stHvi9dr+6suz+HPvSBHL89g/3oeqhCT4cF/n0kxZ1192EYBwW4DBdhgs9X
YAnUYbsIFqMvwViogKvu9/cUNatfeo/XKWpWf5bl8F0BS9GzYTx6MtShF6pG
9CzlQDfDBnQ7rHX9M9BTYC56FRRT2BR9XoNugJXoBliewkbnJmhFN8PqHDmU
SzHn5+iJejPT51qfq1zfnBy1ToJ5qg160NthvXJDS4oaiu5hwT28kaNm1V4J
NY43ze9R6/srt3qsXstGtuqRenUTJvqNhh1TsafCNb9Hpb/T2/XAE3yfQi96
F9xHP4RudFeOWbynO6DboU9v5f3YqBlJsTNttr+NvgXbciB9x/Os+ZZWDuXq
yLFrZ2Azejc8SrED3a5ZtVfDdedTbvW01ftTRg9Ap+Npl1Sjam0UmkXPk3Io
V9n7pt81a02aOc2CepxiJhpcj3qhHqlX+o/Qf8VvuIAegD/ov7oDegj+oX/C
Wc+zctd7H/R/ot2Vz4B3pmCfQfsrlnZGZ8VQrFHH35vjrUa8r3vgcYqe9Xof
OpJnTLOmO6R4o1b7a9flI1/NuGa90ffXjGpWFWNdjp3SbnX5rHmWVswWv0m1
Z06z9x8Tkogg
           "]]}]}, {}, {}, {}, {}}, {{}, {
        GrayLevel[0], 
        LineBox[{295, 291, 290, 292, 288, 289, 294, 293, 297, 296, 299, 298, 
         301, 300, 303, 302, 307, 306, 310, 313}, VertexColors -> None], 
        LineBox[{304, 305, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 
         320, 321, 322, 323, 324, 325, 326, 327, 328, 329}, VertexColors -> 
         None], 
        LineBox[{332, 331, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 
         343, 344, 348, 349, 350, 351, 354, 355, 358, 360, 364, 365}, 
         VertexColors -> None], 
        LineBox[{346, 342, 347, 345, 353, 352, 357, 356, 363, 361, 359, 362, 
         367, 366, 371, 368, 369, 373}, VertexColors -> None], 
        LineBox[{370, 376, 374, 375, 377, 372, 370}, VertexColors -> 
         None]}, {}, {}}}, VertexColors -> CompressedData["
1:eJzVWWk8ll/QliUqEREpkexaUAnlf0pSlooUKVISJWUJLSrZZUvZ912yE6KQ
fUmibBGJEB7Pc1eytMg70/f3+/t+8nP9xtznzJm5Zuay0dz22AVmJiamm0uY
mFjgJ3/T1OZbUpOE7/S+Dl65arKPu/iKIFs9+b+G65X8iOvRo0jZvI14/ioG
8VPKFU2s7yHWwf3fOy0pEiEttX3gFIPwv4kbv2n3nhgN83LfOESRUPp7a/sf
dGLp9OjOQ88eUh1zsP4yD0Xaxxlvq1TpJNEq5cXA+y4i0HReo3mRQd5t/m2o
sThFvqbMVPYe7SL5TCGzj1gpUtdzc8yam05ODXz/yunURX4Ge5W8EaPIx9aW
EUsnOnFcXjM4bdZN8rzElxt1U6TvGPOphOcU0TxcH08xj5HiUdNltAqKdAvu
DHpWTBGOyAUOBZ4JUrCZN+RVRDeh75EfOvXiI+l8/kNrQpFBipxv93+to8iX
gx56F8MoojexNUJHdYDUiEVpc8RQpNPJe+T7coq02g9xcC3tI9XxQY70KIo4
WH9/q8xOEXEnLbcbC73kVV1TmRn4cXlpMqwQSpEb4tJmQ5X9ZEOdH6+wBkUK
OjNcvttSpNb3UTDLAzqRteyXqrg2TLZ+dKi9YTxKPpcaZb0qYZAXFpfWX/QB
v2YtXZsTKFJTSzTCI6fIHoUKJu8OilypuSsaVUQRv+ESZbP2EeK5m+3S8BOK
hCvwnOBUo8jxtDHuazf7SNEebnFud4iPn4NOMfj9csc8i02jl5iETcSG11Jk
/tKVMo9HFNH1Y40eWN1P6llWzAdMDREDXfWDpbQRslIteZtkNoNUbLFXiZ9i
kJoZZ6eCrXCuxbb5DZsYhCPwXZZ3DUU815wxTXhGkUOOX2w76saJkSAXx4V2
iogtCjC+5FBEI/eTzTuXz4S3lc34YiPErW0lU140Rf52ZFpqGgySb7HDO9ZC
3ObNl62MCaGI0oM+lUn3fhKwNmuYB3CFSk0Lf8Dfufxyzb/dT5RGvjlJuNJJ
wt0YbzVBBunel1BWWU0Re3d9H7mHFLl1PfyiUgpFrnG+d2iapRE/p4Ee4TaK
KK/MVu0sp8hAUZiY3I8v5Ii1T5XnOzh3YOmIQyFFzrlnci2aj5DcwpP+s60U
iRHZebcogyLrvML8pOGd1Jx9nzPDvfiVw7P44V6+V9bXLz32mdi2U4qv4e+b
CpP1NhRQZBf39Xu3myfIKSNv37kuBumrmGl9LQz5y1yc6qzFINZVF4+/T6KI
hcdw5rpMinh/eWtqOzxJIn6Uyu9+TZGrUfMNyS8oEtfk5P1n0zihXo3WDkGe
s7Mb8TYBPq/atYKmNkZC1bWefe2iiLpg/526MoqoiOkeu9ozSrjCvJ6zw/ll
Smin58D+1jTVUrlmnPyy4Ll8WZsiR34kOaU7UmR23Z9RQ086OflQr2n2ALyT
gFODgT1FqqpuFQ7508n2rR7JdmkU0T9SvScyiyLExc/nQ/oksfi92HMa3l3v
gf/jQHj3txJvFaMaxwnLJa5NffBdrf+0zxyBOKcr7WgWWTZOCn0GgyfrKcK2
9pv6Ujhn0+XxzakB4+R1a3xHZCLg087+EZC/nIJLTDbMTZLjo0PRB5MY5OHW
aB+3WQY55c8jn57MILf9E3OEXCgin915fyaSIgx6ci9dgU6e1qyUWA3vLVDM
0hcH8aSNbOThejNJOB5wtEVA/ZtS9D2a8D7tPJyL0jETRHa8UuQHnHvry8Ob
9j6lyMnZKPoyxwmiu1R2+/PHFBk22Grul00RbWOv7dP3Jonsmty+gLsUOeAk
oeEBfBBfJRZqIkcnavdruXQMoT7+5jWEVjLI5J8LVOhGinD11B3o8gA+4k3x
LoyjiF3Ne7e2jinSvSzF0yAe3oMtTfox5tUTS4mq9TTy0rLmWCb8rkPfn0uH
7154LVRuZT9J9u4LW6+fSpHtr9sMN0L8d1OavjfKJkliUpl43QOKnMmRbElK
Bn7oHT/PyTVF+lw2+MsDTy73NwxJM6SIoxPTTrsmOjnIl7RF+iiDqHzr11Yv
YxA734emT7ZQRLXqW6ED8MxS4ywlBeCZY2eLW8Yipkh1z3/X3IHfwuNH9j5J
p0iedN+BEBsaeRcuE50H9zm3n//seThv433FDBMpGjkZLi6iCLx5401H2Cc4
767o8r5VRTQS9y1ug8A9yONIwSOSsXDf4vLQbh46UfBedfDebwbZP+Gx8EqF
Ik6C+f70ZQwywxPxStKOQXSz/qsdeMsglPPItbYZBmHO+GVR4UcRuS1h+YGQ
L6djKiSNz02RH5qrLI+FU2Tnx5AWI8jTbw3Jp62SaMQini/uIOCEv+eEAeDp
ogcEhZJp5KtwuAVPALzv9UItIag/XWtFV0Md8LPfdtcuK3invxknROE7hyWG
TCMN6KT+5NfOz9CnJh5ZUauAVxOlDZ+4MjPI5ZKxLcWPgacn+1p04R576z5n
1EUwSFQ7Z58avMurm3nq1vAu44e8pyvWTBE1k3VPuOA8djfSmnbDeV4ay/5o
TqORX2xsOsHAaycGLrVuh7jlTvOeFm6jkRdp4nn+9yGfLQ4f4Ib7BvWOPtjk
NEWyos6e57ahSPPWzL0VgcBD6Wf5LujQyU1Nuat5mygyMde0sdaIInuO6fON
19MJyRMaF6UziGjcKI13G/B2ZUvNPjEGsVKsoUnBeSJG61U14Tx535kNpFJp
ZJARX/0U3t2142FqBby7jM4VcfNLNDKwc9p3O9hXxO7n0AH7/kHfXssUGqll
OpITCuc4yBFu9xziWT6arKihOEWUjzsG7YS+o+DfH7cU8uW4VNhiKWOKnJh9
esXlDEU21+76HAv1wdX6d/6sOZ2cDXNh3wHx5bu/VazFmiJWh2gCJdF0YvUm
Wxff+5vG5sZHwA/crG8sBoAfBJdO3OeC+LoHh/MrQr1/eVzye+rjJEmu4Gt8
CPWV8C7qSxXkp42B2MlSQRoxCeX5PBhBkSW9JbJ/4Py+K8u+Z/nQSHZDyK9Z
eK+fCSXtJeDv6fWnk9XLp4jkFiNJmi/w8tCz4ddQF6zlBzh8XafItlIlQ2NP
yOPdupsm4F6bBW361VumyH4p/gMP8yjiY9J8ugl+3rK7+YF1cYKofImiz8Lv
ccyRF77DTz3NPmG7+Qmi5TNL54X+0Whqe74qF+KpN/HGSHqSUCEvZU7CuWU2
hRS1AA+kO/oYlTlPkt05fYe2A7+1D10Wz4L7tsdvu/KzZZLUdPcOjsJ95ei6
uZ/h7woLnqZqrqaRW/zn36lCvVVdjFBuBj5LvJ0XcZfQyK4ohksd9NOHq/PS
A0qBT0qVBnMSoL8cqtuaD/ijaq99noC/2Vug/zdxnIj6agQmA8+HOgyPZAJf
XpaYO8dWO05CmGzl419SZCQy7N7lEoqsviZzlW1mnFRfeWrgC7x/W/TFoDjw
brXK4B0p6Qmy/tN7Bg/MZ3vrouRFYW7ZLqNeNas3QdyycifC4Xv/SQQ4egAP
Tz1JELx3aYIkfVWumYZ+1+LfGsSA/uW+vt/r4YExUum1t3sR8D2ORhYc8J3M
su2yRdpjRM86Kf9ID/BgyyxnAeD786Y6VW3GiGZHqsZzwGMfaEhGwDw432q9
cj5qjASYrVTZ9B7iGLk65XolRWwTPpRFNIwR9Z8dbo6AdyZ+uysB91tikscq
NTFGLrzzN0sFfMj24id/wEVYtL7fWxgjhXMjvyJbYJ5wDN2bBu/DyZsTk28/
RJ7fpskmAR60s662BHBVxvpGOachckzC5lY94Fy841dYod7d6NtnYjyHyJOA
0JwfgFdve2B+CfBkIdMzOZFDZOCW8NqNMA/0m4tcaAK892DNruCsIZIkaiW2
H3DW2lkFHsjn/yjjDxzPh0hLXtmUIeBnqvW8kWdM+LUnHGqGSM/GFaPjUP9C
FgKGUUl0Unb8clRVfTf5y2vOslyeIkVBXiuXJdNJpufkZHVDN+ERbfnoAbjS
/jmh1BQ6KRS8+dTxVTfpbvsTvkEB5oSbRcy5aXTyOmdru2RbN2mIdRl8Anhd
lu17j8d0ckQ9b+FsRzc57Lg5iV8R3r3f4QSVQSdXr/Erp3d3kxhLkVoDwD0F
pmlVT+gkf1x3zvd99/+5Peh/w4dMHwhOQDxFrT6yREM8ixm5MjUQzxm+0zHL
IG4hc7G57BDPv7VPaiohnu+UC+vdAGee2skeB/FcuuaqpQXEM8hf4fdaiNuV
sN/O8RDPmaHEJSwQT8eEK1VZgFuLNG71g3jONzqE20I8J3ZKrRSAuGnn7dn4
A+J5XJFHowDi+WEgRusY4Hw1bt9fQDxfSci434F4Rv0J/Y75mUt7vRXzM/k2
jTcH8vPV668ymJ/PWLKrMT995HxMMD9Nut8kYH4Otn2swPwsTTHvy4L8dM09
moz5OVfpqI35qbqiNSQD8lPs6pA65udfc8dKzM9s/qyfSZCfOzNK1mB+hsjN
CmJ+SjIt/8wC+blk6Z8izM9b5wW4MT+fHFZTOg35mSJo/QrrvVzSIBHr3TnJ
fUkY1PtVaZ1+rPeVgfvtsd7FHZtflEC9W8oVxGC9F9Zv+ZQPuBbLF7oC1HuZ
cMMWrHcBhvFMONT7sR6Z4wyod+m4YBms95yz025Y70XLpMUfQr2PHXoehPW+
6qtvNNb7mN+Le5uh3k+2uuhgvUcxuxZjvb+bibS+AfW+LDTOFfmzh21nBvJn
jZBcMvLn3f298cifussHbZE/NxrtWDUH/LmhdXQ6CfgzW9c5Dfnzt2LRUW7g
zwddc4fjwK/AWUoM+bOL9ZAAH/Cn9g76AeRPjW8cfcif7CMS5tLAn74CsfPI
n9X7UnYgf3LkXN+A/OlOrMKRP/ezrj+G/CmRUX/bC/hz9dy+3diPdmmUGWE/
YovXvcsG/Whixdty7EfLAi7rYz/SnDbUvAb96O3cwtLV0I8+LGm+gv3onZOw
vCH0o6g3L/ZhP3p88G4l9qO2OfZXz6AfaSyWaGE/clto+NePZI2mzmA/krYe
p8agH2mHtG4Ygb/LLGDh2An96EqI/XHsR8HP3FmxH3mVjFR6Qz/yil3thv29
LbmnH/v7pV9mTH3Q34kt/1Ps7yE6cZLY3+PqTfQnob/nUS+ksb/PtG1Ix/7O
y38qsgb6+7kPZdyfoL+fPb9VDfu7YVIy1xPo7199TZfOQX8v9g/vwv5eZ2Ek
hf2do9GfbxL6+yEtV3vs7x3R1dVR0N+pq2IS2N/PhjBxY39/1vlqmSb097E3
sTukYf6xsho7ifPShZXJMWIwL73kczyI89KSQU4HnJdO+3CttIZ5yVf9VQnO
S0anldfhvKRc/n7oPMxLd76u/4vzUmks0yOcl3g7rs79B/OSyMoUSZyX2KUZ
DjgvTdqsK30J89LN2ZvyN2FeWtNdtCsG5iWpe/q1FjAvmdbkXcZ5qXd4wgbn
JZke3avFMC/d/M5+HufPofbrPDh/fj3w63E9zJ+7v9nn4fwpdU2jBeuudE7E
H+fP11PKqTh/1gse/o7z5/BsVagAzJ/72UfKcf7srvyjjfPn6ahV2WIwfz42
uxO5CubPAM3tUpVwD1m3jcvOw/xp/EZbNBvmz+1OjMwqmD8LE2Sz6TB/pq19
zSMG82f8jcnm1cCXT/iGXhGYP3PExaJwnmcxkWzA99eYvNhwAub5NXqTzjjP
S3b5v8N5Pme5iYYlzPPis2/NcZ6Xu/NSDed598iWAWGY5+mSK1Rxnt/bIKSM
8/zVz2p7jWGeP+GRt1UJ5vnB7zuDReA7ve3sG6Jhns827C7AeX7gnUoXzvOX
RatHcJ535w6weArz/MhAjbMOzPPs0rx5jTDPH/z6bAr3I7sbD47gfvQiX43r
M+xHS/fd+g/3I78bvHK4H222PZUfDvtRlu9PH9yPTAYenMT9yM0mrssU9iPm
J0YLCrAf6UT1+uB+ZLw4unw17EeJx7xkcT9irmM1wP3Iq8qprQv2I0eOxRpX
OIdgL2sM7kc1lf9dZsB+RAWtoonBfrSgVTfYB/tR5VEt5m7Yjy7R2gjum+q3
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
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Alpha]\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-7, 2] Pi, -10.995574287564276`], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"7", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-5, 2] Pi, -7.853981633974483], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-3, 2] Pi, -4.71238898038469], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
          FormBox[
           RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
          FormBox[
           FractionBox["\[Pi]", "2"], TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[Rational[3, 2] Pi, 4.71238898038469], 
          FormBox[
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[5, 2] Pi, 7.853981633974483], 
          FormBox[
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[7, 2] Pi, 10.995574287564276`], 
          FormBox[
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     FrameTicksStyle -> Directive[6], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram lg(Self-Kerr/3rd)\"", 14, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
      0.30000000000000004`, 0.9}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -76.85643564356435}, 
                    Offset[{4., 0}, {7.5, -76.85643564356435}]}, {{
                    7.5, -32.301980198019805`}, 
                    Offset[{4., 0}, {7.5, -32.301980198019805`}]}, {{7.5, 
                    12.252475247524753`}, 
                    Offset[{4., 0}, {7.5, 12.252475247524753`}]}, {{7.5, 
                    56.80693069306931}, 
                    Offset[{4., 0}, {7.5, 56.80693069306931}]}, {{7.5, 
                    101.36138613861387`}, 
                    Offset[{4., 0}, {7.5, 101.36138613861387`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -110.27227722772278`}, 
                    Offset[{2.5, 0.}, {7.5, -110.27227722772278`}]}, {{
                    7.5, -99.13366336633663}, 
                    Offset[{2.5, 0.}, {7.5, -99.13366336633663}]}, {{
                    7.5, -87.9950495049505}, 
                    Offset[{2.5, 0.}, {7.5, -87.9950495049505}]}, {{
                    7.5, -65.71782178217822}, 
                    Offset[{2.5, 0.}, {7.5, -65.71782178217822}]}, {{
                    7.5, -54.57920792079208}, 
                    Offset[{2.5, 0.}, {7.5, -54.57920792079208}]}, {{
                    7.5, -43.440594059405946`}, 
                    Offset[{2.5, 0.}, {7.5, -43.440594059405946`}]}, {{
                    7.5, -21.163366336633665`}, 
                    Offset[{2.5, 0.}, {7.5, -21.163366336633665`}]}, {{
                    7.5, -10.024752475247526`}, 
                    Offset[{2.5, 0.}, {7.5, -10.024752475247526`}]}, {{7.5, 
                    1.113861386138614}, 
                    Offset[{2.5, 0.}, {7.5, 1.113861386138614}]}, {{7.5, 
                    23.391089108910894`}, 
                    Offset[{2.5, 0.}, {7.5, 23.391089108910894`}]}, {{7.5, 
                    34.52970297029703}, 
                    Offset[{2.5, 0.}, {7.5, 34.52970297029703}]}, {{7.5, 
                    45.66831683168317}, 
                    Offset[{2.5, 0.}, {7.5, 45.66831683168317}]}, {{7.5, 
                    67.94554455445545}, 
                    Offset[{2.5, 0.}, {7.5, 67.94554455445545}]}, {{7.5, 
                    79.08415841584159}, 
                    Offset[{2.5, 0.}, {7.5, 79.08415841584159}]}, {{7.5, 
                    90.22277227722773}, 
                    Offset[{2.5, 0.}, {7.5, 90.22277227722773}]}, {{7.5, 
                    112.5}, 
                    Offset[{2.5, 0.}, {7.5, 112.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -76.85643564356435}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -32.301980198019805`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 12.252475247524753`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.80693069306931}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 101.36138613861387`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.6666666666666665`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.308746, 0.441842, 0.940894], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2058306666666667, 0.29456133333333334`, 
                    0.6272626666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.308746`", ",", "0.441842`", ",", "0.940894`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.308746, 0.441842, 0.940894]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.308746, 0.441842, 0.940894], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.935699, 0.951565, 0.993729], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6237993333333334, 0.6343766666666667, 0.662486], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.935699`", ",", "0.951565`", ",", "0.993729`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.935699, 0.951565, 0.993729]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.935699, 0.951565, 0.993729], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.995282, 0.992317, 0.727853], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6635213333333334, 0.6615446666666667, 
                    0.48523533333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.995282`", ",", "0.992317`", ",", "0.727853`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.995282, 0.992317, 0.727853]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.995282, 0.992317, 0.727853], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.955963, 0.863115, 0.283425], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6373086666666667, 0.57541, 0.18895], FrameTicks -> None,
                     PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.955963, 0.863115, 0.283425]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.955963, 0.863115, 0.283425], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6028180000000001, 0.438666, 0.161198], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.858405, 0.449932, 0.203562], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5722700000000001, 0.2999546666666667, 0.135708], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.858405`", ",", "0.449932`", ",", "0.203562`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.858405, 0.449932, 0.203562]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.858405, 0.449932, 0.203562], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.5645984789187724`"}], ",", 
                   "6.455556700025439`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.738012068666*^9, 3.738058412704*^9, {3.738059624211*^9, 
   3.738059663867*^9}, {3.738060082033*^9, 3.7380600947790003`*^9}, 
   3.738060127388*^9, 3.7380603366*^9, {3.738060418663*^9, 
   3.7380604675620003`*^9}, 3.738060504355*^9, {3.7380605860039997`*^9, 
   3.73806063474*^9}, 3.738060673535*^9, 3.738061569402*^9, 3.738061603573*^9,
    3.738061641546*^9, {3.738062926834*^9, 3.7380629431610003`*^9}, 
   3.738063342117*^9},
 CellLabel->
  "Out[592]=",ExpressionUUID->"fa0fad37-ffc7-448a-9ade-92a85639de36"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fix \[Alpha], Varying \[Beta]", "Subsection",
 CellChangeTimes->{{3.737979305699*^9, 
  3.73797934009*^9}},ExpressionUUID->"61b5a43c-801a-44c4-88eb-eaecfbb476f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["hereH", "arm"], "=", 
   RowBox[{
    SubscriptBox["listH", "arm"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]list", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0.25", "i"}], "+", "3"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]listname", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<\[Beta]=\>\"", "<>", 
      RowBox[{"(", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[Beta]list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ip", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "4"}], "]"}], ",", "20"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7379793500699997`*^9, 3.737979373448*^9}, {
   3.737979404736*^9, 3.737979604362*^9}, {3.737979685738*^9, 
   3.7379797449849997`*^9}, {3.737979776826*^9, 3.737979780689*^9}, {
   3.737980744642*^9, 3.7379807663450003`*^9}, {3.7379808270030003`*^9, 
   3.737980907818*^9}, 3.737981021866*^9, {3.73798113865*^9, 
   3.737981150241*^9}, {3.737989040266*^9, 3.737989067513*^9}, 
   3.7379893476029997`*^9, {3.737989655491*^9, 3.737989664617*^9}, {
   3.737990602637*^9, 3.7379906235299997`*^9}, 3.7380095625220003`*^9, {
   3.738010320074*^9, 3.738010332203*^9}, 3.738066122314*^9, {
   3.738066165369*^9, 3.738066188115*^9}, {3.738066561083*^9, 
   3.738066639698*^9}, {3.73807550821*^9, 3.7380755582349997`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"d29eadb8-faca-4e3d-bbcd-3fd41aa0c9c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.`", ",", "3.25`", ",", "3.5`", ",", "3.75`", ",", "4.`", ",", "4.25`", 
   ",", "4.5`", ",", "4.75`", ",", "5.`", ",", "5.25`", ",", "5.5`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.737979590182*^9, 3.737979605093*^9}, 
   3.7379799376470003`*^9, 3.737980769958*^9, {3.7379808334119997`*^9, 
   3.7379809129960003`*^9}, 3.737981151782*^9, {3.737989053148*^9, 
   3.737989068164*^9}, 3.737989666468*^9, {3.737990610238*^9, 
   3.7379906242539997`*^9}, 3.737996617967*^9, 3.738009571535*^9, {
   3.73801032406*^9, 3.738010333778*^9}, 3.738012068856*^9, {
   3.738066183777*^9, 3.738066188835*^9}, {3.738066570666*^9, 
   3.738066640505*^9}, {3.73807554184*^9, 3.738075559314*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"3e7dbdb8-e7ca-4092-9d88-ca2f468dc1d3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt3", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Beta]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t3", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"zt", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"res", "=", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    RowBox[{"Hn", "[", 
                    RowBox[{
                    "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4",
                     ",", "0", ",", "\[Phi]ext", ",", 
                    SubscriptBox["hereH", "arm"], ",", 
                    RowBox[{"\[Beta]list", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]2", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]3", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]4", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\[Phi]1", ",", 
                    "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "}"}], "/.", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "ip", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"zt1", "=", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\[Phi]ext", ",", " ", 
                 RowBox[{"zt", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "}"}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]ext", ",", 
             RowBox[{
              RowBox[{"-", "4"}], "\[Pi]"}], ",", 
             RowBox[{"4", "\[Pi]"}], ",", 
             RowBox[{"\[Pi]", "/", "5"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", "\[Phi]ext"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"listt3", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt3", ",", "t3", ",", "j"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\[Beta]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737979789572*^9, 3.73797985813*^9}, {
  3.7379798947539997`*^9, 3.7379799328900003`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"4efba044-d2a3-4eb6-8c4e-07628b6b508e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt3.txt\>\"", ",", "listt3"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738059162538*^9, 3.7380591645769997`*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"b51afc67-3eca-4b5e-8af5-847cf48d8bff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"listt3", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "All", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "listt3", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Total Flux\>\"", ",", "\"\<Energy\>\""}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.73797996865*^9, 3.73797998721*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"341762ae-b1e9-44e3-a221-be614060e88e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHwps7526VOeLAFXcrxuOB+oHb
H64WcDMecfjTV5A6dZ7agVAVtlU/Gw47vNvPlvcoRvXA0+tSHHV5hxwefJhT
pi+tcsAq29OoXeqgwyVF4/qam0oHkg+o7/thtd/hSNDJ9pPTFQ9IC27ddEVk
j8O25vgJYmEKBxj2fpG2vb/DISDzteFxDbkDVya3dW5dv9XB5LS4c+JS6QNZ
x25XHJy2yQHiPskDJ2UeZh1zWg91j9iB0t3XF5luWQm1X+TAg7VbZMUnL4Ha
J3hA2l/19Mzb86Hm8x244byCd8+C6VDzOA/MTFgtO79zAlQ/ywE2aVu3St9W
qPp/+93bWf2VRSug8l/2s76uvipWnQrlP9kvpx9ZUNjm6sAABfyzDU5eeedh
C5W3N4PKQ/Xb80L1Q823d0Yxn8WBFWo/1H0Oc6Dug7rf4TbU/VD/OUhC/Qf1
vwPM/9DwcSiBhg80/BzOQMMPGr4O2dDwhYa/wzVo+EPjx4EJGj/Q+HOAxR80
fh2SoPELjX8HG2j8Q9OHAyx9QNOPAyz9QNOXwx1o+oKmPwdY+gMAMScsBA==

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHLCR1kx+5HXHgirsV4/FA/cDq
BLYbikpHHP70FaROnad2IFSFbdXPhsMO7/az5T2KUT3w5LoUR13eIYcHH+aU
6UurHLDK9jRqlzrocEnRuL7mptKB5APq+35Y7Xc4EnSy/eR0xQNSgls3XRHZ
47CtOX6CWJjCAYa9X6Rt7+9wCMh8bXhcQ+7AlcltnVvXb3UwOS3unLhU+kD2
sdsVB6dtcoC4T/LAKZmHWcec1kPdI3agdPf1RaZbVkLtFznwYO0WWfHJS6D2
CR6Q9Fc9PfP2fKj5fAduOK/g3bNgOtQ8zgOzElbLzu+cANXPcoBZ2tat0rcV
qv7ffqd2Vn9l0Qqo/Jf9nK+rr4pVp0L5T/a36EcWFLa5OjBAQW1yolPeVQtb
qLy9FlQeqt9eBqofar69J4r5LA4w+6Huc5gBdR/U/Q4w90P95wDzH9T/DjD/
Q8PHARY+0PBzgIUfNHwdYOELDX+Ha9Dwh8aPAyx+oPHnIAONP2j8OiRB4xca
/w420PiHpg+Hp9D0AU0/DmHQ9ANNXw5roOkLmv4cYOkPAG16KEU=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDiamond]\"", FontSize -> 10.88, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoH1jKLzLFNOuLAFXcrxuOB+gHR
hEP73xgdcfjTV5A6dZ7agVAVtlU/Gw47vNvPlvcoRvXA0+tSHHV5hxwefJhT
pi+tcsAq29OoXeqgwyVF4/qam0oHkg6o7/thtd/hSNDJ9pPTFQ9IC27ddEVk
j8O25vgJYmEKBxj2fpG2vb/DISDzteFxDbkDVya3dW5dv9XB5LS4c+JS6QMZ
x25XHJy2yQHiPskDZ2QeZh1zWg91j9iBkt3XF5luWQm1X+TAw7VbZMUnL4Ha
J3hAzl/19Mzb86Hm8x247byCd8+C6VDzOA/MSlgtO79zAlQ/ywE2aVu3St9W
qPp/+73bWf2VRSug8l/2s7yuvipWnQrlP9nfoh9ZUNjm6sAABWIynLHy3Ia2
UHl7L6g8VL89TD/UfHtPFPNZHJig9kPd5zAb6j6o+x1uQt0P9Z+DJNR/UP87
PID6Hxo+DqXQ8IGGn8NZaPhBw9chCxq+0PB3uAYNf2j8ODBB4wcafw4y0PiD
xq8DLH6h8e9gDY1/aPpwgKUPaPpxCIOmH2j6chCDpi9o+nOApT8AMMAoEw==

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledUpTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHArkTHRwKjzhwxd2K8XigfiB9
HqOYjtkRhz99BalT56kdCFVhW/Wz4bDDu/1seY9iVA88uS7FUZd3yOHBhzll
+tIqB6yyPY3apQ46XFI0rq+5qXQg6YD6vh9W+x2OBJ1sPzld8YC04NZNV0T2
OGxrjp8gFqZwgGHvF2nb+zscAjJfGx7XkDtwbXJb59b1Wx1MTos7Jy6VPpBx
7HbFwWmbHCDukzxwVuZh1jGn9VD3iB0o3X19kemWlVD7RQ48XLtFVnzyEqh9
ggck/VVPz7w9H2o+34Fbzit49yyYDjWP88DshNWy8zsnQPWzHGCXtnWr9G2F
qv+336ud1V9ZtAIq/2W/8Ovqq2LVqVD+k/3SBpEFhW2uDgxQMNutTrA+wtcW
Km+fqw+Rh+q3Z4Xqh5pv74liPosDC9R+qPscZkHdB3W/w02o+6H+c5CA+g/q
f4cHUP9Dw8cBFj7Q8HOAhR80fB1yoOELDX8HWPhD48eBCRo/0PhzkIXGHzR+
HWDxC41/Bxto/EPTh8NTaPqAph+HMGj6gaYvB1j6gqY/hyBo+gMAI7Ulsw==

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDownTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHYh4nJTwqPeLAFXcrxuOB+oHK
eYxiOmZHHP70FaROnad2IFSFbdXPhsMO7/az5T2KUT3w9LoUR13eIYcHH+aU
6UurHLDK9jRqlzrocEnRuL7mptKB5APq+35Y7Xc4EnSy/eR0xQNSgls3XRHZ
47CtOX6CWJjCAYa9X6Rt7+9wCMh8bXhcQ+7AtcltnVvXb3UwOS3unLhU+kD2
sdsVB6dtcoC4T/LAWZmHWcec1kPdI3agbPf1RaZbVkLtFznwYO0WWfHJS6D2
CR6Q8Vc9PfP2fKj5fAfuOq/g3bNgOtQ8zgOzElbLzu+cANXPcoBN2tat0rcV
qv7ffrd2Vn9l0Qqo/Jf97K+rr4pVp0L5T/b76EcWFLa5OjBAwax2YSHb2yG2
UHn7Tqg8VL89K1Q/1Hx7bxTzWRyYoPZD3ecwE+o+qPsdbkHdD/WfgyTUf1D/
OzyE+h8aPg6F0PCBhp8DLPyg4euQAw1faPg7XIeGPzR+HBih8QONPwdpaPxB
49chCRq/0Ph3sIHGPzR9OMDSBzT9OIRB0w80fTlUQNMXNP051ELTHwANnimo

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyCircle]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHdHRTEh6VHnHgirsV4/FA/UD1
PEYxHbMjDn/6ClKnzlM7EKrCtupnw2GHd/vZ8h7FqB54el2Koy7vkMODD3PK
9KVVDlhlexq1Sx10uKRoXF9zU+lA8gH1fT+s9jscCTrZfnK64gFZwa2brojs
cdjWHD9BLEzhAMPeL9K293c4BGS+NjyuIXfg6uS2zq3rtzqYnBZ3TlwqfSDz
2O2Kg9M2OUDcJ3ngrMzDrGNO66HuETtQtvv6ItMtK6H2ixx4sHaLrPjkJVD7
BA9I+auennl7PtR8vgO3nFfw7lkwHWoe54FZCatl53dOgOpnOcAobetW6dsK
Vf9vv287q7+yaAVU/st+qdfVV8WqU6H8J/uVDCILCttcHRig4N05g+4aqQRb
qLy9ij5EHqrfXgeqH2q+vROK+SwOMPuh7nOYDXUf1P0Ot6Huh/rPQQ7qP6j/
HWD+h4aPQwk0fKDh5wALP2j4OuRAwxca/g7XoOEPjR8HRmj8QOPPQRoaf9D4
dYDFLzT+HWyg8Q9NHw6w9AFNPw5h0PQDTV8OsPQFTX8OsPQHAEi4KCg=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptySquare]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxVUkkohHEU/2wTiiIzlkE+uzLZHWSaZ42DSCglhoyyZDkQjVBicpESUhMS
ZUlKRsryPUwkcRAmHKw3JQcHIpny+w6+eoev93/v/TaxpqXY4CQIQoy9HOzl
aC8/TXbJlxjDyZpa/WO7ldwrbyry7qPYOOWgik210vdwq2FsKpJLwxVLn30H
9Copmh8rIvjZFuDa07xP92/mjjh1OKc15ieaAvboXEzq7b4OZT1H7X6kSWQt
PjYdT4gc6GVZu/DZpo3+qhFVWQgLO+9q7d0mFdW/JBxFB/Pl6OCQZdVCySe+
WdXzaq4/vO3cG1+jP3z+fBr40HCYuQo8Km7fss2mrC/ivg8/rKwH+Y7O4Z4X
+xdGnEzeTmO/J19nLXhsz0xgnxtP6peDpodGMO/MCrU2t6tgAO9/pAyTS2GY
shP9d8n7xXipMhrw/ywp48tb2wZzSMB3VSeOm6lSi75OH/fXx7xOg3ns12X/
2+9M8n3gIzPwAT/J+MGPZH7gT0/gD31I1gf60Rn0g77UBH2hP9mgP/whR/gD
/0j2D/5SDfyF/5QO/5EPkvOB/FAZ8oN8UTfyhfyRnL9fJMMoGQ==
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyDiamond]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHzHRTEh6VHnHgirsV4/FA/UDN
PEYxHbMjDn/6ClKnzlM7EKrCtupnw2GHd/vZ8h7FqB54cl2Koy7vkMODD3PK
9KVVDlhkexq1Sx10uKRoXF9zU+lA8gH1fT+s9jscCTrZfnK64gFpwa2brojs
cdjWHD9BLEzhAMPeL9K293c4BGS+NjyuIXfg2uS2zq3rtzqYnBZ3TlwqfSDz
2O2Kg9M2OUDcJ3ngpMzDrGNO66HuETtQvPv6ItMtK6H2ixx4uHaLrPjkJVD7
BA9I+6uennl7PtR8vgO3nVfw7lkwHWoe54HZCatl53dOgOpnOcAubetW6dsK
Vf9vv187q7+yaAVU/st+wdfVV8WqU6H8J/uD9CMLCttcHRigYOUd5g3davG2
UHl7A6g8VL89N1Q/1Hx7FxTzWRyYoPZD3ecwC+o+qPsdbkLdD/WfgwzUf1D/
OzyC+h8aPg5l0PCBhp/DWWj4QcPXIRsavtDwd7gODX9o/DgwQ+MHGn8OstD4
g8avQxI0fqHx72ADjX9o+nB4Ck0f0PTjEAZNP9D05QBLX9D05wBLfwBODCgv

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyUpTriangle]\"", FontSize -> 11.136, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHLHRTEh6VHnHgirsV4/FA/UDt
PEYxHbMjDn/6ClKnzlM7EKrCtupnw2GHd/vZ8h7FqB54el2Koy7vkMODD3PK
9KVVDlhlexq1Sx10uKRoXF9zU+lAygH1fT+s9jscCTrZfnK64gFpwa2brojs
cdjWHD9BLEzhAOPeL9K293c4BGS+NjyuIXfg6uS2zq3rtzqYnBZ3TlwqfSDr
2O2Kg9M2OUDcJ3nglMzDrGNO66HuETtQuvv6ItMtK6H2ixx4vHaLrPjkJVD7
BA/I+Kuennl7PtR8vgN3nVfw7lkwHWoe54F5Catl53dOgOpnOcAubetW6dsK
Vf9vv0s7q7+yaAVU/st+3tfVV8WqU6H8J/v/6EcWFLa5OjBAwedyvVfeVxJs
ofL2IgYQeah+e0uofqj59mEo5rM4MEHth7rPYT7UfVD3O9yBuh/qPwc5qP+g
/nd4CPU/NHwcSqDhAw0/h7PQ8IOGr0MONHyh4e9wHRr+0PhxYILGDzT+HGSh
8QeNX4dkaPxC49/BBhr/0PThAEsf0PTjEAZNP9D05VADTV/Q9OcAS38AXXYp
xg==
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyDownTriangle]\"", FontSize -> 11.136, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHLHRTEh6VHnHgirsV4/FA/UDt
PEYxHbMjDn/6ClKnzlM7EKrCtupnw2GHd/vZ8h7FqB54cl2Koy7vkMODD3PK
9KVVDlhlexq1Sx10uKRoXF9zU+lA8gH1fT+s9jscCTrZfnK64gEZwa2brojs
cdjWHD9BLEzhANPeL9K293c4BGS+NjyuIXfg6uS2zq3rtzqYnBZ3TlwqfSDr
2O2Kg9M2OUDcJ3ngtMzDrGNO66HuETtQsvv6ItMtK6H2ixx4uHaLrPjkJVD7
BA9I+auennl7PtR8vgN3nFfw7lkwHWoe54E5Catl53dOgOpnOcAlbetW6dsK
Vf9vf2g7q7+yaAVU/st+1tfVV8WqU6H8J/ud9SMLCttcHRigIN9Qbo9FXZQt
VN7+HVQeqt9eEaofar59OIr5LA7sUPuh7nOYAXUf1P0Ot6Huh/rPQQ7qP6j/
HWD+h4aPQyk0fKDh53AGGn7Q8HXIgYYvNPwdbkDDHxo/DszQ+IHGn4M0NP6g
8esAi19o/DvYQOMfmj4cnkLTBzT9OIRB0w80fTnA0hc0/TnA0h8AeS8oWw==

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHLHVTEh6VHnHgirsV4/FA/UDt
PEYxHbMjDn/6ClKnzlM7EKrCtupnw2GHd/vZ8h7FqB54cl2Koy7vkMODD3PK
9KVVDlhlexq1Sx10uKRoXF9zU+lA8gH1fT+s9jscCTrZfnK64gEZwa2brojs
cdjWHD9BLEzhANPeL9K293c4BGS+NjyuIXfg2uS2zq3rtzqYnBZ3TlwqfSDj
2O2Kg9M2OUDcJ3ngjMzDrGNO66HuETtQsvv6ItMtK6H2ixx4sHaLrPjkJVD7
BA9I+auennl7PtR8vgO3nVfw7lkwHWoe54GZCatl53dOgOpnOcAibetW6dsK
Vf9vv187q7+yaAVU/st++dfVV8WqU6H8J/uV9CMLCttcHRigQPSG/QyuR0G2
UHn7bqg8VL+9AFQ/1Hx7dxTzWRzYoPZD3ecwC+o+qPsdbkHdD/WfgwzUf1D/
OzyE+h8aPg5l0PCBhp/DOWj4QcPXIQcavtDwd7gODX9o/DgwQ+MHGn8OsPiD
xq8DLH6h8e9gA41/aPpweApNH9D04xAGTT/Q9OUAS1/Q9OcAS38AUuYoOQ==

         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 10475.768566629487`}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Energy\"", TraditionalForm], None}, {
        FormBox["\"Total Flux\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-7) Pi, -21.991148575128552`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "7"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-5) Pi, -15.707963267948966`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "5"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[5 Pi, 15.707963267948966`], 
          FormBox[
           RowBox[{"5", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[7 Pi, 21.991148575128552`], 
          FormBox[
           RowBox[{"7", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 10475.768566629487`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=3.\"", "\"\[Beta]=3.25\"", "\"\[Beta]=3.5\"", 
       "\"\[Beta]=3.75\"", "\"\[Beta]=4.\"", "\"\[Beta]=4.25\"", 
       "\"\[Beta]=4.5\"", "\"\[Beta]=4.75\"", "\"\[Beta]=5.\"", 
       "\"\[Beta]=5.25\"", "\"\[Beta]=5.5\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], FontSize -> 10.88, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDownTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #7}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], FontSize -> 11.136, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 11.136}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.14080459770114942`] -> 
                    Baseline)], #9}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDownTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], FontSize -> 11.136, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 11.136}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.14080459770114942`] -> 
                    Baseline)], #10}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledUpTriangle]\"", ",", "10.24`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDownTriangle]\"", ",", "10.24`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "10.24`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "10.24`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "10.24`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyUpTriangle]\"", ",", "11.136`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDownTriangle]\"", ",", "11.136`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.737979987962*^9, 3.73798100123*^9, 3.737981243068*^9, 
  3.737989186476*^9, 3.737989773428*^9, 3.737990619934*^9, 3.737996744398*^9, 
  3.7380098177320004`*^9, 3.738012192408*^9, 3.73806621171*^9, 
  3.73806672285*^9, 3.738075722442*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"4da0afec-8884-4f77-8aa2-88507135be32"]
}, Open  ]],

Cell[TextData[StyleBox["Find Derivatives",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.737974639395*^9, 
  3.737974721185*^9}},ExpressionUUID->"acd5f5b4-f454-43ae-9ff9-5cc9a52dc1ca"],

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt4", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Beta]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t4", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Phi]ext", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", 
               ",", "\[Phi]4"}], "}"}], "=", 
             RowBox[{"listt3", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "1", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                 "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"\[Phi]f", "=", "0"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"h0", "=", 
             RowBox[{"H", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"a", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]1"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]2"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]3"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]4"}], 
               ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "a"}], " ", "\[Phi]w"}], "+", "\[Phi]f"}], ",", 
               " ", "\[Phi]ext", ",", 
               SubscriptBox["hereH", "arm"], ",", 
               RowBox[{"\[Beta]list", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\[Phi]ext", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "2"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"ND", "[", 
                  RowBox[{
                   RowBox[{"ND", "[", 
                    RowBox[{
                    RowBox[{"ND", "[", 
                    RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]y", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]z", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                 ")"}], ","}], "*)"}], "\[IndentingNewLine]", "xyzvalue", ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"ND", "[", 
                   RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]y", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "4"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "4"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "24"}]}], "\[IndentingNewLine]", "}"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"listt3", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"listt3", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"listt4", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt4", ",", "t4", ",", "j"}], "]"}]}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\[Beta]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73790578819*^9, 3.737905817094*^9}, {3.737905928505*^9, 
   3.737905930734*^9}, {3.7379060343719997`*^9, 3.73790605558*^9}, {
   3.737915080697*^9, 3.7379151033570004`*^9}, {3.737915136238*^9, 
   3.737915163516*^9}, {3.7379152018859997`*^9, 3.737915204744*^9}, {
   3.737915262869*^9, 3.737915265118*^9}, {3.737917350358*^9, 
   3.7379173675039997`*^9}, {3.7379173983310003`*^9, 3.73791744863*^9}, {
   3.7379175632139997`*^9, 3.737917573197*^9}, {3.737917777321*^9, 
   3.737917812045*^9}, 3.737917948777*^9, {3.737917993009*^9, 
   3.737917995005*^9}, {3.7379212371359997`*^9, 3.737921270576*^9}, {
   3.7379213273640003`*^9, 3.737921437196*^9}, {3.737921468924*^9, 
   3.7379215051*^9}, {3.737977046237*^9, 3.7379770828190002`*^9}, {
   3.737980110692*^9, 3.737980157883*^9}, {3.7379801955550003`*^9, 
   3.737980252675*^9}, 3.737980657708*^9, {3.738009972591*^9, 
   3.73800997994*^9}, {3.738075579049*^9, 3.7380755839960003`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"24f345e3-2bd1-458a-9153-7edf41ef0bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt4.txt\>\"", ",", "listt4"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738058826803*^9, 3.738058853561*^9}, {3.738059114035*^9,
   3.7380591157130003`*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"b7e2c8d1-c766-46f6-858b-6c2c7e14c6fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"x2\[Beta]", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Interpolation", "[", 
       RowBox[{"listt4", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "All", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"xyz\[Beta]", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Interpolation", "[", 
        RowBox[{"listt4", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2y2\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x4\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.737980399297*^9, 3.737980422034*^9}, {3.73798937751*^9, 
  3.737989382521*^9}, {3.737990241724*^9, 3.7379902435150003`*^9}, {
  3.7380099892349997`*^9, 3.738009995106*^9}, {3.738075587834*^9, 
  3.738075592001*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"a9a70368-462d-4a8d-b969-1d83028c641c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x2\[Beta]", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}],
     ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"-", "4"}], "\[Pi]"}], ",", 
      RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<2rd\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"xyz\[Beta]", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "4"}], "\[Pi]"}], ",", 
       RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<3rd (xyz)\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2y2\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Cross-Kerr (\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)\!\(\*SuperscriptBox[\(y\), \(2\)]\))\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x4\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Self-Kerr(\!\(\*SuperscriptBox[\(x\), \(4\)]\))\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.737980454613*^9, 3.7379804581070004`*^9}, {
   3.7379805105299997`*^9, 3.737980511474*^9}, {3.737980592308*^9, 
   3.7379805960109997`*^9}, 3.737989403723*^9, {3.737989573363*^9, 
   3.7379895841610003`*^9}, {3.7379898316029997`*^9, 3.737989844057*^9}, {
   3.737989886571*^9, 3.737989889802*^9}, {3.737990252493*^9, 
   3.7379902562349997`*^9}, {3.73800987694*^9, 3.7380099033459997`*^9}, {
   3.7380100189969997`*^9, 3.738010036163*^9}, {3.738010174707*^9, 
   3.738010205932*^9}, {3.7380102365959997`*^9, 3.738010240082*^9}, {
   3.73801027562*^9, 3.738010290586*^9}, {3.738058544783*^9, 
   3.738058547483*^9}, {3.738074063484*^9, 3.738074128586*^9}, {
   3.7380756080439997`*^9, 3.7380756101140003`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"592d4a65-c83f-4b5a-b11c-55056473e671"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
PlfXW3t+NtRw5JKFaMoQu+g3ZP+VBWSWIvVPijKMfkr6zFvBgv/uYK4fkTIs
P4o41mvDAg9TbZ0nXCSY3L7g/pvKhKm9jznRfCQopez8cTaICZf3SIn4rCQB
z0qss8KTCae3c40fWkuCg28sO53OMQEkW2O/ypHgdfeBCjc1JpSKUAR6lEhw
W8FfMUOWCVqrnrtWqpBAx6QT6xRlAnmJfShqGwnUtL/prp9jwOqPF5a3U0iw
fu6KiWUtA4IGepw27iWBZWgV27KYAX+6D/ZwHyCBriij8fgTBkw3bMvrPEoC
I9LQN00qA65UcaTLzEgQVuwyKxXIgE+l6+6nWZKg3iJ/cekWA84U3p+NsCGB
gP8TobeXGdCTs2jnfo4E+4/qJCSeYsCxxzfazpwnwZ9F/b0mBxjQmPJhl7Ej
CSYsv+d+02ZAGb1BTPIGCbjH05O11jIg5Ta9ttiXqA98t/B6Omx0E9BI8ScB
n6Jxu1MhHaKv3U68H0wCplVxyEYOHYJtbT1ORRLxY9xsj/SlwxVjNWwxgQSd
0oKO/2nTQVu0JsKgnASjhRprQzOiIUdQZ46MSPAm22BakhkNZL4sB5FaEnCZ
BFnjgdGw8ffDPcMtJHixe/HBOfto+DNoM+U/QAL7jw4SczLR0JQ5Y1a3QIKL
3pHi6Yk0mGvgKeP5SwIhya4UrkgakMeILzcvGVrWIJx6hwYBJK0fpavJELlm
pOPEGRroc9zo+ZvI4KOZqxggSyPiG7j4VZ4M6+n+GzJEaBA7TL+gRiLDuwMZ
71dx0+CXbKFWxlYyLGfpLrI+UyE/frYr3oAo1+4+PpNLhfelfPpvjciwQzo4
ncKhwpp+iXTJA2R4fURjxVsmFa5s2OFOO0aGEXr7hl++VIjZaTz4ypwMl0g3
eu+4UqHB8uQ+IWsy6P49XXvyEhWUmbckQu3I8CHU14TPjApmhcF3ah3IUFl4
emrwABX8u5ifuZ3IME8a+rTGgOhftKjwzk0yxHZsfnNXjQpCGvWbSm+RgT88
8UOVIhV2H+8J+n2bDAMBgqcvSBH9P/xl4RpAhrcaWGGDIBXqcwQq8kLIIOAY
mBbJS4WfrZKkr+FkOJlz2sBlPgqUJ8mRm6PIwAyeP0ubjAKz1Tt/XqKTobsz
/IX/cBTc23zg7CM2ET/xUot9b6Ig76BV3cd4MtjXahwabI6C95cvbZVPIYN3
n0B8F2Gh+57Ms+lkOLiofeToYBToPQ5djsskg2Vx43Lityhwqmdf7Msmw6x4
uu0QFzE+vpId5i/IUHuQNqSxjgr3/OfemNST4ecBr0FHIyrkpqw0CGkmQ8it
+sX4o1R4h2/IqHlFhrMTnK+qp6mg90fXw6CXDBbDYjdMblFh1vu2pPY4Gbh8
lEesc6hw2X3BUk5QBbKtSutF1GiQczpUVUJYBRh+y2a1ejSYMZJYWimmAruW
U38/MaWBj6h66sxGFRAOVsVWXqXBw1z7/+pUVeAsa9LrTQ4NXow3+l07qAKl
eqLOlnrRwHOWnfnyvgqsdDA5U3+BDgf2KfvkPlCBDdW0sAwPOjxQe3YkjaoC
ae1rUXAYHdYtNM88iFEBv/DmUb08OmDsP/p2mSrQDKPXzRfocLTjYodAowq8
0Yyc641kAL1kJm2xRQXGJo/Al2QG9CX7eUy/VoGuoNxVw88YYH8jVrq/VwWi
3jrhnm8Y4L667WLOmAqIjwasUpJmQryx9oL5CgycBdbk8iYz4UmOFbtyNQbN
nMiYO/lMKFnno626FoMPDlzuhVVM6BmpuvFnAwbDB8c2WX9iwtqQY58yN2NA
Uxpbq6HEArlvrvfEtxH2Jp29oMkCdUuWzF0tDGx6nvYZGbLgEPmdlbk+Bk0R
ZXe4zrEgpP5K6/IRDGq9xc116Sxgqj90umyGwZOgyh/MZBaks54JdFliYO+6
gifqKQuqHOcg05aoP54YYlrNgvZX0u/FHDDQ/nLvwco2FrzXofj4XsZgrnyL
3KleFiwJhLwwu4nBilerBLMmWLDaOcus4hYGYoHt39N+sECqt3VKxRuD3wvh
wdgSCzDK9IPouxgwvvNGavOxYedj8c3LARi8UhRor1vNhv0iOxsuhWIQZHpG
sl+MDRaeNg6dERiwlTtUnDey4cKQL/ceKgZfrm1rDZBjg+uB1KTHDGL+Q4Yt
YiQ2+OfV7haLxaBlZ9fkps1soK4f77uTiIGMZu5ckjobkvxWe4ylYqARnljE
0mRDzpi6uFkG0d7i1W/cOmwoP2aWX/4EA/Lez5fe67KhufjWEZU8DBqkOyZU
d7PhrVzsBK0Ag1zDZYOP+mwYDy0PXSrGoNJFawu/ARt+Tw0pXyrH4I2DgTeV
sIA1b3UHIvx2fNqfsAQi2+rXYZASsWzVu4cNSpjpUkYTBpI6BzwfEu1pUq/H
ir7CYCOTKvlIjw0wR9W504lBmEP68gZiPMfsCrtGezA4YHdkdkybDecae11O
DBDrs8+yWkSDDde3L64pHyLm1xq27eEWNtyJkX1K/oyBfOFzXnsVNoRzGZnQ
xjH4WBwvEKLAhtjLF0cWJzGwpItwLUqxIbP9foDjdwxsed4WV4izoUg3W67j
JwZDqPpnC7E+3St/nMr4Q8xXWlGpep4Fn1wkf6/lVYWP27ZyHk2xYKZvF8Nn
hSr8CQisb/nMApGse6+Or1WFp2/0ZXtbWSArmn61TEIV5g/v+FCMs2DL7YaV
5I2q0DSTdrnzGQt2f5h4RJVRhR8B5neU01jw/9+PwdmXwp///X7sf7bhmDg=

          "]]}, Annotation[#, "Charting`Private`Tag$8380174#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt2nk4VN8bAHDJFkooIjtzZ0glVELui3zbCynaSLJUlLJkDxWJLDOMnRkj
W0jZl9xDWUplrSSkUvZIkpB+t+f5/TPzfJ5755z3vGfuOe95nqt49rK5PTcX
F5cp+fHve9/eVcYLiqqIemZeQjKGCXqlflMCcqoos8AibAtpdcWxVAlpVSSx
Z35CmLTs3eP7VSRUke2U56q8aCas+t00t0VMFTk5HitZQfrvuW1Z+CpVJHJJ
JVc9iglTbZlHDgqqIp0G5zLxSCYM6IsvO8mnipo3Vt8jIpjQnhNU6MStilhO
ybAlnAn1a6ZOei7RUNa2RNPzYUx4FGi94uY8DdVYQbpTKBM44y/KYmZpqCFK
ZnbzLSbEWumdS5+moXsplXIomAm3nuaKFnyjIQDOJ6lAJnhqrCOqRmnIS89e
yMCfCVYCP6XefKKhQ/rsh8OeTNjrbtf0uZ+GHj3RrHd1Y4LuQLv79x4aMspq
Od14mQkyFYWtwp005BpodKrPkQkrVWT9pVtpqOv3dnOWHROWosLVaC00NN1u
91vLhhyfo9Mt4yc09Il9N6jtKDm+zjeaZgQN+a3n/OwxJceHmwxYV9PQqV+y
hpX7mZApqaTnU0xDvu+u3pwBJjg2vZ8q4tDQqjOfmnxVyXi19qXVptNQCY8z
t54yE/akV+x/kUxDlWKVZ7pkmKB2LS5riEFDHpdeFCaIMOEbdviU3E0aCtmp
mOL/Iw48Q+qbws/R0B+uF2vPl8aB47SGR+IZGtqZtYpPtSAOrKzTlbJP0ZD4
k7ZHrZlxoLvNz7/egoZEHLmduhhx8OfLVq3fu2hI6cq5A+2ucXDTJDfNgUJD
eRbOlnupcYDCfUzlFWnInjqtzy8bB4vt+7m7ZWgIRVCPlInFgZv1N/u9a2io
lPvtmvE/sXD2mtZG9eU05Ghcv7yjMxbw3MfV3weoKPdovLFTQCz4TEa65PVS
kVC3U+xDt1go23pG3q6bitKq6pQWnWJhUz33ja5WKipm4AsJR2JB5v3ufeW1
VHRo55eHK1VjYV64o9svhYq25d8befKaAduOcO5sTaCiLeW4W2ILA64muut/
Y1DR6KTO7sA6BoxQJFk24VQ02xfQfquAAd0GpxyNfKhIx6LjVkQIA9bc2ii1
4EFF79w/eAn4M8C0Zel58RUqWsotr0l1Y0CTJXsT5TwV7TD5u2OdLQPKXL/+
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
Emr9I5eKSbtuaQ+cWl1MuEtna5eRNtXmqG+QeUhMupeXVJC2uTRa1HKokHja
vX6yirSce6SAoX0eIbfl9eca0v3emmfKfLMI7PwgvZZ06vU35RvoGQSf875F
gnSF4E85I7NUYlhFQKGO9HaJna/UA+KI2QC5pX++aCy4sOlYOHHCPpJZT7qt
RLtY4Mw1Qv+J1cg/d7nnG2g+tMGn0+7M/XPqNZMR05Qb+KSHUvM/mxadaNjJ
jsFDdNaa/3N7ppjEEfdEPGLBlvmv/dwD9lolHBb+tpM/Dv2bj//q3hvczcQN
3vAe+hefmqHszWeeOThT8mTd43/x6HmrW5zJx8vy+Sar//2fki5cmFQpwt3z
+N9Wkp6NT6gtkXqEZ1FOe5eTlohrFPNZVYIrafG9Kfk3PvqMA768DK8dWjbx
kLRVlFI1z1w5bmp1uLaQtFeEqcjz8Uq8MHFi7/1/+QnJL7d48xinfVoXzSHd
faNHSLqFwKfEMvelk/YDnqLJDwjvdfQjkv6Nf6cmT2lXPe7bvro7mvQm/b2F
kq1P8HciLb7hpGt1z1j5PHuKlza8enfr3/xsj8zHaxtxvbHCp96kL227dyyj
ogmn3wwzcyO9pF3DxVvcjBPDuQnO/+ZXc9TiefZzfOpcxVHrf/Ov/t8fi5hX
uJz79B0D0voJWZGzrFY8e4Puhq2khYOXrz5g1YbT1c57byA9MmHHnnBsxyMO
eslLks5oUHmqEdqJS5np0kfJ5zV6oStimUgX/sg5md1POmDLraMdzC78gUuP
dQfpk6lfvrplvcY7Lk18qiC9xiNrRXnDW7yB+Z9oMGnu+8c6Qg924358nlFu
pKcG+JKtXnfjCb+9q8+RfnnAUX1+8B3+t2Je5j/SISq0wzt5evG7DbW8/9az
xRGL57aKA3jP6X0ubuR694OnYNM++wH8p8nWZhvSo/K8DM3cAfzaxMe2/aS7
j5aeXL7lI17yzHdMiXRp3dqJTPiESw5Em7z8t94mvhEZthnE809OxImRti/Z
5N7GGcTPrVx4/Ztc30+1hnRXDA3iNPqjJwOk9/NuZ4dd/oK/VlqdU0CadiVe
c8P1r3hWvUysMemPe6yOXkobxi8LbZ+1IfcPgy9+ti/7hvHUFetEd5FOCmK7
qMuO4K2Y6CCVtHnV6K3R5BF8IgF/9I07E+o3+Jc5JI7ibcd0Jr1IZ6zKkLSJ
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
          "]]}, Annotation[#, "Charting`Private`Tag$8380174#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
L9vOAXufST2JKyPkndedegex76TFrwl2/E0+fTDx9Rd257KJde6mQ2T6sYF7
y604cKvyiTEx3U9e0mQOL93JgYG3G+nORf3kex8RblXs3R/bf4V495Pyv6Ib
N2HL/ZaI65j+Qb64+/3eRewcmQeLl/77TgZmlUa1YXe5+FUmz3wjy8JfiDCt
8fPuKadYX/yN1BeOTMjATr1R5Dnm8428oFL44xW2B2OSYjr7lQz+mR8zjC1Q
fv5e+2wv6WX/6rHZLpwPteJYyZke8uXKwclP2BsNp3Y5+vSQoz3y/w1j81rr
L2bOdJO6H2LyFrGfeKY7bp/tIvnW3N6nthu/329iKD5zn0jXCWX1U9j0rrb2
ar9P5IJXW+8V7OPj4vck5jvJDX96D93C/iMf8uvZ/EfyR83sORa2mrtvTs9C
O3lZ3JbSiT18q9BR90Y7eaywKaEfuyh6QvzaYhv5UD2leRJ7z2tXT3GuNlLQ
6IKd8B4O+EkdNbZY0ko+j7vBZYq9XTv6V0Tge3LszYyBFbY40RrbveQ9KX23
U+UAdtpZ68Wr3O/IY6n1Suew20pMKtN5mkmhsrDcMGyFa07d44JNpEyD6NVo
7Ac+Ow3Cxd+SqRXNk4nYrv6KX+oUG8hlsmLKz7E7r/NtOKteT2rtotcXYe8I
GAlZqlVHekvb6SNs7VuvDMHgDblFKlPvLXbM7fSHXRtrSHFVorIVWyCI/s2H
qCbz3WQkP2EP3nUOy99RScr4xX/9gW1/f/d3m70VpLb4Hsch7LoQw02jB1+T
eZFWMWP/4gld3q/tiMgOGZVNs9j6Kt+vhTeWk5WD8+zFf/GrF2rWd5SSjXZa
VTx7OTCuea9laV8xqbQribUMu4V2xB9GisjuF+eNVmDn6KzS8p0pII08g+4J
Y4frLbbmL80nD94YY4hhX1zbEjAqmkueKM2yl8Tea5Ckq6PwnLwuQ3ZKY59w
G8yp351FfvZVl5LFVvII5TdzTieTWj8vl8fuvqbvUOCbQs4KDhUpYMfdaCvU
ecQmhUVt1JSwiwT+KJnviyP5akW2KWMbSm9+q3udSQqqUzRUsF23CMzq2YaQ
lssjS/+5Oc8gl9/hKvn9tIOIKnarxzNT/ecnCA48UvrnuKsWP/fG3iJGRbV/
/7t+b4591WZWBFHQoOD9zy3J4tL7PR4TjXfPlf67X5q187q8pERCyF6k5N98
Bre9+mT6MJnYdVDIQxFb20zxdq1XKnEqzKn/Xzyum67pHnB4RtAUhaXksNti
XFxGNHKISxIi8zLYU1HR5XmyLwjp4FMJUtjSzGpxH+E8YviB0Jz4v/geTZ4m
eAqIpo3LJUSx7cLUSninC4kItm2fILb3g70idUMviRWfJ92X/8tP0LPCA21l
xG1JlYIl2B23OlfI1ZPE6s0ZF+f/vQ/AmzPSg4iRe7e+T2PHbdbnzW99TSz7
JrPwG1vPxCpLpqmCEJJ9x/qJXW7sYOdTW0ncqv6w+A272zD0GVFeTch9yh9s
x3bbwLFlF9UQg67hV1uwFwxKuZbmviGCanLK67CV9AcP1D2tI27ok76l2Cd0
t80fiHhLTCn9lxOLbRKdEjqV2ESsaIR9dGzBmzyi1nbNRMBr94R72D+HT7KG
z7QQIe+uW3his6s0KtcEvyfscqDIEjt8tvXBEpFWIvQ1q8YE+/raOwffRbYS
q4u/3F6DfSTu+48rKR+I/NQJfhlsSc+U5YVV7cRchrXhF9wvuDNs3wXv6iAy
xf3yW7BHv/A9sfvQQbTO3eh9jd1ofUZ3pu8jEZzOtSUZO0iDtmcz72cik1Gp
cxJ77ueBOkfVL4TB8B56C+5/E7yZejucvxDfG41/l2EPKi+l66d9IdTd+qfS
sDsO5h/hWdtLbDMJFAvEzn8lNZwMXwl7o0hXnX/99nGbyMCJPmJNxHjJRdyP
nfP0PJqT+oir27nmDmEfbQrqKOrvI+abC3+aYu9casi65/6dKHeVersCm3Yp
Sl/nxg/io6paMQuvB72Wdgfd4gcIZryJQvkODph+93Ns7BogHJMUDdnYMYGs
C7qKPwmrGmmBIGyb4sE7g09+EkrbLTqssV/r+BecfjxIXFM1lWrH6xVbmC1z
gjFEGEn/Fe62xPVOr1Yvfz9END0bTivDtt/+a7WixDCxqrF+LhZbPMDA8lPE
MPH9jn6dPfatsWrvQ2G/iamWAzzv8XqoP/hniGoxSnxI2zqUj9dTByP+K+2n
Rolav+28EdihQXL/Bd0eJXS3Lml1xR5UI5b+qBglhu4/jFHBZh+5q5hsPkb8
N55bEYTXa4lGud0qME7c5g6/ZYHX88lsInvlpkniamdu9gO8X2jQ2SR+8dgk
IRt2pd8eO+npBs+aG5PE2z0ttTRsm4RVm7wqJwmjZTtCK4ADz0Pla97v+kN4
1zlL/cFdw+3C3+5Qhyli/s64lCXev/RrZwsvDZomEn+RmZl4P1Sekn7paOo0
EV++WecSdqRaSmtu3TTRrXPZxgB7m1xcjJPIf8T4j964lxs5kLw8hIKi/yNq
jojTkBGOf+C0qW/GDBGofpKnbANePzhKbmPNcwRpoZ7kqc+BAr5nNqnjc8QV
38yo1dj0MxsNT0jOE2o39Yx+ruWAtdYBrsZD84QP+z+/I9jlz+49Su2eJ3aE
TUqarOEAK3ey4MTQAjGo//Lj8Cq8v3X4vvjjFhfoWwStFsf7U1+3EsuDCdzA
tBxytVfC+wfizynhbG44PVywbSm2gOjqwJpybhi5L9WWrYj3R8/ZLzd2c0Ot
kIs4L3bB5D1tJUUeUHrtzpUmj9cTHzvB/hgeUHYcTOtbyQGX4D9N3pG8kPD6
PEf93/49cfWh2Id8EBh6RqoUnw8ml3U7psXzwQOhtCU7scPdH5wvyOaDLZTg
iI/4PFFr+jOwuYUPSn2anvzhxfvfLvYzXullICLw0E6LB6/PctLcF+KXQS09
3unGYjL00Oeebc7mB5Eva42+4/PK6eBa7p5mAXjhtkcnqj8ZKm7r6DyoF4aY
rPR5vqpkOC72/bXkYTH4qiYkFheXDBPGNaa9XhJQqv8hTOA8Pu+4C/3ndFEK
ouvujDE2JAPvjR+BTgwZSFaYyr4ykQSBj9WtZBiysIo/KOhcehLs5L2hVXlP
HpRuejnU2yaBQ5lx69ZH8gB7Zq+YHUwCL6+p61Ux8nDPTc6lYH8SsAcutFZn
yEPpWPbV+L1JMN1w9EZtozy8ahcfcd6RBMlM4w9vxRQg8gF7Y9nmJJijTAV8
fIx9uvPFTfUkyLK60PE7TRGWW+h3Sf5iw+gjNbvu54pweW9y4WF8vtX/3N7e
+FIRdvumbIvD598CN/P2Z7WK0Lbf01+ljw0kXabN5aciOItM6sh04fNz16v3
P2hKkKHdcbvyLRsmLkk3dT9VAp2s71eJ52wwiiGr3nKUYegKK4RziQ19etkm
Z7OUYa1CV62DOxsiKuJzlxQqQ291FrfcBXx+HvJnGbxRBpmKNPugs2yIJUz8
YwaVoTJXymnbCTYEXD4qlyujAsxjAaSjNRu+y3xsuX5UBfRlkiNmNNhg8nXv
w3oHFThyapziocaGR8/eWK50VgHuB6LnfimzwdSsiHx+QQUKkp1+vJNjQ7RL
VGbfdRWwivh55o4oG3aUHby3g6UCATw9MZ6zLMhyegfSP1TgbPauk65NLOCc
8xvaPagCn7hLnVgNLIi9SIkO/q0CCysiy1prWXD/us/I9JQKcKYGvddVssA5
Ri3+0zJVKFyTmtlcxAKFd5dnE7VU4eu+0Z3BLHy9mUSBzgVVkFlZRDRdZEGg
ZZnjqUuqsGN4SWj6BRZ47zkjFOepCuX6nHc3XVhw+ljJKeHrqlBSdVBf+xQL
zK6dlBgLVQUrkZHx/YdYMJ2Te7EgRxV2HT+xVWkzvl7lgI7ZpCoEZ9aEbedj
wZURH7O106rQuVrAZIabBQHlrEOqc6qgsONFT9piIjw5OnJrCa8ahApOcXH9
lwjN0fc/v5JQA16DhIPBvxJho9irh+br1EDmlETMYlMiCHLrjW65rAavFo9p
BEYmgmzLAT4DLzVYfzWjqeFRIlASfRU0fNSAXughKhWWCGamtZa8N9VA7/Dm
bU+CE8HL5xSrMkINSu/P6F73ToSe8Rgbi+dqILlAbnxyOBFefFuWv21UDeqt
Gg0XVyaCR0d9dcikGnxpTLbxlkwEw8awjuZpNfCN8F4cEkmE0gKZOfsl6oAm
g5bW8iVC1T3qFndxdQifKOGKGkiAjtXbW6IM1KGip23daGwCLPgGDQ94q8MR
Y3fL8oV42CG5lBKyRAPm+U6mlHHiQL3Fgh28VAN2zITFSD2Jg7mHQUq3l2vA
1fOF9afC4yBzGb+Mv5gGBMG5DwM+cSA6K8DvrqoBPpdYtw32xMGHXtFBGzMN
AJeE99Q/seCQrZAlF6gB26zzXxYbx4LXDoMN6VyaoNIoLnQxKwZGtjxlP+LV
BP3ePSFtrBg4u1lOxJdfExqywGUDMwaOrOEa2CmqCR+D3F2++sYASDc8HlbW
hGuxDgeHLGNgxdeT82sITVgYvvXlbe9jSLxGryz014QnR9zWaXA9BtkrfGsT
AzXhgLWfguBYNDw6fy3u7h1NMC6JNBrvjYY7J054HX6oCWrD+bXFFdHgYqFD
m43VBC/G4kOr4GgwEKsIMS3VBMt7TRGkcDTUpo7bVM1owu+GbiVFtSiYruEu
4V7UhL1aDA0X8Sig9OPk81CgrulaWBV3FNzUXDdRvIICQmlZzWnfIsGEfYWe
o0ABtz0ZSYYpkZDzZPL9E1MKxAfYJn3Xi4TuYl6Tj+YU6OrzWDyiEglCnZLJ
0tspELyTkvNTLBJcVq73iNhDgc1v5Xbu+sMEDaanZLADBZCroYBFGROiQ6cO
XL5JAUkFTuUVGyZUZ/KVZQdRoFHI7gLbggl/GqQ1h+9TYEcxl/2YERNsVhj+
OUOnQN7Yik3jykwI0N5+jBNFgWfv7XdxJJiQbXWo6usTCgQoeff4LGOC4N2r
zGPJFKjurOYvHWOA8dPg+ZhUCpxQ+0LS+xlwrjrKueMZBcqPW60N62JANW/R
+v35FDh36Wz9WC0DAgKnP1hW4/iVnaLOJTMgK5HfNKiOAjv1bn9yesKALnJl
SsVbCkikZQ8GPMLjLxh5mbZTYEn8jXGdQAZM+lyTNhigwO6UB05mDgw46zFj
qyxAhTdGydHBmgzIPBKsJSlMBdm0W2d3KzNg3Fxyjl+cCvEF5XKGsgzwFdNj
jctS4duUONNNiAGhWY6/qrSokKpTMeD9lw7vmb/LildRYShZ+P2+cTqs9PcN
z15LBZattf+uYTqwdzLXP95Ihf9yzgVkfqND/sCbG+etqFDiUGIp8Y4OM00H
bRx3UaGtlGq89C0dTAu/atjuw/cfUqiVq6PDmztztcRhKjRLXtB7/poOQhfu
xRoco4JA3ioTfZIONgek3bUcqRDmYW7bXkKHz2prJCXOUWHl03VKofl0UBUo
+7HsAhV+kZ48iS/ocHrM6uXcRSo83d5+si2bDukdbSFjHlTIE1txZG0mHUbI
k8d/eFPh2lgF7/N0Ohg8HV3zyY8Kx4rz/A6m0sE71J+nOYAKtUR4t1IKHbiP
RaW+vEuF943v3qqw6bB9q4Zv1gMqmPknMA4n0uGBzvNdSeFUaN2gllsYT4dm
cVOVaAYV/jQKbdsURwepmbrxB9FUWC4tda7vCR3sew9VBcZSwefroGFuDB3i
3/RFeSVSIYvP/O3Tx3T4ln3JxTWZCkK2jdtfR9OBFrVg4pBKhYUkAnFjX7ge
InLwGRUGK3buPxdFhxfOK79a5VDB8B7eYUTSYcqak2eaR4XdNXOGadibDPSD
1xVRgblv2aub2AHy5GFaKRU8Zr3e/3Mlt7WuIqLC/uiF+/+uXz7YsSBWSYWY
2b08f7F3tzi38L2hQva0ip0rvh+9aDxptp4Ks06qHD48n46EG16jTVToE1rK
V4utECxo9f09zlfD9cgXOB5Ht8fyne1UWH3F7HIFjjflIOX3209UcGhdzJvF
+Rg0yUUVPVRoqDjvcwTna7UGvsU3KnRJbur+ivPpsaLRObOfCtMxinMRON8v
xw8bsX9RIUirZuQsrsfCxx8CUSNUGKEPtp5JpsOWV1e6Qiao8DjTuCYU1+9u
KldOwF8qDFu5fO3C9W0Me3jTc5YK+0x0zQ9m0EH8qtxBl0Uq6Nmt4/6Dn48n
FgYz+5fRYOTwZ7GsXPz8ZB6KKl9BA/cm0buUQjoUSfkaaInSoMI7+XNLMR3a
vr9yW1hJgzNr+Ete4ee3b9f3FecUaXA1qT+Cr4YOE/n8ae9VafBZwqL3ej0d
RIP2fEvVpoFmQfQtgQ90UP59OUBiNQ3qrOPVlTrpoGcbqXh9HQ0s0qHNuYcO
Oyldh/ab0MDklo/Qo0E6BFW7NMzvokHx6pgZRx4GMPVCz521oQHzxrHTcgIM
SI58zvfelgbbtWZX8osx4NXpaUg9QYMX+/uGbuH3f44vKN/mEg0Mgi2ClhAM
WOGeZlPmSYMDtNwTZ7czQK69YYTqQ4PdBUZ5S/cywPCphPb8TRrsdUo/2+fI
gMvbWfFPGTSQ9l9cv+EuAwKzKzeJP6bBw2W8ygdxfwqXGejwi6PBF7HjhRmx
uP/060nYpNAg2n1tONcLBgwElwbPFdKgv0VXdlcPA/6O9GicKaVBVVde7qpf
DOCz43ndgmgQONe0dvtfBqjTdsyl1NJA3KT7sqYoE46/ab+47xMNtLfpE/St
TLiwZlaotIcGAa7aqwjc3/2ilTIofTQo2DChr+nAhMdnnb/PDtEA7kqpJPox
oZV/4nDKAg3vyzwKDxYx4dtF6b+iPFqw9VJtTFsNE8Y7NjJ8l2kBb6Bu3aN2
JoikBbzdK6oF6ZImT8v+MkFJLNm1RFIL9s//ZenyR4LutRp+iqwWHBn4crN9
ZSRs6h3khCtqgc7d6xfLtSLh/783AqUwu4h/vzf6HyUadxE=
          "]]}, Annotation[#, "Charting`Private`Tag$8380174#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
7yk74yHO00zvyXD3c8a+vPSw/tZ5TfR3vhvqidjbNWO/RwY00iYreA7dwxYn
mxI75zXSMV+7tj3CfuBo9vci7zv6EF/Dlkrs5mLD8gy+ejpvYVTbILbcpeOd
o6J1tLWMVNIEdqj3Tt0I8bd0xOJmmb/YZ3zlu6vla2h3W6mti2Nwvv0E1zmq
vKGd78SOSGGbXhkKEdCopjkHjtgoYGtee6EHuq/pC1aPrFZgx1/PCOvYUEkf
O7plYDW2cCD12Zt8RWtnyOlvwB4Isr/92LScVipgC23FPnhrd5+F+Us62sTq
pil2dYiewbB1GR39Zjfag/0gfEG/ph2iu3ao2R3AXq3UdymitpT2luWrOoIt
rlKk9qb1Ob09SPu7HfaoWnCDQO8z2tXnfqU9dgNxyBeGntCy3eeOnsbO1fpP
w2eqkPZMDclxxo7Q/tv0WOAxfT9j4pkrttuqhivDS/Lpji/5V9yxzXXZK7Tk
8mhD43IeD+xjLgO5b3Y/pEc4hMFFbIUL4ULG9hm06uynlZewOy+tti304dJ/
dUc6vbGT/JuLtO6k0dl6+00uYz8R/qWwaW8SbT0s6eyLrSe18e0KvyhaxVTL
1A/7zGbhae19ITToJPT8c32Bbr6Q7UX6fZj9Wn/spgtZRqvzjpHRjjFb/jnp
4tZv5onXyDLDlZL/bJ57sGJjaiTpP6Oc/O/5Bo64lOWFOJL73KXn33gPzOzX
FLBTyIV3JD/9m8/AthcfjMI4ZHCkeLzPv3way1+v8rxPjtY5LPw3/zMGl1ZY
2WaR8sclDLywm+OdnIZUc8mew5IqntgTMbGlBcsfkdLvT1ecx5aKeiXuvaiA
jOwSZ5z7F9+d8VMkXyGpEblogwu2zW1GMf9kEVkwd0j4DLZXqPni6h9PSaGN
U1EO/9YnMKvIqrmEPO2v9vEYduu1dhGZNzSpnJ0bfQj7MvDnDnUhcnYuSGT/
v/g3ruZ/3FRGeh+XV92FrW2446F03UvydVJL5XbsUn1bG++qcpIy/6C26V9+
9MKzyNJX5Ixr8ZJ12C7r0velPakktwlGJ63EntN9ziOQ/5p0dCjsJf7ld/WA
VfW9ajK0ozxV5l/+V2ybtYp8S1Z3zzVP4b8Xw1hu+ERKHcmI2nZxBFv0Kt8S
M5t68lOER0U/9rfBE6mDDg1kXPb1M43YaRWq5To3G0me9G2dXOyI6abQeYub
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
          "]]}, Annotation[#, "Charting`Private`Tag$8380174#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
C3bWmseedZig/tsoxN/6lgUqK0OFtxhNUK4myg0L2AKW5bFcshOU/3jnZtV3
LPjQo0jL+DhOaSrJrg7CvvxnltZtOU595Shq2dCG54diZryZ4RjlYS51w+09
C3wvdIlIyYxR9oKv2FKxa05Jq3+YG6U0L+4mXmIf95pUF742Sglu6vMSbGfB
jZw0jTD7EaqgZ1E9G7uL9/cmZ4Mhytb19/uaDhYEv0zWIaf7KY/W9O0vPrBg
4PX2WIeyfuqArPiBT9gHPnT8ivDsp2QjGWLT2OIjwqmd033Uf9Jj79d34fET
jfx3ZaaXatOo/R6D/cnJ5yVz9ju1OF5hfbAbf+9u4pKNz75T2s73f53FzvYv
cxv3+k6ZBz7X8sN2pU0qGcx9o8JMUF8ONn/VxVsdc18p6crG3gXsy3LPUtbM
fqY2hExCwkcWbN/6x9Te6zM1v1/JOBeba7/Wv/zZHmrIKJOtAjvZLdd+99wn
ypceldqDXVeXpOQ1301FXVZ1lvnEgthP7R2vfLqpyMkvGzSwT0wI3RJe6KL2
ug0xSOwpiYhfeQsfKFNTnhJbbDln76LPix1UFsPuajz2cHCp/Xr/Dgrt6/rF
wC5L+C10/V87taW8aN1DbLMXF9yE2Nqp0HYPZgO2z1obHWP2NuqDSfj+Wezd
qgm/ogPfUfPXuQO5e1ggRLal9LC/o/7T7724Gjvn3P5/HhxvqdsO7U6K2O3l
ei9zOVuoqIikf/uw110/1TOx4g3FnS5RfQg70muf9l2h15RocjfYYl/wlfzS
INlEFc1IXLiE3eXHs+WcfCN1SytN1A3bJGA0glulgcpgO+3ng60a/HwraNdR
WsvKvMKxk0Jyb3/aXkstipmsjsbmD4397kW+ovIvytndwx686XCn2OQldTwk
R52BfTz8QK+FeTX1QPp4fjZ2Q8RW3bHDL6jgnEN9+UvxRC3rV7VHlMtmtbBS
bC2Z3ut3m6uojpXLRsuX4pcvVWzsrKCcArUFEfaE4q1W7h/PKEvvguFq7FbC
2hdGy6hnfR4htdhFahtUvGdLqPqC6PcN2HfV/7UVcxdTOVXzX5qxXTRbA8ZW
P6aC2J9ltWCbazPWq617SPmfalB6h33y8mBR44ECqq5J3f49tpRrFN8Oh1wq
VG3gcAd2z3UtuxLvLOr7+b9cH7BT/dtL1WLoFO8128td2GX8U1KGB1MpCS2J
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
          "]]}, Annotation[#, "Charting`Private`Tag$8380174#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
lyFWlBINNBu9Io8h///9Ligy5v7vfvd/5p02YQ==
          "]]}, Annotation[#, "Charting`Private`Tag$8380174#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9XSfIv9MKeyNcmODxopwcf3NU+RPUT2pMmzh3eWxPMpT5N2KgdBB7He9anHp
H36QNnNrnc0Os8Fndj7u/e4fZMyXCrlR7ES17IRdFpOkzXatNp2jbAg+3iOl
oDRJqq9o37Efu+awova7he/ke28HvxBsp8AZbfGz30kXg+naJuxruanrr7tN
kA/HBS8edWdDz7LpDb5mYyQkcFDCPNhwpTrJiJgbIv+uyL92yYsNw82Gse6l
Q2T/ISqDjr3zXde3iPNDZElDofsTbNkJ8ZTuuUHysssf5RHsQunIv6d/D5Bq
fh3rdh1jw0fvoOqs+a/kYYOGnBXe+P/uLyv/uuwrqVGUb6CKzbpc6v8j8CtZ
U9V8yQjbL25G3WzhC9l8s0nXA1ug8sTNroXPpO3Pbp0ybB9KWbLE/Cfy5APO
KIfjbDA0mLV1C/xEfj69IcYDm2eH7t/8+V7ymMfjHeexk/zZbtsWPpK8KGmE
gf3qFUM9cPE9mRRqUP4BO/ZjZ1dt0HvyI8/EhTHsQ1NiN8X/9JDtYb+/L2D/
XB3xLe/PO1JzjziX7Ak2UHwvFn5a6iLz005W2mOPXylxW3O5iyzbMmTgil2a
OC124W8nKfPouddJ7F0vj/uLcXSSSrVXJ8OxgySdjSw5O8igtfcSi7G3aSZ+
iwltJ233izW9wBYjOpJ7OdtJUZmp0kbsXK8df89xvSErjb4Wf8buLDepZnO3
kp/sc2z4T7JB7sLh3imhFvLzYdpKUezIQBu9O2LN5IUDw5Ey2MeD5fsa5BvJ
FUW0Eg3snkt8+l4qr0nnYfYRHWzrkO8RvBoN5MBj34ZN2JpXXhiA3ityx5Pq
2q3YjKvsqI+GdWTwi73OttgC4bFfA4laMkpkXd5u7NEb7tFPravJaaXiQBds
p1s7B+ztqkhGqcfvo9gNEQbGk3teknVmbrre2Lm3lw9puiHSocqg/Sy2rtLA
hTtNlSR/oqTxeWwxlRK1190V5OAy84NB2FNqN9t4+8tI6aUywxDsNtqBYPhe
Sta6X229gl2otVbj4nwxKauZqnwd+472346nvE9JM/3la29hn9JpC5kUKSKd
/WunIrHt9DLXaMk9IpPedJ6JxnbxGS18vfMhqW5onB+DreB3m9/cnU2qx82k
x2L3XtB1Lb7IJKubuf+Lx0653FmidTeD1Og4VpaAXSrwU8HivxQyJJraew/b
QMq0ec2leHLym2lF4r/4bxZY0N4bQWZ15DvQsVuf6BXxu54ja/TO5/xzh1+e
me4jF8JIlF38zynnLEfskq8QRf3m4f9sV+hUY5oeQxRl6on8c1uWmNRuPzoh
eiTU4d/9c3e4b3iSeZ/INKDu/vf80a0v3ptFZRHm+mpC/+anaS5/tT6ARaCz
gZfj/s3H+MIaB9c84jePev5d7E6Gt/d31ULi5ZJ6/B3s2XuJlU9kHhNT/kEG
t7Gl4mvFAoWfEC6X1eIi/q3v7owHwV1MfF6n/OAGtmM0pZxnroTYlewTdA37
fKTdyoaxZ8Sld0L8Yf/iE55X4tD5nAiR2bQzELv7So+g7GuS4NhaxR+AHQQ8
hd8/ISIlISn49L/1m+ryPO14SUT9Wpfgia1tsv2hdEsVcVtn1PAwdqWRq2Ng
fTWx7Ov4Ped/+2NwO4+orCVe/G0Ks8P20c/em1FaRxTEsVZaYy/pVXDwFr0i
zsy82rv53/7qjjo05DQQbZ5d4hv/7f+arX8cYpqJc+6i2yWxTRKZt2fvtxDW
q/aPCGILhXGL7HBsJa6J3TDgwh4ZP5I+7tlGGKy593Ecv48ZNarV66+3E4Xy
++3+vb93FjoiOVd2EP16ZS5PsS/pXNvzJqGDuKnzWy4X+0DKwOBZ5ltCW1Mo
PRpbwp+5vKSmi1gyd29xxOZ6sPfNddtuoi8/ztYae7KPL8nxbTdhkpJ4wRi7
aYfnmvn+d8SJPTLv5bDDVWm7THk+ELUOH6ve4/NqccShwU25j/Dp9tKyxp7m
yde2du8jYip3h+tjjyryxurm9hGbj3JEU7C79zw9wK3zmdhjysj9jc/Xpy8k
x7PgC+G0q4A76995S+9cOezSTxx9K+gwgs9z9yfafq2Z/YTDXZm4VmznlvDu
0qF+IpTSFlqCbcNrkH7Td4CIaND2uIpNO31PV+vyICGSZGwvi/3ZynGPT+ow
EW+z94k+zhdmA0FuTR+HCeu9Bi2y2IzQ9JNr5EcIyZD1GUueuH4rG702mjRC
xAq6nKrBfqkVXOxBHyUaF/fl78LOEM6QdokbI2TkRXP24vy1xK5VqWwfIwZK
l1noYztt+7ZOXnycONY7ECeJLRaiZ/U+ZpyA9B2H23H+u/Kj9vy+6AmikcM3
yQZbd/TnGNVykti4eOiqNs6Xrpv4z3YdnSSg3S15OfbtcNnf4VcnCWbq6hP9
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
          "]]}, Annotation[#, "Charting`Private`Tag$8380174#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$8380174#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
dTw1UlIFFHenez5G/v/zXegJ2f5/57v/A3kH788=
          "]]}, Annotation[#, "Charting`Private`Tag$8380174#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$8380174#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt2Xk8VN/7AHA7IYXiYzdjG1mylEq4D9EiqSQpZamsLSJJlkJRliRUKNWM
fcwYkS3l3uxLQoSUpbIlW7aE+J5ev99f83q/7p1zz3POved5zuuQTntaOXOw
sbH1sbOx/fs13ye0a4mkSjgKp80oD1NhZ2HgFJ+sKvHN4LwID7I66WeKmKQq
0X1hY9SfISrI3D2+X1FMlfhh6GLMjq4L/ald0BZRJfJ2K0nIIK+e1cvAhFSJ
JpLEvAXyVEvakQP8qsSAG9/rWOR+A1F2Ox5VIr6w1HIEuTUrJNeNQ5UIoM7c
PzJChYoNU3a+KxTCoCbQ/QNyfrD9mluLFMLvjVTp2R9USB17V3R/nkI0yz86
yz9KhQTbnWefTVOIrxGFByuRw6qyhZkTFMIyztD+3k8q+Gr9h78apRAlbXOX
L45RwZZvTqLjG4VgdxM2dZ6gwj6fM7XfeykEeYK9JnCSCvr9rT6/uinEW1HD
3owpKkiX5DYLtlGIpVSmo84MFdYqygRJNlOITuNLcfGzVFi5F7WJ0kghCgYf
/eCZR/G5uoXtqqQQ4+lajxT+oPjaOnQO4xQiek6z8N0iig8z67cvoxDMF4zb
t5epkCZO3ulfQCEWPsInbTYauNZ+nspLpRD6T279Z8NHA1td86flzyjEVZlt
VRH8NNj7rGT/u8foeleKyXtBGmy6+iBjOJ5CtDnSdkcI02BC+eBJ2VsU4lsU
HK2SokFf3Js16sEU4nPGgeAAWRq0rKgV7wikEA51u56YkGiQ38EnctSHQoSF
ceuxqdDAN7yiNuoshegpfNS9VRf1Z1rrSpIjiu9Duq+7HuqP/TNy5kkKIV7Z
SmLsoIG+XmBQhTWFWBOWssUeaPB3cKvuH1MKoWr3Zqu3JQ1umWU/dVGiEOWv
B2bgAg2IKP9DciQK8UypdzHPiwbLrfs5uqTR/AoYPNPypcFl+wnnfRsohN7I
fi37GzQ4fVVXQ52TQlRLN9y6GEcDLPtN2a9+FeKWav4N0zIaLAp+6Ap8okKI
RJezNYilgt6R1MitiSqEjsEiz4h0Kngn+RhMxKsQR/Wb1YQVUuGHkvhzhygV
ovHVOeNbm1Ohy+ikq4m/CmHDGcT8sTcVii4NzfHaqhCGHt7CcUGp4NW+KBIv
qkJ83adncWo8FR5aHTyRsE6F2BY7FiY7mwqvW1KpDwRUCNnSrXcGF1OBp8lC
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8380174#11"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1017.1494578457663`}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 1017.1494578457663`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"2rd\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=3.\"", "\"\[Beta]=3.25\"", "\"\[Beta]=3.5\"", 
       "\"\[Beta]=3.75\"", "\"\[Beta]=4.\"", "\"\[Beta]=4.25\"", 
       "\"\[Beta]=4.5\"", "\"\[Beta]=4.75\"", "\"\[Beta]=5.\"", 
       "\"\[Beta]=5.25\"", "\"\[Beta]=5.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.73806460274*^9, 3.73806647259*^9, 3.738073228443*^9, 3.738074130691*^9, 
   3.738075756763*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"6bd917e5-8354-49e0-b8ee-7f3629d1c164"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
K08=
          "]]}, Annotation[#, "Charting`Private`Tag$8380331#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
azxV4EKGt+w/yOGGy/T70Y0DG0fIUJLhrsG9+Zk+or9qooI5XKZbo+LRZ7p2
DP27nx0ZWLRvaX5Q/kzXHTvx550NGVT8TbWdJJboaakv/5u1JMN/nXl6lI1P
9PRLBk+dDpFhoU83w6/pEz3RrE2sxZQMVm/GPqfGfaKf4lw1lcUsviJwa3zj
I12pR4mwegCbf5G0f5G/5+nqfwMbS03IMBl8srNk8wO93NXVm0ohg/Fxcame
5g90uyGdm+8NyXD3TNPxb/Ef6JuiuZfdMEffWCMa/pmlWxWYN7sakIGzLSR5
7M8MPchIiCN8H5ZP+eZ8wc339ISqKfFFbTLoaq9bese/p2cJXlA4i5nl8N5/
1ZtT9PkQ3VVRzHnHK71N/0zSVWNUqqy1yNDdnUuM33pHHyn+83JQgwwZk6Nj
z06+o/888PRWDGaP7/zJAn/f0v0X3ElSmH9KpH6u+vuGbtYQ5h5OJoN8eELd
++0xeqhKnZnCXjJ8+a/RW/nMGJ2W2v78rToZmrJ/8J/4N0r/uBH8+wpm645j
x/kZRunSlxeOb6mR4aSQm94BxhG6wRHU/VmVDKa7sz9fTxymcyw/HbuHmZ8y
kj/FOEx3LS25GYq5IvDwv1imIXo54zRxXYUMoy36nZXMA3QDsdVYCcySJ3ym
vnP30yWi724s7iFDWryFxjX+Pjq1aESoGfOxU1LTL6Ve0b0+MOE9Mb89zaYV
iOuhKyoZC2pgNj/7NZVV8SX9Yl14ISfm3f+1ayONbrraFM+FVmUy5J6vvDyp
+5x+tYU+dRMzZ1LGh3jKM3otGh+Mxrx0ye/qI/NOukvVk3NkzC4pVvN2Nk/p
f54/pwhhfpmqvW/VoYN+6Wf9jQ0lbDxXdnza7Q30y6sPWDox75WdP3Gtt40u
+YNBpgozP66R0DPeSm+PrOrPxPydkDzIOtdMZ2O3F07EPKjgegp9baLHWmZ9
D8Vcp7RHMWGzgV74no/qhvmayr+RR6yP6OzOfsGHMUeoD55d5X1I32erymqI
2UajWFlJ8j69y2+Xhjpmz7Cluh6rGrq62p11Ambp6CscRn6V9B0WSYclMU+d
2OvVkFBGH7Nx0xTEfOvMaKNSehGdONFetxNzE+dPaWPbW/TEiw5tHJi1hQ36
lE9n0mlfHrmzYj5mwvlHxTGVfvFu4hVmzAP1Gg85vGLppkecbP7nkegqw733
PSk3bYb6/udbsQcWbfL/oyyV2ob8zzZ1Ll0Gd65TLImluSz/G38Jv/CR6ByK
aY2iC/v/8nnYj1xffJviKa5/jwvz0sH2d4aXSygSprpX+DDvNpI6/yLmLoWZ
7zSz2P/i2XdC2d6rilJgH8Alj3k0Nzj4K76OErliW6aMef1mdlu92AMKS0vu
iA5m4cxn/PG76invswqyDv5vfOlr/hTmBspFj+ZlB8zOV+VbWDYaKf+tmI/5
Y45Ls+F5ufyY4oqrdjzxv/wkVTXajz6hPP5yVKgY8/h/b7nEe+iUw/oeDs2Y
TyKWuq/vgTJ6p1xp+H/jN9jL8mikg7KEO5W/A1s/KvpmNSL9TymJvzu0SZjb
9Lyc4190UpSc24MPYp7SvlJFaXtGGZB3zUnGHKZV6ljU9JzyxrQusxrztkYr
A+vDbgpvoLrSMGbpvUv2L8tfUuS4lXA4bL17Kh/8a3+9j5LBiLcdxayfXXZl
/XY/pW3SxJkL21/c55h5DzsPUJpu++03xrz4xffOl4BBypZ4cu8jzEVd+E61
i8OUjULTuofYfr32ZySNkWeE0hsZtvwL82n1Cw5DWSMUrUoLPkNs/7vemv9I
K3tNKb3CLDKAWfB42Y7GrjEKbt5Lhgs7T5juOQ5dtBynPK3cW+OBeXWaLc/5
9TilxTFcsR5z7+EA5c25N5T0O8yfqNh5lIRXsDZgmaDwdlxNncTOq61F+5fe
ctOURtLajJIOGX6wVKuY+01TzPvZwwswL8mwZuytmKa0un39yq+LzYfDI1dm
9RmKbJBgP6MeGR61C30pQbMUIfYanl//O29zRnkWPOcoD56s+OkhMvjVq0QP
FM9R+hepU88wu/UnjTd9mqO0+gg4OBiRwYJV+05y+DyFkzyzP86YDAqRN/cq
nflIyRNqoo7uJ8PMIWeHsIIFSjOO7+hPMzIYzp/07p1coNQPem9mmWPnTeKd
UGWpRcoSYqHpWZDBrnnpwlLeIqVA+/pq0mEydCidavDPWaJIOPKYaVlj+d9V
JOJ5Y5miPdY8+NUem+/KZ7i24WUK07mJ0loH7Dwy/awqJfCFYo3ygiMdsfPl
rMahd9e/UP71GL/adMLuu2/P4pyurlDqv56SJLhi59HSz2XSgVWK5kKH3Rvs
fvbS4aCNUVcpuPrglSYfMlxJEv+ddH6V8mZ+MyPXF8unPIX149NVym5rEjPV
D4vH9ZJUifE3iseOtVs82H0v0CtuJYu+U17nJZB6sHphrZZSK7pvjVKt8Ovj
m0QyvFLaxx/hvkbB+Yfb8WH1SXG51vHnZ9YoN85pe1tg9Ytd4Z59MZ1rFEZj
q5jnSWS4f0Xi+bDlT4q2YcPk+1RsfkJ/TV3xWqdUHqDl3sgiw8HF70Yfz61T
+oayh35h9ZCU30qJQek6xW4+aM49B+vPbT54eXGdInq+tGhvPnY+HB5eN6P9
onRzFS9s3yHDp921u1iTNig27s0ZhBpsv5VVRrrd3aAk3jbdbqwlQ5Z82cjD
lxuUEzwTcZb3sf7Eb+X68PymOLvcv5dYj9UfO1KJkP2bwsyuEsDTguVvwd8w
4d4mpeh1lMrTbuz+KZUO+zawRSkWNHlW/JEMDWxVdne/b1EuDx49lbmA3ccB
utqegn8pfeHD11KWyHBY0Z6h1+kv5R+x583pFSyequT0u1N/Kf0e/ZbX1slw
5+Fag+fyNoVwcrVegR2rr73m/338jwHN3aZ5fN+tAfJ8ylEdNxjQ28Wsq9Z7
NOBae9TcrVIGlFQz21CnqgGh8gwv7J8zIO0TT/6e1tAA4px4egcnIzrUyMJ6
2FADsgNs8AXXGdGb1e0nVXYakBDWcsihkAltqfRs1pzG6n/KT+quWibkabZJ
9U3E6m1e1cTnbUyo1qNrXOI81v5+0WPdKSbkenFyJTtZAxrWkndLSzGjkT3j
Np03NOB7vDP3p1xmtNiw4+WHexoQfPFnf1wWC6pac2zaiX0/2eusuqxexoKo
TkMCRtMa8FshiOPzIxYUI8cgdeID9n3g5QRyf82ChpS97H8takDZzs77RoKs
6PpCjfieXxowk5GewZnOiqI1Q+XO82uC821Vp/zLbIhDtXCd11IT1tinvCsK
2JCz2dcePVtNuBaeFtJQy4ZQkY7iMQdNeGG4mDgwyIa8luwL37trgt5kURWL
MDtK6WWhiYZrgqS4MFNoATt6WfXi3GC6JrzP2KoyqOVAprrE7ML3mnDyT2Wj
OXCgpH8C1ffmNEHU92iH0yAHShtf9KcvaoLN3oaxyB8c6Pitz8t/f2gCDIQz
lWnvQAncBt3AoQVFOz847YIdKLuDQ9abrAX+F18wvR/gRIJ5+lwMV7XAjedY
44tpThTYsAdfeEMLbG9yh9SvcqI/rwasD+ZqgX659etkXi4UXejMXV2qBfzP
X5dr2HChio7bjpOtWvCEbfZwSj8XmjMr4hte1gLBpM0szT5utJUzt8fniDZw
7sq3kJ3iRm0i6LSYizb8yzRg4FrhRhZ77pm/9dKGpdKzQdM7dyLH4Xfn48K0
AbrY9FMtdyK1tfFmhRRtCGEVmJl+tRM9Hhjc5fNUG56eV1JK69mFaCclUmj6
OqD3L/M28d0u9CTRK0hlvw48OMEg3L60C0WM0NjWLHSgKOw1w/oOHlS4821r
oasOnHM+M+p5iAeJnT2+Ep+gA8bKw4nkLsxfQpmtn+jAdJBBSKgnL/LAX1+Y
NdMFyfLvZXoBvIi+WjQtdEQXnOfKZ9jDedHOAIVqBzddGPDgdyo6zYsY//qw
bYXpAhz5ZDR2ixcZngm4PH9DFwoNrosYTfCiaio5Te+DLnjwzXcIHuVD0atM
Rt4pesCSO7KW6s2H2me5vxlk6UGlfCeROZgP7SMlk5WL9OAXuTjlWzwfsju+
r8ugWQ+uOXrb9eXzoWq1xk2Jz3rwNG9y5uI0H9rLdih3l/U+UCCOMvwJ4EeS
XmVXSgj60FfTtTcqgh/9XlpteULWh+Paj6iLcfzI49xOn2Ujfeg4dKN7LJkf
rRb6F6Z46IPrMbtr9ff4UZqwweW+bH24UtcnE/aVH1WuFVRe5zOAH3rPDWdi
BBBjmmPmqqAhPDtSd+D5aQGUe4QF9xpvCNkhOYerkwSQmvadHQMahmBYcMzl
RJYAmtzDYb3DwRBSGHlj+BoEUP8bxaa0LEOQ73auNvopgHao16+uSFHA1mFJ
oogmiPTLbY03pBDgw4blLyUIIhufzgRzEoL1pFbFsP8EER97768KNQT5TVe0
9TIE0VvZfzuvmyBYkCAfGXogiHglz/IwBSM4O5uQwvRdEOX4tVuce4ygNnzn
b58IIVS2WNSf7msEy8Nqv77HCaH2UoHa8nAj2K1j//NcohAKWF207U8wghKG
vG9F6ULo2US/tdMNI8i9rrA0Wy+E5DueqFg+M4LzD03e+fwWQrFG7KkLe4zB
5deJJz7nhJE2/tThAm4TuOl6q+V7ijC6Sh+aQxImMEKHx+cyhJHKgeG634om
YH2JvaGoRBh9vfXgaJKpCewXy6yZfSaMTvfvyJT6zwRU99UV+nCJoOTQctyD
bRNgOfMx0eeGCPJPz5wp5DgAYTRmB+98EcSUatP/U/QAjAfIKniViKAU5Fvi
q3gAqmxc+tzrRZCindG1i+YHwF6+T/zoiAiSlG5Ga5cPQHHXo4fWgqKo9FVY
xhmxg2DMfWFe/4YoeisfGGO33xSqGIqa9uWLIuEp7t8LTqYg/LMtVa9EFCWO
3IC8Y6awNLmhrlMviqpn/1U4ZphCem3IafKIKBpPl2wizJnCrJ29yG5BMWTV
gGxMUw9BYg7OTOSGGHrHNzeXu2wGyuylW1/yxFCsRFGeKbM5jEcT6zqLxdAX
8U/VguLmoGKjKBL1UAztC/tbwXvIHN6yqc6/GhJDKSkyvpml5qARrZd4jk8c
jTa7fN3yt4CPVraPv1wRRx0MDbK3WCzheutQSGeWODoRpFJXL2MJ+rvtZfMK
xBGT52LHdz1LSGd1unioRhwF+0prf4i0BKywcyjuFUdVPw89yZ2xhGzFwG/O
3BKI7tXueLXbCixYzih2JkugDaWSxh8uNuD1RG9kf7oEunTot1dMiA3ExKyf
7sqVQK8j+o4InLaBooXQkWf3JJAau33ymTs2sPHK7cyLXgnUZyyrqrtoAyWZ
eq/7+CTRrppA5bFTtrBFXD/7JkcSMZiUecy22gH/9H0llyJJFD0a3/t60A5I
OaGjbysl0X+nA8sXPtqBHde80kSLJMpkvGcSyncE7n4dHp2alEQ6F6/Vrgcc
AYem+8pzclLIXOXPrIqEPdSYhY6vVEihf2/2KR7Nc4DVdHnnqftSqOavVNG7
Bw6wd2JsrPexFNpekWQ+/dIBGsKMx6peSKGIbQtW3KYD0DNERoMXpZCNcnD7
NxdHGJhsH/6oII1aHxwXA3kn+BEp3D9VLo2q1HkaCL3OoNXSY9VXK42km1zZ
fi04QxxLYt+TRmk0gcY0llmOwlbW597859JoRUii2NjgKLC0wiuXT9Jofl2A
pbj2KAizHXs5SpRBfOMtgxZ5LqCTS+/qK5VBJ7XCju286gZzKrX6gTUy6Hwz
a6zVAze4/rTgIWOjDCrauZOh7bUbLC2fuqPRLYOUULKcopQ75FP0T+UuySCR
Os5Oco07nI1yE38oIov0L3Vn7nvjAfMibwZPu8micEchqdlKL9Cftbnc4yWL
HE2uJUuCF6RXdR8S9ZNF30juahGvvcDQqIl+P1QWFZ6YmfBh8Ibs4JvVc6dl
kd7d/Yk0J28wf+KQbH5HFl0+uRGtxukDNT5DSPijLLpjr7aWlugLpUEnl62W
ZNGq6vVixxxfyI8gZl9ckUWWvdL7tO77Qsrp+K8b67Lox07GMa0ZX/DLlS94
xy6Hds6X1e4zpoLkUNSf24py6PO7O3YmHH6QYiTQoBQqhz7GlAx0FfuDv6y9
ktGaHBL08CCoGQYD7Wu8kfqGHJq6//iVl0swnG274yS3JYekL64lZMYEQ57b
1/8YWeTRmYvLnzlqg2EgO2WiXUAeNefIftohewx0+dovG5Pl0YHXYWtMTCHA
zaSyahIlj+rU7R4f7AgFsUF7No0YebRM+uX/dzIUiLcTJPHx8khTKfdz+e9Q
MDJ8cYjlnDwK3N1GG1ULg5h46p3O6/LIpqvJPrUgDN5/z7U7cF8euRlaMX+I
CYcHH9gfHVyVR7VriwN+OREQPd7zLHUNax/SXXOtIgK0e6+OD2zIo+ixxlNl
jyOgtUFky4URhzzMv85eeRMBXckkk3B+HOr61R2rJRoJ46qmgzc1cEhRIJi8
fTUScvFcHyZ0cAiyOts8CiLBXax/Tc4Ah5DYc67cqkiYZXISrTqAQ8OTi1P5
3ZHw+bW/JzjiUPrjGuHG7UjYTkj6shCHQ83ucRquPlEAEeb/9pzCobQyesxK
aBT857eLj5aIQxO/D1gcPhEFHNZZGn+TcWjgnGah79Uo4JMvS+DLw6GjUXcL
55qiYEQ4+LJjIQ5Z+a7K1nVEQRaXSmFeMQ4lzXVIGr6KAvGfjzoIVThU67In
7tZUFOC7u3boPcGh3cGyxywZaPCxNVniTDsO3VDvCuXloEHFfcs9nV04xMuD
hi/z0EAl77WNVR8OyfRPNj+UosHq1RyfjCEcImQIaLvgafDgvHv0+CgOyasd
4GzcTQPtsPmbPu9xaL6xveKqFg02fSoqyj/gkPR5mYgd+jRodQptWf6EQ3uX
CxI1jWhw+rB6r/oyDr3zMnvHf5AGyOjnVMwqlj87hfjb5jRg0nq82rKGee8B
10krGnTtPsXE+BuHMiMrErrtaHBJxkjw4F8cGjrjMe7lSANzQVZiKiMemfSF
hpUepQFu8EDRRVY86jSmr/m50WDrcpL0+R14NOtyv/2dBw1GzJ/nnt2JR4v5
KUxs3jSoZucQOcWHR4pXr8998KFBUuehjBNCePSlkTszmkoDj8RknhgxPPrv
lrFRox82XsOXqVFSeHT5/EdrtkAa8P7h5AiXwyOVmT6eXcdosNBocf4YAXvf
+K7IzlAatEenMQQq4lGXbR6vQgQNctV7T1L34NFBraBU7SgaRK3s/O2ljker
oaGnv9FoYHHP6ri7Jh5xzeQn2R+nAT7w6rejunj0NnYZecZg48EPhDoa4NEd
cVtz3lgavJ7hXbIzwqPy+3SKP+aaAlt/6wN4pEbY0/a/34MluabPWpjhUaL7
FZ8/WHtP0WGPQ5Z49N54/IU2Zp3XAu/22+LR1Sf/rglg/fGm2zsZOeDR2KPf
9pexeBatMocNjuLRH4GWB8WRNOjgGrXWc8cjCuiYOoRj4+kWfqXljUefiwJq
b4fQgHbB6RDZD4+MSvQvnQ+iwWHj7E7VIDy6WFUV9g/LH/7fOFIOxSPmkqp/
PFi+/7aIPVGIxKPfUerj9e40GI1z0SUcx6MaRrXMZWdsPJp5j+RO4FGgzq3h
R0do4FUrWSOeiEebhjcP/TKlgW6I+26RC3jk/n7n4xBsffErFpQJJOPRePcz
6TA9Gjwtkinkvo5He0SHDXiUaJDv6SWxIxOPrljxqlfJ0yBa8s5N1hw8kgn3
vdwvRgNilvy17dt4NMwj87OYjQbbdr7cf0rwKMkrUs9uKwrGeEou/bqLRzH6
1W6J36LgUjIhcbUOj1S1H91zexsFn08qRM0CHiUU9hdMl0ZBp27QylQnHj2+
r70edjMK8tcrgt9145HPdTV+2qUosIpQ8h0ZwMZz9C7XWGAUEPeEvB8YwdoL
8OE0nKPg32KVa+84HtH2TUUxmkZBna+K/bNpPPoWe0L1k3wUJMuGD3TM4dGW
m/roFk8U+EzWHqYv4NFNWznFU1uRIOCkfqBpFY+yOE+ZNg1HQoy5hlYlAwGp
4r5c+xYfCV9NyovSWQiooCcBanwjIdBAnCeBg4CYU2JfDFpEgqsaw4IFLwHd
Ea3Ys188EpDwq5wvMgTEvyf77qPaCGjmobCN4gjomwZ556mMCCDveBDVRiKg
1u+yY4UxEUDcumlxVZWA1jw/eX3XiwCuWd+/ahQCKve+eMwyNhzOvxsNEjMh
oKOqau5mGuGwPWI2ymhKQMV3zdQ/fQ2D1eeqtUNWBHTIsJ572ycMgtuLJFrs
CChm98abSPEw+NAsdKnYkYDV/+lCpwZCwa3+0lqqCwHRLU/KS10IhdHqP17R
HgT0ob4/Il02FKzLw3rdfAgooIJ1aP/NEOi+PaN7wJ+Avsab/8jiDoGWjOf8
wmEEpF3hn3HgRzDcPpHR2XiKgBJnHohs3g8EMRqb+u1EArIOUTQdlw6E9JAT
ty5dIKD21vjIqpQAuODpGXP0MgHVFgmMeHv6Q/ABJYU/+QTUqL5QoLLtCxp8
T1MNWwmImDscdUrTA17c/W7XtUlAGjuXBu6H7IeN50wtTP8IKE3ZJTetyQiI
n7DLiZmIZGlu3m1chnCOQP7RzEVEge842a9ZkEG/iJZRJ0lEZx/xqKKlf5S6
vLXhPEMi6os+NshWfQBNNbPovzEmoqYXzt3vVQ+hnW8FS4RNiUj0o/1af7U5
ChbVjL5uTUQLMuv3xHKtET7zuOBFLyKKrSwKI960R3b1F052UonoYy/H9HK7
A0oczpxjDCIiNiZalc+iI5ria6g/GUlEnd+ua63sOYqyr6zbR50jooeWNern
UtzRs2q2J7VJRLRmu5gPNz3Qz1fChC8pRPRWoBQ3dNsT4ZeJl3dfJSLfGxsF
vXZeyI5L+2dABhHtzFhRZxj2Qmd3m7qX3sQ+b9PK9sPGG9WaOXXN5hFRQ3bQ
0exX3mgqMGCP7G0iurrjT8RxFR/EfSk2072EiNS6D+v/pPogvfKLf3PvElGM
4/hdoRwfFPTspt94FRb/1pjc25c+6BlLk+aRR0S0957kRzeSL1rDdd+69piI
tk1G2eXtfBHOZJy17wkRRfB/mc2O90VnEzdeH3pGRIlhElEVnb6o5jaHYdJL
IrJJLd8y++iLJumiZU/7iEhu68SXClYq4n6vsItxmIiSOHprX8lTkd62Tozh
GBHxbryteWRARYFSZlMJ74jInX/KIdCRim7qHz34+D0RcRby8i6EUNEz16Ca
9Q9EVDlfdUgnkYrW4k8IaywQ0eCeL8FuGVQkn5t8OnKZiMTpXLNOxVRk+zjn
Y80qtl5mjMVU7lPR2fEKq+U1Iop79yphtpWKan49blD8TUSNPz9Exz2jognh
l9IBf7HnsR3hP3qpiEvrbVIJIwnZ3y0acxzG4nVYWplhJaHp/jaRslEs3uhN
RxlOEqrXtM2bG6OiateLioK7SGibUWONjPm7seAWBz8JlVu132sdoSKt3Xf6
/gqRUKmaaHLiABUl8Knc+S5GQp9anY5ceElFsNFM+yRFQh4chYMvO6iIZdr0
4IQcCTEo7Oyxf0xFZs9HRAcJJNSo1s5GrKGiKzXen7sUSShO+62F0R0qGs5c
edK8h4S0bGO9K9KpSPRUwrVadSze9MZd3ueoyJ3K4VuiSULBfM3ixyKoqMgi
UzNHl4Seztw6/NKNij7tlee4YkBCU6LnjiWaUpGyeO3bc0YkdK/ngmGGGhU9
Wug+E2JGQsobAVJDf33RZr+DnbclCbXmnW9kmfVFho2zeEdbEnq1y0D+FrYe
ui9svaAcJaFdjX8vcF7wRTtDk/M13Elot/D+nfM+vsjOXjhc0ZuEkrKLEtUo
vmhCXk1QIIiE2lzwVoQfPkiO88lH9lASOt15QWMEW5/+38web0WQkElpAv7f
bR/0le7r8TEOi0/mjsHIIR/E5H7z7uNLWHzGupIvkryR6X58Qk0aCSXUlAiX
2XmjNKX7lsXXSMhF99YRISlvJLT58ntaNgkVbN+//6jaCync3Nb3uktCT+Tv
pN486YlCT6fyOFSRkOYJYR2+bQ/0wE901qyOhOZcb757d9ID7dPYe5HcREK5
ofUoPsodWQ36DbJ1k1CaowJ/rKErymj6Xvynh4Ryip+xCt5zQeOFZ2JW+0no
Z4+3j4qQC/IOy5F4O0ZCNo4Xr36bcUbRXL1+1Z9IqGTe9ZClhyPKO6CxeYRd
AdVnXq3U+mSDKqudbrZxKaCmGJGTBaI2qEkoQUORVwFFfFk1qrxihUbn28O2
RRXQ3ezR/DxdC8SbZP3h7m4FNH1QUzvFdj9Kehb86q8l9vmJG2+j3YgoyvRO
QfkNBTQxmDTxUNwCEms79/HnKCC1CzOcBgct4ZrIwvjJWwrohtfeDd3j1lD9
SUXArkwBLfRqFtxdsYWFi60XtxoV0H26iJ18sCN4dI9F2L5TQGjawm2i3BNC
1f7sbH2vgJIlP3T2B3vByWzpe8Q5BXTvPX+cDZM35AT6zf9ZVkDE0F9tMmQf
GOH4cbRsWwG9SeC7lZxHhQ8Rwr94mRXRQY3b87+0/OD7uO6NBHZF9HzHltfH
IT/gqTjbZ8OriLisDyVocAeANF/JsRZBRZTs1e+ZVhEAyieecxDFFBFuyIbJ
wTQQ9s0slV6TUkRf1m5eSJkPhP///1J0RSyCW/F8EPwfF7kMgA==
          "]]}, Annotation[#, "Charting`Private`Tag$8380331#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
hw6i//9/UrTvU0nLci8H+j/EhO3c
          "]]}, Annotation[#, "Charting`Private`Tag$8380331#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
l0NjbwYdvToT0P+/b0V9BnGN/33f+j+FPCMR
          "]]}, Annotation[#, "Charting`Private`Tag$8380331#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+YY=
          "]]}, Annotation[#, "Charting`Private`Tag$8380331#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
x4/xLPQ/Ipc+Yg==
          "]]}, Annotation[#, "Charting`Private`Tag$8380331#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
f78v+x+dIAF4
          "]]}, Annotation[#, "Charting`Private`Tag$8380331#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt23k0lN8bAHDZQ/bs+8wwlqRmrGGuLVsiSyRZQ/ZlpEJFSQtlF1GWRKRQ
tiLzULaSJXulbGUNiUjS7/2e8/trzue88859nue+997nPQdp9yBrT3o6Ojpv
Bjq6/z7NTDkN/kjLw6FrHw9tjKagA9VRy6wS8oAYNguFPqYgJen5uwIi8nA0
9eJU1VAKEr95zBwvIA+jGm9wXX0piPN328Y+XnkgrqpHenanoH8n1YoonPJw
tUWWIepNClruKbSxYJMH88erfbwtKWhMm2/HcWZ5aH30j0mRloJ6H8Y8OUUv
D6ZNDypb6lJQM//y8fBtIhAWDZcmK1PQ02jnnbGbRCjdf2AorjQFpTkcOJm7
QoRNhgcsLndS0JXXJTyPF4ngmdwfnZGcgsJVhGgv5ogA6n1M9tdSkAPrmvDg
BBHieqrTzoSlINMwj7bJz0RIe2XXPeKTgrTGesN+fCDCQI/2mQ7nFCRW96Sb
o48Iagccgu2MsXi9T10xeEUEGweOp7p8WLx9g/uP0IjwibBnhyITFi/FaMy5
ngjS3FeiH/9KRoWCMgcinhFBVts65NxwMvJu+7hccZ8Iq5slLea3k5EDyexe
Yy4R9GvfIta4ZGSSW2femU2EnhT+co+wZKRwJr1oOpUI7CWprX8sk9GirKWT
RCwR6hwT47vpk1F4XHNb/EkiLAu/pG3aJyHvFZXTWa5EKFh2HZHXS0IOzrky
xU5EKJtn99+pkIS01KLON9sSQSTvc33DWiL6+1WV9NuQCLXV3tpb+xJRrFHJ
PS8CETIuzrTwJ91EEB9hJSlNBJqK4rMF25toq9ecfliMCFElfkIk4ZuI6rzo
acpPBBmZljCBvATkfoa0R4mBCF8ur2ZdKY5HlJKX9T/G5CCmUJAWnnsdbXK8
H47KkQMhDcb6PcZXkJrN/RuqmXLAfUx0WftfLArNCtNeTJWDpBb5Bb7aWDRL
EMxziZeDO5XsHnjZWDSs6+StHyEHKfLbweL0l1FN8Lc1Fgc5uEwOVht/Fo1C
+jd5U/nk4LzcAacQ/FmUYW3pmMYlBze4un9zZZ9BDT3389PZ5eDZ3pW1aZ4z
iPndIZVMBjkIvvpL7ShdOMppuWdx96csRBf6Cj4ao6L2Gv1rxX2y8Itr/3FX
ryC0SL7d/bBbFop4RTfYXQIR37N5gdK3smDNUPSi3iEAOZenPSh7JQvaic1s
hyz90M/ib82Vz2SBO2DLQtnMG0lk3fhbnyoLm4YjV+PfuCBDwS+GLxNlwfm+
ggCTijPySSclNMbLQum/BTvvTCdUlfxJpOmyLKip6EhMhxxDpjeUNVqp2P1D
R/U+GdugsMj3oT02svBQXmFvzD8d9OaEyMwUnywkFE+Fy9ebg2WuNmWTC4vn
EcuJi8TD0D/mnMHFIQsmjZnZu02sYNTjvqEWoyy8+CSlp1dsDcs+SvmJqwRQ
W//VmmhgD4Lhuo5aAwRw3ZAkvvnpAjm1rpWWvQTQccu3i7ngClK/L7F6viNA
aumnroodbqAQ1VaT2EKAgrXNwXYGd9C9ZMX3tZoAxa+iDEd+ecDJW+6diRkE
2Jxt6zie6Q2z3bG4BykEEPw3dV6E+RQE8hRHvLhFAFF5W7xv6Ck4kzZP/BpH
AKn29zX1B33gxp2wK1pnCDAdt76B++wLXJ8yPllSCXAl0/ygF/KDNPHnJM8g
AvgOGXlo5PvB3by/44neBDg0OxgR7+wPMhOSmg88CGDW3KzEUe8PRTj9pBcu
BOjv3xYTEwiAiqI43a/2BJgaeVLtVRcAqjMP0zdtCAAufLqb9IHwQv7tApcV
AVpzI5tkDgXCqzKubC0TAryNcKHofAiEwaeZ64kaBHDve9w0/jUIjq++OPyA
TICmCrLXM95gGFMdffBChQC2MWJLb/YFw1ydtO1XIgHIdrcObwcEw9/G0got
YQJ4eggKZ38Ohs4Pezn+8BNg8t3EWY8/wZDzq8q7npsAukx28kGCIaCtTJPQ
ZiXAyPRNkr1FCHCYGUZsMRCgOotxVs07BD56dgw0/MNDFeFSkWt0CETc7UvQ
WceD+siP5cyKEDB77jDzdwUPDixpI6VtISA8MGrQuIiHfrG7Mbs+h0Adx8ym
7jc8bLIZtr1lDYVfkVun0AAeCq2uKB0/Ggqtt2Ne0/XiYWX3Pz6ZU6GQ/oxZ
qqkTD6yjufLG50KBPM89pPcaD7XnazKeZoUCI0vGfnrAw8KJT6ZbD0OhX0b0
VnM9HsQtrk+U1oYC1ZFgZPAMD089hyN1+kJBP7w0j6Ecc7rCMH4sFHhT9m69
KsXD5LhH75mFUHjaofnMsAAPYp/mj3gzUOHS10ZOpnt4gKQ5MgsnFY7sMPRt
ycLyCVTxFxaiwrLGYemDyXg4W/XjVrYCFcC2L4r5Jh4eyIgPcpKokBjsMNx6
DQ/n2paIf7So4JwwSroaiwdUpKfqrk8F5YfuicbReDjYPPfQyJQK26+m51ii
8PBJ4tW+YksqdH3xP9h+Bg+WtILz1+yocO/Pj/xrVDx8L3LTmnekQoDgmb8m
QXhgHhna3etCBW3SlsNOPzx8cxh9eeAkFTgsY6o6vPDwUd5sTOkUFT75MnPf
cMcDyfKXQpEfFcri4v3MnPGg0/ncvCSQClEF3G1sjlg8hf7L6iFUMG9Ml3lr
h4d7H7612lCpIPJB5EL8ETwkhdKd3w6jwtxa7oi5BR78g5JBM5wKL3gIqhym
eIjuD6GwnKHC9T2lSZ2GeBB5cK74FGYH070LCQgPV6eii1wwEz2rjC208SCQ
4TL3Hbt/I1rz/i4NPOx++V1qN+a2nMbtdyQ89DoxbAxi42XUGTje2ouHrLNn
xVWxeLz626sPK+Khno9A2YfFq7ZswcMlh4e4feNs77B8mDj6/Ltl8GA0EKvM
5k+FfjmH9kQJPJjSz9jPYfUoNBjFWYngwaAgSmTNkwphLu4XuQXw4FluYFiG
1c8wcvpDDw8eZgUaS9k8qMB/218teRceSmc5LXjcqDD59EfykZ14iNU4ptDk
TIUc5s1Ljkx42L+6QjB3osJRR/owjx144Pq8dSD+GBW4nrB5+v/FAWngw4FL
R6nQvoPv6OnfOHhRt7yqYoM9b3aixhfWcNDoXaCWic3/gRKcxtUfOHBssump
M6fCEyuySNYsDlqWDU3lDajgXajNXvAVB+2xh9oidKkgtWG4VTqOgy7K5Idr
mlRIzbX73DCCg0PFFnSflalw6OeJ7pYBHGzwzFbIylOB2dgLunpxwCd1n7wX
R4Wzi+EFYx04+FVA//OSABX26V9MnW3BPBDU2c2FzXf61diVJhx0EuNrvrBS
4YROphfjCxz4lx7fNN/E1lfCcwViKQ7sYq2W/D+Ewp8vTaL7irDxxET/zvSG
QhXpDYdWAQ5Mup5mKHeEgtzHD4vmd3DgsD5cKoytVw6FradBN3Ag8WaBKS4p
FFrOMxaejcPBrkQOac+4ULjQy5EecwkH5z2FDPijQuHHWfEzqRE4OPzq8shX
r1AYbNM9UOuLg8SS9G1/rVDI94x5tW2Ggxn7nfkwEgKOz69XsRjjwLPjhduO
dyHAvyvlAbcBDrh1MyQlIQTiqgquyhzA6vXYsWf1QQj4M7w2P6iIg5NszNWS
wSGgls/cf5MdBwd+mdLL/wsGre6QDj0WHHw3E3nvthQMun8/Na7R44Axb7sn
+kswHDz2rOTEpgysV3yKPE0LBnse14t7ZmVARHXs5NELwXA25rnCu1YZuBSt
y/ybIRieu/nHcFySAQmpnZfY9wWCtsx75fgNaXDgWvOYcvKFPD52ss2qNPCj
i+sVur7AwGSoKbosDb8rjr68JOULb6arDR5NS4Nu8qyTxpQPODzOcng7KA33
t2KP/vXzgTANt0vs1dLgzQI3zp0/BWWHlwfiQ7Dfy1h7L03zAm4k/9EmQBq+
W0wFvyr0Auo+9zFRH2n4MH6+8OwNL9Di75975CoNltsWQhJHvaB9pPbfW0tp
yHr00MB+0ROmTl6U51CWhvbpKFKqjCeIRXKeT5iTgiJv047qOx7gU/hG8O43
KXidWy97NdYDat7FPX08IQXtF1uz/QI94IjUv+muD1JQZ8DIFqjvAXEtS9Y8
b6XgrMrTQsd5d1ji6iVmPJKCaya+lDHkDs2Fqf25/lJQ/mYskPWPK3B1WQZV
nJKCxum1s47TruC0zs7WdFIKDDnTrjT1ucK6aSxlwkkK5i53THaVuYLSUlgp
3kIKEvnMObncXCFd82h0yR4peDpoJXH1ngv05Oxz8BqVhK8mHo0q4SeArjAo
Y7RfEr5LOm6pWp8AlUeP+207JYE+ir/UR/kEJD2XP2JQLwkqFYpNx6edwGpQ
2kwqSxKeXDLv9zruBD1cvNofbCWhMC9Bb8P8OPRcWpE83CkBmoY/e5kOHwO6
GyrOLa8kYP/ZH5eS9x4DleTAHO16CSBkhjIb8xyDpNw5IcVSCei7ZvdDecAB
rBomeFivSYB3MZPForMD9Ky9Z2g2kICJErNutgh76D71bFq1XhwevjD88KTL
Dt5/WbfSfSYOZ7XXmhZr7GDwqPaLg4/EoW/P/pHDuXbwybAlwT5bHD7LdHME
BdvBnNTQvnOR4tBewdSqyG8HjCObkQ0HxGFRecbvrJstaJnqcxs0iEG4RdZ4
AK8N6ELcOfMqMShKbZYM2bYGPfW3EzZlYnDZ20svac4aTAi21SdzxIAvKvuB
9CtrsNvh5RgXJQbfniruvXnaGoKfXy/s0BaDCwre+32+HIEi+V4Nq5eiYPTB
1c6w1QpOyVU2RVeLgvcG2+2BaitQICSbVT4WBSt81JXzD6zgidQRJ957opC3
rFGxFGsFtYK9F/sviEJBLOFOqqEVtDP1tjogUUgpc7X9mmgJ8+M9tm6vRKB7
Z/nV1gYLePKlYjS5XgT06/wW5/IsIHg0yav5mQiYHN4OV7tiAavDVmdxhSLw
vrtPQf+wBWx192R/jRUB1ui4DtmJQ8DZ2DPhc1AEyId1jDa5D4HKnZ7g0A5h
+O4bZ3z6uhlcOxRO/xuEYZLX2YgQbAZj26JpF+uEwerjd/zWUTNI9PCuTSgW
hnRB5yRxghksKm3/LboiDEcMs82Ir0yhjKYY/1FPGFbzHUZlmU0Ba2YfGL4Q
gkMOYB9ZYAzRt5XU31YKQVSp6QGTm8YwbPq+/UiJEMwvJpipnjWGq0/EF5wz
hSAi771R0GFj+Hamav+5cCFQnLKRcd46CIVsE7TH+4Wg5uM6G4PzQZBW0fkg
8EgQhjb5jx1UN4JD1rMZyvcFYYSiO7MiawRnw9JtDmYLApst/VqNgBF01X3v
PB0vCPZtBLorvwwhQu8erd9PEPynPRVUaw2h3/pfYYqSIDyLVDzQrm0Icaeb
gjifCECnZ3dFp70BVN4OUJItEoD4d+mn5cwM4NNz4VmdewLQSJjVTNU2gP3b
Ie4BtwTAmLuuhiJtAF/iZOw6AwWg3gGfEzmvDxqZl7Vu7BWAjdlaov9lfZh7
YcTEXLkbcgv7P2WCHjxKrn1DfbgbEjJ4rzBU6YH/Kfmk8dzd4GcjmBpTrAff
d+8SfXlrN5iL6oXW3tKD5eB+lTD/3dDpWqLJ4qwHv2Q9nCbkdoN62aleCTo9
oE+NftZ4jx+Mk2JMA44geOWzclYpgx8Y+lxMuYwRxKKTundu8oOy+UmdJm0E
TIvGHaej+EGq41GqLREBqynXFyVHfig7276mSoeA899dtuzd/BAxwTvh5UkB
Ub96tzMJfKD57OZEMNKFO+3tB3fF8oHY9ek9jnt1QUR2UPF+JB9QX64vOElg
Hl9e6/Llg9MDPXpPtnRAyF72hqwpHzzoiiqOeqED/AbJTweY+KDNMMzvkZYO
cIh6M5Av8oKvRqGozyFtSDgbNtMRzgvRN3ReIF1tYB+MeecSyAuTHzRL9qho
A1tyzu34E7yQwfbj50F+bWBlea84eYAXYiuD71JHDwDTT23blA0eSIgKMM2k
HoDtN7wPlkN4IFPLYMH+sRYcyZStFvTlgUDC93mNAi0o9NRq0XXngT0S1oLy
t7XAjM79a4I1D3Br2z5Wi9GCDNVKgjyJB1i1fTcZj2rBnjzLIrdVbqCNe2q5
0GuB0+mE4vfh3KDsP3Yi1VMTyvXzan8HcgOP85EZDSdNoOeuapPy5gZZavWF
eWtNeFj6cTrQnhsSdzrHn0GasPpFgciuwQ2/f7uZyItpgkB6ypGrK1yw78LL
0KkBDaBSOGx91jmBp4ElXd9aAwwNaFc8vnECv+kigWaqAQLGobUnBjih5mT4
LRM9Dag7PCxi/YwTqsMrE2NUNGDrROG4VhAndFk0/rzOpQGxUdpBHNO7AFJb
+UO61SHjuf+N8kEO+NNNLl8/qg7eLyUbSlo44Ndtb+8uS3XQaHr//X4VB9Te
ejdVbqIOH9o1jmSmcEBQZed6ipY6SAwzCsUc5oCfPm83hyTUofhXzgPrVnbY
l+V99MisGtSR3sFaNRvcuUgfkndFDVQEb5rwFrHBNn14iXC0GjzcPNSjnMEG
/c1FzXci1CCzqfOLdzgbcBWQfKuC1OCMZef2iBobGMUVWhs6qoGa31vtxtqd
MCyt8qRTRQ2qCjrq4p6zgriHQE3jhCooxV1H90tYIfviacKuz6pQ6GPaTsti
hfs6skruI6qQptIxtHGOFdSz30xI9qgCtbH9l68WKzxpRUqzL1Vh/4c2smU9
CyyorMyU3VGFcp7WCsGXzKA+OYlt3Kpg7cxjNvaIGTq6jFLjbFXhV6nT5MM7
zMCunMBgYaUK2oY/d2udZQa8oWHnd2NVaA+XinQiMcPhmr7t8+qqMPYxwii/
hAmeL23P9wiqAk/R3g8KGYxwPI+OYccoGapWIqg/Yxkhznr9R+wIGRworRwN
VEa46dTsxzlIhnvDThSLI4xQGWbzcV83GRTYbxQGcTBCTepHs/ImMugHTwVW
XWKAoHhG8+PFZKBqZTHoBtFDEdOswcVwMqSliX466kwP5unurg+p2HiLd6uC
LOgh/xAv52AwGeu7CzzzFenBp1iGheJHhrPsZW2MMzugBPkPHnQlw4VPjfFv
XXfA1+xOMXlzMly7MMV3zJoOTFo4J3jwZHg47LUQokcH4X8sYpulydCxf/b1
DRU6uLdDnfWMJBnYpr+fbuCkg6kV/tx5ETKI5C6WUzL+0W7meAbR85KBoMev
8e7qNs206PK7cToyaF1xMZnx3aJJZivmDY6RoGPj/ANn8y0a75BgO88XEjj4
59APKG7RFKNO91mOkuC0zUhD08If2v2x0ev9IySokLbZlx34h2ar0KtA10cC
ucaDIodDN2n6F57OjLaQgH99z8Kzcxu0E/zfyvMek+C+7yFTBccN2qIbuzip
jAT7P/sW5Wlt0OS4fITaS0lg1VLsevPPOs3FW7b8dzEJ4lOlB7zOr9PSZAV5
IwtIQK+yu1E45hct667esdXbJFg6tZV48doqDeeITJ7EkqD/yT7uw16rNIcc
P6HTl0nwYtUrScxwlXYjbe8V3UskiI3uTXr+7yeNKXVyov8iCUQyi5J/hv+k
+VRONvNFksCwzSrV23OFdvHPbi32UBLI74rjUzNYoVXpcPmvBZOA06Y+lVF6
hRbCTxaaCCLByGdCWv6nHzSlhr1DzQEkCPy1mfbR5gdN/67m83wfEmQSHmRY
6i/TsucW7PvcSHDe74OAhNQyjSmZqD/lSoIWd0nlkT9LtIzGQ1fXXUjgGLGq
zEddoo3MnxchOJPgSsk9latui7TT6l17chxJ8IHlJylId4HWMBRpvWFDgsLU
E2SOzXmaFUcHnTLmIMl2ckn1PO3Ri/o5T2sSMKrfVZ1Umqe5NoHPJysSKHsZ
q9uLztEcJNNGJy1IcPl1thZlY5qm6l79zdGEBDNdmqmeddM0vdqXwY3GJDg8
MjQff3aaFn1ptReHWWSR7+7wxjcaL1cy36oRNv+CCf9Cfn+lvWf951VqQIJR
36jXhZuTtIT0DAtfCgn0T4uIv30xSfvzYMbvqy4JHl6sO/0jYpJm8fatqTvm
sLRVWd0/EzRyc5O+mw4J2Br9rw/9Gac5uPZJhB3A6inzIod/8wtNyqFF4bs6
CTTVf1m4RXyhMSe+5I/FzHho/7/Hm59pKFmjTgxz9ulSN+M/ozQzT5KCjRoJ
2tvvyEZsfaT9Mbtf3k8mQero4FBr1Eda80eh4+cwO6/wXuf7+4HGz8f2UhLz
mmj8fNnfEdrGxMeCEBIJZIIiK75sD9HoWQrn5feT4PvlWjeli0M0/7cn0Kd9
JKjL/Ml77t8g7Q5PgkkSZstmv9O8dIO0z0nNIX9VSBC120nLaEc/zcJxW2xh
LwmMFTLnk2P6aOJKr+jLMPNS+nM+7+ijzTmuZQZgLjl16N8Z+vc0fh2JgTVl
EgzWa78uZeihrfHOxohgFjvn/nmFo5vmuzT1YWYPCRIizMlJvF00s4n0njrM
fufFx96Id9IEPpUkncD84QKz2incW9pJ86OO+zGbRS/FM8m/oX3LN6OxYla4
3KSOyO0084G7x14okeBObOnNUc02WrLIwVvpmNniUicjKK20XsEOp1DMc9c8
E6vNXtPY2FdaVDA73jj81drqFc3TZ9yFF/ObePUDy3bNtEtWuilrilg+t3ZO
K7gBreN6XyNg3i/19VzSu0aavaFd3UPMvLhawtvhBlqQw5BJCuYVwvVepqkX
NL2I7aDzmHuJx8+jpTraDuegPb6YKxT3yEdu1tC+1HZFO2BOUv7XX81UTePU
bvIxwRy8rzd6mfsZDe7NT2titiLfV1IUq6TJpq1sKmF2CZyreHv4CY3aE1Eg
jVki7BarnmcpbYhF/rMg5s/n9rvWRBbR4hbzH3NhvntxsFYxpYBWoXGDeyfm
OrY1Cf0jd2nX7sQxM2JWF9DpUrqQTkPtBxLpMPsZsP1RPhpP2xl+uHRbgQQ9
VeRnrK5naAIOHvb/uT+sTHd/pQsl7ilf13++e8Zo1irnMiXnjNC1/2xV4dii
k59Mmb682PcPc28hr4BNWBZlL/diJf1/9TzkSaq6n0fRtAuSYcE8d7Dpo+7N
Qsq7+DeEXZgV9MRjO8IfUioX7Bv4/4vnwDklW9cyypOKoG/imAfv+Pou4Sso
17l9C4mYf93ObKwSfkphN8r9RcYskN7KG8FZRfkd5z2q/19+KateFIYaiiiX
6DFrzA6JMvWMG7UUTQFeXw/MZxOsuN4sPKcIDRRyh/9Xn7iyWtvBlxSNE9uS
eZiHL39gF3lLo7Bknr5eizkKMVYsfQFKVcDs9Z7/6quzn7G6v5nS0il3hAV7
fpS1TZ8Idr+i1LQVCBEwN2q5OkR0vKbko8izhpg/q98qozS2Ui4lPqC/hjlQ
7cHRgro2CtNQ8Z4yzNvkBjqmZ+2U3IunVnoxS+yfs31T/IaiMnTFTAZ73l2U
Dv61Te6iJA8M6g5i1s4suvUrr5siEs56nh1bXxyXGLgPOfRQOnENefqYZ797
5H/37qUUk/3v1GAuaMG/VrnaR1nfpedRja3XpD/9CTu4+inpv/tHfmO+sO+K
3fuMfoo5Z7Amwtb/8btfv1GLBihb6EL1e8z8p4t21rYMUfY+PvSYE9tP6B8d
fX/VYphy/JXfWXfMy2PM2Q4Dw5QkCUGVOszvDnkrbU6NUNj3D3j5YPtRHJ5o
qcP4icJWjrYnsP1qa9b2jZv0GMWJ66Q6SYMEPxkfK5t5jlF2C/PTFWGek2RK
3V8yRqnOdWwQ0cTmw676OMO+ccr9ygAeNi0SVDft/l6IJijrHX816bSxemYN
cs24TFFOhNBpGSESeFYph/Xcn6IISpkO9mJ26o4brpueonxQUA921SOBOZN6
/vWgrxSh7ZbCy/okIIbc3q948Rvlne4O4wlDEoybONgF3puhTBlclqE3I4Hu
1yi3d6MzlLTLUp/uY74Tkx+gJD5LySWc9zc2J4H1i7krc9mzFK/drwTTDpGg
WfF8jVfWHEXCsPi1gSVWf84CQZe0BYry+N/hv7bYfJe24hr7Fii2va/rX9ph
+5Hx/F5xvu8UO7Urty4exfaXaLLJx+TvlOuTiG2nA3be/Wg9a5+4SBH364gj
Hcf2o7m1BTmjZcrKvkNr09j57KrBSh06uUxJ3hxNa3Mnwa04kd9xscuUBLP7
OiUeWD1lKEzfXi1TVJkEK0M9sXiOXxMv1P9BqbrSbi6Bnfd870QOS6EVim9N
dOUI1i+sllPKhQ6sUtrP/IucjiFBp+IB3uATqxTvxJpaCaw/uV+sdrrt4ipl
Z+O7dAesf7HO3XMg/PUqJcSj42B/HAkqb4m29VmsUdKmKj7Ox2PzE7D++Zbr
L4ptoHD3vQwSHJxd0ft26RfllI3Q2x2ZJBD3XCzUefCLsnRcMc87CxvP6avv
wuwvSugHrckDOdj+cKjvlyl1ncJ9/4USC9ZPTSuUczLFbVAGuAXeKj7B1ltR
aYjTww2Kx427Ky/LSZAhU9T/7A12nfRd3qYSG0/k7h13rt+UC8IpA3FVWP+x
M14WMn9TyoweR/PVY/Wb8dKNfLRJyevegW9px86fBxKBP3q2KDtFZ2/mfyNB
DXOZ9cOVLYrN/G+m1BnsPPbWVHfh/0shqn38cHWOBIfkbene2f+lnPrzrzhy
EYun7HrKw89/KT8ueysk/CJB/rPVGpeFbcppA58DOBasv3b9+u/bZTq0PCzJ
NK9ABhkepdDmNDp0vitR3GQPGZKaQqfuPqBDiyztSiV7yRAgQ9dh20aH3oUe
NzpDJoPslEhKM9sOlOGcvm6gS4ZMbyv8veQdyIuSiC+0JkNkYL2JXS49Ij45
1fzgAtb/U9ZOcpbTI2trW6JjDNZvc++NaWukR4HRPpm8sdj9lQXPNT/TI+n+
xoeJ18lQs3pdQUKcAW11jjDVp5FhJcKBY/oOA6rMW0388IgMvlfXus9mMKLx
1o8VTNj7yX6HvQv7ihgR6XGysuYYGX4TfVjnqxnRnipnx5BJ7H3gzSd0YoAR
FeKEhpdmyVC063WlHj8TOnJlW1l2nQzjqSmpbClM6KKmqfsFXlVwyNtrn3OT
GdWn2uXsslCFVZbPbiX3mNGRZvM76kdUISkowb+mnBmJb/+RPGWnCh26szE9
vcxoYIbr26cTqqA1WlDGKMCCdmeX2gkEqYKYiAB9wD0WVL/Wd7UnRRW+pG6V
6ZSzooA7Wm55X1Qh6k9prRmwIqN/9PFlU6og5HGs2b6XFcm/K3eAWVWw2l8z
FPKTFSUvHWD491MVoCeIvkh9JyrRzp1oYlWDgl2T9pywE11lLJNwI6mB19UO
+i89bEg/1or495YaOHH51XaMsaEM5grunDQ1OHKbw79qmQ3VvNdnN7ijBtrF
lgPXudlR2A10suSBGvC2DRSTrdjRk4NWE8MNavCSeeLQjW52pHzKZbVzQQ34
4zYzVLs4kAydyl0HG3Vg48wxl/rMgbybpGq4HNXhX7oOHfsiBzo6qmbe46oO
cw+ifcZ27UKW3jyCgYHqAC3M2vEWu1BoCilU/IY6+DPxjY917kJJ9W9E7V6p
w6tYRcWEt5yI91UH6aS2Bmj9S8+T/ciJundYrksYasDTc3QCTXOciHNM7NyU
uQYUBA7Q/drJhYy0fDcTj2vAJYeLgy4mXEgor7LNN1ID9JX6YkgtXMiLiaCk
+1IDxnx0/ANcuJHikJJAr6kmiBWvFGl5c6OqwoMMjDaa4DBVPM4SxI3Osnu3
GDhpQo8zr33BBW406ZHKPheoCWAzrTd0lxt1R0RT+9I0IVcnWVDvEzfi3P3Z
ijipCc48X5v5j/Ggl9mqByxvaAHjnf7VeDcelHBjYVUxQwtKZV7LMvjyoHOf
vuiJFGjBOun+jR8RPCjXa2JO8YUWJB11s+7K4UEcT+45sc1rwavs0fGrYzwo
+u6ejr+HDwBRdpDujzcv6jhO/z2doA1dT1r2hwbzoka3EoNykjacVq8+OXuW
Fzlqfub7rKcNzSZp7UPXeVHr4u3iKGdtOO5nnVT1iBft9Rsxa8rUhlsVXZKB
S7yIGsy4doVHB35qtemOh/OhytGzkTP8utBqU2HUdoEPRaQrGL7D60Kmf9ah
x3F8CEU7eLWTdUH3np/juQw+JLQnDk9vpws3dnCH89TwIZbM6itxGbog0+7w
WG+ND83ZvGmbE6fAEbs50QIqP4rfO/VvQxwBPrBP5lokPzo2TOdvLofgV1yD
fOBlfhQa3i7ySAVBTt0tda1UfnTjeklGigGCGVGSzfun/Cioc9aD0RdB9ETk
DfoVfrSzS0gt7jmC8qBdv92DdyMP1vHWLA89WOhTWV85uxv9FH40/CRIDxQ0
bNcuxexG1mGBjwcj9aCQLvtHQcpuJFM9tMslTQ/uJBPnJqp2owL9n4/sWvUg
9pnBR/ffu1Gdj5Hfyh59cFw/99L9kgASeMfhVcphALeP361fuSGArjBdELEQ
NYB+Gjy/lCqAtvju7WBWMADLayw1BYUCqOvnVHuKsQEYCqc/mWgVQAf1umfk
LxvA3gMVue7sgog278TXuG0AjBe/xbinCSLO1lX/UlYjCKQy2LnlCCK9006I
TtgIhr2liK6FgiiHI2UzQN4Iyqwcu05UCaJbI7jyZDMjsJXpEjnWL4i+kznm
/940gvst1c8s+YVQhKo+5ZrwQdDnuPJVO00IxZ0fmHQwNIYyuoK6AzlCaOXC
ObRkbwwCa43xWoVC6G3G+/F8P2OYG93Yp1ElhNKWXC84pRpDSrn/BVK/EPp1
U+iHwpQxTFjbCirwC6NfTUaHzeNNICYLZyqYJowO/+1bzFkwBSWWB1vfs4WR
+U/5a6YMZjAcJlvx+r4wmmvhPS8gYgbKVvKCoc+EkTrvbV1eEzP4wLz3a+d7
YVRIQ5czHpgBOUwr5hKPCFrf1yn/18scvh0+8vz7LRF0Md0tP5vRApIb3vu/
zhBBauEkgWeSFqCtYCuVfU8Embw8xflDywJSmOyvmjwRQVWJ6xbjIRZAaXCy
u/9OBO1vjPLPHLeATPlTPxw4RNEg04hOQvthMGe8KP/6uig6U1FP/eFoBa4v
tfoNU0RRAMc1njB/KwgP/3Wh5Y4ouiqzusF9wQoKZgL6Wx+Jonej6ULn861g
o9PpYsc7UfSI90+62qwVFKZrDXTxiCGjvD6T/vNHYEv2V/RIlhjq9FHd8aXB
GnjHKhUdC8SQCMcTn/e91iCXFTD4oVQMhf3w0vn6zRqs2b8qfqoXQ4ZONe98
eGzg4VLf4OdRMdSdko776W0DdnWVSlPS4sj1auF+RVFbeGIaMLxYIo4sH0dZ
2WXbwXKKjMPnSnGUbuLVPvTUDvZ/Ghp691wcba2mESPe2EFNoP5QWYc4atjK
kZfctANaquCg76w4aiI6fP3ueBR6Rpv6vhElUOU41bBBxh5+hgh0fy6WQGa2
gwIy7xxArf7t4a5yCdSg9NPv54wDnGWM6XpZK4Ge7fPLnWE8BlsZ8+9y2iTQ
RquSEEXnGDA2QKfjtATiNVZLyi0/BgLMfm8GZSWR6RePNJNsR9C4Q2vpeiCJ
lM6TXrIlOsGUcrn2qSeS6Li/bL/5UydIfnXv2Y5aSRRcRztVP+AEcwvn88nt
2PVJhgJZ8ROQQ9E+f2dOEvHPFofve3ICokOdRJ4JSqGiDztrNUec4avgSO8F
JykkOPvy+XipK2hPWN186yqF+GM2yWLgCill7SZCnlLo5u/8uaABV9DVq6NV
BkihCxpS1e50bpDpe/vx1AUp1PjANYNq7wZmL+2um+VLIeUNWeZ9bO7wxP09
EvgmhWKtz0TdivGABz5RC4fnpFBb3i0thywPyAmWzby6KIW4OxvG1Cs94MaF
iKWNX1LozGBmlsa4B3jekbn3kUUavb/8vVRH/ySIvQ/9kycvjZZvrNcZsXrC
DT2+GsUAaRSSTTfXft8LvKRsFfVWpdHX9pml/bq+QF2K0Nu3IY3MHnHe8nD0
hejGfHvpLWlUe2WelBnuC9lOS5d3MMog3cdPk9jLfaEn88anJj4ZtJT03oND
yg80eZpu6pNkkMofNVEmen/goFdeNgiVQSGjsQST5gAQ7rVlJofLINyYUtv2
aADI5kWK4SNk0Nm9PZSS3wGgp9thwnhJBj3Q/VE+pBII4REn818ny6AfMxuu
CfcC4cvKHWujShlU/HKrYjI8CJ5OslQfXJZBrvyxk55ZwRA2/LY1flUGPVG6
RUsqCQb1d4nDPRsy6FhSbULR82BoqBHcctyBQ6MMNxdvjQRDy3U5gyBeHGqX
MTyvJhQCw3uNe2+TcYj93JLydmII3MGzT37SwKH8dZ3nzvdC4IRw96q0Dg6R
53SZ7pSFwAS9vVCZEQ4FrkUN5rSHwPyAlwscxSFrxXm22u0Q2I6M+z5zFode
WeTgjruHAgSb/dtzHoeqGtw8FwNC4bInJw81BocM2v01D50LBVbLDPLf6zjk
cPFsgkdiKPDIFEXyZONQ7Kp3/FRdKPQL+N48motD/t3HOSqaQyGDXTk3+z4O
6X78zKLbGQoia9XNhDIc6rKsdb/7ORTw7S07tV7i0EvSM1sLOip8a7guerEJ
h8TEZey5WalQUmmx53ULDr1469Nwk4sKytkDVoe7cKhP/+H9Z+JUWE7Mck99
j0NuwZWSjngqPI09ETY8iEO2e+pWahSooB749bb7FxxKlZxMTlSjwqZ7SUnx
JA79fC7ssFObCg32AfUL0zj05XGoj6oeFS4c2vdu3wIOje9Zb+Y9SAWkt/Y5
fBmHrvhXuOWZUYFe7fly/SoO2eUU648epkKLwnn6Hb9x6OPSV/d2aypck9Tj
P/gXh/KywmiuR6lgxs8kG78Dj/Z2Otk9OEYFXK9RwVUmPNo/fu2jpxMVtm7G
ScTuxCO5ZNuHH52p0G/Wdid6Fx4172WeZXKjwmMWVsHzPHhUzT31ZtKdCnGv
TVLP7cajmqvkyLCTVHCOuc4VLoxHp2d05Go9sXx138SHiuORRKKjKvMpKnD/
YWMNksYjldnTq7v8qDBTax7rR8Cja2XfbF8HUKEpLIHulDweVT7L/ykXTIU7
+95FndyDR6oj2QHqoVQIXdz123UfHt1d73D5QaWC+aPDp0+o4lHYrJS37Wkq
4E8l/jimiUeG19OlXMKxfPA9AUd18Oh2pZg89xkqDIxzz1nr4dG69iNxL8xP
7h3xsjTCo0Umtez//h4s7njKhLkpHrFMV+r+we53EepzNrHAo84XfA/UMWsM
8H00PIJHrcet/Piw8bhTbO317PAoutBJ+SYWz+zh9D6dY3gUG7Qn/n4IFZrZ
By21TuCR0+1aCbsgLJ92gU41NzxK/bV0Jc+fCtQr9iYkTyxf77cnYn2ocEg/
8/VeHzzSb9E1+IfVD/9vGCkF4FHPrG4fF1bvv/XCL4khePS1HEqrTlBh8Kyj
JuE0HrGt1HktOGD5qGZXS5/Do7c3xAqrbajgWi72RCQGq4fCb4F1Yypo+p9Q
ELyCRzzfjsf5Y88Xr/y9Ir7reFTg/ncuQIsKrwokczmS8UiDtYeFS5EKOS6u
ojvT8cjq29zvRzJUCBPLv82UhUdHlwTtuoWpIJshk7Sdh0emC5Ev7jNTYdva
g+NPIfb99JztI1uhMMRVeG39IR759BVIxvwIhWvXCTHLFXjEcI7k7/QhFOaj
iKETgEfTVnscxx6EwmtNn8XPr/Ho0XX9isDboZDzq8T3YzseDSlOvQm9FgqH
gxU9+nvwKEYgr2nwVCjI7vH/0tOPR6L8hUMkh1D4N1t2/N0wHlG+ssjuMA6F
Cg9l29YxPDrh3/zlm0woXJcK6mmewqNTQ/RXtrhCwX20/BBtBo+I0eGDUVsh
wGe/z6huGY82V9/8qO0LgXAzslopHQF9tV4m/4gIgSWD4oIURgLSL512f+IR
Aqd0RLgiWQkonMPYt9c8BI6r0M2YcxNQ1k2VtwYiIYAEOrO+S2LX260o1eXB
8IKLwjyIIyCRBoWCqNRgIO18GtooR0BcP4/45oYHg+zWbfPEvQTE2hax/EMr
GNgnPP6qUAhoIqsi8tCZIIj9OOgjbEBAm+i8jwk5CLb7TQd3GBPQuS9PNL8t
BcJy297y94cxH5Dd9dc9EHybCkTrrQmIM915MFgkECZf7L52/ygB5UuM74rq
CYDBx39cw5wJKJAh6LQ/KQAsiwPfObkTEFtwcw7riD+0541rGnkRUOmjZ3dU
z/tDfWobr0AgAWmQB0v1m/wg71zq69rzBHRt5xznHg1fEKYy78uLIaB2/81R
m/c+kOJ/7u61KwT0evp0IYefD1xxcQk/dpOAyB38D8mZp8DXSJH4JwfL9zlE
uY97AZnnVbxuAwFFIKMV270e8JhNbUMWCCjYnRNf9tQdZBlLTnK9JqCMPaO3
bpPdQXj9ls7YWwKq8VjJVSS7wfYnx6WYjwTsRSbVKMvQGToerli3bBLQIRm9
y7jTdrDRRl9P/4+ATirEtB9RtQXZaewwY5BF/reD/iitWMMlAunnC3ZZtLKo
mD3vZgXaBdTUCjFZRL44Xi5HOggV2at92bqyiK7i6SSb5CDl8wtG7RF9WTT2
A8T9yoXQrg/8hQLGskjFrEh3VIiIfIVUw5ItZVGeYCdFZU0d4dNP8191lUU1
c8Twc/tNUOatX7ahl2RRVMe5Lo4lB9T6mPlleZwsMnyUoXQr0xGtdQoQvt+Q
RZ/L3AXsjZyQNbv6mneqLApoJIk1PnRBHNfOpJ8olEVJCk1C9Jc8kFbx1b93
HsqijdydtX3xJ5FP623P4TJZFPblro/ybU/UylinalONff+Q3W2bp94oOmZj
wKRVFrkOVXxT+u2HToVtHpVkk0NBSntD2r6Eo8fHr8rzc8qhH7klHle8z6AV
ff4tVl45lMqkdfD80hkUyaOcvyIshyZ5nMg76c6hW0/c5lvk5dAx0XFpAVwk
qp5pv+hvKocsrboeyQVcRPQnbj98fg27X1zIU+b3ZWRsiI98kiCHqMe4Px/T
jkUJipUW95PkUJMmz1Pvi7Fo9+ablYRMOUR3N+H2X8YriHh7W9v1oRyyn2JJ
7N8Vhw73evYyt8uhWgLdV8R/DWUbkTdtWIiIbjmsP28qHpU+tr/dyE5Eh8pG
JzgICahudyRZnpuI9uONGhZOJqDBr02B29g8qWl3X/szkYC44ywnHyoQURaw
ZvwbuoniWn07/1oQUUX94NyPgkSUrnzL55Q1EU0txFsqjCSiwoxK5r6jRKQ0
JF5pzZKEmrw20EMXIoqfxz94dCAJbTHHVVuHEJH4CyXh0twkxB5UYv3yNBE9
/76Lrag2CYkMdS7JRRBRtvMjNvXuJKRezKfw9xIRNYZGCPL+TUKhxvn3itOI
KLeRySvGJhnFlL8+wJtFRIFqnh83vZNRkuDMcNRdIno4RhH+G5mMHk8r81kX
EdHSwdY36QXJqMHSuqKhlIhMIV9JvjoZvak9bSFXTkT3vtmTKG3JaOZqw9Wt
WiL6UvWM/ftsMlpf+oL3biAiHpHrb2M2kxGzA0NzLxBRf1EmRypbCsIRzbaK
Oogor7JlES+fgvYnBWTxdBHR2gLvhQL1FIQ2ktSi3hOR/5vfvhlGKci5fSj4
yEcicvv2U/OjSwoKUPmzq+ELEREm1Njk/VNQVKbEI9kpIirYDOWfPpOCsk55
fv2zQEQ2W6rPHt9MQQ97rl3y+kFEfQULqs9up6AajTLJ3jUiyhn70yWTn4L6
WX8eK9omoqKcy1JaT1PQZLDAOjeDPFIeVmz7/DwFrQxrpkWyyKM0QoLrNKQg
Or0T+76xy6NIjwYP67YUxFUS3WXFLY9uBPcbS7xLQRI8hX71/PLIS3Hhsun7
FKR0ro1VVlgePQ0VTXw/mIIOjM89SBKXR/yEiLHaDyno//9fhvZJSy2tj6ag
/wHyQkFn
          "]]}, Annotation[#, "Charting`Private`Tag$8380331#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
LWjUCk/DfCJObOKNWCdtNtf95XHMH88wqfrh3tKMo2+vaWA2OfcrhVH2DU1a
Q/QtF2a5Cy/UkHI7zW9WUevVXjLcTChPHdVoo/mXLA3lY2ZNvDYZTWmlsQ5b
csZinkvyTqsxeU2zV5Uz1MLsdPnIlLXlK9qNvf16YpjfpKhpLdi9pOXtDxyk
w1x2ddeMnAfQ5P+0vOyUx/a75NTp9K5mmtHZp8I1mHlwdYS3Q00068ppxgLM
i4TkXsavDTQh/9XEy5h7Scfi0K96mkdmXF4U5sfy+2Rj1mtpf7nYD/lgTlf4
N1DDWEMreaNxwR5zqFLvuQWuKppKcZ7NYcyWyvf2yu95QgtNfFOrhdkteO7x
2yMVNEnbow8VMYtHXGXR8y6ncSyNkWUwj50+4F4bU0JjMvttJoH59tnBOvnM
QlqvHvGvEOZ61mVxfavbNPVG3gN8mNUEdLr3nrlBY8q32OLCfMKAdUPBPoXG
2BPiyIm5p1q5isU9iralymrwnwciHuoeeOJGub9S2P+fb0cdnLXMu0DRMbv4
f99bPnZq0bmbQflxt0z/v/56i3gEbCJyKZMMUb08mMvMvMnV9+5QrM/bLghg
njv0YkQ3tYjiL1NWsAeznJ5YQkdkKcVxx6dx3H/xaJ3ea+v+kGIuZvtkL+bB
mwEBv/CPKaeSTvGpYV7JzmmuFn5KYbF8vMsAs8CNVp5ojmqKQrxnhuV/88tc
8qHsrKUIy648cMPsmCbdyLBaR1mz7TsaivnUFUvONz+eUTa5XW+d/y8/iQ/r
bAefU+QjJEceYB668JFN5C2NUkcmfHyJORYxPP41DhT8s5PBI//NX+cAQ83A
S4qXSZYjN/a+KGgbVwi+e0W5HqpcqYC5WdPdMbrjNeV4RkOeOeYxtasPKc2t
lKK/IrrpmINVi+0L69soYQ6vFqswbys30TFWtVNuT/+iDGMWPzBn++b+G0pX
W1gxCXvf3fYe2rLN6Ka8YnIt/YhZO6fk6sqdd5RRWx0XTmx/sZ/fyWXm2ENJ
ZWhYOYh59qfX3Z++vRSZ/tzhesyFLfjXipf6KXmqDkE12H5N3xi4soNzgNJw
86LdGuYzShft+rIGKJ7LQUQKtv+P3Z6appa8p7wZik7owcx3smRXXcsHir3H
LIUVO0/oH9j3XTIfoohdMI11wbwwwXTL8f0QxUsxofgp5i4z373rX4cp01GX
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
ZSi9due/1dFM9D8+5ipF
          "]]}, Annotation[#, "Charting`Private`Tag$8380331#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
uJh+RHaLZjnfXWoxQYZou/et7T//0kT/hFUMvidDnYSdUlHoX1r5KOunnUEy
SLUdFrSM3KSdaz3VO9FFBp61gz/rT63TBrd9Osrvk+FWoLmJjMs6jWth0Uq1
hgzKk4FVpVrrNDcFx6Deu2Sw7rrtefnvGq07bg1t3SZDeq7EiN+ZNdoI22Ph
hHIy0CseaBNIXKWJTEhT1q+T4VfA1pWzqcu0GyTJ2PokMgw/UOKw9Fum4X7m
OcddIMPTZb8sYcNl2lDIq2GD82RIOjeQ9eTfH9plYsPB8bNkEMyvyv4T84f2
+Xfqdf54Mhh2W+f6+y7RVA5x7mKPJIP0vmRuNYMlWnhV7/6NcDLst2vJZZRY
osnmaOTNhJHh/SThatnH37SUl2dZXoSQIXR18+oHu9+0c+UfbStOkCGfUJln
pb9I47J7Vz/sRYYzQeO8ouKLtC+U9egZTzJ0eYvJv//7i9bOsTt33YMMLnHL
8tzUX7QdNcVRgjsZLt4pUUzxWqCpn5s3LXYhw/ieP+Qw3Z80nWOslDU7MlTk
uqmwbf6gmX3Z+1IOc5hYj8qdxh+0xUeyV47bkoFR/Ybqf3I/aMc2iD3j1mSQ
9zNWdxKao4UdEGn6bEGGC51FWpT1bzShqf3jTkfIMPtGM9e3+RtNl2PcvMWY
DJbv3/1Ij/1Ge1V977o4ZsEF7htj619p/FmitYtGWP75Mv5FbMzQAsoDn1QZ
kGEi8HRnxeZ/tItmpt5+FDLoRwuKvHr6H+2UjNCzz7pkqD7bHP077j+ayIPS
MXfMUVeXibp/p2k75mLW7ofIwNIWfOnd3880ugx91UhtbD4lnxbzbH6iXSNM
xs2rk0FTfdXCK+4T7dtBhtokzIzmyv/ub07S+BPJN0QwF0Xf9TL+O0G79ZC1
yl6NDD09hcS4rQ80xcnfbu9UyJA7MfruxekPNIupHsfTmN2XuC5xb4/TvM45
MuEwrwil/6jZfk/bMPiREk0mg2RYfN2nnXe0Z/G2exWUyTB/oclL7uw7mg+H
Ws1nJTI05//hOvVvlMafF0+fh9mqIyiai26UpiF6vpsB8+kDrlpGu4Zp0p3D
t/8okMFYJv9HduIQ7UCS2Hg9Zi7KcPHkriEaKfVkazTmOwHm/07SD9LMmSqv
7MiTYbRFp/MuQz/N44zFcTxm4VPek0tsb2l7L9gz/jlIhow4M5Usrje0nPkT
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
0iDd
          "]]}, Annotation[#, "Charting`Private`Tag$8380331#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
OBvs3RjLQv8DjfA/NQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8380331#11"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox[
      "\"Cross-Kerr (\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\(y\\), \\(2\\)]\\))\"", TraditionalForm],
      PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=3.\"", "\"\[Beta]=3.25\"", "\"\[Beta]=3.5\"", 
       "\"\[Beta]=3.75\"", "\"\[Beta]=4.\"", "\"\[Beta]=4.25\"", 
       "\"\[Beta]=4.5\"", "\"\[Beta]=4.75\"", "\"\[Beta]=5.\"", 
       "\"\[Beta]=5.25\"", "\"\[Beta]=5.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.73806460274*^9, 3.73806647259*^9, 3.738073228443*^9, 3.738074130691*^9, 
   3.738075757012*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"dda78888-c70d-43c6-976b-3b94c8107691"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/3+vihokpiU8hajwf0b6ItM=
          "]]}, Annotation[#, "Charting`Private`Tag$8380474#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$8380474#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
6jv9gs9ShBX9//+TopG2SLO01knK/wHRU9Di
          "]]}, Annotation[#, "Charting`Private`Tag$8380474#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ANaPLL6rSgn8pCzeyz/lNIj1lxBN6uj9n5QrP50V7N5j37vF1kDnuF8UQb3L
H7xGsX40t/JDwWyBovDRcZh1AgceOrjz770WKOGmpnWkSRzERoj/jQhfoAjx
jOnvn8LiKU9hmXq9QEnmrJdImsHsOXxbKsd4kfLYQzfCBvveC3SKW8uiJYoj
ubHeGJsXlksppaL7liniuymWe7D5o0N5H/+ZI8uUPOJWNnBj81D+3ottN5Yp
p3jrDh/C5hf7jF37LjUvU34xKP4JE2CD57ESbf0HVyj/hC8e5hBnA//Tf8Zj
PVYp6h6mbc0KbGA+u2Q0FbZKOaMeLxGDzUNS3r9yDHJXKdKbpULOyth+bpO+
P2ZXKWL1Nlxru9lAyap/df/5P5SSss7I43vZYFqplJslYo3iVrrn4V9sPmvI
Kzzr9nSN0lQqfWzTgg2S5PMGyt+uUXqKiyRZLLH9xB+nevL8peyZyPCVtWaD
HLZoEiT/pSgz3Z+PcGIDj5njhlefrVPYDnFGi5xgg5Fcaf/Fng1KftiH88dj
2eAla5H906UNiqapQf3EPTZI8NHVPiq4SWlv3ufqk8AGVooODJ3Om5QtCdbM
K8mYPUV34p+Ob1KO9tb29mWxwZPy5ZdHf2xRfkVfHJKtZoMKj8ntqZsMSNE6
QU10ig3k+VTONT1gQMcLLybJzbLBvcZzE49zGdDGjR1Caj/Y4LQ8wxuHNga0
3dVx2W2JDUgT4vFN7DvQ7zDNpN9bbJDsY0tIv78DsV52M5cTY4er/rVUxwxG
FKZRtlxoh83/lBUv7lJGpJV66AbBkR3YeVVD2xoYUYh7oG62CzskP8+q0R1n
RFtOr+3LjrLDy+U7StJSTCjlZMdLNn92WApy4ZxOZUKLBGG1hmh28I1c6Q5M
YkajCu/8vmH3E3UX1R978pjRdWun1O0udvhLPon7XsmM8MmMb+T6sfvA2zF0
ZJAZuZYWHQwcZYc8rubnRoIsKLngzbz/D3b4khCfwB7PgkxL9M9H8XCAS6aq
c9pdVrSL4aVzjSsHLO8cpxWks6Kb6PISnwcH3AuI8XtZyopSD36eP+fNAW8M
Z0N7ellRVdE1ZH2GA/Q+ZhUxC+9EpxKzrpyK4ABJcWHG0+k7UW/razvLCg74
lLBRZFCKQ3KutLezwpxw7V9hlSXgUCs3+uElhd17j/3X5NyLQ6m3jnyaxXOC
rfrL92d/41BYsoIP3x5OgJ4AxjxtNqQ6nuX46gAnZHF9c+YGNoT/mCwSGMYJ
xyPfMH7qYUe8P0i75NY4wY3nVNWbz+xoT+Y78/+2OcHuIadfxQI74mzVa3jE
ygX6+TaDd3g5kAvVhwEJcQF/22C+pi0HErAL9dmpwQX1rF+toro50MXGdb/0
M1wgGLGepNXFiX7d46qyX+YCdu60A7LjnGiuoDJlaYMLthMNGDh+caJ+SkZB
Ogs3zOWGnPzMxYX6XhOjJUS4AVpY9aMPciEbp9tzBXrc4Mci8OVzBxfK+z3R
Sgznhtfhysox77gRQ9vD2VQZHtDbTswkjXIjVjTVFqnIAy+uMAg3znGjd5T8
M2EaPJDlP8iwysaDspfOXX5iwQNhLjeGjlJ5EP92d/ntMzxgrNIfqtHCg74E
P6zgbuGBzycN/E4f5UVSBmwZbfq8IJm/lKfnw4s2Tm3cKjXmBZeJ/C87A3jR
TdfFggwqL/S48ztnBfMioYgP/ckOvACHpo3eP+ZFjOHnxub9eCHD4L6I0Rgv
woUaK+hl8II732ST4H98qLJU630UOx8wpw4sR9P4UEn9p2AyPx8UyjeTmHz5
kBNjdkCvGB/80ciOWgziQ3+y3I6ZKfLBPSeafVcaHzooYR6eS+WD148+fon8
zIdGfnHb9N3mAzJpiOGfDz+SH1KVfMTPD10lLernzvCjAHJN3FMJfrioXek1
G8iPPPw1Ol8T+KGJ+qD9/R1+9HbeawOvzQ+HT9nfq3jGj6bCsm7fdeOH2LIu
Gf95fvS6tp4iWsgPv/XaDL9cEkB9THjPbFsBaD1UZtYWLIC4NKr637sKQLJf
ilVxBLZuW5Uu7i0AhumnXK8kCaAgAeXId1cEIGoH7yW+lwLo8uDuu2PZAiDf
7lJstCKALK1F29+uC4Cd45xE1nlBVET5XRDwQhAI/v3yt68KIvtcvZ0nGgRh
NaJO0f+mIJK3Tj519q0gpFXHauslCKJm6+Dqqq+CMCOhcajvhSBysrc6JSQo
BCFfr0YxLgmiC4mFl3cFCUFpANdfzzNC6METI6N4B2H40a/2ZylQCLlMunAL
ewmDko7DSlioEKJvxP1+fl4YchgeLWbFCyGGD/kJ6gnCkHqfPPe1QgidKri1
83C/MISXm4x6/hVC3K8083xcRMD1z5V6zzBhFCupu8Pnkig8PPy4dilKGH0+
tM9Y/Y4oDNChJixBGPn/LmERTxMFm9s7X2blCKO0lXYDziZRMBVLLPnaKow6
1gPk47nFQHVfWYYnhwhqOda3ZlIsBsw3pkI9H4igKSeW+EZGCfA/z+RISxNB
4UoDrbUiEjDsI0v2yBFBBxhkSwZUJKDI1rXrSIUIunky2+KYswQ4yHeJ/zcg
ggY1o2LXiiUgu6Wy3EZQFP2Co8VKNEkw5rw1qf9AFJ0yPLVv+rMUFDFkVe9L
E0W7+I4Vca9LgfBKQ7Rejii6mXH9lKuANMx9XNujUyGKxPLiIo+aS0N8qV+w
xgAmf8RFhlgiDV/tHUSUBMXQaDgzT0u4DISm4PeLPBBDflHO91CuLKjszN34
+UgMTbUWv+oul4XhC6Sy5mwxpB7iWHS+SRZ22yqKnCsXQ31EUa/1T7Iwwqo6
2dEnhmy8v6SySsqB5gW90DA+cTSxot+rlSwHU9Z2NT9jxVGM59eGjifycL+u
z685SRyF3H8nql4uD/pKDrKP0sXRvNzGrrJmeYhncY6kloijIfwL3J9peaDU
uTlmd2LcP7P8QhUPyYonFl04JZAhUc9h+zUeDjDfUGy+I4FG4/fGtDEQwaNe
b8A0XgI9/9ltYypChEuXVoNbUiVQdNPJoa+7iJA1c3qg9ZkEUps9FeNxmAhr
HW433nRKoL9TFNr1KiLkJOoNdvFJohMy/v3/XSLBBmk15EOKJIrsK3IT4iUD
/+fnyq5Zkmjq9BGPTSUyKKScHhoplEQWkr31XOZksOeYVB6rlUSf4hPdnl4j
w9P5/qHxj5IoljN957vvZHCsfq4yISeFOg6zMq/0KkLJ/tPDvwqk0N3qTdFD
dGVYiJd3GX8uhczL33qEf1QG9bH37ztrpNCAZWbW+D9leOlv/L7ojRQa1nrf
xK2rAvQEkSHfWSl03ui+nmelCvR8bOyfIkujCObLsRuVu+D3WeHu8XxplO5f
WpPyQRX21r6z7iqVRiOla1cObapCIHNoV32VNLr87HPOY1412Ej63pnWJo1u
4PiH32qqAXMddLhOS6MTU3pf9IPVQJj11NshkgxiiKcr3BPaAzqp9JauXBk0
UejTFeikDhO7S/VPlMigKd+9OyVPq8P91+nlO6pk0I2YP6Ifb6rD3I/rTzTb
ZZCPoQG55rk6pFH0r6fOySDcMau0UW4NCDnnJl4uIotWxhW5P3VpwKTIh95g
N1n0+qe+VYqPFuh/tb37zkMWGXZLho+FaUF8UTtV1FsWXRusk0HpWmBoVE1/
floWKT3jkDgxqAXJvg+LJ4Jl0YE/t210zPaCZb3jHcsnsohhiSj1WkkbSjz7
kPCULOLwx1V0cupC7slrP6znMPlzCav/KetC2hlScuQvWRRQLurEaKkLUcFB
82ursigszpc9P1IXvFPl00d3yqGXhOQ0A2Y9kOw79y9TUQ7Fnwtmj2LcB1FG
Ai+VT8uhRcFEhRV+Azgu66BstCyH3surh2R+QHB+Pshoz5oc8gvc/bv6O4KQ
hifOchty6EVf43r/JoJHbvM3dzDLo6BZm6u88kbQkxw11iggj77+uKKc6msE
unyNd4015BG+PDIh/58RcDLuXjA5J49yrj8e95IwAbFeB1bNS/JIQFlievcu
EyBlXpUkBMkjl2BjuUVDEzAyfENlDpNHMb5q426eJnApyOtJ8315FJX391j7
UxP4tJRqb/ZcHs0LNs/laZjCi287K80X5NHpeibGJFszuDD8rjV6GbMvU3Xb
ydsMtDvjhnvW5NFss/nqxhUzqHspsuG6A48WailPlrLMoOWOgkkAPx7Zv0lN
8PhtBsOqFr0PNfHoeNKMBuGuOaQSOL6N6eDR981+/pQMczgi1r0sZ4BHKjZd
CuPPzeEro7NokRkeTSevNfUPmsP3weNHwQmPZlQ9fagSFrB1NeLnTCAeST25
9kLzkQXAGcvtXdfxqJ7fU4uv0AJuenPznQ/Fo7PCQUoF1RaAs0nS3LyDR7IN
lnqsgxbAJ593le8RHpmvFKXYslNhQNj3rlMGHvG5eztPCFMhiWN3xqNsPBLd
5UlUxFNBfKWyiViER2vTexpBjwqE9hY2vXo8ytY+8YTpOBWm6u5I3GjEo02d
sKh/AVQoeH5wV3MLHrVcWJJLvUKF3Y8Gba278Kjo1rhSazQVFuJSPBP68Gio
e5zJ7gEVXoQfuTA8hEdhhoau19OooO0/+dDzEx4FnsdbVz6jwrpnQUH+Nzzq
Ktl1qOEFFeqcT9f+mMajV2sZOcdqqBBstadzzw9sv2j91Ww6FZDRyvilBTw6
n9Xy73oLFRj31izULuPRgcubJxbeUqFF6Trjjr941G+at/i3mwq3ZYwEzTfx
6J5Z2P6UASpYCrKQoncQEGvFIULnMBXwvWZZkSwEdO2vipfzGBU27kZIh7MR
kBpFrTn0ExY/y7bUEC4C0tNl2nvgKxWKd+JErvMRUMWjA89eTFAhopmacEWI
gCrFS4WqpqjgHnqH55IYATn69h93nsH8NXwbfU6KgGSk4i7Yf6cC7z92XIAc
AbGPPT6gP0+FmaoD4aeIBDTkGf+qfokKjRdiGE4oEtDdyNm1gRUqpO7pvOa1
i4D2ysoahqxR4dwvrr8eezB5xvLG+nUqHHhmffGIFgFdYZGpjd7A8ncibvE/
XQIibH2mzWxi/hB6TjsZENB408WfvVtUGPzCO2dvREAvFF0TzbepUJJud9zG
jIBycRz3TTGOOBz/9cB+AqJrsYi+xeSPiva7Uw8SEFtkC20Q06czKDBqakdA
d/rac72w/XjjHZyNHAmI+ita4hJmz6x1Yr/BfwRkXRa9vhOzt4ljyEbvCAE9
+WUaJPo/f9qFO/bSCOjADc2+3EUqnL/lTNXwJiB7nfe6JT+pYGWc3Kx6koDq
5wtmVGcxf7aHkcppAnp4VVFYEYv3Zq1YPfksAU087/v7cJwKQ4GuusSLBFRy
Qv5dEJbPEq1HlXJXCGjrYmJjdy8VPEolS8RDCcj0x/C/9iYq6PodURK5RUBW
O7JLTr6iAr9iep7AHQL603zT6+JzKrzOksngvE9AzmXXqlofUyHtqIcEWyIB
iYXHvsYlUOGC5JOHLCkElOleWFYSSQVSkvy9rUwC4gz5zSGDnY8t+2Oc/3II
aOd58dlJGhXe8+Tc/vOUgD43G95ic8Dq8Q4xdKEMq4+P54aP7qXC92vkc1+B
gEQt1TaEf1tAs+7JX+PNBPQzbfbr/c8WkLZa4DvaTkBTWxGmhzstwPqM8rGB
HgKyoNKc+nIsgLTL71PPAAG9HX148VqcBWzPFh3uHCag8KHcn6evWEDZsd0O
rZ+xevlvX6vMAQu4IxvQ0zRBQJdi6xLH1C3A82OpFX2GgM6H4dI+iFmAgPMe
s+oFAspjWFa6O2kOlyw19xYyEFFxAxx7et4c5k3ys+KZiUjVmndvj6M5nDAQ
57mKI6Jqdms2dW1zOKzGMHOAl4iIo9LraX/MAAl3pPyUIaLU6C9/P/ubwSse
CusQnojctPzbCyzNQIPtxbkGBSJqLdoiZRDNgLTx8ECcKhFVDFSO4j6YAsfX
Y5tqFCLSraWKFmiZQvjo0EkxEyLaEU4/nM9uClsD+4d2WBDR0iubhuZxE1ho
Uy3tsyaiXhMLslO4Cfg2ZknU2hNR5+b5/lZHE/j2Suh2thMROa6aTtqQTGCo
+J/HBXciMv8pbx/aaAw2+f6dbp5ERMk7Q74aaQztmV90zY4TEdNuafIdK2Oo
TWjjF/bH3ncq3P7SbwSZVxKaq64TUXoj44M77xGInWfdkxlKRIpP3+oqJCGI
97vy+PYtIjr1UqjxwyEEt44evfTfXSKa+XE3818yBXzNlMn/0ojINRD//ba3
AWjyvY42rCMipGq1Tc/TgWL2vWskIGL15s1TzKoDJOYCL55mIhI24n/d6qUN
Yn9iDT6/IyL2QMvOEIm9sDXmOh86SkRUKZVLguc14M3TJfuWdSJSC/jU1Jyo
DGttjLWM20TkoDD2gfufIpCmsY8ZEwm5mQwECbiRIYyo8fsVBwmRpdj3WPMR
QT/rfEKZJAkFqhckqtyXhLJHy/2PDEmIwUH7w6xCLmX8FbP+B2MSypyfcPxC
madwjQjmCFuQUMje3h/x1VsUX1GtC/dtSMgjMKqqM58bERIvCkZ6kJDS4Jin
EIsMSo5ddTgXRkJrJ1S/5m2potZi1vrSCBK6YVz0MYF3D1rpECb+jCIhM+OV
Z/N4dWTPob3ik0BC10aCwtZsNVGIksWR3IckJJsoL5Trq4VK9zu3fH1EQoss
jtJ+EXvR+AmfXbKZJBTemLdu3aONOG9fTjySQ0K42lCefSd1kV5+5GbqUxK6
l542Ici8D51sfeg9XERCzHPcf2oz9VErc7XWoUoSSit2bp8fp6CQ0LVBaisJ
Pei7NVmqZYJOXFh3kmFXQJZTwdGB2rao+HCkoiC3AsJ7XpTRT7FFS8aCGzh+
BbQU+K/m1botusq3+8mSmAIqknFL7qqzQ7EltO8tigro2I9VvmT9Q6hypv2G
334FJO3YXTFHcELr3Y72tIMKyERPcZ/5DSdkWPWV4GSngNIOF0j/HnZC7bc2
3lD+U0CF/xrjSVHOaExeTVDgpAIatRwz3/fNBTEeefi05rYC2rG2mOrgexhZ
mBKulsQooNLDYteLXx5GMcrPD2bfU0DraZv8v3a4IaH1t0sxyZg+j6x5jkQ3
RH64pe/xVAHJRk7c3FF8BJ0OjuZxLFJAbOeCJD7NH0EvvEW/7i9TQLrRovEB
e9zRPk31SI1qBVS+wP8itswdWfd697K2K6AX8rcHONOPooTqpex/7xQQSXz6
avvgUTSccePSQrcCMmvvEN7B6oFo/ikSI+8V0F677qw5XQ+U50j61TWqgPjZ
PGvL7D3QnH45vP6kgKIcFrOf+nqgCxyd3sXTCiglaLhUNtkD1Sz9p5P1XQEh
eopOarEH2vowxf5wXgFVnFJy02nyQLefMpSF/FFAu3tiDAdnPFBn3N2wi/+w
/C21eXaueyD+y+KOvtsKyM0298cYBw09MtNcP7STjO4/ENvQVKahwmLnhw0c
ZLQreSCYZx8NVQtd1VTkJaNERV/tqv001HY9vTdBkIwYQnfEKjjT0NBko/+W
KBmlDDXOHT5GQxMHJzlOSpFRrGdfpY0/Df2uxBX0y5GR4BFX563LNMQorWJu
SCIj560Q7WMhNMQbYfPtqRIZRQSfbrgSSUMyv86FCKiS0aCQhYPBXRra7ZQk
FaxBRmc2NGkF92lIv6Hm1Yw2GUX6uh+seUBDB0gfnQ/pk5FV8lzIiSQaco1l
WKlHZPSjnsHrBcYnVvHxZDMyShZod49PpKHL7haqCfvJKLjX5wNTAg1FtPp2
bB4kox7VnfqMcTSUuDv25Al7Mqo73vnr9h0aykl6ztrvREYXSr78lxBGQy+2
BrINDpMRiXJqUjKIhhqPr6GnR8mI0e7+X9kzNNTTJTHO70VGeyWvbqV60dD4
XsrV6yfIaHXYxi0Ci9fPdE/RGT8y8qPvvTpOpaEN1ohK+7Nk1LHT+XW6Dg1x
BBTY118kI+O592lNJBoSf98xrxCE6c/4HGAmQENkykJMfDAZGbgn58hveSDt
fAGlzTAykvAgZTtOeyBzHu02n0jMn7Hn/R+6PJDDZVevvmgsv5ye6YUVHuic
xZP0/AdkNObdmSVz1QOFljbv408hozfbQ0WvDnugeyIzw9cek9G1XVmLcXoe
qHh6t4B9Hhn93q+ZXDx5FNXZ2JfVFWL+NSh5BScfRW+rLh5UKCWjBxLjU+kW
R9FMZF3kRhUZNdlX2hWmuqM/858IPnVk5MV1aSTM0B2xujA19QIZRZ/bdThi
/AjCky038t6Q0fZmza1Z/iPIvf39GbtRLD/Hxi1krA6j02r/uOo+kVFD3YyL
dY8rupYs/Yw0ga2bHJlwt3VFKSe8J//9ICPJRw3Ptk3+QwO43//lbZFRad1q
s+GaE/p2RvgPL5Mi8u6YOhvo6oSWhnUfXN2piJJiKiQsqx0RT0FIly2vIuL9
LJ9/77gDkubLOVUrqIiWDnko/n55CKlcacORxBTRqm7lbDvjIbTvy1zuPSlF
pMx4phpnaY/+//9XJCr1yft//7/+H7nTMs0=
          "]]}, Annotation[#, "Charting`Private`Tag$8380474#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
zxwvy8CWzOrNTxmi6GCdWCcvJwm4J18oOOWJoqIDnqNb8iSQzfAZGi0RRVXH
EozYzEhgxzKt8OWNKBqXp1krCiXB0z/9Q+Njomj9vU93xzwJjtS+UJySEkNl
1g9lVnrloMzCZ+R3sRjyyVZZtacqwOJ9acfxF2Lo7tdSSuSYAqh9GR7uei2G
6sKJqRObCvDK12i49L0YOpQd3MGxXxGoyQJD3j/F0OKt5+fdqhWhZ6yxf4Yk
jjSfJbLvVCvBv0v8H8eLxBFOoPde1qd9oPXmg1V3uTjSMQh0OLK9D67S3+p+
W4OxwIGUHE4V2Eqb78puE0cJ5MAPHzRUgL4eOp1mxZFD3bfP+mEqwM94vmNI
RgLxFJYoJfGpgk4mtaW7QAKdfFf7JfioGkwpl+udLZNA+i9P84n5qEHSu5zK
PTUSKPbKpMz4bTWY+3X9sUa7BKrjPaFZ90INssl61zPnJJB7ZEHhF3Z1uOl/
UrhSQBJdy+Fnn+xWh2mBT71hJyXR36VC0UwvTdD7ZnPnwxlJpHSe6fBYuCbc
L22nCHpIIvujnF9RjiYYGNZSX/hIouKAsc6zg5qQ7v3g+VSYJCJYqX3VMdUC
y7dHYi0fS6L+nJfe7+S1ocy1D/HPSCLFVN+LXaz7oeBc6C+rOUkkceJX8XGF
/ZB9USY9+rckeqnrQUNruR/iwq79WV+VRPyH8vMKo/eDR6Z0zue9Ush27DOn
Pr0uiPb5bz6Sk0Jr07Y6sbQHIM6Q55WCjxQq+us68I9bHzwlHRQMl6VQfnBG
We4nBAF/rhmqrksheSEa6dp5BDcbHh+T2pJCzE3M8v3bCLJO/rm9h14akUTL
nnFIG0JPetyXRh5p9J9XpnOGtyHs52q8Y6Quja5yBHUXbhoCK63yorG/NGqQ
S1R1FzEGoV4HRo3L0oj7/MwBZSVjkHkUIkq4Jo30BRevLBoYg6HBewp9uDS6
lEfVOelqDJevuT9uTpJGZ37Vt7Y9NYaJpUw70xfSaHpv9ulCdRN4+X1vtdki
pif6a1GqjSkEjnxojV+WRoKSF4uPepiCdte9kZ51afTgwp/8rWBTqH8lsOW0
B4+0Jdocl/JMoSVW1tiPG49sp1hOnflnCiP7zHsfaOCRUq2/FOGOGWQSWL5/
0cGj8Qvj9Bm5ZnBK6OOylD4emfQeFR9/YQbfaI8JlprikdzTwKb+QTOYH/Q8
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

          "]]}, Annotation[#, "Charting`Private`Tag$8380474#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
o///vwwV2BX7/e//sv8D+4MTvA==
          "]]}, Annotation[#, "Charting`Private`Tag$8380474#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$8380474#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
2+fIcKS2QumLjARa2n6StNgvD8/2nx35VSiBDppFdFrRFGHxgazjRIUE4lk8
vHX1oyKoj79/3/NSAlmXrsiNbCnCCz/j9yWdEkj8upI0TlcJaAlCw77fJVC0
K5vdf9VK0PexaeArWRLN6VlYrFYrw/J5wbcT+ZKoeO6UQ+KHPaBd/8a6t0wS
vTxhdcBmZw9cYgrvfVUjiaYbZQtSuFVhO2muJ7VdErnwOvF0aqoCUwN0O81K
Iimr23f0r6mCIPPprmGSFOKsZKmJFVADnSe01t5cKRQRJ6YT4qAOX1TKDHye
SaGvtdlxEmfVIf51eiV9jRSqlV1vmripDj/mr2ZpdkihJbrPXPUV6pBKMbj6
5IcUmh9o/fuRUwPCLjiLVgpJIymtMsfpXg2YEfrQf81ZGn0/mPEjzVsLDKZt
771xk0Ypo7dEP93QggclHVRhT2mUWxRfapquBYZGtbSKs9KI88dy4pkhLUj2
fVT65Zo0mqqbSDMw0wbLV0fuWGZJI8n9SpttCnvhmfs7JPhVGilQUk/2setC
7qkr89Y/pFHrBIp3VtSF1HOk5Nu/sI43pWiMyVIXoq+FLGysSSOGT2qehbd1
wfOJbPrYbhnEWdWbQWHSA/F3F7Yy5WXQXT+9YzEM+hBtxPdC8awM+vQyi32V
dx94SdsrGq3IoDzT3I2MDwgCFkKM1DZkUHfnn9O1cwjCGrOOymzLoDMzawED
OwhSnBdu0jPJIlm9mFUuWSPoS44eb+KTRX5vrxU89jUCXZ6me8YassjVKVc4
f8sI2BlUFk0uyCLnS/dCPMRMQKTfnlkzWBY99sqMUFE2AVJmqDghRBb517vA
oqEJGBl2UpluyKK5pathzu4mEBzikdUSL4uUuQrZOwpMYHLpiZ1ZhSyqLm3N
yNMwheefd1ebL8qiL0N3XiTamkHgyJu2mBVZxM+wVO7gaQZ7e2JH+jZk0Tlz
/dzty2bQ8EJo24kej9SjQy2Xss2g9Y6ciT8vHjlKb6u6LZvByB6L/keaeKT7
xLwWf88cnhDYPo/r4FFkzZ+E5AxzOC7ydkVmHx5dqanJ/VhhDtMMR4VLzPBo
rd9Fb2DIHOaGvFzBAY/uJGT3W4hZwN/QyJ/fLuER1Xk/g2aKBcA5y3/KV/Go
nPdLOHeRBdz05OQJCMcjo+DKgIJaC8DZJGnu3MGjCzWbV3YNWQCPbF4oTwoe
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
kdKn874u2j7o//9fhj6Y4nZu6Pmg/wOMryRK
          "]]}, Annotation[#, "Charting`Private`Tag$8380474#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/78MPQk9E/yftjf6P5GLKrI=
          "]]}, Annotation[#, "Charting`Private`Tag$8380474#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtm3c01e8fwGVee++y7r1cO7LDfeybBkklCclK0iBlVDTsFpIQ2TNkh9w3
2ZXIrIhkRlZE5u/zPef31z2v83nf5z2f9/N+zvl8JJ0uWbnQ0tDQuNHR0Pz3
a36Aw2hDUhYce1MN7+q4o/3lgQs4MVlQO8iY/UXDHSlIzrwQEJGFZ+ZnUIiq
O9rz4NRBgoAsxHXv+EYouiOOfy1rKjyyoDNhWjop4452nDWyyByy8OBO5JkU
SXe00Jlx7DCLLDzPkf5eIuKORnR5d51mlAU3mysv8LzuqCsnuNCdVhbooxvp
/rC4owa+hdO+2yS4cdzPT4rWHZUE2TPfWyfBx7Qp19I1NxRrs985ZYkElG+2
5js/3dD9xlzuV3MkCG7m5H474IZ89wpRq3+RoHH/z4UfH9yQDW5FuG+UBDGN
B164lrqhAz7nWn5+J8G+gYc6bZluSGeky2fxKwkYfU9Exz9zQ7urCj+xdZPg
omUXz10/NzTi5n7f6B0JHINV6gs13FBXd5/qUSoJyidNk5IJbqiBbDJiX0OC
hwNZPow8bihDUGq/fykJ/p7KqzOacUVuLd8WitNJUDoYIJn0zBXZ7DNPrksh
gWl8qqV3sCuipFQd/JBIgrzvX6gfPVyR3PWnWZMxJCCyTexw67qiOWkLO7F7
JBj6Rbq8M+CCfEMaWiKdSaAGWg65W87IbWnvteeOJPipSPY7M+KMbOxTpLLt
SMAiM2WT3+CMdDQCbzZYk2Cq5j6LSIgz2hpX3/fPmATrl/NfeuCc0T2T3GRX
IgnucQdP8G46IYj0txSXJMGS5b1zgn1OaLPrIO3AbhKsuB468bbICXnbz7kc
4COBQWNt2+pZJ+R0fZ+iAh0J5OhEJE41nEXk3Lc1iyMycDEiw9zBxxGts30e
CEySgd103fKc1qeRxrH0CPV4GSAdUW7MWrVFV5/76M7FyEC8+F7uvwm2aJoo
+NIhUgbeFBtKtY+cQgP6dm6G/jJwhyX9ccF5G1RxeWKFyUYG/KPYxG55H0dX
etZ5YnhlIC+5cWmYxgLFWVnYxnLKgNiDYLKr5RFU25me+pRVBqqLG7U1Xh5G
jB8P7Y2nkwG1UouYdnQIJTUlH37xRxocLj076x5yALVWGIZld0vDVaax9FiS
MZpTe/Yp55M0yKaeS7562wjxls4I5L2XBrNRlarVPkNkXxSbWfBOGhhuKGRx
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
wcYzibZXfpMq2HIv2v8OM1w79qW2fnaDKrTg2EJ7ixmKJY+pJHptUGe+HuYn
X2MGmTpTkSNX16kWv231nJ2ZgW9VcbbUb4262El5TjFhhnSPQwfkbNeonLK6
bt5GzKD63SPrpc4aFbY7AlINmMGyKdvxwcYqtV6a6QKTPjNExkj2ut5cpZ6/
p7hrXYMZaPfy1wkH/6V+sChlui7LDPPum49uhy1TW5Zybaq4mKGnUIXriOsy
ter2fiVpTmaoXnZ9vNt4mYrXvH/6GTsz3Avqevxm5w81SOxb+00WLD7xWU/+
+P6hinD8TnOkZwbjFssYN5clquObbuWGNRzIsofwahgtUeOR2Ce7VRxwHKuJ
oZdcop68uzdxfQUHX74TY1MHF6nmKkzF5D848Pq7Hvvt2CJVc+pf2PxvHMQT
M+MsDBeoTyO/fvv5Ewc3L3wVEJNYoJYkHpAuHsVBk5O40peNeep3/Vnf2z9w
YOu/rMTrPU81UpORlBnGwf3c5L2hZ+eol2MXjid8xcFXpj/7LunPUuv/VBA4
PuMgI+aMGtv6DJXMgHvN3IWDS+KtarnlM1Tr4LXduE4c0Gu+UP+pMEOVKuKJ
YO/AgZKrmeZJ0V/UwIScazrtOLjbmKhDXpukJvghX5F3OJjq0I5xqZqk6nzf
4TnagIMjX/pnIm9MUm/Q3+eMqMeByBzvi4G1CWobE5MEHeCgWDBq58q/cWog
06ob91scDHkENmas/6QKpMv8fF6JA8NrInveV/+kYmVTO1+Bg5zbVdcW/X9S
+Y2aB8ww9oldltbfGKUOBQ73bpfhgKXOM7x/4wf1kmhnd2gJFk+p6iS+9WGq
UmzHaYZCHGhr/j181n+YOv8jSuD2K8y/Q6o7r9a/U3HRriwbBThIvJZ31mxj
iLo+xp/4Lx8Hra0J0v6b36gfJnGW3Hk4iBnq628O/EY1+Wr6LgnrY/ZLPOG8
W1+pQc1/POQwXhGNnCnY+kJdPml8/FAODqQuBRQPb/dT6xec7+dl4eD33cqz
Crf7qYZG1EgzjKvi//D47fRR56UH6ycycWDRcOEaD00f9e5Fphp5jAP57XRM
dvVQQ8NbOz+l48BMLn7mSXA31X71m/EtjHnIPUnfd3VT3z9gGFPCONf90M51
2s9UMRqT1Lg0HPTV6Dbm0XVS46KEmYJScbDbz+n7Etsn6oaz2S4DjKP8D6o9
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
R///vgz5EnyM//u+7H/nnfr2
          "]]}, Annotation[#, "Charting`Private`Tag$8380474#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rXP/f/+X/R8iphFd
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8380474#11"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Self-Kerr(\\!\\(\\*SuperscriptBox[\\(x\\), \\(4\\)]\\))\"", 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=3.\"", "\"\[Beta]=3.25\"", "\"\[Beta]=3.5\"", 
       "\"\[Beta]=3.75\"", "\"\[Beta]=4.\"", "\"\[Beta]=4.25\"", 
       "\"\[Beta]=4.5\"", "\"\[Beta]=4.75\"", "\"\[Beta]=5.\"", 
       "\"\[Beta]=5.25\"", "\"\[Beta]=5.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.73806460274*^9, 3.73806647259*^9, 3.738073228443*^9, 3.738074130691*^9, 
   3.738075757244*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"931d76a8-709f-4eac-92a4-1a151527a9cd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase Diagram \[Beta]", "Subsection",
 CellChangeTimes->{{3.737981178267*^9, 
  3.737981204065*^9}},ExpressionUUID->"e17fa8a1-74cd-4017-83c2-80ef410353b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"len\[Phi]", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"-", "4"}], "Pi"}], ",", 
        RowBox[{"4", "Pi"}], ",", 
        RowBox[{"Pi", "/", "5"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len\[Beta]", "=", 
   RowBox[{"Length", "[", "\[Beta]list", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.737981211611*^9, 3.73798121309*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"d555fc20-703c-431f-9a8f-61db403da0c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"table\[Beta]crossvs3rd", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"listt4", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"\[Beta]list", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"listt4", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i", ",", "4"}], "]"}], "]"}], "/", 
            RowBox[{"listt4", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "len\[Beta]"}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"table\[Beta]selfvs3rd", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"listt4", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"\[Beta]list", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{"Log10", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"listt4", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "5"}], "]"}], "]"}], "/", 
             RowBox[{"listt4", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "len\[Beta]"}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"table\[Beta]crossvs3rd", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
      "\"\<\[Beta]\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "]"}]}], ",", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "]"}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Phase Diagram lg(Cross-Kerr/3rd)\>\"", ",", "14"}], "]"}]}],
    ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "3"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"Greater", "[", 
        RowBox[{"#3", ",", 
         RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"ColorData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<TemperatureMap\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}], "]"}], ")"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"table\[Beta]selfvs3rd", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
      "\"\<\[Beta]\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Phase Diagram lg(Self-Kerr/3rd)\>\"", ",", "14"}], "]"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "1"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"Greater", "[", 
        RowBox[{"#3", ",", 
         RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"ColorData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<TemperatureMap\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}], "]"}], ")"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7379902674820004`*^9, 3.7379903225620003`*^9}, {
   3.737996798116*^9, 3.737996842251*^9}, {3.737997267692*^9, 
   3.737997290523*^9}, {3.737998012611*^9, 3.737998021395*^9}, 
   3.7379981437320004`*^9, {3.7379983015629997`*^9, 3.737998305098*^9}, {
   3.7379988096029997`*^9, 3.7379988307390003`*^9}, {3.737998886115*^9, 
   3.737998886995*^9}, {3.738001437771*^9, 3.7380014466429996`*^9}, {
   3.738001485516*^9, 3.738001549843*^9}, {3.7380101280629997`*^9, 
   3.738010141355*^9}, {3.7380103585950003`*^9, 3.738010437458*^9}, {
   3.73805834662*^9, 3.738058368834*^9}, {3.738059324683*^9, 
   3.7380593825559998`*^9}, {3.7380599842279997`*^9, 3.738059995876*^9}, {
   3.7380630066280003`*^9, 3.738063044572*^9}, {3.7380632055039997`*^9, 
   3.738063221672*^9}, {3.738063572269*^9, 3.738063603317*^9}, 
   3.7380638109110003`*^9, {3.7380638625179996`*^9, 3.738063869604*^9}, {
   3.738064996859*^9, 3.738065101835*^9}, {3.738065147283*^9, 
   3.738065155182*^9}, 3.7380659888450003`*^9},
 CellLabel->
  "In[120]:=",ExpressionUUID->"302150c6-a349-455c-96ad-a37bafd3a1b1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxll09oHGUYh9dmLGyRsYvTScbg1JHNmj1oKfXgReYF/6SKiFlqT6FFoS0V
rD31oEUPUj1Za8E/VelB8WAPiyitpZcpUlJaA4IeWqXaNOwpEU1xCgHL6my7
v28yj3sJD8w++fZ9f+8335e89Gpn15parXbvHbXa4O/YQ09s+ydpnz20NH06
PjRi4u7UtdeCbsmXvtj/2LpLJddufTzH7Zn3vr8xWXKnsC1Ne7Zux68zW+cf
dH6x/GL5xfKL5RfLf/Pw/l0fHG85v1h+sfxi+cXyi+X/M1u7b2FmwvnF8ovl
F8svll8s//zyZwc2jTedXyy/WH6x/GL5xfL/lGx58+AvDzi/WH6x/GL5xfKL
5T/XufDOhY8S5xfLL5ZfLL9YfrH8p97aeSTcfr/zi+UXyy+WXyy/WP7n9y5t
Pj8ZO79YfrH8YvnF8ovlf+SH0cdf/HLc+cXyi+UXyy+WXyz/7XmLML8R5jfC
/EaY3wjzG2G+QsxXiPkKMV8h5ivEfIXIf4D8B8h/gPwHyH+A/AfIZwP5bCCf
DeSzgXw2kM8G8uMjPz7y4yM/PvLjIz8++ltHf+vobx39raO/dfS3jvp7qL+H
+nuov4f6e6i/h/r0s2p9+lm1Pv2sWp9+Vq1PP6vWp59V159n1fXnWXX9eVZd
f55V159n1fXn8Pfg78Hfg78Hfw/+nvPXhh/5xfKL5a9VPuX35Rdj/SnWn2L9
KdafYv0p1p+i/vDn8Ofw5/Dn8Ocp8pMiPynykyI/zi9GfrB+z5B/Q/4N+Tfk
35B/w/wa5tcwv4b5dX4x5tew/xj2H8P+Y9h/rFof37D/GPZPw/5p2D8N+6fz
i7F/GvZ/1D9A/QPUP0D9A9Q/MLy/nF+M95fh/eX8Yry/0N8I/Y3Q3wj9jdDf
CP2NDOcH5xfj/GA4Pzi/GOcH5CdGfmLkJ0Z+YuQnRn5iw/nN+cU4vxnOb84v
xvkN+UyQzwT5TJDPBPlMkM/EcH52fjHOz4bzs/OLcX5G/pvIfxP5byL/TeS/
ifw3nX9433B+Me4vzi+WX4z7C+arhflqYb5amK8W5quF+Wo5//C+5/xi3B+d
Xyy/GPdHzG8b89vG/LYxv23Mbxvz23b+d8/Njv67vrzPXrm8tG1No+QPV0aO
3rmKD/419ePK+tv34yO+Z7MTb991s+Dduw/0Bjy657unB76Lv9efe98v76uv
B92pzQvl/XZubm5h0yqeSsbeeLjgq7991TyzMnH2TLG8a4sjNjv5x5MnCw67
558d8Kd7X9jzdcE7ttzdnV8sv7+x+DXL95X/75Njx765voo7H4/f83fB8uv3
yC+WXzx83vC84Xnj808V7Yk3lM8vTj/67YD1/Odzy9MbC7544uqVot52uejf
vusjdvLEjWjtLZ7/+ZWCt57qb68XPPZM5+UBK3+D3ztW1s+K5i6Hq/j08aOH
NxQ87K9b37C/jof9/V/eUU9DPU31/A/LAAKe
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
7qEYn/8AjvxAdQ==
           "]], 
          PolygonBox[CompressedData["
1:eJxNkU1uwlAMhJ0QCiUQEmigYYfEiThCD9DeGRaoi7LlpwE6o3xIXXyKYz+P
5/mtP762n2lEbEQmlknEUd9vsVJciqmYibkoxF61ncgV/+p7FT3FmbgoPkeX
b9Gwlnvc24h3UYtF0tUbYs927wlNa1TK/UTnyfWBeBEhEuaNxFQ8xF3c0Dj/
yzm+4Cmnx/9DNK2ViokY47EhV+vcgrMFZxq8v4lDdB7ttS8qZrT0uNe5PvWM
ma55hyM0C+JXPEyYb2937uLeHjuwRsueMrQTdnPj3kt263esiGvetMT/nLk5
8QwPz5zf2nf02Qe79k5SNEv6XP8D1o0v6w==
           "]]}]}, {}, {}, {}, {}}, {{}, {
        GrayLevel[0], 
        LineBox[{253, 247, 250, 259, 262, 256, 253}, VertexColors -> None], 
        LineBox[{248, 254, 257, 263, 260, 251, 248}, VertexColors -> None], 
        LineBox[{249, 255, 258, 264, 261, 252, 249}, VertexColors -> None], 
        LineBox[{265, 268, 280, 277, 271, 274, 265}, VertexColors -> None], 
        LineBox[{269, 266, 275, 272, 278, 281, 269}, VertexColors -> None], 
        LineBox[{270, 267, 276, 273, 279, 282, 270}, VertexColors -> 
         None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
21FOj8CVLrOnBoCX8Xs+S4Oe/wN6eHXQ
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Beta]\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, {{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram lg(Cross-Kerr/3rd)\"", 14, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {2.44, 2.54}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
cpWr/P/v/wXmufdl
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000001, -112.5}, {7.500000000000001, 
                112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -89.50348432055749}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -89.50348432055749}]}, {{
                    7.500000000000001, -37.23867595818815}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -37.23867595818815}]}, {{
                    7.500000000000001, 15.026132404181185`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    15.026132404181185`}]}, {{7.500000000000001, 
                    67.29094076655052}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    67.29094076655052}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.500000000000001, -102.56968641114983`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -102.56968641114983`}]}, {{
                    7.500000000000001, -76.43728222996516}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -76.43728222996516}]}, {{
                    7.500000000000001, -63.37108013937282}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -63.37108013937282}]}, {{
                    7.500000000000001, -50.30487804878049}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -50.30487804878049}]}, {{
                    7.500000000000001, -24.17247386759582}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -24.17247386759582}]}, {{
                    7.500000000000001, -11.106271777003485`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -11.106271777003485`}]}, {{
                    7.500000000000001, 1.9599303135888502`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    1.9599303135888502`}]}, {{7.500000000000001, 
                    28.09233449477352}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    28.09233449477352}]}, {{7.500000000000001, 
                    41.15853658536585}, 
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    41.15853658536585}]}, {{7.500000000000001, 
                    54.22473867595819}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    54.22473867595819}]}, {{7.500000000000001, 
                    80.35714285714286}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    80.35714285714286}]}, {{7.500000000000001, 
                    93.42334494773519}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    93.42334494773519}]}, {{7.500000000000001, 
                    106.48954703832753`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    106.48954703832753`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -89.50348432055749}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -37.23867595818815}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    15.026132404181185`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    67.29094076655052}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.6666666666666665`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.308746, 0.441842, 0.940894], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2058306666666667, 0.29456133333333334`, 
                    0.6272626666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.308746`", ",", "0.441842`", ",", "0.940894`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.308746, 0.441842, 0.940894]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.308746, 0.441842, 0.940894], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.935699, 0.951565, 0.993729], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6237993333333334, 0.6343766666666667, 0.662486], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.935699`", ",", "0.951565`", ",", "0.993729`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.935699, 0.951565, 0.993729]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.935699, 0.951565, 0.993729], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.995282, 0.992317, 0.727853], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6635213333333334, 0.6615446666666667, 
                    0.48523533333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.995282`", ",", "0.992317`", ",", "0.727853`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.995282, 0.992317, 0.727853]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.995282, 0.992317, 0.727853], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.955963, 0.863115, 0.283425], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6373086666666667, 0.57541, 0.18895], FrameTicks -> None,
                     PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.955963, 0.863115, 0.283425]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.955963, 0.863115, 0.283425], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6028180000000001, 0.438666, 0.161198], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.858405, 0.449932, 0.203562], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5722700000000001, 0.2999546666666667, 0.135708], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.858405`", ",", "0.449932`", ",", "0.203562`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.858405, 0.449932, 0.203562]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.858405, 0.449932, 0.203562], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.8800987325683765`"}], ",", 
                   "5.731242524699131`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737990381269*^9, 3.737990408086*^9}, 
   3.7379967923120003`*^9, {3.737996829914*^9, 3.737996842825*^9}, {
   3.737997278451*^9, 3.737997291651*^9}, 3.737997924609*^9, 
   3.737998023196*^9, 3.7379981452539997`*^9, 3.737998319484*^9, 
   3.73799859144*^9, {3.7379987389969997`*^9, 3.737998757965*^9}, {
   3.737998788382*^9, 3.7379988320360003`*^9}, {3.737998878531*^9, 
   3.737998889245*^9}, 3.737998931932*^9, {3.738001447895*^9, 
   3.738001457308*^9}, {3.73800148966*^9, 3.738001550729*^9}, 
   3.738014711527*^9, 3.7380583694700003`*^9, {3.7380593298710003`*^9, 
   3.738059383323*^9}, {3.7380599854300003`*^9, 3.738059996744*^9}, {
   3.738063009392*^9, 3.7380630455550003`*^9}, 3.738063223118*^9, {
   3.738063298025*^9, 3.738063321289*^9}, 3.738063520961*^9, {
   3.7380635761949997`*^9, 3.7380636042019997`*^9}, {3.738063670244*^9, 
   3.738063687744*^9}, 3.7380638121099997`*^9, {3.738063865745*^9, 
   3.738063870597*^9}, 3.738064650526*^9, {3.738065974888*^9, 
   3.738065989398*^9}, 3.738066487284*^9, {3.738073266837*^9, 
   3.738073276477*^9}},
 CellLabel->
  "Out[122]=",ExpressionUUID->"e663265a-e9ef-40e7-80c2-344b14fbe469"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxdl3+IFGUYx0dnCvbC7Tam9UZlzpG9uRslxC7pr5wHUiqKLo8ootVQ8Q//
MK0LoewXlKb90IM4LIpDuJI6REJI7kCcLRK9PCMUOvQPvWyl4EAlpiC6tt7t
9vsM891/jg9395lnnvf7vPu+weYd/VvnW5a1bJ5lNX923LP2yb+DqLZnZv2Y
v8cW8LGHfn7FPZbx1MjOB9qmMrb+/zjKUfXgt3/0ZNxvbDPrHWnbeLn68HS3
+sHwg+EHww+GHwz/7IGdW4eGQ/WD4QfDD4YfDD8Y/hvJ7c9fq3apHww/GH4w
/GD4wfBP3/p018rFFfWD4QfDD4YfDD8Y/gtB7xuvXlqmfjD8YPjB8IPhB8P/
Xf/EOxOHAvWD4QfDD4YfDD8Y/hNvPTdYfmqp+sHwg+EHww+GHwz/E9tmVp3p
8dUPhh8MPxh+MPxg+O87t/DBTZ8vVj8YfjD8YPjB8IPhn5s3j+bXo/n1aH49
ml+P5tej+SrTfJVpvso0X2WarzLNV5ny71L+Xcq/S/l3Kf8u5d+lfJYonyXK
Z4nyWaJ8liifJcpPkfJTpPwUKT9Fyk+R8lOk9S3Q+hZofQu0vgVa3wKtb4H6
71D/Heq/Q/13qP8O9d+h/jSSfH8aSb4/jSTfn0aS708jyfenkeTrT5N8/WmS
rz9N8vWnSb7+NMnXn5K/Tv46+evkr5O/Tv66+q3WB34w/GD4rdwn+3/4wVR/
TPXHVH9M9cdUf0z1x9R/8qfkT8mfkj8lfxpTfmLKT0z5iSk/6gdTfqh+Ryj/
QvkXyr9Q/oXyLzS/QvMrNL9C86t+MM2v0P4jtP8I7T9C+4/k+1MU2n+E9k+h
/VNo/xTaP9UPpv1TaP+n/rvUf5f671L/Xeq/K/T9pX4wfX8JfX+pH0zfX7S+
Hq2vR+vr0fp6tL4era8ndH5QP5jOD0LnB/WD6fxA+fEpPz7lx6f8+JQfn/Lj
C53f1A+m85vQ+U39YDq/UT4DymdA+QwonwHlM6B8BkLnZ/WD6fwsdH5WP5jO
z5T/CuW/QvmvUP4rlP8K5b+i/tZ9Q/1gur+oHww/mO4vNF8hzVdI8xXSfIU0
XyHNV6j+1n1P/WC6P6ofDD+Y7o80vxHNb0TzG9H8RjS/Ec1vlM3v7mcWjV3K
7qPf3/TS8ujcfXNory37Prv49pT5vbmOW4e/tuXInY+u2die3YenZ798aa/h
QWN//7otZz/uS258kN0/wXeYf9jwni1frFuypW00uw9vv/r67iUDXbVmeb99
ZUvPaOcvqwey+/Xh1w5d2WT4gPF3mO8t/D2ef/r8+f5dW7pqa9qmRqYNv9s3
/Mjp9uw+PhtVT9xd6q6Nm9fdf78jfvXai/F4dn9++dRfE4Xbsnrgw/P9yq/b
7zLP6zWfi/Mzhn9sePDex76Zu3+fWp0x/K331/Vabm8++a8Tyg+Tk5NHP9L+
SPPp537Ufuh6gpu+Ff9ofdn+Obd+6j8u63o/MWz+eWTwSPY8ej8xxVc7m/vJ
2qXzVrV3S/P9Pjxr4/00L6311nrw+04j7Ohz5ObJ2tEFA93yZ0/14O91G++v
+Wqtp9bbWn+t56ehBfuHjL/55y8scrB++vw3rx9/esV4KM8a3Pe4rp/6/wMi
lzzp
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
TdTbyrls40zsXWvP7xHyO+Gsh2fn9Q+L6TO6
           "]], 
          PolygonBox[CompressedData["
1:eJw1kllWAjEURF8QhxaaRkAEJ8Qv1+MSXIAuWZzb2T8HRL11Un7c05X0yxsq
mZ6cHZ82IuIImjBNEQ987+EAXcAQvQXr6Bb00BteL6estbfieK27sIau4BZ9
pz39g0v0hdcLvh0oYZX1UspnK2ioNlxFPtNDd+Amcs7S6xn6HDYdX7v/keur
1szxyfnVY9P9qLfa+XfgGf0Ce55Xs4+gLe141e+jf92rZviOfL72vGPHP0XO
OXb8QL16vknKtV7t94d8kxfwE9mfvs8o/1y+QwFf8Onaldear+WYcL7SMe+w
zd51ZE/lz8D3I0/3U85XuIf/eHmpN7Hr+1HvQ9/vxP9r+zV3L13X1/toR+6p
6XqPkT2Rf3pvmv0NDtF/dCA9fA==
           "]]}]}, {}, {}, {}, {}}, {{}, {
        GrayLevel[0], 
        LineBox[{254, 248, 247, 249, 250, 251, 256, 257, 260, 261, 262}, 
         VertexColors -> None], 
        LineBox[{263, 253, 252, 255, 258, 259, 264, 265, 266, 267, 268}, 
         VertexColors -> None], 
        LineBox[{277, 270, 269, 271, 272, 273, 274, 278, 280, 282, 284}, 
         VertexColors -> None], 
        LineBox[{286, 276, 275, 279, 281, 283, 285, 287, 288, 289, 290}, 
         VertexColors -> None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
N2le+tASPuZ5qvo3Ie8QKsmZTfP/AYb/+XY=
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Beta]\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram lg(Self-Kerr/3rd)\"", 14, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {2.44, 2.54}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
mk/zaT7Np/k0n+bT/P+L/xcvATAF
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -71.20588235294117}, 
                    Offset[{4., 0}, {7.5, -71.20588235294117}]}, {{
                    7.5, -18.264705882352942`}, 
                    Offset[{4., 0}, {7.5, -18.264705882352942`}]}, {{7.5, 
                    34.6764705882353}, 
                    Offset[{4., 0}, {7.5, 34.6764705882353}]}, {{7.5, 
                    87.61764705882352}, 
                    Offset[{4., 0}, {7.5, 87.61764705882352}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -110.91176470588235`}, 
                    Offset[{2.5, 0.}, {7.5, -110.91176470588235`}]}, {{
                    7.5, -97.67647058823529}, 
                    Offset[{2.5, 0.}, {7.5, -97.67647058823529}]}, {{
                    7.5, -84.44117647058823}, 
                    Offset[{2.5, 0.}, {7.5, -84.44117647058823}]}, {{
                    7.5, -57.970588235294116`}, 
                    Offset[{2.5, 0.}, {7.5, -57.970588235294116`}]}, {{
                    7.5, -44.73529411764706}, 
                    Offset[{2.5, 0.}, {7.5, -44.73529411764706}]}, {{
                    7.5, -31.5}, 
                    Offset[{2.5, 0.}, {7.5, -31.5}]}, {{
                    7.5, -5.029411764705882}, 
                    Offset[{2.5, 0.}, {7.5, -5.029411764705882}]}, {{7.5, 
                    8.205882352941176}, 
                    Offset[{2.5, 0.}, {7.5, 8.205882352941176}]}, {{7.5, 
                    21.441176470588236`}, 
                    Offset[{2.5, 0.}, {7.5, 21.441176470588236`}]}, {{7.5, 
                    47.911764705882355`}, 
                    Offset[{2.5, 0.}, {7.5, 47.911764705882355`}]}, {{7.5, 
                    61.14705882352941}, 
                    Offset[{2.5, 0.}, {7.5, 61.14705882352941}]}, {{7.5, 
                    74.38235294117646}, 
                    Offset[{2.5, 0.}, {7.5, 74.38235294117646}]}, {{7.5, 
                    100.85294117647058`}, 
                    Offset[{2.5, 0.}, {7.5, 100.85294117647058`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -71.20588235294117}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -18.264705882352942`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 34.6764705882353}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.61764705882352}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.6666666666666665`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.308746, 0.441842, 0.940894], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2058306666666667, 0.29456133333333334`, 
                    0.6272626666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.308746`", ",", "0.441842`", ",", "0.940894`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.308746, 0.441842, 0.940894]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.308746, 0.441842, 0.940894], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.935699, 0.951565, 0.993729], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6237993333333334, 0.6343766666666667, 0.662486], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.935699`", ",", "0.951565`", ",", "0.993729`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.935699, 0.951565, 0.993729]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.935699, 0.951565, 0.993729], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.995282, 0.992317, 0.727853], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6635213333333334, 0.6615446666666667, 
                    0.48523533333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.995282`", ",", "0.992317`", ",", "0.727853`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.995282, 0.992317, 0.727853]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.995282, 0.992317, 0.727853], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.955963, 0.863115, 0.283425], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6373086666666667, 0.57541, 0.18895], FrameTicks -> None,
                     PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.955963, 0.863115, 0.283425]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.955963, 0.863115, 0.283425], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6028180000000001, 0.438666, 0.161198], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.858405, 0.449932, 0.203562], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5722700000000001, 0.2999546666666667, 0.135708], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.858405`", ",", "0.449932`", ",", "0.203562`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.858405, 0.449932, 0.203562]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.858405, 0.449932, 0.203562], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.564543567255182`"}], ",", 
                   "4.936783212453457`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737990381269*^9, 3.737990408086*^9}, 
   3.7379967923120003`*^9, {3.737996829914*^9, 3.737996842825*^9}, {
   3.737997278451*^9, 3.737997291651*^9}, 3.737997924609*^9, 
   3.737998023196*^9, 3.7379981452539997`*^9, 3.737998319484*^9, 
   3.73799859144*^9, {3.7379987389969997`*^9, 3.737998757965*^9}, {
   3.737998788382*^9, 3.7379988320360003`*^9}, {3.737998878531*^9, 
   3.737998889245*^9}, 3.737998931932*^9, {3.738001447895*^9, 
   3.738001457308*^9}, {3.73800148966*^9, 3.738001550729*^9}, 
   3.738014711527*^9, 3.7380583694700003`*^9, {3.7380593298710003`*^9, 
   3.738059383323*^9}, {3.7380599854300003`*^9, 3.738059996744*^9}, {
   3.738063009392*^9, 3.7380630455550003`*^9}, 3.738063223118*^9, {
   3.738063298025*^9, 3.738063321289*^9}, 3.738063520961*^9, {
   3.7380635761949997`*^9, 3.7380636042019997`*^9}, {3.738063670244*^9, 
   3.738063687744*^9}, 3.7380638121099997`*^9, {3.738063865745*^9, 
   3.738063870597*^9}, 3.738064650526*^9, {3.738065974888*^9, 
   3.738065989398*^9}, 3.738066487284*^9, {3.738073266837*^9, 
   3.738073276619*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"22882cb6-6dfa-43f2-86ff-e1d6b8a05b11"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1904, 998},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 425, 9, 56, "Input",ExpressionUUID->"41b9eada-926d-4f9b-b6cf-5982c86c502e"],
Cell[CellGroupData[{
Cell[1008, 33, 232, 3, 56, "Section",ExpressionUUID->"6969e32b-6cd5-4880-8da6-9cc177d65628"],
Cell[1243, 38, 4771, 117, 491, "Input",ExpressionUUID->"54b54782-c0ea-4eed-912c-f75c74c0e58a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6051, 160, 155, 3, 80, "Section",ExpressionUUID->"8ea9f4e5-c859-46c2-b708-7d315745f382"],
Cell[6209, 165, 164, 3, 41, "Text",ExpressionUUID->"0bfa07cf-22b2-4fc4-82c1-12fab99d6641"],
Cell[CellGroupData[{
Cell[6398, 172, 4892, 92, 203, "Input",ExpressionUUID->"b02f79c5-1699-4357-a47d-01fc21ef7a5d"],
Cell[11293, 266, 829, 12, 39, "Output",ExpressionUUID->"498bbcde-8f60-4c5e-bb80-02a3c0aad671"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12171, 284, 172, 3, 80, "Section",ExpressionUUID->"4905469d-de32-4058-bb2b-f92c640f70d5"],
Cell[CellGroupData[{
Cell[12368, 291, 1353, 31, 60, "Input",ExpressionUUID->"1488c04b-ad32-4201-aa59-ca2c1baab2ea"],
Cell[13724, 324, 743, 12, 39, "Output",ExpressionUUID->"0ff00345-53d2-4c26-8410-e3067a18f939"]
}, Open  ]],
Cell[14482, 339, 2406, 44, 35, "Input",ExpressionUUID->"22cf45a3-2ca1-49ba-9eac-6d27afc99f6f"],
Cell[CellGroupData[{
Cell[16913, 387, 1421, 37, 60, "Input",ExpressionUUID->"f5b14626-761d-4254-a232-ba78fd801876"],
Cell[18337, 426, 22269, 405, 295, "Output",ExpressionUUID->"5be9a5d5-725b-4961-a7c1-2176e3e07139"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40643, 836, 1355, 31, 35, "Input",ExpressionUUID->"f65a3e19-1355-4f3a-a2c2-25d20524d50b"],
Cell[42001, 869, 30801, 545, 290, "Output",ExpressionUUID->"bef50bee-6d13-43a8-b5df-dc198cedb19b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72851, 1420, 154, 2, 80, "Section",ExpressionUUID->"5a99d994-908d-4150-81e1-531ce0275825"],
Cell[73008, 1424, 4587, 113, 144, "Input",ExpressionUUID->"c152647a-67b7-4d47-ba23-8bcce28fd3a9"],
Cell[CellGroupData[{
Cell[77620, 1541, 169, 2, 65, "Subsection",ExpressionUUID->"e90ec7eb-29c1-426f-ba17-d648abb9c5b0"],
Cell[77792, 1545, 1000, 23, 83, "Input",ExpressionUUID->"f4546922-6b78-442b-9994-811c33321bf4"],
Cell[78795, 1570, 4704, 106, 486, "Input",ExpressionUUID->"66fc426c-75a0-4d9e-b7cd-d9c4bfbaa955"],
Cell[83502, 1678, 266, 6, 48, "Input",ExpressionUUID->"c6a1c4d7-c240-46b6-afe2-46ca0f9488df"],
Cell[CellGroupData[{
Cell[83793, 1688, 1319, 34, 184, "Input",ExpressionUUID->"e98a9a52-b65c-4c99-9a6a-9ba6c61c4ef2"],
Cell[85115, 1724, 43220, 905, 1627, "Output",ExpressionUUID->"5e126f80-dab1-4393-aa65-8e7727e71f9c"]
}, Open  ]],
Cell[128350, 2632, 203, 3, 213, "Text",ExpressionUUID->"7c32633e-ac44-4f33-9e6f-bac726fb1023"],
Cell[128556, 2637, 8186, 189, 3098, "Input",ExpressionUUID->"7a5beacc-ffae-4c9a-96de-1baaa80a76e9"],
Cell[136745, 2828, 271, 6, 252, "Input",ExpressionUUID->"10e7b32b-c15e-44f7-a91e-0d990b781413"],
Cell[137019, 2836, 2801, 68, 741, "Input",ExpressionUUID->"ed235432-2ae6-451c-982c-f86a0d1a39dc"],
Cell[CellGroupData[{
Cell[139845, 2908, 4131, 101, 1226, "Input",ExpressionUUID->"13fdade2-56ae-4899-9bdc-483635922e11"],
Cell[143979, 3011, 116864, 2053, 1686, "Output",ExpressionUUID->"2d845973-d686-422f-91b3-397b0a58b991"],
Cell[260846, 5066, 105702, 1871, 1667, "Output",ExpressionUUID->"bf0d4dac-10d9-4840-92b0-f4e5e789202c"],
Cell[366551, 6939, 171698, 2952, 1703, "Output",ExpressionUUID->"6ebc1aad-5084-48ce-bf2e-c92229ea2b83"],
Cell[538252, 9893, 171387, 2947, 1775, "Output",ExpressionUUID->"3cad1df9-7fba-4b2f-a87c-88dfdd6ab212"]
}, Open  ]],
Cell[709654, 12843, 142, 2, 300, "Input",ExpressionUUID->"37217412-a6fa-43a5-8f5c-c38761a96037"]
}, Closed]],
Cell[CellGroupData[{
Cell[709833, 12850, 202, 2, 45, "Subsection",ExpressionUUID->"5ddef5c8-b972-4641-9cf9-e24edaa3b92e"],
Cell[710038, 12854, 769, 20, 83, "Input",ExpressionUUID->"0f92135d-211e-481a-81ff-046ef142ffe3"],
Cell[CellGroupData[{
Cell[710832, 12878, 8266, 193, 823, "Input",ExpressionUUID->"b378d9d1-f660-4e5b-bd70-2b26059dc113"],
Cell[719101, 13073, 62258, 1183, 2583, "Output",ExpressionUUID->"8cd47702-15ab-436e-82a4-e67361eadfc6"],
Cell[781362, 14258, 64225, 1193, 2583, "Output",ExpressionUUID->"fa0fad37-ffc7-448a-9ade-92a85639de36"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[845636, 15457, 168, 2, 45, "Subsection",ExpressionUUID->"61b5a43c-801a-44c4-88eb-eaecfbb476f3"],
Cell[CellGroupData[{
Cell[845829, 15463, 2026, 51, 132, "Input",ExpressionUUID->"d29eadb8-faca-4e3d-bbcd-3fd41aa0c9c6"],
Cell[847858, 15516, 806, 14, 39, "Output",ExpressionUUID->"3e7dbdb8-e7ca-4092-9d88-ca2f468dc1d3"]
}, Open  ]],
Cell[848679, 15533, 3970, 93, 324, "Input",ExpressionUUID->"4efba044-d2a3-4eb6-8c4e-07628b6b508e"],
Cell[852652, 15628, 271, 6, 35, "Input",ExpressionUUID->"b51afc67-3eca-4b5e-8af5-847cf48d8bff"],
Cell[CellGroupData[{
Cell[852948, 15638, 1244, 32, 108, "Input",ExpressionUUID->"341762ae-b1e9-44e3-a221-be614060e88e"],
Cell[854195, 15672, 63912, 1333, 290, "Output",ExpressionUUID->"4da0afec-8884-4f77-8aa2-88507135be32"]
}, Open  ]],
Cell[918122, 17008, 203, 3, 41, "Text",ExpressionUUID->"acd5f5b4-f454-43ae-9ff9-5cc9a52dc1ca"],
Cell[918328, 17013, 8194, 188, 558, "Input",ExpressionUUID->"24f345e3-2bd1-458a-9153-7edf41ef0bb3"],
Cell[926525, 17203, 314, 7, 35, "Input",ExpressionUUID->"b7e2c8d1-c766-46f6-858b-6c2c7e14c6fc"],
Cell[926842, 17212, 2194, 61, 108, "Input",ExpressionUUID->"a9a70368-462d-4a8d-b969-1d83028c641c"],
Cell[CellGroupData[{
Cell[929061, 17277, 3855, 101, 137, "Input",ExpressionUUID->"592d4a65-c83f-4b5a-b11c-55056473e671"],
Cell[932919, 17380, 163546, 2884, 311, "Output",ExpressionUUID->"6bd917e5-8354-49e0-b8ee-7f3629d1c164"],
Cell[1096468, 20266, 252185, 4342, 821, "Output",ExpressionUUID->"dda78888-c70d-43c6-976b-3b94c8107691"],
Cell[1348656, 24610, 252187, 4339, 711, "Output",ExpressionUUID->"931d76a8-709f-4eac-92a4-1a151527a9cd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1600892, 28955, 161, 2, 65, "Subsection",ExpressionUUID->"e17fa8a1-74cd-4017-83c2-80ef410353b8"],
Cell[1601056, 28959, 617, 18, 60, "Input",ExpressionUUID->"d555fc20-703c-431f-9a8f-61db403da0c6"],
Cell[CellGroupData[{
Cell[1601698, 28981, 6739, 168, 396, "Input",ExpressionUUID->"302150c6-a349-455c-96ad-a37bafd3a1b1"],
Cell[1608440, 29151, 59315, 1125, 477, "Output",ExpressionUUID->"e663265a-e9ef-40e7-80c2-344b14fbe469"],
Cell[1667758, 30278, 57587, 1072, 457, "Output",ExpressionUUID->"22882cb6-6dfa-43f2-86ff-e1d6b8a05b11"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

