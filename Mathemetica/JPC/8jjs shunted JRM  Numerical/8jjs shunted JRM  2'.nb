(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    258683,       5018]
NotebookOptionsPosition[    255346,       4955]
NotebookOutlinePosition[    255719,       4971]
CellTagsIndexPosition[    255676,       4968]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7378873562790003`*^9, 3.7378873643710003`*^9}},
 FontSize->12,
 CellLabel->"In[1]:=",ExpressionUUID->"cdd9252c-c238-4b62-925b-fe4a3c30486c"],

Cell[CellGroupData[{

Cell["Precompute joint element", "Section",
 CellChangeTimes->{{3.7082743526810417`*^9, 3.708274359420642*^9}, {
  3.708952452776116*^9, 3.7089524569271927`*^9}},
 FontSize->12,ExpressionUUID->"cb7bfdf9-c13b-4fc0-a799-785785e30641"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"precomputeElement", "[", 
     RowBox[{"EJ1_", ",", "EJ2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t1", ",", "\[Phi]", ",", "\[Phi]1", ",", "int1", ",", "res"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t1", "=", 
        RowBox[{"Monitor", "[", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"res", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"FindMinimum", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "EJ1"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
                    RowBox[{"EJ2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]", "-", "\[Phi]1"}], "]"}]}]}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", " ", "s1"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", 
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]", ",", 
                  RowBox[{"\[Pi]", "/", "3."}]}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Phi]", ",", " ", 
               RowBox[{"Min", "[", "res", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"\[Phi]", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "\[Pi]"}], ",", 
              RowBox[{"2.", "\[Pi]"}], ",", 
              RowBox[{"\[Pi]", "/", "1000."}]}], "}"}]}], "]"}], ",", 
          "\[Phi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Interpolation", "[", "t1", "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Return", "[", "t1", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergy", "[", 
    RowBox[{"int1_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"int1", "[", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"\[Phi]", "+", 
            RowBox[{"2", "\[Pi]"}]}], ",", 
           RowBox[{"4", "\[Pi]"}]}], "]"}], "-", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergyJJ", "[", 
    RowBox[{"EJ_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"-", "EJ"}], "*", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergyLinInd", "[", 
    RowBox[{"EL_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{
        FractionBox["EL", "2"], 
        SuperscriptBox["\[Phi]", "2"]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7089524605567417`*^9, 3.708952687697946*^9}, 
   3.708952719907143*^9, {3.7089527648183813`*^9, 3.708952833352254*^9}, {
   3.708952977892933*^9, 3.708952979186363*^9}, {3.708955098041913*^9, 
   3.70895511812256*^9}, {3.708955195108472*^9, 3.708955195309194*^9}, {
   3.708957127322783*^9, 3.7089571283011417`*^9}, {3.708957773593704*^9, 
   3.708957773818112*^9}, {3.7090673829525194`*^9, 3.7090673863403287`*^9}, {
   3.70907199867183*^9, 3.7090720005438333`*^9}, {3.7120557773951874`*^9, 
   3.712055784469592*^9}, {3.737887962359*^9, 3.737888025382*^9}, {
   3.737889710583*^9, 3.737889763663*^9}, {3.73788983759*^9, 
   3.7378898624700003`*^9}, {3.737889920576*^9, 3.737889923333*^9}, {
   3.7378899818389997`*^9, 3.737890008269*^9}, 3.7378900503900003`*^9, 
   3.7378902795039997`*^9, {3.737890427167*^9, 3.737890497502*^9}, {
   3.737890568049*^9, 3.7378905984700003`*^9}, {3.737890801935*^9, 
   3.737890836358*^9}},
 FontSize->12,
 CellLabel->"In[2]:=",ExpressionUUID->"c05c6269-f45d-4f0d-915c-9fb63935d686"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set up", "Section",
 CellChangeTimes->{{3.7143455389010515`*^9, 
  3.7143455514051533`*^9}},ExpressionUUID->"2b9dfe4b-f5ab-463e-a2bb-\
ca656c62a70c"],

Cell["In the unit of GHz", "Text",
 CellChangeTimes->{{3.7089783824622836`*^9, 
  3.7089783875985775`*^9}},ExpressionUUID->"b3b228e6-a281-4dd6-802e-\
848b4c6144f8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sf", "=", 
   FractionBox[
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]], 
    RowBox[{"2", " ", "\[Pi]", " ", "1", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "34"}]]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ic1", "=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"5", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ",", "\"\<Ampere\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EJ1", "=", 
   RowBox[{"sf", "*", 
    RowBox[{"UnitConvert", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"Quantity", "[", "\"\<FluxQuantum\>\"", "]"}], 
         RowBox[{"2", "\[Pi]"}]], ")"}], "Ic1", 
       FractionBox["1", 
        RowBox[{"Quantity", "[", "\"\<Joule\>\"", "]"}]]}], ",", 
      "\"\<SI\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"EJ2", "=", 
    RowBox[{"\[Alpha]", " ", "EJ1"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"EL", "=", 
    RowBox[{"\[Beta]", " ", "EJ1"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["H", "arm"], "[", "\[Alpha]_", "]"}], ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"precomputeElement", "[", 
     RowBox[{"EJ1", ",", 
      RowBox[{"\[Alpha]", " ", "EJ1"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.708953559345889*^9, 3.7089537340931396`*^9}, {
   3.708953765042852*^9, 3.708953765176115*^9}, {3.708954686754141*^9, 
   3.708954703143943*^9}, {3.708978357676866*^9, 3.708978372005686*^9}, 
   3.7090288410703506`*^9, {3.709032663436978*^9, 3.709032685485239*^9}, 
   3.70905493502884*^9, {3.7090674011789675`*^9, 3.7090674039243746`*^9}, {
   3.7090721757451935`*^9, 3.709072177730397*^9}, {3.7090726085814724`*^9, 
   3.709072612760689*^9}, {3.712056147979384*^9, 3.7120561485474167`*^9}, {
   3.7120570878381405`*^9, 3.712057091512351*^9}, {3.712057579255248*^9, 
   3.7120575798202806`*^9}, {3.7144872238709865`*^9, 3.714487245802241*^9}, {
   3.7144896701689067`*^9, 3.7144896729110637`*^9}, {3.7146602368715043`*^9, 
   3.7146602399006777`*^9}, {3.7146604599162617`*^9, 
   3.7146604705168686`*^9}, {3.7146607966885242`*^9, 3.714660806654094*^9}, {
   3.7146609895015526`*^9, 3.714660993859802*^9}, {3.7146611925411654`*^9, 
   3.714661193108198*^9}, {3.714661412152727*^9, 3.7146614131317825`*^9}, {
   3.7146616050377593`*^9, 3.714661631852293*^9}, {3.71466203147815*^9, 
   3.714662031988179*^9}, {3.714662812253808*^9, 3.714662927662409*^9}, {
   3.714663158663622*^9, 3.714663159898692*^9}, 3.714663281470646*^9, {
   3.7146634336473494`*^9, 3.7146634811950693`*^9}, {3.7146690509506407`*^9, 
   3.714669053277774*^9}, 3.714669892470773*^9, {3.71467021358314*^9, 
   3.71467021445319*^9}, {3.714733281299407*^9, 3.714733283295521*^9}, 
   3.714738379217991*^9, {3.7157099415351534`*^9, 3.7157100120181847`*^9}, {
   3.715710047404208*^9, 3.715710060611964*^9}, {3.7157116280386157`*^9, 
   3.7157116281406217`*^9}, {3.7160540686273885`*^9, 
   3.7160540718785744`*^9}, {3.7160562669861274`*^9, 
   3.7160563029681854`*^9}, {3.7160563628976135`*^9, 
   3.7160563682989225`*^9}, {3.7160565350644608`*^9, 3.716056636072238*^9}, 
   3.7160570607395277`*^9, 3.716057423341267*^9, {3.716057885867722*^9, 
   3.716057886146738*^9}, {3.7161135087831707`*^9, 3.7161135098932343`*^9}, {
   3.7161138013749065`*^9, 3.7161138032290125`*^9}, {3.7162051958513713`*^9, 
   3.716205261358118*^9}, {3.716386394117633*^9, 3.716386419841676*^9}, {
   3.716742421925771*^9, 3.716742447859255*^9}, {3.71674373841607*^9, 
   3.7167437386590843`*^9}, {3.7167446831311045`*^9, 3.716744745155652*^9}, {
   3.7167474407858334`*^9, 3.7167474726576567`*^9}, {3.7194073664429226`*^9, 
   3.719407379264656*^9}, {3.724498122979927*^9, 3.724498125050045*^9}, {
   3.724498162602193*^9, 3.724498169227572*^9}, {3.7244983017541523`*^9, 
   3.7244983358171005`*^9}, {3.7244990138978844`*^9, 3.7244990142519045`*^9}, 
   3.725031178368044*^9, 3.725031851617551*^9, {3.7252143742376585`*^9, 
   3.725214376066764*^9}, 3.7252788031067796`*^9, {3.7252790881020803`*^9, 
   3.7252791322876077`*^9}, 3.72528127284704*^9, {3.7252813265631127`*^9, 
   3.7252813266981206`*^9}, {3.7252829799536815`*^9, 
   3.7252829884381666`*^9}, {3.727350257419738*^9, 3.7273502899405975`*^9}, {
   3.727351197341498*^9, 3.7273512238440137`*^9}, 3.7273516801961155`*^9, {
   3.7273532635156765`*^9, 3.7273533080122213`*^9}, {3.727353881820041*^9, 
   3.727353885899275*^9}, {3.7378892738459997`*^9, 3.737889325215*^9}, 
   3.737890378873*^9, {3.737890878992*^9, 3.737890879207*^9}, {
   3.737891033751*^9, 3.7378910551029997`*^9}, {3.7378915706879997`*^9, 
   3.737891624571*^9}, {3.737901837448*^9, 3.737901837856*^9}, 
   3.7380029860179996`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"2e519583-5455-4805-9861-0b7083c8ada6"],

Cell[BoxData["2618.9421416573730182793`7.900542288395337"], "Output",
 CellChangeTimes->{
  3.737890016271*^9, 3.7378900558380003`*^9, 3.737890169891*^9, {
   3.7378902572349997`*^9, 3.7378902845810003`*^9}, 3.737890379785*^9, 
   3.737890510046*^9, 3.737890880506*^9, 3.737891056859*^9, 3.737891627883*^9,
    3.7378955928719997`*^9, 3.737899114969*^9, 3.737900421492*^9, 
   3.737900555006*^9, 3.737901839513*^9, 3.7379022409309998`*^9, 
   3.737902419591*^9, 3.7379034389*^9, 3.737903938624*^9, 3.73790409344*^9, 
   3.737905514968*^9, 3.737905684302*^9, 3.737913131973*^9, 3.737914478821*^9,
    3.737919438917*^9, 3.738002995275*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"999beac8-4ebc-4bc9-a4ef-de3c6f10a19c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hamiltonian on the arms", "Section",
 CellChangeTimes->{{3.7379048416809998`*^9, 
  3.7379048674969997`*^9}},ExpressionUUID->"b97610ff-1626-44da-833f-\
a63b34bb2c22"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]list", "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "1", ",", "2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["listH", "arm"], "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["H", "arm"], "[", 
        RowBox[{"\[Alpha]list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"\[Alpha]list", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7089527386422663`*^9, 3.708952773186026*^9}, {
   3.708952987117523*^9, 3.7089530002113132`*^9}, {3.7089544115672703`*^9, 
   3.708954455193282*^9}, {3.737891404477*^9, 3.7378914261*^9}, {
   3.737891479165*^9, 3.737891504428*^9}, {3.737891743242*^9, 
   3.7378917475629997`*^9}, {3.737891878068*^9, 3.737891920012*^9}, {
   3.73789202934*^9, 3.737892037276*^9}, {3.737892082935*^9, 
   3.737892097708*^9}, {3.7378922137320004`*^9, 3.737892228684*^9}, 
   3.737892301259*^9, {3.7378942274309998`*^9, 3.737894284741*^9}, 
   3.7378943424370003`*^9, {3.737894375132*^9, 3.737894537558*^9}, {
   3.737895007781*^9, 3.737895008844*^9}, {3.737895052966*^9, 
   3.737895079212*^9}, {3.737895166343*^9, 3.7378952169890003`*^9}, {
   3.7378953339709997`*^9, 3.737895334418*^9}, 3.737895403742*^9, {
   3.7378954354300003`*^9, 3.737895475836*^9}, {3.737895521462*^9, 
   3.737895524947*^9}, {3.737900619666*^9, 3.737900680979*^9}, {
   3.737900713559*^9, 3.737900816222*^9}, {3.737900920273*^9, 
   3.737900924973*^9}, {3.737901008663*^9, 3.737901038925*^9}, {
   3.737901285954*^9, 3.737901336276*^9}, {3.73790143023*^9, 
   3.7379014366280003`*^9}, {3.737901558828*^9, 3.737901602005*^9}, {
   3.7379016845179996`*^9, 3.7379017050290003`*^9}, {3.737901833133*^9, 
   3.737901835476*^9}, {3.737902202903*^9, 3.7379022066280003`*^9}, {
   3.737902525795*^9, 3.73790258254*^9}, {3.7379040564*^9, 
   3.737904104493*^9}, {3.737905211903*^9, 3.7379052126359997`*^9}, {
   3.737916348991*^9, 3.737916432533*^9}, {3.737916525575*^9, 
   3.737916582389*^9}, {3.737916612585*^9, 3.737916640101*^9}, {
   3.737916719592*^9, 3.737916720068*^9}, {3.7379167626140003`*^9, 
   3.73791676694*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"9d3dcab4-b5c5-453b-84b0-0aeb1f54e7e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["xH", "arm"], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["listH", "arm"], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], "-", 
      RowBox[{"getEnergy", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["listH", "arm"], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    SubscriptBox["xH", "arm"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Pi]"}], ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<0.5\>\"", ",", "\"\<1\>\"", ",", "\"\<2\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.737901611691*^9, 3.737901629013*^9}, 
   3.7379022150109997`*^9, 3.737902591237*^9, {3.737902649369*^9, 
   3.7379026963570004`*^9}, {3.73790525208*^9, 3.737905254453*^9}, {
   3.73791604355*^9, 3.7379161039969997`*^9}, {3.7379165723459997`*^9, 
   3.737916578007*^9}, 3.737916714454*^9, {3.737916773943*^9, 
   3.737916827112*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"5ef7bf9c-024a-4259-9b5a-7db7255a8794"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
D/7/93r/A3GUNzQ=
          "]]}, Annotation[#, "Charting`Private`Tag$363468#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
33vh/3/v/R/et73U
          "]]}, Annotation[#, "Charting`Private`Tag$363468#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
yf1WGvZ/v9eD//+93v8ATnJVOQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$363468#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {0., 
        5237.8817315827855`}}, {{-6.283185307179586, 6.283185307179586}, {0., 
       5237.8817315827855`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"0.5\"", "\"1\"", "\"2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737901432389*^9, 3.737901799299*^9, 3.737902384782*^9, 
   3.7379025182939997`*^9, 3.73790262323*^9, {3.737902654625*^9, 
   3.737902697289*^9}, 3.737902747341*^9, 3.737902810151*^9, 
   3.737904127744*^9, {3.7379052434969997`*^9, 3.737905255141*^9}, 
   3.7379055467799997`*^9, 3.737913163778*^9, 3.737914512602*^9, 
   3.7379159769379997`*^9, {3.737916047557*^9, 3.7379160599110003`*^9}, 
   3.737916113807*^9, 3.737916598157*^9, 3.73791667529*^9, {3.737916747926*^9,
    3.737916750373*^9}, {3.737916798347*^9, 3.737916827825*^9}, 
   3.737919469317*^9, 3.7380030277609997`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"c822b15d-ddd0-4c57-9bca-28b165ed20b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["xH", "arm"], "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "y"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", 
         SubscriptBox["listH", "arm"], "]"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<0.5\>\"", ",", "\"\<1\>\"", ",", "\"\<2\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.708954806576679*^9, 3.708954829357175*^9}, {
   3.7089548954405537`*^9, 3.708954905734559*^9}, {3.737894629811*^9, 
   3.737894676638*^9}, {3.737894894981*^9, 3.737894998453*^9}, {
   3.737895241594*^9, 3.73789530906*^9}, {3.7378956619960003`*^9, 
   3.7378956914449997`*^9}, {3.7379014446070004`*^9, 3.737901475277*^9}, 
   3.737902218675*^9, {3.7379027109449997`*^9, 3.737902739461*^9}, {
   3.737902789921*^9, 3.737902800737*^9}, {3.737905260226*^9, 
   3.7379052623970003`*^9}, 3.73791683154*^9},
 CellLabel->"In[62]:=",ExpressionUUID->"2299cc87-ae7d-4bfd-bde5-13a689b85af7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
0a9LdsvI+eT7eVkRfSGD71+cKy+5noczee7f8AVHV66DvpwM3IT9jSFHfaGJ
U8Lx0F9lTFyMVwnf5Av3bdfLpI4o4ykOzufBuT7gl2MglD2ojA+Ydo/gqA/Q
Zs3mC/qV8Yjw/EkdRx9IurHrU8V7ZbT9Xv6Z4PaBiPGw7M/NyrhBKeJOh703
rDU5ljRSr4xJ2kpibgxvGL1y6sTkc2Xc8udW2c8pL3A3vEbwPFNG/wK7uQ1J
XmBy9qmGWoEylt4baTU57QnCGvOP9iYo48ENwtlvxnZD/RGenIh4ZaR9yenx
3bcbjr4VvhIbp4zXewQmZ365wq8I+fCkw8p4T6aSV+2nC3Q2GumXBSqjtov1
48G3TpDFjq1d3KqMxa2zGrsNdoLr0zOP+beQ5wvFXb2SZQ+SIpdzKabKKClF
O6nAaw/xj7NPKekrY0tof6pJoy0Ec9dts1iljDKx+44u7LcG3Sy+9nNCyjiy
pT2g/9lm0Hu9v3kzvzLm8J9pbDMAMFrorZrmIsefnn7jfKQhWLgU33H/p4Ql
DTa3e/ZsACeq17HVI0o40ylWM39ABSJin2q0NighRWx23aYnGhhdxKDF1iih
2tzBjTZB2hjz8YLUf1VKKJ1WFn8gYh2e3kRwXC9RQo9rsbXUxE147Zd4Z3CO
EnLbT72vqzXBp97BscJxSihYc0ruiNUOrLrQFYZHlHBpT6aQ1j0brKk0CT4Y
qYRW+k933Dlpiy9WrnTq3aeEh/0v9Zj02WHP23rNe55KqPL2m+XXww74aUlb
yWu3EhoU1Gdny+3CgdUZ0pJOSqhz6fAvg4pdOHrmAFf0DiWUrTagDk454r/N
it3bDJXwwOH9SVu3ueDi3oTWpY1KWO/zg1/jgwtyZU7XFK9XwgLB7+Fl/q4o
+O9loaymEm5J3t7/Nno3yj6KOP5dRgmLDfZUfDztjgZKbVqJs3R0cd6v7nvN
C29KCK3fOUVHyYNGW6pavJCb12yT7AQdfSsnJbk5vPHFcInp3WE6XmSe/2vn
643OhanOLzvpGJnQ4Wgm74MVmW3uSW10FPVoi19l5YOKF4V8d7+iY7gm+Iod
9MGhA0dCvtfTyefZSXp3gw8e3OgdJ1RCR+/vWhqVXr7YrZ526t0DOnK/zmvv
PuGL+rLvzqbfo2PurzFdgXxf5Fo0u7oqh44G7TU697/74sVatXvbkuiosenU
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
/xx+B7W7TRwYdHT6yP8+L6jz7uSoK+PArTwbB9zJeLDc+X1vHgf2SIY2/iKv
51v+4eH0FQ58G3H/Jp2MVfa5J4ie5MC77FXvx4cJ3PKiz0f1IAca8TW/cCXz
8Wf46IMveTxncxdB5nv66FcJF3sOZFy/sk1ygMD8bmJs/2YOFO/YHcHqI7BZ
Z6QuQZsDI5xt8517CRw9G3T9liIH7mxMkprsJlBw+MehClEOxF9nF9d2EOgY
9zmjYG6pepm1fPrKtwRe1R3c3vt+qTqEQ0ayoIVAmRvjRcYpS9WTNFvLFzWk
53f+9tp/cKlaYuKwiRu5ntf5Z6m37JeqC2823Uon15u2j/Mgn9hS9fnTC50q
dwn0ZvAxN/5YrD6jdq3hYA6B2d2CnQEvF6s3iK2wPHidQOZmyY2tpxarZ6SD
+c6S9UZMrxhZZC9WR8ov08mLJ8d3Rz5N22yxenRwdfehowRqiKvOJ3EsVpct
d9i0KYT0/ZdN6Bq5UP19k6FTwBYC91812n/WaaF66wsje0vyfni0zVSp6r+F
6k7Dj9VfdAj877H1CfrkfHXwYLzMTnkC9U56Wn4LnK8ufRd7RP0nG5tnj+R6
bJuvrgilBbZ/YaNzcAZXx6r5aub7dXVW3Ww8tPN9xfOxuepNH67OX0E2PqDv
XJu+Z676bapvX+15NqpWWcjsOPCvOuq6rPsInY2la9nhdfb/qr87PjpyWIKN
ZrnH2/XW/av2+J2q9omHjT5n8bzq1N/qXvc/HxWGWZjpqsfNGfa3Wr9s7ZdL
d1goObN6rDhytjrc0UMzTYWFtwKtrTRcZ6sXVLbzxkuxUOdTYN5NvdnqnE8T
XVt5WGhbf9vr3NxMdf+VpS6vfl9MTKJ3EEdmqmPrVESbUn2RS1uqamXsn+qy
yPEVr7h98af//IVjp6eqa6/ei/tU5Y3t99dSdhBT1drCsxvLb3vjsyniopzZ
VHXkQEPYoYveeCLm7cWnS7+r3V0Ovj7u7Y0y1/Iu/Q77Xf3M620vhcsbzRpt
k/zYk9UczHXz2oZeeI2Zm2JjMlG92+9ioIy+Ox6vS9cznh2uXqUKHHEajthZ
blBXwP2mmm0wvSIv0gg9NS0WHC69MvYYFn8iu8IQ+i2dd+3J/Gas5XLsav5T
RzAajPZu/fjNOGb0ajzvhCOkxWaFaMqPGIeem5Q3UXEC+2ejJ0fTR4wrhjb2
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
Dv/2rMv1/jRR/f///wFctTL/9/8fqv8Pkjdlmg==
          "]]}, Annotation[#, "Charting`Private`Tag$4568682#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
QuBDqojWg9W1/weQQhra
          "]]}, Annotation[#, "Charting`Private`Tag$4568682#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt3Hk8VN/7AHA7ZZuxpGSZYcZWSZRkfWxFKUuKiuz7zsyltJEUWoQkpAhJ
SiXJ/mRX9CkhSSolUUmiZP3d7+v1+8vrec095zznOWfuue+ZeaG7h9h5cXFw
cNB5ODj+93e7pYjpHF0VOZKLf42waUZ65UcmBORU8eB2NPjGXDRaS/92dYW0
KjZkS3ddYoqAyL/WmQ1iqnhK7gAqMeXgZVHMXV8uVSzf8WP7O0V1cBSYXtU7
pILLqRWpE3KG4NP6duLeDTL2v5W+R3AXxJnfyvFmquCH1ULHbtY4AyYdtpGn
q+CWHzPKv7cchPmXO7j6ZFSwXOuHg2jFQYg4OO5lKaGCPMHn58rvuYB7pNa6
tdwq6MovV9r1whWMbtVW//qgjDWKnmm3atxhVqir70i2MtKKzgxwHfUG7d03
EjdlKGP8gT85Hyu8IfwKS388VRkzht6KZU16wyhT6rpLkjLu+HDIJNvHB/oM
nXxMDivj1c5zm59Z+8Kj0C/T/I7K6JAwTLBX+kNY96xYqrgynj7llFR6OgjS
7az3p4kqY9Cp2y6RlUFQ8+JG7iVBZTz41cub+i0I+DqtNDK4lVHvKtfuqp3B
kN2cs/PqbyVMuq1z8xUlBNoemZy5+UoJrWuiuj5sDQW5K4kL1alKqBxnTBSU
hoGZ1Huz2gtK+Me09Z1ecxj4XdI6W5ekhKvP97eV9YfBw4sD0k9OKqHx0Aup
bbzhYJmortMSoYRdutr9vx3DgRXdFf5itxIey7SsZc6Gw1Nn6a+fxZXQu45X
o47OAutr+kazokq4Ko9fI1OTBd0fDqaLCilhSWeciLUpC9553DDT5VHCqmqP
MWNPFkz4rc29MMXEplGBm8b5LJAiDPfr9jAxJMC01kaGDdkVrvetXzJR2GfP
XJIaG2j/YgW8OpkYpiCZd0WHDWpHWh9daGZipnCTtZo9GwxjbcSHy5nouLpN
SiKBDZ7n3TsupDNxvHCvVOYoG0b/i1MsSGFiHbvc+skUG4KpNw9XnWei2JLa
swdLbIhM+6YyHM9E/5MM9UkJAhIzWad0I5koUCf28aU+AaID6QPWEUyUMvzl
oruVgDTZSi2vECYmNpzb6GtNwNXrCx8v+DCxf5sQUN0IuFcYbzjswEQOGfW8
UzEEbPpadGl2Nznf25+reBMIqFJ99l3UholFNTkXzJMJaCwRzdK1YOJ/58K9
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
WMtD+j+f317ldhsHBhybPvq/zwua3Ho5mio4cDuPzpAzGQ9XO74ZKOTAi1IR
rb/I9nwr3t6fvsSBPofvXqeTsVKoc6LIKQ485LXmzfgIgduevndXZnHgjmXt
T/eT+fgy3PXAgwOv3zZ+7U3me+bYZ/F9dhw4f/nSDokhAov6vL+HGXPg6OsD
UZ7vCWzXHG1K1ODAN442RY4DBI6dDbh6Q54Dd7emSk72Ebh85Ae7RoQDV0yc
XdzQQ+De2A/ZxXNL9cusZLNWvSTwsvbwzoE3S/UTXNISxR0ESl8bLzVKX6rn
YthYPG0gPb/7t2sYa6neZ+KwiRO5nlf5Z6g37JbqNa633cgi15sWysniE12q
v5+80Kt0m0A3Bh9T58diffKajBZWPoF5fct7/Z4t1m8UW2nBukog01hCp/P0
Yr3mykC+s+R+855eObrotVh/SHaZZmE8Ob9bspkaZov1Y8Pr+tjHCFQTU55P
5VisN5Wy37IliPT9py24/9BC/bctBg5+2wgMu2wYdtZhoT7nqaGdBfl+eLDD
VKFu00L9BXhX/0mTwE0PreLok/P1gcPx0rtlCdQ95WLx1X++/kRvzFHVn2xs
nzlacHDHfL09i+bf/YmNjoHZXD1r5uuZb7SaLPvYyN79pubJ97l69beX5y8h
G+/Rd2/ICp6r33TZ433jeTYq122V3hU+W78pc7XzKJ2NjzZ4RTbZzdZLOTw4
elicjWYFJ7t1tWbrD/6+ojLIw0b3s3heeepfvYPrn3dyIyzM2a/LzUn8qz/7
cMOni7dYKPF33feyQzP1kXsPrs1UYuENfytLtf0z9TsYO3njJVmoOehfeF13
pr7pw8Tr7TwstGm+6Xpu7m/9x0tLr10/RmBSKr3H++jf+uEnSiJtVyKQS0Oy
blXMn/qKQ+Mrn3NH4E/f+QvHz0zVD1wuiR2sC8Puuxsou7yn6guEZnSqb4Zh
1ZR3sozZVP2hoRaCnRyGcSdeJlcu/a533sf676RbGEpnFF78Tfyunz7wcoDC
FYZmrTapPl6T9Uk0rXkNg1DMYBakW5tM1N91S/aX1gvCk01ZukYzI/W5msAR
q+aNvdX6TcXcL+qXhKdXFh7ahS5rty7YX3xu1CQq/nj1yp3w0cJxT3DOV6O1
dscvF1V6g+HwEbfOd1+NpP9cjued8IbMmNygtbKjRuPnJ2VNlHzArmrs1FjW
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$4568682#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{(-4) Pi, 4 Pi}, {-487.09874880595373`, 
        404.55137165171624`}}, {{-12.566370614359172`, 
       12.566370614359172`}, {-487.09874880595373`, 404.55137165171624`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"0.5\"", "\"1\"", "\"2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737895260332*^9, 3.737895302533*^9, 3.7378953494*^9, 
   3.7378957015880003`*^9, 3.7378991664560003`*^9, 3.737899313914*^9, 
   3.737901507684*^9, {3.7379027120959997`*^9, 3.737902811653*^9}, 
   3.737904133851*^9, {3.737905246693*^9, 3.7379052629379997`*^9}, 
   3.737905548579*^9, 3.737913165815*^9, 3.7379145146359997`*^9, 
   3.737915979492*^9, 3.7379168325*^9, 3.737919471631*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"8adeceea-f41d-46f3-a881-6f3dd86e5548"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Total Hamiltonian", "Section",
 CellChangeTimes->{{3.737904913843*^9, 
  3.737904954499*^9}},ExpressionUUID->"7323d0b4-a283-4a5c-9b15-38c247d003a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", 
    RowBox[{
    "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_", ",", 
     "\[Phi]5_", ",", "\[Phi]ext_", ",", "Harm_", ",", "\[Beta]_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]2", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]3", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", " ", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]4", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]1", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "-", 
      RowBox[{"4", 
       RowBox[{"getEnergy", "[", 
        RowBox[{"Harm", ",", "0"}], "]"}]}]}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]5"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn", "[", 
    RowBox[{
     RowBox[{"\[Phi]1_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]2_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]3_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]4_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]5_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]ext_", "?", "NumericQ"}], ",", "Harm_", ",", 
     RowBox[{"\[Beta]_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]2", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]3", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", " ", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]4", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]1", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "-", 
      RowBox[{"4", 
       RowBox[{"getEnergy", "[", 
        RowBox[{"Harm", ",", "0"}], "]"}]}]}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]5"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7378179385014*^9, 3.7378179492293997`*^9}, {
   3.7378184952874002`*^9, 3.7378185573414*^9}, {3.7378995866219997`*^9, 
   3.737899598349*^9}, {3.737899688446*^9, 3.73789971227*^9}, {
   3.7379000170620003`*^9, 3.73790002276*^9}, {3.737900066966*^9, 
   3.737900136755*^9}, {3.737900167718*^9, 3.737900182398*^9}, {
   3.737900274271*^9, 3.73790031558*^9}, {3.737901767541*^9, 
   3.737901783579*^9}, {3.737901898888*^9, 3.7379019159189997`*^9}, {
   3.737901950145*^9, 3.737902013043*^9}, {3.7379030951219997`*^9, 
   3.737903095389*^9}, {3.737904236712*^9, 3.737904277109*^9}, 
   3.737904665656*^9, {3.737918372722*^9, 3.737918392887*^9}},
 FontSize->12,
 CellLabel->"In[14]:=",ExpressionUUID->"9eeb2c91-ec24-4adb-bba3-b77d8e39c111"],

Cell[CellGroupData[{

Cell["Fix \[Beta], Varying \[Alpha]", "Subsubsection",
 CellChangeTimes->{{3.737914895508*^9, 
  3.737914964284*^9}},ExpressionUUID->"304482d1-a582-4e58-bc64-ed8103d5e87b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ip", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "4"}], "]"}], ",", "100"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", "2"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7379020934379997`*^9, 3.737902159835*^9, {3.737902287484*^9, 
   3.737902355144*^9}, 3.737903396604*^9, {3.737904363743*^9, 
   3.737904386573*^9}, 3.737904461568*^9, {3.737904508034*^9, 
   3.737904553243*^9}, 3.7379046842390003`*^9, 3.73790498071*^9, {
   3.737907121486*^9, 3.7379071223970003`*^9}, {3.737914523454*^9, 
   3.7379145238199997`*^9}, {3.737914773718*^9, 3.7379147827799997`*^9}, {
   3.737915898439*^9, 3.737915898908*^9}, {3.738003039874*^9, 
   3.738003040889*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f266f25b-baa1-456f-a3a5-2c57fff1c686"],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt1", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "\[LessEqual]", "1"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"zt", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"res", "=", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    RowBox[{"Hn", "[", 
                    RowBox[{
                    "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4",
                     ",", "0", ",", "\[Phi]ext", ",", 
                    RowBox[{
                    SubscriptBox["listH", "arm"], "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\[Beta]"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]2", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]3", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]4", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\[Phi]1", ",", 
                    "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "}"}], "/.", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "ip", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"zt1", "=", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\[Phi]ext", ",", " ", 
                 RowBox[{"zt", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "}"}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]ext", ",", 
             RowBox[{
              RowBox[{"-", "4"}], "\[Pi]"}], ",", 
             RowBox[{"4", "\[Pi]"}], ",", 
             RowBox[{"\[Pi]", "/", "5"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", "\[Phi]ext"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"listt1", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt1", ",", "t1", ",", "j"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\[Alpha]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737907081333*^9, 3.7379070989639997`*^9}, {
   3.737907134652*^9, 3.737907195244*^9}, {3.7379072447*^9, 
   3.7379072546289997`*^9}, {3.737907292842*^9, 3.737907295564*^9}, {
   3.7379073292279997`*^9, 3.737907337475*^9}, {3.7379075008120003`*^9, 
   3.737907502916*^9}, 3.737913191933*^9, {3.737913581718*^9, 
   3.73791363679*^9}, {3.7379136824379997`*^9, 3.737913741782*^9}, {
   3.737913862362*^9, 3.73791386276*^9}, {3.7379143833859997`*^9, 
   3.73791439188*^9}, 3.7379147871879997`*^9, {3.73791504117*^9, 
   3.737915054889*^9}, {3.737915363762*^9, 3.737915369966*^9}, {
   3.737915918145*^9, 3.737915937817*^9}, {3.737916001534*^9, 
   3.737916002047*^9}, {3.7379170469969997`*^9, 3.737917053241*^9}, 
   3.737917108684*^9, {3.737917213142*^9, 3.7379172430220003`*^9}, 
   3.737917455209*^9, {3.738003079435*^9, 3.738003103002*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"a12ba2b2-23c8-45ab-aa96-7565d1f0675a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"listt1", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "All", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "listt1", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Total Flux\>\"", ",", "\"\<Energy\>\""}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<0.5\>\"", ",", "\"\<1\>\"", ",", "\"\<2\>\""}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.737914320328*^9, 3.737914363591*^9}, {3.737914619841*^9,
   3.7379146200629997`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"69481552-8a4b-49a4-a87f-85f4ead6b8b3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHPBZmmmyfeMiBK+5WjMcD9QNl
r1S6NvYfcvjTV5A6dZ7aAcddNUwGLYcc3u1ny3sUo3rgvb9MX1/wIYcHH+aU
6UurHLDI9jRqlzrocEnRuL7mptKBxAPq+35Y7Xc4EnSy/eR0xQNSgls3XRHZ
47CtOX6CWJjCgf97vkjb3t/hEJD52vC4htyBK5PbOreu3+pgclrcOXGp9IGM
Y7crDk7b5ABxn+SBkzIPs445rYe6R+xA4e7ri0y3rITaL3LgwdotsuKTl0Dt
Ezwg6a96eubt+VDz+Q7ccF7Bu2fBdKh5nAdmJKyWnd85Aaqf5QCjtK1bpW8r
VP2//Y7trP7KohVQ+S/7WV9XXxWrToXyn+w30I8sKGxzdWCAArvlB06oGJjZ
QuXt2aHyUP32TFD9UPPtUc1ncYDZD3WfA8x9UPc7wNwP9Z+DBNR/UP87wPwP
DR+HImj4QMPP4Qw0/KDh65AFDV9o+Dtcg4Y/NH4cGPdC4gcafw4y0PiDxq9D
EjR+ofHvYAONf2j6cPgATR/Q9OPgBE0/0PTlAEtf0PTn4AVNfwAwwytl
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 9507.431287006144}}, PlotRangeClipping -> True, ImagePadding -> All,
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Energy\"", TraditionalForm], None}, {
        FormBox["\"Total Flux\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-7) Pi, -21.991148575128552`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "7"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-5) Pi, -15.707963267948966`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "5"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[5 Pi, 15.707963267948966`], 
          FormBox[
           RowBox[{"5", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[7 Pi, 21.991148575128552`], 
          FormBox[
           RowBox[{"7", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 9507.431287006144}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"0.5\"", "\"1\"", "\"2\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737904708442*^9, 3.737904986757*^9, 3.737905737642*^9, 3.737914368734*^9, 
   3.737914451465*^9, {3.737914599884*^9, 3.73791462074*^9}, 
   3.737914862499*^9, {3.737917159776*^9, 3.737917164525*^9}, 
   3.73791728127*^9, 3.7379184403859997`*^9, 3.7379195200620003`*^9, 
   3.738003161825*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"e6899569-323f-486e-aa4e-bb34194fa46e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt2", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "\[LessEqual]", "1"}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t2", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Phi]ext", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", 
               ",", "\[Phi]4"}], "}"}], "=", 
             RowBox[{"listt1", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "1", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                 "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"\[Phi]f", "=", "0"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"h0", "=", 
             RowBox[{"H", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"a", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]1"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]2"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]3"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]4"}], 
               ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "a"}], " ", "\[Phi]w"}], "+", "\[Phi]f"}], ",", 
               " ", "\[Phi]ext", ",", 
               RowBox[{
                SubscriptBox["listH", "arm"], "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "\[Beta]"}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\[Phi]ext", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "2"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"ND", "[", 
                  RowBox[{
                   RowBox[{"ND", "[", 
                    RowBox[{
                    RowBox[{"ND", "[", 
                    RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]y", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]z", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                 ")"}], ",", "\[IndentingNewLine]", 
                RowBox[{"(", 
                 RowBox[{"ND", "[", 
                  RowBox[{
                   RowBox[{"ND", "[", 
                    RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]z", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                 ")"}], ","}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"ND", "[", 
                   RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]z", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "4"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "4"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "24"}]}], "\[IndentingNewLine]", "}"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"listt1", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"listt1", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"listt2", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt2", ",", "t2", ",", "j"}], "]"}]}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\[Alpha]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73790578819*^9, 3.737905817094*^9}, {3.737905928505*^9, 
   3.737905930734*^9}, {3.7379060343719997`*^9, 3.73790605558*^9}, {
   3.737915080697*^9, 3.7379151033570004`*^9}, {3.737915136238*^9, 
   3.737915163516*^9}, {3.7379152018859997`*^9, 3.737915204744*^9}, {
   3.737915262869*^9, 3.737915265118*^9}, {3.737917350358*^9, 
   3.7379173675039997`*^9}, {3.7379173983310003`*^9, 3.73791744863*^9}, {
   3.7379175632139997`*^9, 3.737917573197*^9}, {3.737917777321*^9, 
   3.737917812045*^9}, 3.737917948777*^9, {3.737917993009*^9, 
   3.737917995005*^9}, {3.7379212371359997`*^9, 3.737921270576*^9}, {
   3.7379213273640003`*^9, 3.737921437196*^9}, {3.737921468924*^9, 
   3.7379215051*^9}, {3.738003149868*^9, 3.738003192403*^9}, {
   3.738003622148*^9, 3.738003636115*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"494be8ce-5d86-4017-a1ec-b64a0dd9871a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"listt2", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"1", "+", "i"}]}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7380032305950003`*^9, 3.738003355809*^9}, {
  3.738003644946*^9, 3.7380036549300003`*^9}},
 CellLabel->"",ExpressionUUID->"83882aae-08f6-4c77-b4d0-5f9c0dd245b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQLaHrEvJbUfPAUYa6kFkfJztwxd2K8XigfmCtwaNX
21snO/zpK0idOk/tQNamSKdL3yY6vNvPlvcoRvXAmZhPD90mdDk8+DCnTF9a
5YC1G49VjECPwyVF4/qam0oH8qLXbAjinOhwJOhk+8npigd81Ng9F3tMdtjW
HD9BLEzhQJfRUR/On1McAjJfGx7XkDvguE5xrq7rNAeT0+LOiUulD6xxPKOm
5j3dAeI+yQNigrpVd+VmQN0jdmDGyeOzzc/OgNovcsC7QSi2MW4m1D7BAyVn
qlJEb8yEms93wJdf2TLbdhbUPM4Dyi9XmR+eMAuqn+VAk77E3MmXZ0HV/9tv
IJP08yzbbKj8l/1JSieauLVh/Cf77U2Wyq90mO3AAAW1exzKb7jD5e1XzloG
lofqt694dhysH2q+vaxjIpL5LA5mz8TA9kPd5zCLYS3YfVD3O/AUKoDdD/Wf
w/PccrD/oP53CFstCPY/NHwcSlccBYcPNPwcYpm0wOEHDV+HfQqnweELDX+H
9l5I+EPjxyFn3Qlw/EDjz8HShxMcf9D4degzXg2OX2j8O1y9yQeOf2j6cEh4
q/kVlD6g6cdhT2WTMyj9QNOXw+X73K9B6Qua/hx6NltFgNIfAJ/DJSU=
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-12.566370614359172`, 12.566370614359172`}, {
      0, 1745.9613924136204`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQLaHrEvJbUfNAQWpgx5qpk+y54m7FeDxQP/DlQPXc
vWpVB/70FaROnad2oKkv6l/c094D7/az5T2KUT3AVCKTXMs15cCDD3PK9KVV
DlyL0WfLf7HU4ZKicX3NTaUDXbtOnXreuMDhSNDJ9pPTFQ/Y3/mblbp8hsO2
5vgJYmEKB87e6Eyv3zbJISDzteFxDbkDDp/5Ko1Vex1MTos7Jy6VPmDXK1Lw
27vdAeI+yQMxD9z++XA0O0DcI3ZAuG3O/cuT6x0g9oscmHFDzHhlehXUPsED
n1luTBMQLYOaz3fAVeng47n+RVDzOA+wL7OVPHY6F6qf5YCCTD2jcX46VP2/
/RucIpVvxSVC5b/sv8RdGcHzJwzKf7L/rNexg3ceuTkwQMG1/em9oeu59kPl
7TcWBLLdf+QGDZ8v9vW/ZIt5/4QdgJpvH9vHdxZoPlSexUErcck5oP0HoO5z
YA96fxvoPqh6PofC39MD5/kXHYD6z0EnN55DULQMql/EweHzlf1A/0PjS8yh
tCes/Mrkeqh5kg4yifNyfTmaD0DD1yGMfSrDH+92qPlyDtZxzjYmqr0HoPHj
cKec+w0wfqD2KTo8ezDbMG35jAPQ+HVgUD0a9KJxASz+HUSYLq8Fxj8sfTh8
Sr3q0c41BRpfag7sdiI7uJ/2OkDTl8P+tPvvzNSqoPGh6XBPuO0F47qe/QCP
NzSN
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-12.566370614359172`, 
     12.566370614359172`}, {-2804.218123048786, 2804.216844062884}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQLaHrEvJbUfOARkZyWK7bNAeuuFsxHg/UD1QeLv+x
k3GGw5++gtSp89QOeB3amFh9du6Bd/vZ8h7FqB6orCj1frx3ocODD3PK9KVV
DsjcW7rXUCN1/yVF4/qam0oHTK/krf5TW7D/SNDJ9pPTFQ88O6vYu/Rp0v5t
zfETxMIUDrys5K0pDwreH5D52vC4htyB+nUbV00P9txvclrcOXGp9AHVucnN
yT+c9kPcJ3lgvsq14h1ldvsh7hE7cO9mvOPmEIv9EPtFDqwTWJ0n/cEYap/g
gUlsbZZFHw2g5vMdeJ4oK7JKUg9qHueBMrb9ro6PtKH6WQ5c9rmw9HqSFlT9
v/0HtMWEtlRqQOW/7M9l6exgeQLjP9nfbnbijb6m5n4GKNgZdPVrljJc3t5G
p1vitA1cv/10Ps5CaTZNmPn2glNaPzCaa8Lsd7jLx2wd+FIT5j6H2tmX40Uu
acPc72Bx+mNW4wFdmP8cYlavspN4bwDzv0NU1ezl4gwmsPBxCCg/bWFcZg4L
P4drG2XjinjtYOHrMO9GtVvmcydY+DvIXJsVW5vjCYsfB8FO5xMyh4Jh8ecw
zXDH4cSVSbD4dVDx59j3bnIB1H4Vh+zvyxZMcE7ZD00fDolVwf9e7F14AJp+
HBJcLeNA6Qeavhy4zB7/BKUvaPpz8H3kxpLjNu0AAOywNAw=
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-12.566370614359172`, 
     12.566370614359172`}, {-0.005899207934492404, 0.0032356832790879013`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQLaHrEvJbUfPAg3d30/nnpxzgirsV4/FA/UBqcKD0
u/7UA3/6ClKnzlM7cHnmifzVHpkH3u1ny3sUo3pA45pg0bW+cIcHH+aU6Uur
HLiyM7RQN634wCVF4/qam0oHErbq9N11LDhwJOhk+8npigfafoUvnrEx/cC2
5vgJYmEKB+7o/F1T0J1wICDzteFxDbkDvJNXSkQqhR8wOS3unLhU+sD3kyen
608JOABxn+QBqw4/x8gNHlD3iB1I/cuhr2frfABiv8iBbdc+fnxTaA+1T/BA
msy8y1ceW0HN5zsw91Zyi9E7c6h5nAfOvZsuasVkBtXPcuDG9jX8E46YQNX/
27+983Yrw29jqPyX/W0Sp/c/aIDxn+yfNPFQ4hJ74wMMULD98CUPLm24vP2t
+Sz1W+3h+u3FpbbO2gvUDzXf3oXB8qk83HwWh3erbTTnAu2Hus/BktHHSBPo
Pqj7HQp90z0Nge6H+s9hS4Li/SdA/0H97+D+9oCncJE9LHwc7DOvWWgBwwca
fg7veWwyEoHhBw1fB7lXC1ONgOELDX8HvgfSrqDwh8aPw3bOY5q5wPiBxp/D
pDs/2kHxB41fhwO9kgfuA+MXGv8O3iK/9bSA8Q9NHw6pD+55XAemD2j6cfg7
P65xsVcmLH05WAZ0PZ0PTF/Q9OfQMX1PnSAw/QEAZPA7Ew==
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-12.566370614359172`, 
     12.566370614359172`}, {-310.3860944126766, 94.2318899323014}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQLaHrEvJbUfNAneoC1T87rQ5wxd2K8XigfkDo1LLG
e/NtDvzpK0idOk/tgMfHb6LdXg4H3u1ny3sUo3rg3M8Pp66u0HN48GFOmb60
ygEx8/Pub194HLikaFxfc1PpgHSLQa/1A5cDR4JOtp+crnjAVvhuV3qu3YFt
zfETxMIUDjjmVZhb2ZseCMh8bXhcQ+6A7pV/lVVbdQ+YnBZ3TlwqfWB1nkiJ
l5fqAYj7JA8UbubMSNgiD3WP2AGLrH1su7dIHIDYL3JgTdyaxpMGIlD7BA8U
WTOtZ3YRhJrPdyBxP6Ok7m4+qHmcB4yClqgnO/NA9bMc+PrW/V/yai6o+n/7
31axhy9ZwQmV/7L/rClPyFFuGP/J/o8PL7xg3cFxgAEKFnXq3Fw2lwMmb391
Q9jfH9th/C/2QbqJxw4C9UPNt1/YIvFkKdx8Fge+4qS7aUD7oe5z6O3z0vAB
ug/qfgfZFu1zLkD3Q/3nsEtjnxIP0H9Q/zvMu5cffRrof2j4OIiuPHF3LzB8
oOHnoFT9+GEhMPyg4etQdmvFX1D4QsPfgUNFUKICGP7Q+HFIOXHhjikwfqDx
55Bi0vozBRh/0Ph1KP0++RgofqHx73Bo1c2q18D4h6YPh9ITTIY3gOkDmn4c
2AIE8zuB6Qeavhx8GhsqQOkLmv4c/vzaq/wPmP4ALto1Hw==
        "]]}, {}}, {}, {}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{-12.566370614359172`, 
     12.566370614359172`}, {-49.81974122636727, 15.329774409856535`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.73800345135*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"89e106df-89b9-4795-bb94-0d60b390d184"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Clear", "[", 
   RowBox[{"x2", ",", "y2", ",", "x2y2", ",", "x4", ",", "x6", ",", "x4y2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7379193574370003`*^9, 3.737919394148*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"5ff031a4-07cf-47ad-958f-779e68606304"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyz", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x2y2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.715555019587125*^9, 3.7155550757633376`*^9}, {
   3.7155551108593454`*^9, 3.715555139947009*^9}, {3.727351599610506*^9, 
   3.7273516022006545`*^9}, {3.7273542435197296`*^9, 3.727354244807803*^9}, {
   3.7281387925755587`*^9, 3.728138820592161*^9}, {3.728139436319379*^9, 
   3.728139440495618*^9}, {3.7281406529759674`*^9, 3.7281406795034847`*^9}, {
   3.737918101132*^9, 3.737918114972*^9}, {3.737918232457*^9, 
   3.737918290958*^9}, {3.7379184810559998`*^9, 3.737918525321*^9}, {
   3.737919099275*^9, 3.737919170507*^9}, {3.7379193986099997`*^9, 
   3.737919402597*^9}, {3.7379195434849997`*^9, 3.737919563053*^9}, 
   3.737920967723*^9, {3.737921222774*^9, 3.737921224389*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"a79fcad1-6172-4d06-a0fc-2bda84370bae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"xyz", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "4"}], "\[Pi]"}], ",", 
       RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<3rd\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Alpha]=0.5\>\"", ",", "\"\<\[Alpha]=1\>\"", ",", 
        "\"\<\[Alpha]=2\>\""}], "}"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"x2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"x2y2", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"xyz", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"x4", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"3", "\[Pi]"}], ",", 
      RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<2nd,\[Alpha]=0.5\>\"", ",", "\"\<Corss-Kerr,\[Alpha]=0.5\>\"", 
       ",", "\"\<3rd,\[Alpha]=0.5\>\"", ",", 
       "\"\<Self-Kerr,\[Alpha]=0.5\>\""}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x4", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "4"}], "\[Pi]"}], ",", 
       RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Self-Kerr\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Alpha]=0.5\>\"", ",", "\"\<\[Alpha]=1\>\"", ",", 
        "\"\<\[Alpha]=2\>\""}], "}"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"x2y2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{
       RowBox[{"-", "4"}], "\[Pi]"}], ",", 
      RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Cross-Kerr\>\""}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Alpha]=0.5\>\"", ",", "\"\<\[Alpha]=1\>\"", ",", 
       "\"\<\[Alpha]=2\>\""}], "}"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.737918530818*^9, 3.7379186407720003`*^9}, {
  3.737918694449*^9, 3.737918699797*^9}, {3.737919345267*^9, 
  3.737919351876*^9}, {3.737919555417*^9, 3.73791959533*^9}, {
  3.737919630546*^9, 3.7379197487799997`*^9}, {3.737919789435*^9, 
  3.7379197912799997`*^9}, {3.73791983059*^9, 3.7379199810950003`*^9}, {
  3.737920025667*^9, 3.737920083672*^9}, {3.737922266773*^9, 
  3.7379223096429996`*^9}, {3.737922366888*^9, 3.737922468296*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"441a4565-c9ee-447f-ad70-6799f2b2475b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV1nk4VGsYAHCRSGVX9vWcGVNKIhTqJULZU9YzllkoWQq3RFlDouykklSS
ioiotKIFla7IcitJUiht1oz79tc8v+c88z3ne9ej5hvsxOHn4+MzmMfH9/fX
5q1bbFS3Omje2h1XLs2C5+JXWqbR5j+MfO2kWOCwiScT0aMOMSXNql8lWOBc
WlwW3qsO7/dNrF8pxgKPvcPtQW/UQSrI4vOlhSzYteAgzee9OhjT/D1O83wh
eVVRi8VndUi5ESYQNOQLTYcGZcSm1GH0zcK2B7d94ZONZ5K1ggbk1GwyHHPz
hXqPOpuNRhqwuia0bznPB3LtS7Ky3TWgoUxbtei8D8jtOVibEaUBw2uTqSFz
H7BvX6+95ZQG/DyR7/941BtWsd7Hl93VgI0ye+bqM71BskvOfVefBoCmzGiT
iTeUphkmfJzTAMWP7fTKQS8YCoGjwuoEzDMYucdx9IKe7FWDg6YEaH6xX2z2
LxNeni5/SPgQYCD7Z4kAmwlXzLLdrqAHfAaSNvsyIfFTxJiuLwHtRT6rjnoz
wVjHQnkTi4Aj7cYCshQTShp7I3w4BBzo8+3duIMJB4aFdQp3EuBu+Kr+iRUT
1NexzizbS4BlX8zcw1VM2PtqWZRIPAGHJMuofTwK7CVt+Y6gPdYWZ6vPUqDl
EJcglEBA5O6pr89nKPjUMpI6/zABMwkxYiumKPBseHCal0iAESWx+PtPCiyr
Au79SCGg8JSJc/VnChTT7/H3ZhKgNnhPU6GTgqlnvxLdsghozGUVD7+ioHPR
8kVdaOZjU9s77RRkJGVLdWQT8FlmpyH7JQULoncSL3IJKOHGh9xvpWAsUGpz
QwEBeU8Gn1Q1UNC01e/I5WICkpT81eOqKHBdJX5V7xwBWXey9rIqKRgRv9l2
B/0ypmbd5msUSHeKyLadJ+Canri2eDkFbO/ykl8lBAReyWqquUTB/PDfDSaX
MZ4VlJLVWQrMC+N5L64TYHfW2Tktg4KuGC11t2oCgqLaswvTKdjN6rDoR/Py
v1KVxynI1qSn/aohQNd9VWpvGgUDVc0KcnUE+LtY+JulUBD/WGKdbz0BZ8U9
C9zjKXg4dib0VyPmQyH+Yd0/FHyRt5eJbCIA5mzz5sIpkLTg3Zj3iID7/Qcm
LNG+JzynRR8T8JtPwvNNKAX8ZnKxjKf4/gtaGuX3UGCWlXmM+YyAq3luR/oC
KNh1x3T1RzS7s98J0Jmfxl4GPCdAch/92tldFPQb2ctEvCBgVH+KvnMnBXED
i05lvSRgSNFDYZEfBQ1rD1960kHAnw8zh0/6Yjy99LbadxLgfb77qTRaOuXD
SAd6BaP10nEfjOdb09UfXhNwrEsQUrwxnkm8G7PdBLSs93+VycR6qrzqmtCD
909JFpJDO/d6Tov0EiDt8KWniKLgvPZtE9n/ML7ZyewaT4x/177GNW8J0Atu
lfjhjvHmp3Nvog26srcfRmdrdQrBOwJE/VtM5NEDMXpbbfsI6HI+MWvlRkEC
4/tLv34Clr5wtr7lQkHjgV3vTg0S4Fi6MnHEmYJvJjuD5D8RMNzo2XoGLT/P
fzYP7ekSmuSMDk7iKGQNYX3aCDMfbsPn2d4uR74QIHTwcn6FEwUWLl6DC4YJ
SLQbywhCh8gzwxPQoqHRAtroR0UeWdEjBLRqrHKsdqRgz9UdL8K/EqC9/GJx
mwMFp0K2M3+iZQpkd51EP9J1Hg35hvddb3DVD614y3HR7jECKiNWls5HWx50
KPiM9mh7491hT8FesGf4fSegs2kk9yL6ySMbS98fOB9mXkc5oH8e2dr5Dl38
M3UlHa1su4VD/SSge9KRmrOjILTdMt71FwHLCu4YVaMLczdLdqJ3jRoPp6Of
uFmc3fabgLv1BxWC0cp9ZvfsxrHeTX7PaaOtz5nataINLs6vkUSHceGN9QTG
ZyZxZNwWz2Ns3P0YvTRnqOQ/9NMRkxnzSQJEXuYMNKB/VRinPEQnicxcuIJW
DjWSgykC1p5OGM5Fh00ZGhhNE3Db+Mb8EPSZeoNHdei3fAbdTHRztP52/RkC
mlPTdO3Rv83WDlxHE8Y0aVO06gK9UJ0/BGTuCozUQ299uoa/Al0f+mInA/1P
qk6G1iwBFtfr3qmgi+xXq5ahOxNy3ixDt0hqV9B52C/m/7Ik0OMdKzdcQBfb
9O5d/Pf8E1rP1OcIWD6tuGjh3/M9V3gWzf2tL4GVQn/PV1k+rMRHQn3VTNcC
9Nl+zQMn0ZLhe8SE0a0X6Avl5pEwteVlmwh6wp+Wn4temp6kJIZW1yLp0vwk
iBfxjUujbb9p3MhAp3WWuiui91epW4gJkKB7fGQriS4OV3uVir5IGjZro58Z
qrJE5pOQ/nuiwwg9OaP8Iwmd454fbP33/HtKsYKCJLhfO5zn+vf8OEXxePRh
Jy27nX/Pt1A4w7eAhLunJrMi0e5X054lo+cHmzIy0EYyfH/EhUjQXK6SU4pW
PLh3+Qm0oJhi1wM0b2DAVU2YhFDmwx9/899n45J0CW3jdurjFPpB9dManYUk
+INepSzWT0JCuaSZCAmvOh+98kBzR1RNm9EdQp0rY9CWzlnBTotIiNZs9SlB
ixD7W30Xk7DWONdzEp3eYJoYL0rCSOP9K1V/+2NFdfUiMRJ4KbSRj+htWbQP
Weg4yyYRBeynpaxFcF6cBLuLnZ9S/vYjf8dUoyQJ5XL+q2OxXw/tstS0lSKB
vFy9vwHt9e/NHR3o7nWp54Wwv9WLC69/lCaB5SR4KQd90dQ/cMEyEu4nbQh7
gvMi+VLPyWPob/L8Q3I4T3ZJ2DYvlcV4VRVvCkRrvdeh0+VIkBs7Vy23nYKq
mJk+SwUSHj1oSj2yA+fbUKBYG3p+WrrdF3S4Q5+JqyIJMqyUPzY4zwxVmwr8
lfD/unoqsq4U3L13zPmICsbzQPSxJpx/RfR58RKqJIhUv7+/Fudj7PHQyhNo
67nGDxfR5l6uomVqJAg/N5jN8MB+4qk9adbA/LBH0w7iPO40qTFarEmC7JqM
M1U4329t2OdyFC2wbDTSEOd/4cZ1oSIMzMc9Z/H7aD/TO2XCy0koWLiQ9YqF
9WbeJCeoRYKHpWO9BBfnp03HxKw2CeYZd4ve4f7h2eRJHVxNgr7qkTWxuJ/6
bd20/6D3anHjid0UXLZ/w53WIWFDgBw7JJAC420fO8Z1SVC2vLZSKYQCpvvv
698MSNArmt3UgvvRzKP2RZAhCf+GFc8k4z6leUYMj6L/ifGOsNqH856aVR9Z
R8LG4c9PWvdTEOMjmDlkhPXWfrDxSyT2j79MyPuNJGyRE06PiqNg8J+1Wu2W
JHy8kXd0Gvd9rGLAJ08rErzMJooWZGK9PywqHkS3xS75TzqLAqcli+WmrUns
u4ImgxwK7pzrF1SzIeGMTXd43gnMZ9vxd0EOJAgZSD+5W0yB9j9NBZNo3H+R
o+cw/goz2+McSfic5sdUvkABnx+3NceJBJXsrMrEi7j/Zo1v1juTQKTvKNpz
hQKhc3vDNm8n4b9ske7Kq/j+VqXabeiG8Tfmv/D7pitLquTDDhJcvirXReP3
0KblXzJF3Ej4vadcsfIGBW9fqNhlo/NJfh5/HfZ7+PaFyu4kvAwaXepykwIp
haONF9GVznN+V29RUH7/frSOBwlmbx99F6zH+c8dX38bnSXZXu19B/fvIq1x
c08Srk1WVd65S0F0pU/lc/SFvN9Divcx/y55u10pEmIsg+vk8Put5k8rvR/N
qqhPpx5R4FDM/yGASUKpl8XZc08pSBwNdIv2ImHIfj5Hv42CH/Hmm0t8cD4G
ytv+84aCNMaBeat98bkMcaeljwLNFxX1N9F6Yd5uGgNYH/IKus9YJDQLBYp3
f8H9c+27yi8OzrPkWjvmJPbHm8Ip0134Pn1qt59LMeFFc8+ap2ixKc5i/WVM
4NUu3e0QQMLA90LmGXkmeGYee8vcjfPitQnffjUmyFoeaogMIuFhzTZxU20m
pF+j0mr2kvD84zxSZysTYuIV1RiRmA+DCEZ0AhO8GAVW4qkkhD/z/BT3hwlt
NZHDJy6TkNjxOiRj1AuGgzcHtDwjIaA38/STeG+o2zWxoW6UBG+958fzRH0g
Zcv67PlLaDDireYneNIHBF25jyZX0SCjrj0nd60v6Jbstym1o8Fc8vrjIU2+
IKIeVjEXQoNFdHq4BpMFx1wWHE3cQ4OyCfeCEG8WSKTlc5fspYH/uSTmHV8W
yE7WKymE0kD71OT97X4soD0XTNUPp8Gv2LCe2BAWmB7I8w+MoIF8XsWDR3Es
2P/vLbXeWBqIlouG8EpY8EfIdtYnjgaCWTpLN1xiQbTJu64htOS/NeYHL7Mg
sVQgfTyeBswgMcPpChZkH7LhSSTS4PExM/bXOhZULH/bY5VCgxOf4vXuNbNg
MG5e9o1MGgTfs2uYHWXBbscPnnpZNGDnBh0QGmPBD5Umsgr97UFfjfgPFszV
J9dezabBz317atXG8T4TYr3nc2lQLbS+w4THgsKm7+fU82iwZ0V/4SY+NhDZ
7buL0FJcyyErfjbo6OTxTubTQD+WN+G4gA1bApTVswpoMD0uPUOJsqFtHd+w
+EmMb8TJKi9xNuwQ7r9+DG3Uaf3RW5INrAsXLFJO0SAusv2mz1I2fAlNEhU+
TQO18CPuPrJsCDHb+fowWv6SYpi3PBvGxbcWCRTSoD54WtBLkQ1R77R2xqId
1NLFKGU28JeLrplD5+dc7KlWYUNy1Nh01BkatDyJfDGiyoYcuerU/UV4f3Mt
FQ8NNpRvM7oWXEyD8W1+7jqabNBTV4oYRcseV8nhMNhwa4xnGnCOBg2DklYn
lrPhcdrDdu55GtxYobtsTosNfY+tJ6gSGnS1SDEbddggaey6waaMBt0sjStr
jdgQToS3albRgPF52KDalg1Vec16legk/VTnMTs2fBVRPb3uOg0MmImdKxzY
4P+9OXBLNQ2E5+kvOuvEBs+7qmK7b9DA76eZcYILGza5tjpW3KLB9vilH1b6
sEEiVeP12gYaiEvWh4qFseHqz5fvzV7RIHfmrppMPhvyBWS2yv7C+zaPhPt0
YDwmP6+1laJDqFJgB1uEA2oKpbOMtXS439hafsKYA4GHbOQeOtMhSrRMl+Rw
wFesR4J/Hx0OhamrvkvhgMh7W+ZsLh1WtF6IeV3Kgdq8bVquN+iQXNeo1v2A
A1bb5vT70Cq8Df8ZP+RAj+hlU/9aOsz+drQvQv85zO+yvw7t8dWL28ABs7DK
2PxbdNA9Xav9rZEDrQ5ir7vu0sGnAyp+PuZA/8KWWLfHdLAjOjyePuPAkiiz
1+5ddEjdb9J1rYsDxW0mL7rRYmPZsTy0PrnusWs3HbZ0y41v7eYA87l27Y4e
OmhoGJoOostVlfKc/qPDXPxJlmwvBxyaJnZs6aOD08T5ib1vOJAperVz3RAd
Wo7yHPn7ObD07LJO2Uk6lF68HJHxhQNPfnZUHpLXhPlKHtOd0xyIXkETMzfW
BN8yWdHtwlwYOud5v9FDE8oNPzOspbgwYx1lN3pQE4IqU87MV+bC/dVxq1+e
1oQ9+gLRqXQupPyRy5a+owmk3Ba/mdVc4P0ueDX3VhP6Zvm/jRpxgVjNv7OE
pwkGLtpyLEsu0E6X1OvOacL2g1mvT6A1RbaKP0CXDJA329BaA1m1vXwMyKnN
HdxgxQXdfHKBhAADSnW/f1O05oIZn/W5SCEGBF95MfhuCxd82o6/cRBnwORb
Vm2cHRd8TfR03qLz4lesu4tml3UlBEgwQC54xcAU2j9BTStRkgFRHjk39thz
IcTw+oHb0gyosXN3YjlwIaaocxlNjgH3Hn09bufEhbglkQHX0W+D+m6nohMO
qNwDeQbUeYtJt6CTnf25HgoMcPQdtLbaxoXjwtPV6UoMkCl+0GbuzIX08EJh
ZWUGCFCDrAR0Zr+Z52W07IdmohGdW39U4JEKAwIyslebb+dCPmO1yzZVBgi6
90QmoAtyX5X1oSNXnf3diD4lEMELVGPAH6ZcoeAOLhSGKDnNoKuNQsM3o/8H
08JWVA==
          "]]}, Annotation[#, "Charting`Private`Tag$7657230#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
DO0a5X1Q5DINjHbDu+qY76TeX2lx6MrT8sfD0MPZMsUxV2j43HX7uNb/62mi
8NYf9OEIo7oUNN95WeOeYhoCv9or/kSfl7MZDL5Kg8CDzlUdWI+dYS+/fkXn
OP2SscR6FXq2a8q3BOtriY5iPdozPUF+xzUaNoltIC1z2OTYqCzzLTrCYsLL
GeufbDi3wqOUhot6OpYjaFXJ+zauZTTIJN9oVsT+WRew3q0bbabVEHQHHdX6
yntjOT5/qMfdA/utN2Uybn0FDY5UisJd7Mes2ew7Ztdp4JQ5e1RiPzfurH1I
0AuNXqbGYv+PN9p2cW/QUHVro7KtLOYv3u+7QRUNQ9JnXWbgvJCaeYGlfQvn
F3O0+hzOF/DU07uE1gkLXHwK50/g/QemzNs0/Jf1bO5JZYx/7OvNi+5g/B+1
rDqjivH9q5AhcxfPp95bOd9xvgUKKK/ORf+3iPNZW4NNHIVUv1D3cJ6scWr0
Z7CJmri6xYoanNcu04uEaTa5qaT1d8N9vE/szGk/uATzvVD70gv0eLp/ww8d
NomjdBw9amloecXy2KXLJraLl5cGPqDB4dPXdB+c3++Njbel1uM8fbhl4z0j
NmlZyZFa0ID5vDfcvdUE69F05b08NJlXqCrJZZOYtabyJY00VAza/IsCNpFz
WdvS0kTDOVXlqItr2MQ8woUt1kqD4dHek5ZObKIV7TZwDC3Q+G3MbRPW7373
owpt2D+dbba7XTEfiZ7DdDvuP+nYnPv/sUlw1q7cNR1YvyYlfy7uZJOCqkih
Q1043yzOTj7eyybxd6LKxJ/TsNnx8Us7PE99a2LcM9BHyzaN9+3D86zxwM2z
3TRQAav6xOPZpL0rybe2B8/z3qb3NXh+T4/ldP7rw/klu0wu/gKbDB3/5B/T
T8Oqrtif1pfZpG3pytlT6Mz1OjaKV9kk33uAO/kaz1/PY7EPy9nE7BXrws9B
GiYfkyUh99gksa4yYmQIz8fetXZCz7Ee0ltVn36hwekZJ01LQo9MLl10a8NX
Gq5FeuY1SOqRwZYg+3Z0Z/rCBG8ZvA8JyyY+/kbDIoU1Px8o6RHHSNfvjaN4
n1uRm9ashfcnj+EH1eM0JDx860Ov1SMauoLeRdM0nIpYtH/JUT3CPF1UveIf
DdkyWx7opusRWsxK8j56fTRThJulR7Tfplf1CmjC6xVdZwML9ciKLIaw1ExN
SMsuOm+O9z9TAcuze0U0wXWH/q6zg3rEoz31la2kJpwV9/nmDPrEk8te1oeO
90/cGcfXJ9sud8f5SGnCkph8r1vW+mRnnJp2vLQm5KuvnwWb9EmgYUXkHRlN
YLxNBhKsT/bldy1gKmjCFe+SdWkX9MkBib0+FWj5pZpyjiX6JC5yYQ0oagLn
eHcR47o+SXTY6eWqpAklV7cuG6zVJ6mik5VpKvi805L/PenTJ2lheaKqqprA
q5R99e6dPjk+aOp2Bb3Yw9dc6LM+yaxOntmwUBNUf+f2u//RJ1mauk72izRB
e9E9pVOCBiQns/Pya/ToppoNA7MNSO7MiGk/NU0INK87tEzKgOQFqtj9QV+I
+XYnWd6A/A8KIgmB
          "]]}, Annotation[#, "Charting`Private`Tag$7657230#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
eVN2nUjWm0bPG/koQzNgExwD58LrkQ1LnjleRvM7cEjHS2sGgxqdQOnOXWwi
Ye9pQ7VvGJRsjDIXRvM+oqH0XeEHBkVaZo00LTZRe6tvuBiZPEQXCNRE+VOM
fIz9RPclV+rIMbRPdGSeFMrOYmDtcHLAE+2b9PUBDqK/0T4JjFrkUmETtAQR
04vIf35gnWPKKP//7u/Y/Af1v0lkoU6JTUz93sQjMIfBxUQ2+4ACqu9YdSP3
Apr/POK2sTyq71HnkgTkpn/qh6a3sYnv/Wsy1i5i8IqpbZKJ9mPuEzv/VeTc
+qzlF1Js4k/9b5m5JbR/X5rWbhBlE6Xn9BIm/qH7Tm7nSzofm9C+5SAYyEGC
s4Xnz2Tyovl9GpQ7h8zfaklt4mYTbzfcrOVZS4LQNScdf6J9L5giPqHESYJZ
gwJh/iUWwUr8uyeQlwRbqkXGfk6xCK6SrS/mkG+eSBuv/MQiLrRruMeuJwH3
0ZQn3hMsooLTLzydjwR9lB6be2MsYuzUcEkNPwmaXaQLhQdYhGVsM8+8IAn2
i+25R29lEf35gxmxQiTYJJ939za6Hz0f/JblFSZBZNk15u9mFhG9oqInvpkE
G+3jhrwaWER1VB7DQIQEKu0SmV/KWYTRlcbfbciHE/1fLJayiO6m/pO2W0lw
ZWVN2ZoSFvFxceNlN1ES6Ci3iS5dZRHHxZXxSWRGgMON6VwWsapncTtQjARB
p363vr7MIsRYMV2x4iRoNFI5n5nBIoov5RzmlSDBwHElI0Y6i9BoqB9PR47P
4GBonWMRLa9fBIhLkqCC6b1pMRnd33PfFguRy3Dt9dRYFjEksiFRWYoEJ9sf
7XcKYRE0bQXhO8hH1FxELeks4mSoh/IjaRJQvuy0FjrAIjZmRtXbypDAbKmZ
+GLGInLuXDLrR452mXrRrMMiamd7XSZlSeB6uvG9Nfp/53MQnOGVR/XQ8HUV
mIkgWEoVnEnIdpLJ5LjxCIL3vWgMD0aCGI+Zm9P9EYSC/fcgbhLqb0Pyj+oH
Eeg8+Uc4ySToGN++/ntaBKrXkhyHMgkCxz493qMeQYyfarg7r47O//Bp0slj
4cSbTNXJSVMSvOq7Z7x7OJToy6tsJVFJ0DB4sPx4ynEi+JVoNF88CYpUD+w5
5OFHtNvQk8uvkaBSWVIoZ9iLaP1xNeT3IxKMkZLfBm11JB5F+r7LnSRBEiaI
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
3zLJD5K2W0Ke2pz5RoOP0vI/6SCtSg==
          "]]}, Annotation[#, "Charting`Private`Tag$7657230#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV13k4VF8YB3CUpRnCTLLMIO4sl0TWVDKHtFgqCakQKilrsmTJUpGEFG1C
SPalRFTklK0kWypUkpBKWSqi6Pf+/qnn89x57j33Pe/7PZeSi7fVAQE+Pr5g
+Of//y36dkWG9igje8OLbnHO0rhVoujZLJj8QlM3dJXGluvnpYJ6lVH5EsP8
scPS2Dovq8D/jTKqr1Sq3O4njff4fn3h9U4Z3Z2o/S55WhofFjrOcf6gjHqW
uN6PKJLGMeoZzzZ8Vka6S58sF56Wxg1hw1LiM8ro1PTu+1qxMviThf1pUwaB
vBmf/CoeyOLqPVUWvLUE4pSxJIJr5XAcvSuzGkw1/iGvVyeH9zwbm1ptQKCM
wp/08UY5PLuGm6mzjkACxealDq1yeJXcpV8qPAIVtrm7KL6Tw2XdR9OXrCeQ
Qmv4nTWzcjjfRmP8sxmBGoMtn2ItBj4mZr7hoDmBOpG9k64eA29ucE0Z/N8j
gRdzVzPwsE66yXsLAiWEp7SfQgzMWiJ2tWsrgTw1SkyVtzJwRucXo1orAv3p
kEOf3Bj40racpOTdBEr95iJ0JpWBmUW6Mcw9BKJ7TgyOX2fgLJGG0Gzw1/zt
6TY3GLjk0ccD5fYEqtO4c1GqgIEbtZX0uxwJtFh/hYl3JQNPS6e+pe8jkOS1
pEWnOxjYrv88O8mdQCkFb09oL2DiPgMlOYYHgXZEv+PTFGLi/VdvLb4B9qpd
/Ed1ERP7WLVNl3kSqFle3W6JOBPH1Is2d3oTSHpnkku1HBNX5Z32ovkRiMJM
UNqrycSyR45Xng8lEG9sOrl3DxNnudpflThOoINNrc16jkysar825Bx4bkdx
+jknJjbYNGMYH0YgU8nBpasOMLGTvH9jTASBgp99FnTwYuKcpx4vw08RyKLq
Y51ABBNr1JpXzoPlsx7d456A55erXj0eRSCnPZpc01NM3Hx9xD4kmkD8deTe
yBgm/ua/fzAghkAjUip8TYlMrKNs/8MzDvrFZO5rdgYT10ivfTkKnh07uSYx
i4k3islVusfDfkRxegOzmdju9+vgQwkEkv2ttMAgj4lDWncIHEgk0KLsG1WX
S5n4cbC5pH0ygfqS915OqWFicx/VH73g1WUrX5vWMnHXgUUvd12E+rzMNfqF
mXjIsunKzksEenr7SxyqZ2IR7vplO67A/gb63ctrZuJtL9ZomKUS6GUB27Lm
FRMneMbfegFWXf76mUU3E7cK92s6pBFoy86kq697mNjCIErHJ51Ak03fFd6/
ZWKzm22rL2XAfqWdDqkYYOJYnvIDxUwChYkPaioOMvHTHj+DfPCsbYfSqSEm
3rxYjledRSDbUKUs3gi8f+B+k4FsAiXe+dYa+o2JoyUrG9xvQr+4cv7Wfmfi
hsJFm36BPWQDzObHmNikv8RUJJdAvknyhh6TTGxsOrNVPZ9Av9wHlotNM7Eh
I2FXcDG878bxo07/mDisor93QQn0v4f/ems+eVyzTds+HtwzJL9gPb88NjjV
7ZhRSiCxz9c2Si6Qx2u+Ke9vvE2gt3WZMT5C8jj4tP/QtjICNchdPrlWWB7f
U3ri2gP2H9O15ReRx/q2nodG7xBInasdcHyRPNarrfSi3SXQP5dI81Wi8jhg
F2X8Gpi7VqakG1zxw/4Iu5JAUg/62vzE5LEOKeCnX0WgzU01JmmL5bHfY+tf
j8CifZXnVcTl8R373ADzewS6fDv7/C2w1nmLIMf7kB/ZsuklEvLYd/n12U9g
ly0ns9mS8vh2w0TIkQcEOvMka/tl8MrZS2GnqgmkYtqYdJgmj32SP/8TqyEQ
0VOo3AIuVTeIvAz+uI1iQdLlsfq+DycLHhLortAv53awwIY1JzVrCfRYNnxS
bok8fslJOlEFto0sW+8EzhMZjeRhAn2TKrDKAId+MYlsBPPfimC+AVu2pEVs
eUQgcXJ7uoSUPCZKpsK7wOds9V4i8NS5beF7HhPoL938oTu4+Uhe2AD4hX6B
7Xlw+g7+sEN1kGdpXtdug4/o7j4+Ds6Ru3OmBWwifSc0sB7qE3NBYQAsM0MN
nQe/reXunASP9u4PiWog0NiV+JVzYFxdEyzaSCDz0b5cgaXyODl9aXAS2P2C
3v3/fTDCO0iuCfp5X+n+/3+/xuXJsUzwgP7+7P/vt9hE6Rj5BPb7i3fA/88b
YAcHloJVLL+9/n89d4VfBOg9JdDW9dMN/6839vPygBqwdGreuv/fx+HZKX+T
ZugPLabB/++7svid3zNwZL/HQx544Tk9P6tnBJI5XvFoMbjb59zRHvC6DxLr
u6GehVYjvk4tkJdDV3mp4DAdI99PYMLFvXw32GppyhGv5wR6rZGRTgdzfk/6
/AILcXf8aYT9nOkx9wlthfledr3JD5yRNucV20Ygg2DPG7XQD37htl6S7QRa
Fscutgdvci71vAIe5B+Q+wn99J3l7JHTQaDp4BdLaeDHQvfdV3QSaK2G4fUr
0I8XR2ju5WCLfJkIWbBBUf2hxy8IVGkZw6NA/0okyB8y7SKQiMYOmWDo94/e
AW7tYAndmXWDMA+x2uTBvpcEUpMz3p8L89Jz/+z+2dcEEpy6+2wE5qsodXBf
ZDfMX63ZfVVwRNi6fSI9kK9+iX2uMI+k8Zjz0l7IJ4G06ucwvwFPrfZqvYV+
2Vtw3Abm26yw0PEe+INWzRM3AXksH7/QEb0jUESFnVYA5EG95V37rX0EalW9
aBMO+UHrlt19uJ9AjJP0s2Z/mHjE6vHGEXACqxEbzTJx7fPD2q4fCOS45WK9
9gwTe9Q9EHUZIFC0OLFCBPKoocShdtcggT5v1US+kFepKkJFr8FGrLls3gQT
+2aXXLEZgvNbV7ZBeJyJFVL+Hdk+TKAFI29WxEAeHovKZJmOwPMi8V5TyMut
fGaSTeBzmusdRoeZmBUyOWfymUDpnaYLYiFfO3zWv0ZfCGT5OJT3fx6r2g+d
0R+F+m0v0XsGef1OS2WMO04gkx+fJH+0MXF5ccebm+AWi9vHea2Q32TwE2IC
8onf1SO6hYn1FJ5lKk4SaJv18qcLnjJx4iJPa+mfBNqUvtuw+hHkb/+te0K/
Ia9ifogolzFxXrz+qaF/BKoYsyi6lcDEusXWEl58LKTgbFW2JA7Orxaf1Cnw
oq/xX4+cYeK31PxyYQEWKnEu/CoN56lErOyQykIWsjqb2ioZBO8fPbvBS4SF
+uzWRdx3ZmLBnKWdU2BHU0WrW3C+X2jQcgxfxEJJlZu41+H8L1roHpBIYaHD
HJ+2gzZM3H/iTU6ZKAt9ml9bl70Zzp/wauFpCRaaIW5ebV7BxC/Tu5PCJVno
5fAh/W2qTOzy8KeiCI2FrsVFFbRwmDh0Tk1fls5CmikNf28rMvGtkDS3tVIs
lOEVJciRZOJ11+79rAMPzch/9RGD74H7LyMslsL7pEjFlcP3zOCM2FUHaRaS
1uP8ZAsw8RFZVfYweO86o4od8ww8r7/xtpcMCx07WssOnmVgmWNhT8NlWehQ
1GeR25MMfPNyio2IHAuNeF72f/SdgbUq735IBEelF0U1f2Hg2lednrIMeH95
Vb2WYQa2mPo+kwlO1v+gur6XgXukqNGqTBayf3LxsHgLA7vqcml3wNHlAzZd
NQwc4bdXtV6ehfy2qG/bnMnAYskhdy0UWOj7NiXP6QsMnHLnsvFLsP7ui7bX
TzFw+WTb7mFFFqrS/FzYc5CBR3zQWRFlqHdqKm9mBXyfqhQtjAGr35GSO7iM
gUUGpMOECRYSCdAcbKUxMHfHmI8Qi4V2szc5x03LwXrSbRdyWGhQPae8FstB
vf4o8amykJoU1UvMSg5/OFFZNa3JQq5umim+PrK4N1l9eNiIhVJmZra0pUnj
jrSSxyxnFrp6vT1drJeOfbukQyknWShWtDnEhCOOG8wPninMYiEnjgGdu1AY
Px6/fvRnPQsJeUbEH4r9W1sffPh96jDUyy+vmTvzqfbYBsZ1PiE2kjDbeKa1
rY73al3FWlGSjV4ffi677cY4775h4M6z4H3v57+d7xrnpfNWH6WosJHsl9qO
SsEJ3kGjmgIRVTZa4vnXqejgBO+3SYOsoBob2Xbeeq6rOsmTs3g5PafBRuho
8u47+T94jrt/3RlbxUZqLbeX3jw/xTPeU9nmpc9GmRWh89K1UzyOfdDXb+Av
sToPD49O8cYc5pRHV7ORUHaAY+nGaV6Es+CFkbVslLr60vaymWlelpuUzwce
G201bw+N2TXDGw7QVXuxCZ7fmPLg0b8/vEim+yf7zWxkVeJr76X2l8d8nJE1
DO7evsJ3wu4vz0pMVHbWlI1SGrYGBd/+y6u5MSCoZMFGLnqOzslOc7zk9nPv
vSzZKOZn/ETz3XmeRkBDym8wGhQ53dY/z2tm/LE5sZ2NxgIDovIo/3h8B11b
Llqx0YaoFWteO/zjecwZ3Ku2hvWdpk9L8vMh4Ru+fhtt2MgxWIWxX4oPZW3O
02gHn7xXPX5dhQ91J9FzPtqykbzsO6+u7XxoveqXC5RdbNSwOWlUPZMP9bUp
bk0Gfzit1NlSzoeO+dssUtjNRhQxzeEdT/gQnXG2Phf8bKeLTP0bPlSCcbjm
HjYy+WRjJz/Gh0xdp9Y8AFeuKbq4V4AfDVLVpkzs2ehQhyCOleJH4bedb7eC
01QXNKWT/Ehu52UPOwc28pK60nKO4EcVf1u4A2C+FzMz++T4kWWWwEd3RzaK
LdMUVZLkR9HfPHeF74X6hy+TtZ3nQ5MnTTbmOLMR89PA4eLXfCheJZh/pQsb
hZn3WTc/50NkW2n1PfAVpfzL7XV8yFGOof18Hxu1NOc7Xy3lQ09vTSj+PMBG
iXm8NPloPpTxLn3G6DDU00zAZU6dD7U192o9BVu9KTzwleBD85VLPSzd2Ugm
usq3XoYP2V9I6HP0YCP9m2/erxLgQzKbwupCvOD+77tFzfP+8RJvOcRX+LJR
XHsO1XJknhdxkqmkEgL92beseIfZHK/Ux273LfDg2zI9rsYcr88hOWlVKBuJ
dtGMuuhzPAN9UaGNx6G+2XMbHrz9y/s9+ueLSzgb4SsNEtjjL8/H9k156kk2
stCxKaqO+sPbq5KyWSKOjUZNOWLGqTO8xFK2dwLYhO9Rc1rYDO+x7u2LovFs
tPJCN/8bpxkex/jJgEgCG2VkpujOsmZ433dPhfInspF990qitfA3LzTO6vZk
Ehv9He9Ofn9nmndljCL38ho8n1NWZ1Lyi9deEfL1aiHYd8/bacsJXlV/8G3l
IjaK8CuMNVeZ4GVSgwMLwS371Yci+Sd4vs7HFtQUs5EO2itx+fY4b4mYP6O/
FNZPeOx2lRjn7dzvZc4pZyNy9y7Vfee/8fpozoVl1eAHWs0nTEd4X703uj97
DvPx+lL5xPpeXtXhacOqb2zkdO4hPehXZ22s2ZrkhWIcpGY6N6WXN14raOfa
+Fudg7byP33fozBfq51zzCJvKwfJUVKmuG6CmKLsV/rPh4M+c7XWe7BFccJO
obPRRzhIrNF71zaeKJaMv+Iq5stB9+sYjWq7RLHM72p5xlEOcmZYeryKE8Wc
VsE4PX8OqhpS9v74QxQbBV928wzioG9r9Fy7sRg+1nlf6U0kB62ON+xutRHH
f4W3zDmf4CDh3EzHAS9xHL7uffcIeEB47vT30+I4Om9B4tRJDjrydkX8+D1x
nBxmMS8ZDc9bpz/ZslgCl6r29W6O5aAtPopj949I4OET/Ml3L3CQT8jFviAd
Seyx/aO9ThIHGZ7zzL7Nk8STig3sMnBSgVnQkJkk/lcdU1mczEEq9vOrjZwl
scy0+JvsSxxk5lYe+iReEqc3TNxQvsxB1AD5Zf1XJDEr+YVHBrhzh1POjxuS
WFPz8vy1KxzU+NFhw+L7ktjMXUE5KQXuT8vUkhyWxO2r+b5KXOMgA0cjK+EJ
SWwrMnAnAexmnEjO/JHE+27e3BCbykE39Fkf2yRp+MvR04tF0jioI9SxupxJ
wz7Gh15HgYtqNPUucml4SsI8Y0E6B+1OljE/okXDoe/VDkWCv16N/7V5HQ0L
lCzW+gfW2oBd9hvRcEzo+GzodQ6KUZiM1DOh4cXmnXWz4GTJ69oLN9HwRdny
uGMZHGSy6WLQc1MaLtmx9pZ3Fgft/XIgotGahnWU5YO+gZ939jUG7aTh++Pz
Ru43OGj7D/8icjcNN8U/fuGazUEbI1bZB+2l4f4m02mHHA4yX58cMXyIhmkG
doYWBRw0slrmyMRxGvZn+beQZRy0zMwt+VUWDZddbta5DWZmKg9p3KTh75Rl
aavvcBDp9GTHqVwadpto9jQr56CjddRkhSIatn+4TNzjLgfRez73y1TQ8Hq7
lu2l9zmohP6olNNIwxHPlO6vegD11Qj9ofWEhqsNA5Ux+I3rTNCaZhrWYyv/
aK/moNGX3nZrW2lYdTIwefIhB8161V9b+IqGJeOI17p1HCTg1MyrHKThrf+O
8R6C54Mn6o4N03Csb2vuxnoOcjhwu1R3hIYX7go6trMB9tdGsynzKw3/ZrfJ
BjVxUMuefL31kzT8vjbYvvoZB+17vYpRPE/DTO32epMWDuKq6a3g8NGxXQ57
xXPw1ILsZyn8dNwZ1z737jns9+cFlQEL6bhxF+f6vzYOattkETOziI6Lf3R8
MO6CeVWukVmxhI5H/wWsegzOfyHy0FyKjtVEmfFGLzlos7JplutSOi5iueqj
Vxxk5MbWOC9DxwU2swnrujmIYlWTcI9Jx1+crw9Wg+dzFJzuy9OxqpfJGoMe
2B8Dn/BKBTrOj04YWtPLQWG/nUtzltFxXqWygf5bDkr1GxfZxaLjkbqm85Xg
qSiTMAM2HXPbPT7pvYPrwacsmRw6zhm5e0G3j4MOvd9A7+DS8U1Z889a/dCv
23kbxZfTcVbI0UsrBjlIpuyCYP9KOh44LTNaBDY9vU81VpOOlZNrjNSGYL3R
0s0rteg4s0j4m+owBz3ryIk8qk3HGe+urSdHOMjY4YVgmy4d939GV3PBQ6vV
9Rz06Fhxaug75zMH6X88OP4JnL54ZQr7CweFe/5a9GMVHafx6seVR2E+GF8E
+1fT8VvzQxuzwBkyRfes1tAx025xqtI3DoqN2iz0GJzqY7dp2XcOcopIOHJp
Lfw+dC71OlhqeirpD5hxJmtSYYyDVEsrbR0M6DglczRNfhzWX1Fbv3QdHfcW
n/+RCk792nDUCyx3X8+UOQH11s1qfgy+2hnxU26Sg8527g50NqTj7j62WQp4
rfhUeyFY5mvzddkfHOS5cqhnEnxlgZS5zE8O+jRhwB/Io2OPnVjhIrgSbZ0u
A6NC90nJX9BPZ6fqv4KX/FvamAC2jpxxV0J0/Mnq8VXqFORxu9z3HeD7OZ6e
MeARjsKWk+CEWRkjwWkOGtduii0F62V5j8yD9ZfL5s+DKVNy1SG/Oei8r2m8
khEd95k2nvsN9lNV32kELks7ss9/BtbLf1bEERw1wVw1CV6UQ9wIBNtteELx
nuWgrsYHZAJY7erRvq9ge5r0tUww3zeFMrc/HLR81cyf2+Au1Bw1BG7/yN5S
C85L9t/l8peDXjc6JT4Fh44sW/Ee3JLg2dQOtjRo4bOfg/n8Iv6zC0wkBnZ1
g++cpsq8Ak99VM6zmeegh1Is3f+vN69qDekEfzGW39IGTj8btG3bPw56XHPf
uQns+55FtIC7dLBfNXijdvvUZj4uKradOF0Cljsd0twA7u6QTEsDf+/lpBvz
c9FH66GKM+BH6p1HasG7EjS6fMHJJ45vMBDgoqdq5TN2YLdXpOw9cE2fHmkA
NlDtGtVdwEV1ViHOTLBEWDguA7uu2pA7A/Uf7FBN1ljIRbpr7f68AFexXx0s
Aj8QPba3EBwXFLlWRZCLona7vQwH732uJp4DXvZi1HE7WEupe0BZiItk2E/n
FMFC/ifvXgfPzOM7//dLCbPX4aowFxUspHkEg0/4RGkuFeGi5PjJI+vAtvUr
BZPAV+3mLs5BP865ny6KW8RFqt4ZPH+wxQOdP+FUWH/FSTNj6O9l4v2tf8Gj
rvJHv8N8/HQ5mxUkCvdrnW+6DL5GGTA9KsZFKSG5cx9gnr7sOnfFVZyLuvZN
P7WG+XtYvMbjI9ipXzf6C8zrBf5hnpMEF7Wf7gk9Dl6db/BplyTcT3Lvsmv6
dBzz+7PuFjoX8ZHNRypg/mkTIvld4O2REaQqOO0zl2m/hIss7h4vugb5UdZ7
QMBdiou8Fm9n++vQ8ZvqD60x0lyU9itIVgDyx7WCz1hChotCCqKCHCCfxosV
Ky6DHSf6qyogvxZed7iWIwtOjO2z16Bj9cieg/UMLjp+/snCaDXYn6DfveZM
Lrpn7Z3+BPJvva/01hdgKycvFRGw3T4bnQF5LmopDGKGqdBx5IYOPr5lXMS8
8LFiA+Rp16KnV9eyuOh3/O+SDYp07CgwIloHdojO8bCDvP48KxRhxuaiF9oP
eW6Q5/NfTVx3cbiIWKShEc6AfG7FWoEkF8UzdH1jpek4+ELVszI1LtrZ0Rgp
I07HSoy8ORVdLgoTz0hQ/gvfA0VLHfPAAi9yN07O0rCBYdRDjh4XeVd73amd
oWFbZ5dwYhXcvy+ubMc0nI+5TH751Vy0wW1rsBOcfz+1zy+UWMdFjyaFmhfD
edlkEUydMuGidQ8s1z7roGHrvhF3vw1clL3NSdqmnYYHvHe2TIK9JxsG3sL5
/PeCTvzYRi4yQ8Nbh5/R8Mqe74s/b+YiD5Ha0v4GGk45sI/21gL68+bECv97
NOwZZiH72Brm57vDN5XrNHyrXF3W3IaL3NauCrBMg/V8kZDtAo+96Hzldw2+
n3a+lBm25aK3h26SlZdpOG6lowxlFxf9vS1sqZxIwwUD3tJWDtBPMwZVyRE0
PLIxSWrgABfNXrYwnoXvHRfxXkmBQC46kCn51kyWhikftjjOXeKipGIL5bVR
krjy8g41u7tctOe91uTPIQksFmr8enc3F4kvoeyv15TASzOlX8n8hvlPMX8w
tkQcP/nx8naYHIlisjpaB2rEcK6OeZMgg4S/r6ND+6vEcLQ/fhsHPoO1T/Xf
EcMm0wXC15gkErhud+dTvhiunQ13qFQgkXeX4GL6JTF8l1910bgyibZlFaV/
8BLD2eJhTs7LSWTTpRhyXFkMhy/niJsYkGj5gEFiwQVR7CT4VfIxOEfuSHhh
gig2fl+6BK0jkfyw8dHSWFEslLRazsAQHGgSiE+I4rhZC7YOIpHX5v22wkdF
ccrTo2tZJiRa1m+QvtxaFJcffHRwoQWJOrJP1nySEcWXjKIPnwAz7//abCkl
igMZ5p58W0gUeFhjS7WkKF7T1uX7F8x7F9aaThHFj/RGjv/cRiLtTi25hL9U
3Coonjy4g0SDmlILZD9Q8cgNe1y/h0TUM79OzhRRcYTyRZct9iQSjtzekZxP
xTKZzxe+AucxzlXr5FCxabqh6ScHElWKa4WfuE7FBVeWdS5yItGJFwV6theo
2DN+8OPW/STybREKGThGxUKi8tGvwd3ynR1P/ak4PdaGdDoA++MZK3HXF9Zz
utHjiCuJrvWZ2KV5UPHKE3m/ktxI1PfJ70KuExVPBngI93iQqO2q08MSUyqO
/ZWd7+xJooJ5y9rhjVSs7PfO/Av4UM3qScKEincc2Zr4x4tEAYqBfCWGVFzu
vlJW4QiJ1tnqIn4dKg5w+qm6z59E5HnHXXmKVPzHNHTrt+Mk8rey3yn7h4Iv
OS/s8wgjUbzVD0HWDAVrBcV5joINZeKrtacp2C0vNe5rOPSLRI+lyw8K7hKq
af4cSaLLR9aH//1KwUV1cxuHo0j0j3/EkOyj4E1vol4diCbRkYsJmlFvKXhg
Usx1CJxkf8ztUy8FyygrRA2eJtHhTHbZg9cUHBVhWDdwBurfuFMhu4OCHdeF
897Hk4gWkXEzsJGCZ6yF2xwTSCQe45Ch2kDByR7nHPvArZrpjI91FNx87frx
d+dIJBt9P2v/IwrWm6198OY8iU5NttkXVFNwh+Rm8z0XSKT/VK7hzAMK9lBp
7+0FVx1b1OJ1n4Kz7PpnepJIlHl8oN60ioLFK/n0uy/C9fc/nq0vp+CC1pim
nZegX9e1XrC8Q8EbhyV2vgbPFHgs3VdGwaFSSgGvLpNIpkNw39VbFCy9Il/Q
9gqJPC/HaNeUUnCZiebFl2DmmfdtwyUUPHLUqLzrKokkKHIh5sUUfPLs0/XW
KSRamht1PrqIghVubH/xAvwn9uWJpkIKtu50nuy8RqIRYy3BPQUUDA2zsiON
RN+0LSef5FLw2DkJw63pJJoknyzXAyuMpZs/Ax8PLlTOz4H1FT9wbbhOooc7
hmwzblJwoaiZn3EG2N36Ggvc694dWQt+y+dUWJJNwatVf6XeyySRUN1xg64b
sP9nThboZZFob0RevTf4yohk1R3w4TcZHElw06aMhpU3SGTJ/HGgKouCp3LU
XxSDdc8ujz4AZgvV9Ktmw3z6vIqVAVsfMP+eC06mRwR2ZML71/f8Yd0k0a6a
8m2J4DLCbVEWuLyCT9oG/OHE1FLFHBI9MxlvVwRLDJxipYLry8QjxzMoGBnR
tWRzSVS36atqE9g7I5N3CTxuLt55A5z+T2MLPQ/yTVgkOBrc6vhwdyLY9bEz
xxs8V2PhJpZPotn6vF4HsJr8G/9Y8I6dh1KswHtCD50ULiDRxUcah7aAY99M
J54CD5nHmG0F31sTnc5fCPUw/GdkAx65uqQoDGz2YdkOF7D0TNa9P+D80KBI
f/BGO82mY0UkKrG72J4ADqis7foFDqvhMykB31y6dcC3GOr1Y9P7F+Au/7dj
Y+ClxtM3/4EXvjw851EC+TuZck0T6qGtM0P5As40r607BHZJOi1zsJRE1y+N
K+WBz09KcQbBZowH90bBeHu2tvMtEj1RKkxYBfuhIPFo657bJOrqUpt/D97i
vc2+G1ws+fr6Otjf0NZ3h2zKoJ7jr+MywW/iZk9tu0Mi88rFO0OhXyijMRda
wMXqDmt/gNeYS2eYlkN/H9IO8oH+urJI58H6CpifTXniYdCPTW6Pn2Bweche
78XQr1NNlq/W3SXRhaQ2vZtg62jPiVWVUK8EKnU4D/pj6M98OVhdYFwhMf//
eYoV1aoi0Yegh3kI5kFyQS5X7R7k4SUztQqYF+Siq5sPPv1s2YogmCefR3XG
nPsk8mDTytbDvLWG9zssewDz6hZoOwrzGPtXNnlJDZw/YtkecTDPPnxMo1Tw
TXUd+xSYd9uFCt+JhySKPEOXvQV5oCSqvFm7Fvqh+b3oj7sUXMVQ/bv9EZx/
F+P3vIZ8SVdUy+8BW6UF6LBqKPgUoW7r/BjmKe37/LGHFGy5XOuWTx2J+vcV
Bq+BvPq0Zs3+cw0kalZdFSffRMEthgaS0o0kYi0O9Cl4Au9rbPgwHWyQF3WY
10zBYWbGMiVNJJp4r14W+ZyCl+42a2l5CufbscTFbl0UbBK0W4fSSqLNamcm
az9SsOpx+w/nwYW5Pjvah2B+Ih0TZNtIpLozh/b5E+xnjMsI2Q77r8l8qD1K
wb5XDqdu6iSR9YTEZvVfFJxZGbww6hWJDvpJK1aLUHH0g9Dboq9JNO2Qfsqa
SsUetWGOyWDqzGTiLzEq1m86UXWjG0ywb22nU3H7q1iPx70keuUcd9pXgYrn
f6V0/esj0c8De8/v1qPi4QujXmHvSYS+/zloupqK2zQMF82B36hNCiIDKs44
9GHdbD/8/tbNHBNjKl7/jpv7c4BEiyUNBwq3UnFMfXnQ52HIa1pf8C83KvZx
Flri9olE96r6IlzgfN01v7NkGKxxc9mZ195UrKr/Z+DjCIncdZVLewKouKXQ
yKLvC5yf3ppVhlFULJnUqvDiO+zPctXphBtUPKux7N72MajvhPCb47lUPNBy
ZEc72Ddh8V+/QjhvhaRino+TyEXDcmHoHSq2Dd4z0TRJomCL+8nf6qg4xXmk
rnoK8urli2/Ow1TMWilwKGce8lfHfWO+pijmpOVUa/8jUQaqkDVYJYpJirnE
I7DNqrT6HgNRrDaYVPmGTwX946ur0N0sirWvsIUkF6ig803NyT574XuLz/RG
iLAK8tOZwFPnRLFz+7l3lhIqyEOpucBtRhS7rNPR7ANPznx3cOITw/sLuk+5
S8L1axfi9gmLYbdTSmrRNBXUa93pEyclhn307wQ/WKKCvu+7MuimJYYjMl5J
c2RV0AnBAz8t4XvwhFiI+x3wnmL+RoEAMXwqWLEWyakgdrzYAXxcDMdYu7nu
Yaig7RJjinvjxfA5kdnyRHkVZPppnczyYjGc6J8uoqAA65G4N7i2QgxfGDC2
LwQrFlzLtYPv10vVZxc0KqqgjI109t3nYviKysqdO5apoJc7hz9PvRTDKZe6
CvrBJj9T763vE8OpC4LmPZVU0Btl26upw2I43Ufe6g84/svKBP4xMfwfKWvB
pA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$7657230#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, AxesOrigin -> 
     NCache[{3 Pi, 0}, {9.42477796076938, 0}], FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9.42477796076938, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{3 Pi, 4 Pi}, {-404.6506364416037, 204.03348493517956`}}, {{
       9.42477796076938, 12.566370614359172`}, {-404.6506364416037, 
       204.03348493517956`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"2nd,\[Alpha]=0.5\"", "\"Corss-Kerr,\[Alpha]=0.5\"", 
       "\"3rd,\[Alpha]=0.5\"", "\"Self-Kerr,\[Alpha]=0.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737918587094*^9, {3.7379186281730003`*^9, 3.737918641727*^9}, 
   3.737918700461*^9, {3.737919347177*^9, 3.7379193524639997`*^9}, {
   3.737919406934*^9, 3.737919423342*^9}, {3.737919537033*^9, 
   3.737919596376*^9}, {3.7379197333529997`*^9, 3.737919756049*^9}, 
   3.737919791898*^9, 3.737919839625*^9, {3.737919884486*^9, 
   3.7379199158050003`*^9}, 3.737919983725*^9, 3.7379200464040003`*^9, 
   3.7379200847799997`*^9, {3.737922293921*^9, 3.737922311238*^9}, {
   3.737922449594*^9, 3.737922469418*^9}},
 CellLabel->
  "Out[123]=",ExpressionUUID->"f083dd7c-dfd3-4141-96b1-8a95a3a0fd19"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.737918246744*^9},ExpressionUUID->"33939c99-0cf9-40d9-b132-3d8138d19ad8"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 998},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.7 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 264, 5, 46, "Input",ExpressionUUID->"cdd9252c-c238-4b62-925b-fe4a3c30486c"],
Cell[CellGroupData[{
Cell[847, 29, 232, 3, 79, "Section",ExpressionUUID->"cb7bfdf9-c13b-4fc0-a799-785785e30641"],
Cell[1082, 34, 4771, 117, 645, "Input",ExpressionUUID->"c05c6269-f45d-4f0d-915c-9fb63935d686"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5890, 156, 155, 3, 114, "Section",ExpressionUUID->"2b9dfe4b-f5ab-463e-a2bb-ca656c62a70c"],
Cell[6048, 161, 164, 3, 59, "Text",ExpressionUUID->"b3b228e6-a281-4dd6-802e-848b4c6144f8"],
Cell[CellGroupData[{
Cell[6237, 168, 4892, 92, 293, "Input",ExpressionUUID->"2e519583-5455-4805-9861-0b7083c8ada6"],
Cell[11132, 262, 716, 10, 55, "Output",ExpressionUUID->"999beac8-4ebc-4bc9-a4ef-de3c6f10a19c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11897, 278, 172, 3, 114, "Section",ExpressionUUID->"b97610ff-1626-44da-833f-a63b34bb2c22"],
Cell[12072, 283, 2465, 48, 83, "Input",ExpressionUUID->"9d3dcab4-b5c5-453b-84b0-0aeb1f54e7e1"],
Cell[CellGroupData[{
Cell[14562, 335, 1477, 40, 83, "Input",ExpressionUUID->"5ef7bf9c-024a-4259-9b5a-7db7255a8794"],
Cell[16042, 377, 52340, 932, 415, "Output",ExpressionUUID->"c822b15d-ddd0-4c57-9bca-28b165ed20b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68419, 1314, 1411, 34, 49, "Input",ExpressionUUID->"2299cc87-ae7d-4bfd-bde5-13a689b85af7"],
Cell[69833, 1350, 74557, 1295, 410, "Output",ExpressionUUID->"8adeceea-f41d-46f3-a881-6f3dd86e5548"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144439, 2651, 154, 2, 114, "Section",ExpressionUUID->"7323d0b4-a283-4a5c-9b15-38c247d003a3"],
Cell[144596, 2655, 4582, 112, 221, "Input",ExpressionUUID->"9eeb2c91-ec24-4adb-bba3-b77d8e39c111"],
Cell[CellGroupData[{
Cell[149203, 2771, 172, 2, 74, "Subsubsection",ExpressionUUID->"304482d1-a582-4e58-bc64-ed8103d5e87b"],
Cell[149378, 2775, 950, 22, 83, "Input",ExpressionUUID->"f266f25b-baa1-456f-a3a5-2c57fff1c686"],
Cell[150331, 2799, 4702, 104, 446, "Input",ExpressionUUID->"a12ba2b2-23c8-45ab-aa96-7565d1f0675a"],
Cell[CellGroupData[{
Cell[155058, 2907, 1367, 35, 182, "Input",ExpressionUUID->"69481552-8a4b-49a4-a87f-85f4ead6b8b3"],
Cell[156428, 2944, 11841, 259, 419, "Output",ExpressionUUID->"e6899569-323f-486e-aa4e-bb34194fa46e"]
}, Open  ]],
Cell[168284, 3206, 8700, 201, 791, "Input",ExpressionUUID->"494be8ce-5d86-4017-a1ec-b64a0dd9871a"],
Cell[CellGroupData[{
Cell[177009, 3411, 537, 14, 49, "Input",ExpressionUUID->"83882aae-08f6-4c77-b4d0-5f9c0dd245b5"],
Cell[177549, 3427, 10009, 239, 241, "Output",ExpressionUUID->"89e106df-89b9-4795-bb94-0d60b390d184"]
}, Open  ]],
Cell[187573, 3669, 316, 6, 83, "Input",ExpressionUUID->"5ff031a4-07cf-47ad-958f-779e68606304"],
Cell[187892, 3677, 2548, 64, 182, "Input",ExpressionUUID->"a79fcad1-6172-4d06-a0fc-2bda84370bae"],
Cell[CellGroupData[{
Cell[190465, 3745, 4004, 113, 281, "Input",ExpressionUUID->"441a4565-c9ee-447f-ad70-6799f2b2475b"],
Cell[194472, 3860, 60689, 1086, 391, "Output",ExpressionUUID->"f083dd7c-dfd3-4141-96b1-8a95a3a0fd19"]
}, Open  ]],
Cell[255176, 4949, 142, 2, 83, "Input",ExpressionUUID->"33939c99-0cf9-40d9-b132-3d8138d19ad8"]
}, Open  ]]
}, Open  ]]
}
]
*)

