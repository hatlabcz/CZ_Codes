(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1061133,      19614]
NotebookOptionsPosition[   1053978,      19498]
NotebookOutlinePosition[   1054350,      19514]
CellTagsIndexPosition[   1054307,      19511]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ColorBar`\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7378873562790003`*^9, 3.7378873643710003`*^9}, {
   3.737997853458*^9, 3.737997853841*^9}, 3.737997909674*^9},
 FontSize->12,
 CellLabel->"In[71]:=",ExpressionUUID->"41b9eada-926d-4f9b-b6cf-5982c86c502e"],

Cell[CellGroupData[{

Cell["Precompute joint element", "Section",
 CellChangeTimes->{{3.7082743526810417`*^9, 3.708274359420642*^9}, {
  3.708952452776116*^9, 3.7089524569271927`*^9}},
 FontSize->12,ExpressionUUID->"6969e32b-6cd5-4880-8da6-9cc177d65628"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"precomputeElement", "[", 
     RowBox[{"EJ1_", ",", "EJ2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t1", ",", "\[Phi]", ",", "\[Phi]1", ",", "int1", ",", "res"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t1", "=", 
        RowBox[{"Monitor", "[", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"res", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"FindMinimum", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "EJ1"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
                    RowBox[{"EJ2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]", "-", "\[Phi]1"}], "]"}]}]}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", " ", "s1"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", 
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]", ",", 
                  RowBox[{"\[Pi]", "/", "3."}]}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Phi]", ",", " ", 
               RowBox[{"Min", "[", "res", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"\[Phi]", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "\[Pi]"}], ",", 
              RowBox[{"2.", "\[Pi]"}], ",", 
              RowBox[{"\[Pi]", "/", "1000."}]}], "}"}]}], "]"}], ",", 
          "\[Phi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Interpolation", "[", "t1", "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Return", "[", "t1", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergy", "[", 
    RowBox[{"int1_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"int1", "[", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"\[Phi]", "+", 
            RowBox[{"2", "\[Pi]"}]}], ",", 
           RowBox[{"4", "\[Pi]"}]}], "]"}], "-", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergyJJ", "[", 
    RowBox[{"EJ_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"-", "EJ"}], "*", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergyLinInd", "[", 
    RowBox[{"EL_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{
        FractionBox["EL", "2"], 
        SuperscriptBox["\[Phi]", "2"]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7089524605567417`*^9, 3.708952687697946*^9}, 
   3.708952719907143*^9, {3.7089527648183813`*^9, 3.708952833352254*^9}, {
   3.708952977892933*^9, 3.708952979186363*^9}, {3.708955098041913*^9, 
   3.70895511812256*^9}, {3.708955195108472*^9, 3.708955195309194*^9}, {
   3.708957127322783*^9, 3.7089571283011417`*^9}, {3.708957773593704*^9, 
   3.708957773818112*^9}, {3.7090673829525194`*^9, 3.7090673863403287`*^9}, {
   3.70907199867183*^9, 3.7090720005438333`*^9}, {3.7120557773951874`*^9, 
   3.712055784469592*^9}, {3.737887962359*^9, 3.737888025382*^9}, {
   3.737889710583*^9, 3.737889763663*^9}, {3.73788983759*^9, 
   3.7378898624700003`*^9}, {3.737889920576*^9, 3.737889923333*^9}, {
   3.7378899818389997`*^9, 3.737890008269*^9}, 3.7378900503900003`*^9, 
   3.7378902795039997`*^9, {3.737890427167*^9, 3.737890497502*^9}, {
   3.737890568049*^9, 3.7378905984700003`*^9}, {3.737890801935*^9, 
   3.737890836358*^9}},
 FontSize->12,
 CellLabel->"In[73]:=",ExpressionUUID->"54b54782-c0ea-4eed-912c-f75c74c0e58a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set up", "Section",
 CellChangeTimes->{{3.7143455389010515`*^9, 
  3.7143455514051533`*^9}},ExpressionUUID->"8ea9f4e5-c859-46c2-b708-\
7d315745f382"],

Cell["In the unit of GHz", "Text",
 CellChangeTimes->{{3.7089783824622836`*^9, 
  3.7089783875985775`*^9}},ExpressionUUID->"0bfa07cf-22b2-4fc4-82c1-\
12fab99d6641"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sf", "=", 
   FractionBox[
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]], 
    RowBox[{"2", " ", "\[Pi]", " ", "1", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "34"}]]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ic1", "=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"5", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ",", "\"\<Ampere\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EJ1", "=", 
   RowBox[{"sf", "*", 
    RowBox[{"UnitConvert", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"Quantity", "[", "\"\<FluxQuantum\>\"", "]"}], 
         RowBox[{"2", "\[Pi]"}]], ")"}], "Ic1", 
       FractionBox["1", 
        RowBox[{"Quantity", "[", "\"\<Joule\>\"", "]"}]]}], ",", 
      "\"\<SI\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"EJ2", "=", 
    RowBox[{"\[Alpha]", " ", "EJ1"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"EL", "=", 
    RowBox[{"\[Beta]", " ", "EJ1"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["H", "arm"], "[", "\[Alpha]_", "]"}], ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"precomputeElement", "[", 
     RowBox[{"EJ1", ",", 
      RowBox[{"\[Alpha]", " ", "EJ1"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.708953559345889*^9, 3.7089537340931396`*^9}, {
   3.708953765042852*^9, 3.708953765176115*^9}, {3.708954686754141*^9, 
   3.708954703143943*^9}, {3.708978357676866*^9, 3.708978372005686*^9}, 
   3.7090288410703506`*^9, {3.709032663436978*^9, 3.709032685485239*^9}, 
   3.70905493502884*^9, {3.7090674011789675`*^9, 3.7090674039243746`*^9}, {
   3.7090721757451935`*^9, 3.709072177730397*^9}, {3.7090726085814724`*^9, 
   3.709072612760689*^9}, {3.712056147979384*^9, 3.7120561485474167`*^9}, {
   3.7120570878381405`*^9, 3.712057091512351*^9}, {3.712057579255248*^9, 
   3.7120575798202806`*^9}, {3.7144872238709865`*^9, 3.714487245802241*^9}, {
   3.7144896701689067`*^9, 3.7144896729110637`*^9}, {3.7146602368715043`*^9, 
   3.7146602399006777`*^9}, {3.7146604599162617`*^9, 
   3.7146604705168686`*^9}, {3.7146607966885242`*^9, 3.714660806654094*^9}, {
   3.7146609895015526`*^9, 3.714660993859802*^9}, {3.7146611925411654`*^9, 
   3.714661193108198*^9}, {3.714661412152727*^9, 3.7146614131317825`*^9}, {
   3.7146616050377593`*^9, 3.714661631852293*^9}, {3.71466203147815*^9, 
   3.714662031988179*^9}, {3.714662812253808*^9, 3.714662927662409*^9}, {
   3.714663158663622*^9, 3.714663159898692*^9}, 3.714663281470646*^9, {
   3.7146634336473494`*^9, 3.7146634811950693`*^9}, {3.7146690509506407`*^9, 
   3.714669053277774*^9}, 3.714669892470773*^9, {3.71467021358314*^9, 
   3.71467021445319*^9}, {3.714733281299407*^9, 3.714733283295521*^9}, 
   3.714738379217991*^9, {3.7157099415351534`*^9, 3.7157100120181847`*^9}, {
   3.715710047404208*^9, 3.715710060611964*^9}, {3.7157116280386157`*^9, 
   3.7157116281406217`*^9}, {3.7160540686273885`*^9, 
   3.7160540718785744`*^9}, {3.7160562669861274`*^9, 
   3.7160563029681854`*^9}, {3.7160563628976135`*^9, 
   3.7160563682989225`*^9}, {3.7160565350644608`*^9, 3.716056636072238*^9}, 
   3.7160570607395277`*^9, 3.716057423341267*^9, {3.716057885867722*^9, 
   3.716057886146738*^9}, {3.7161135087831707`*^9, 3.7161135098932343`*^9}, {
   3.7161138013749065`*^9, 3.7161138032290125`*^9}, {3.7162051958513713`*^9, 
   3.716205261358118*^9}, {3.716386394117633*^9, 3.716386419841676*^9}, {
   3.716742421925771*^9, 3.716742447859255*^9}, {3.71674373841607*^9, 
   3.7167437386590843`*^9}, {3.7167446831311045`*^9, 3.716744745155652*^9}, {
   3.7167474407858334`*^9, 3.7167474726576567`*^9}, {3.7194073664429226`*^9, 
   3.719407379264656*^9}, {3.724498122979927*^9, 3.724498125050045*^9}, {
   3.724498162602193*^9, 3.724498169227572*^9}, {3.7244983017541523`*^9, 
   3.7244983358171005`*^9}, {3.7244990138978844`*^9, 3.7244990142519045`*^9}, 
   3.725031178368044*^9, 3.725031851617551*^9, {3.7252143742376585`*^9, 
   3.725214376066764*^9}, 3.7252788031067796`*^9, {3.7252790881020803`*^9, 
   3.7252791322876077`*^9}, 3.72528127284704*^9, {3.7252813265631127`*^9, 
   3.7252813266981206`*^9}, {3.7252829799536815`*^9, 
   3.7252829884381666`*^9}, {3.727350257419738*^9, 3.7273502899405975`*^9}, {
   3.727351197341498*^9, 3.7273512238440137`*^9}, 3.7273516801961155`*^9, {
   3.7273532635156765`*^9, 3.7273533080122213`*^9}, {3.727353881820041*^9, 
   3.727353885899275*^9}, {3.7378892738459997`*^9, 3.737889325215*^9}, 
   3.737890378873*^9, {3.737890878992*^9, 3.737890879207*^9}, {
   3.737891033751*^9, 3.7378910551029997`*^9}, {3.7378915706879997`*^9, 
   3.737891624571*^9}, {3.737901837448*^9, 3.737901837856*^9}, 
   3.7380044247539997`*^9, {3.738080925242*^9, 3.738080941249*^9}, {
   3.738080975723*^9, 3.738080991113*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"b02f79c5-1699-4357-a47d-01fc21ef7a5d"],

Cell[BoxData["2618.9421416573730182793`7.900542288395337"], "Output",
 CellChangeTimes->{
  3.737890016271*^9, 3.7378900558380003`*^9, 3.737890169891*^9, {
   3.7378902572349997`*^9, 3.7378902845810003`*^9}, 3.737890379785*^9, 
   3.737890510046*^9, 3.737890880506*^9, 3.737891056859*^9, 3.737891627883*^9,
    3.7378955928719997`*^9, 3.737899114969*^9, 3.737900421492*^9, 
   3.737900555006*^9, 3.737901839513*^9, 3.7379022409309998`*^9, 
   3.737902419591*^9, 3.7379034389*^9, 3.737903938624*^9, 3.73790409344*^9, 
   3.737905514968*^9, 3.737905684302*^9, 3.737913131973*^9, 3.737914478821*^9,
    3.737919438917*^9, 3.737974060652*^9, 3.737978418877*^9, 
   3.737996029316*^9, 3.738004426098*^9, 3.7380660774300003`*^9, 
   3.73807848658*^9, {3.738080981814*^9, 3.7380809938120003`*^9}},
 CellLabel->
  "Out[376]=",ExpressionUUID->"3e6919b0-b77c-4df3-baa4-6cebbeabc644"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hamiltonian on the arms", "Section",
 CellChangeTimes->{{3.7379048416809998`*^9, 
  3.7379048674969997`*^9}},ExpressionUUID->"4905469d-de32-4058-bb2b-\
f92c640f70d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Alpha]list", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"0.1", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "5", ",", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]listname", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<\[Alpha]=\>\"", "<>", 
      RowBox[{"(", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[Alpha]list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7379228372320004`*^9, {3.737922961807*^9, 3.7379230152460003`*^9}, {
   3.7379233226400003`*^9, 3.737923336492*^9}, {3.737923421826*^9, 
   3.737923539709*^9}, {3.737923673401*^9, 3.737923744455*^9}, 
   3.737974179627*^9, {3.7379771493059998`*^9, 3.737977151297*^9}, {
   3.737990658086*^9, 3.737990665106*^9}, {3.73800445721*^9, 
   3.738004462369*^9}, {3.73800543317*^9, 3.738005440626*^9}, 
   3.7380068285620003`*^9, {3.7380072118900003`*^9, 3.73800723021*^9}, {
   3.73800876845*^9, 3.738008771865*^9}, {3.738009161723*^9, 
   3.7380091687530003`*^9}, {3.738066086546*^9, 3.7380660878570004`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"1488c04b-ad32-4201-aa59-ca2c1baab2ea"],

Cell[BoxData[
 RowBox[{"{", "0.5`", "}"}]], "Output",
 CellChangeTimes->{{3.737922832381*^9, 3.737922838324*^9}, 
   3.737923017635*^9, {3.737923330915*^9, 3.737923337441*^9}, 
   3.737923430535*^9, 3.737923481142*^9, {3.737923517903*^9, 
   3.737923540244*^9}, 3.7379236794709997`*^9, {3.737923724148*^9, 
   3.737923744936*^9}, 3.7379740660439997`*^9, 3.737974180483*^9, 
   3.7379771551429996`*^9, 3.737978423199*^9, {3.7379906629849997`*^9, 
   3.737990665484*^9}, 3.737996035697*^9, 3.7380044629519997`*^9, 
   3.73800544563*^9, 3.738006830741*^9, 3.7380072306689997`*^9, 
   3.738008772729*^9, 3.738009196507*^9, 3.7380660887*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"99d025fa-4d9e-44b9-8c62-b3fc22c4af72"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["listH", "arm"], "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["H", "arm"], "[", 
        RowBox[{"\[Alpha]list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"\[Alpha]list", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7089527386422663`*^9, 3.708952773186026*^9}, {
   3.708952987117523*^9, 3.7089530002113132`*^9}, {3.7089544115672703`*^9, 
   3.708954455193282*^9}, {3.737891404477*^9, 3.7378914261*^9}, {
   3.737891479165*^9, 3.737891504428*^9}, {3.737891743242*^9, 
   3.7378917475629997`*^9}, {3.737891878068*^9, 3.737891920012*^9}, {
   3.73789202934*^9, 3.737892037276*^9}, {3.737892082935*^9, 
   3.737892097708*^9}, {3.7378922137320004`*^9, 3.737892228684*^9}, 
   3.737892301259*^9, {3.7378942274309998`*^9, 3.737894284741*^9}, 
   3.7378943424370003`*^9, {3.737894375132*^9, 3.737894537558*^9}, {
   3.737895007781*^9, 3.737895008844*^9}, {3.737895052966*^9, 
   3.737895079212*^9}, {3.737895166343*^9, 3.7378952169890003`*^9}, {
   3.7378953339709997`*^9, 3.737895334418*^9}, 3.737895403742*^9, {
   3.7378954354300003`*^9, 3.737895475836*^9}, {3.737895521462*^9, 
   3.737895524947*^9}, {3.737900619666*^9, 3.737900680979*^9}, {
   3.737900713559*^9, 3.737900816222*^9}, {3.737900920273*^9, 
   3.737900924973*^9}, {3.737901008663*^9, 3.737901038925*^9}, {
   3.737901285954*^9, 3.737901336276*^9}, {3.73790143023*^9, 
   3.7379014366280003`*^9}, {3.737901558828*^9, 3.737901602005*^9}, {
   3.7379016845179996`*^9, 3.7379017050290003`*^9}, {3.737901833133*^9, 
   3.737901835476*^9}, {3.737902202903*^9, 3.7379022066280003`*^9}, {
   3.737902525795*^9, 3.73790258254*^9}, {3.7379040564*^9, 
   3.737904104493*^9}, {3.737905211903*^9, 3.7379052126359997`*^9}, {
   3.737916348991*^9, 3.737916432533*^9}, {3.737916525575*^9, 
   3.737916582389*^9}, {3.737916612585*^9, 3.737916640101*^9}, {
   3.737916719592*^9, 3.737916720068*^9}, {3.7379167626140003`*^9, 
   3.73791676694*^9}, {3.7379227946470003`*^9, 3.73792284366*^9}, 
   3.738004490899*^9, 3.738005453418*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"22cf45a3-2ca1-49ba-9eac-6d27afc99f6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["xH", "arm"], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["listH", "arm"], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], "-", 
      RowBox[{"getEnergy", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["listH", "arm"], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    SubscriptBox["xH", "arm"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Pi]"}], ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.737901611691*^9, 3.737901629013*^9}, 
   3.7379022150109997`*^9, 3.737902591237*^9, {3.737902649369*^9, 
   3.7379026963570004`*^9}, {3.73790525208*^9, 3.737905254453*^9}, {
   3.73791604355*^9, 3.7379161039969997`*^9}, {3.7379165723459997`*^9, 
   3.737916578007*^9}, 3.737916714454*^9, {3.737916773943*^9, 
   3.737916827112*^9}, 3.737923366801*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"f5b14626-761d-4254-a232-ba78fd801876"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
D/7/93r/A3GUNzQ=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8503966#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {0., 
        2618.9408657913928`}}, {{-6.283185307179586, 6.283185307179586}, {0., 
       2618.9408657913928`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]=0.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737901432389*^9, 3.737901799299*^9, 3.737902384782*^9, 
   3.7379025182939997`*^9, 3.73790262323*^9, {3.737902654625*^9, 
   3.737902697289*^9}, 3.737902747341*^9, 3.737902810151*^9, 
   3.737904127744*^9, {3.7379052434969997`*^9, 3.737905255141*^9}, 
   3.7379055467799997`*^9, 3.737913163778*^9, 3.737914512602*^9, 
   3.7379159769379997`*^9, {3.737916047557*^9, 3.7379160599110003`*^9}, 
   3.737916113807*^9, 3.737916598157*^9, 3.73791667529*^9, {3.737916747926*^9,
    3.737916750373*^9}, {3.737916798347*^9, 3.737916827825*^9}, 
   3.737919469317*^9, {3.737923348802*^9, 3.737923368332*^9}, {
   3.737923520972*^9, 3.7379235307860003`*^9}, 3.7379236848710003`*^9, 
   3.737923746264*^9, 3.737974158233*^9, 3.737974202106*^9, 3.737977249001*^9,
    3.7379785179049997`*^9, 3.737996151207*^9, 3.7380045168640003`*^9, 
   3.7380057752539997`*^9, {3.738006832774*^9, 3.738006849532*^9}, {
   3.7380072382019997`*^9, 3.73800726771*^9}, {3.738008775553*^9, 
   3.7380087893199997`*^9}, 3.738009199507*^9, 3.7380092778570004`*^9, 
   3.7380661012790003`*^9, 3.738078493446*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"2c1e3354-fa44-4c04-bb35-57ff0650723c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["xH", "arm"], "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "y"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", 
         SubscriptBox["listH", "arm"], "]"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708954806576679*^9, 3.708954829357175*^9}, {
   3.7089548954405537`*^9, 3.708954905734559*^9}, {3.737894629811*^9, 
   3.737894676638*^9}, {3.737894894981*^9, 3.737894998453*^9}, {
   3.737895241594*^9, 3.73789530906*^9}, {3.7378956619960003`*^9, 
   3.7378956914449997`*^9}, {3.7379014446070004`*^9, 3.737901475277*^9}, 
   3.737902218675*^9, {3.7379027109449997`*^9, 3.737902739461*^9}, {
   3.737902789921*^9, 3.737902800737*^9}, {3.737905260226*^9, 
   3.7379052623970003`*^9}, 3.73791683154*^9, 3.737923754217*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"f65a3e19-1355-4f3a-a2c2-25d20524d50b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$8504192#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{(-4) Pi, 4 Pi}, {-1309.4689042102425`, 
        1309.4665860247942`}}, {{-12.566370614359172`, 
       12.566370614359172`}, {-1309.4689042102425`, 1309.4665860247942`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Alpha]=0.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737895260332*^9, 3.737895302533*^9, 3.7378953494*^9, 
   3.7378957015880003`*^9, 3.7378991664560003`*^9, 3.737899313914*^9, 
   3.737901507684*^9, {3.7379027120959997`*^9, 3.737902811653*^9}, 
   3.737904133851*^9, {3.737905246693*^9, 3.7379052629379997`*^9}, 
   3.737905548579*^9, 3.737913165815*^9, 3.7379145146359997`*^9, 
   3.737915979492*^9, 3.7379168325*^9, 3.737919471631*^9, 3.737923756212*^9, 
   3.737974161653*^9, 3.737974204962*^9, 3.737977251992*^9, 3.737978520201*^9,
    3.737996153855*^9, 3.738004518117*^9, 3.738005785314*^9, 
   3.738006851082*^9, 3.738007269351*^9, {3.738008777461*^9, 
   3.738008790731*^9}, 3.738009279922*^9, 3.738066103242*^9, 
   3.738078496113*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"48322e0a-a27c-41d1-beda-3510f6f38759"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Total Hamiltonian", "Section",
 CellChangeTimes->{{3.737904913843*^9, 
  3.737904954499*^9}},ExpressionUUID->"5a99d994-908d-4150-81e1-531ce0275825"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", 
    RowBox[{
    "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_", ",", 
     "\[Phi]5_", ",", "\[Phi]ext_", ",", "Harm_", ",", "\[Beta]_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]2", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]3", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", " ", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]4", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]1", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "-", 
      RowBox[{"4", 
       RowBox[{"getEnergy", "[", 
        RowBox[{"Harm", ",", "0"}], "]"}]}]}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]5"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn", "[", 
    RowBox[{
     RowBox[{"\[Phi]1_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]2_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]3_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]4_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]5_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]ext_", "?", "NumericQ"}], ",", "Harm_", ",", 
     RowBox[{"\[Beta]_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]2", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]3", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", " ", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]4", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]1", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "-", 
      RowBox[{"4", 
       RowBox[{"getEnergy", "[", 
        RowBox[{"Harm", ",", "0"}], "]"}]}]}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]5"}]}], "]"}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7378179385014*^9, 3.7378179492293997`*^9}, {
   3.7378184952874002`*^9, 3.7378185573414*^9}, {3.7378995866219997`*^9, 
   3.737899598349*^9}, {3.737899688446*^9, 3.73789971227*^9}, {
   3.7379000170620003`*^9, 3.73790002276*^9}, {3.737900066966*^9, 
   3.737900136755*^9}, {3.737900167718*^9, 3.737900182398*^9}, {
   3.737900274271*^9, 3.73790031558*^9}, {3.737901767541*^9, 
   3.737901783579*^9}, {3.737901898888*^9, 3.7379019159189997`*^9}, {
   3.737901950145*^9, 3.737902013043*^9}, {3.7379030951219997`*^9, 
   3.737903095389*^9}, {3.737904236712*^9, 3.737904277109*^9}, 
   3.737904665656*^9, {3.737918372722*^9, 3.737918392887*^9}, 
   3.7379741685950003`*^9},
 FontSize->12,
 CellLabel->"In[84]:=",ExpressionUUID->"c152647a-67b7-4d47-ba23-8bcce28fd3a9"],

Cell[CellGroupData[{

Cell["Fix \[Beta], Varying \[Alpha]", "Subsection",
 CellChangeTimes->{{3.737914895508*^9, 
  3.737914964284*^9}},ExpressionUUID->"e90ec7eb-29c1-426f-ba17-d648abb9c5b0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ip", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "4"}], "]"}], ",", "20"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7379020934379997`*^9, 3.737902159835*^9, {3.737902287484*^9, 
   3.737902355144*^9}, 3.737903396604*^9, {3.737904363743*^9, 
   3.737904386573*^9}, 3.737904461568*^9, {3.737904508034*^9, 
   3.737904553243*^9}, 3.7379046842390003`*^9, 3.73790498071*^9, {
   3.737907121486*^9, 3.7379071223970003`*^9}, {3.737914523454*^9, 
   3.7379145238199997`*^9}, {3.737914773718*^9, 3.7379147827799997`*^9}, {
   3.737915898439*^9, 3.737915898908*^9}, {3.7379752084849997`*^9, 
   3.737975213281*^9}, {3.737996004218*^9, 3.737996004409*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"f4546922-6b78-442b-9994-811c33321bf4"],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt1", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"zt", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"res", "=", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    RowBox[{"Hn", "[", 
                    RowBox[{
                    "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4",
                     ",", "0", ",", "\[Phi]ext", ",", 
                    RowBox[{
                    SubscriptBox["listH", "arm"], "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\[Beta]"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]2", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]3", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]4", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\[Phi]1", ",", 
                    "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "}"}], "/.", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "ip", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"zt1", "=", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\[Phi]ext", ",", " ", 
                 RowBox[{"zt", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "}"}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]ext", ",", 
             RowBox[{
              RowBox[{"-", "4"}], "\[Pi]"}], ",", 
             RowBox[{"4", "\[Pi]"}], ",", 
             RowBox[{"\[Pi]", "/", "5"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", "\[Phi]ext"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"listt1", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt1", ",", "t1", ",", "j"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\[Alpha]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737907081333*^9, 3.7379070989639997`*^9}, {
   3.737907134652*^9, 3.737907195244*^9}, {3.7379072447*^9, 
   3.7379072546289997`*^9}, {3.737907292842*^9, 3.737907295564*^9}, {
   3.7379073292279997`*^9, 3.737907337475*^9}, {3.7379075008120003`*^9, 
   3.737907502916*^9}, 3.737913191933*^9, {3.737913581718*^9, 
   3.73791363679*^9}, {3.7379136824379997`*^9, 3.737913741782*^9}, {
   3.737913862362*^9, 3.73791386276*^9}, {3.7379143833859997`*^9, 
   3.73791439188*^9}, 3.7379147871879997`*^9, {3.73791504117*^9, 
   3.737915054889*^9}, {3.737915363762*^9, 3.737915369966*^9}, {
   3.737915918145*^9, 3.737915937817*^9}, {3.737916001534*^9, 
   3.737916002047*^9}, {3.7379170469969997`*^9, 3.737917053241*^9}, 
   3.737917108684*^9, {3.737917213142*^9, 3.7379172430220003`*^9}, 
   3.737917455209*^9},
 CellLabel->
  "In[252]:=",ExpressionUUID->"66fc426c-75a0-4d9e-b7cd-d9c4bfbaa955"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt1.txt\>\"", ",", "listt1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738059128291*^9, 3.738059149777*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"c6a1c4d7-c240-46b6-afe2-46ca0f9488df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"listt1", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "All", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "listt1", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Total Flux\>\"", ",", "\"\<Energy\>\""}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.737914320328*^9, 3.737914363591*^9}, {3.737914619841*^9,
    3.7379146200629997`*^9}, 3.737923799209*^9},
 CellLabel->
  "In[253]:=",ExpressionUUID->"e98a9a52-b65c-4c99-9a6a-9ba6c61c4ef2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxVUlsog3EUH5OyQoqNlEzumeXyQrHjFt7ceZjLhCiMlCfyIERZo5BLq9VI
WrnMUOg7D0pIIh54QPIgcpspIVn5fQ++Og9f53/O+d2UtfqieqlEIolxlZur
3F0VqMou+VLGsFya4905vEGyqgtt3nUUf2dKF+vKNujb0FY/ZopkRXiN8LC6
Tk+CZ+uNNoJXZt0b221rdP0y06kODufPLMHuqbPTiTKpp+s8jDP8nC+yIxvt
FO0N7E0o+d3g0Mf7rtBab7VRXhbKj8U/QxGJS1TQ9JCwGx3CJe2j224GKyUf
KLJ0s8Hc3HFperXP0x++IE603A6+OSzAI+fjodPUqQoz7vvzyGRfTtTzNO75
8f2VbNVrawz7fdiqylcsq43Y58UnTRnNH5v9mPdgS6Eq4Ezbjfc/QmOKOlZv
bkPfKUzbzC1WeyX+b4XBsAXr1kEaSfCVx+2Pvxpz09DXpKOPeY0J89ivafi3
34PmcB/4SMQH/DQP/OBHd+AH/iTyhz50CH2gH4n6QV/SQ1/oT6XQH/6QA/7A
P3LCP/hL2fAX/pPoP/JBYj6QHxLzg3yRmC/kj8T8/QI2PDMR
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxVUlkoRGEUvpZkKaVkyZLLGDPWLC9omhMSGaWhicmSKUnZSR5sIUqSNJIl
olA8WBokcQ+JJp48DaWYvFgSUgrJlO8+uHUebuc/53ybaGrQV7kIgqB2lJOj
nB0VEJdV9CWqudA2mVRcwuRZflWacxPFOt3TbV0y0/dIY9X4rJI7J00Jcw0S
PUtu9fbSSJ5uDZlaftqnm5eZtoQgBdtrI07bv/foQkzu7rgMZ3dllFfowS4d
662D1gmR9ffVMev5O7TdVzHqZwjjdEsNfR5ZqKDmMfFUFcqdRSrLUOImpZz5
Z1YuBnG8UjhZ0K/RH75A5ivV/XL9CvD48cC8zs18voj7vmyz5y7Fds3jng+L
o2JZj2Ia+73ZuDE1kRdtxj4PbjJ9XJdnDWPelcfSXtOtqb14/yOpFQbNz2wr
+u+S7S03pbLahP87yXfVM3irOYMEfNlqc6/xwaBBX9uMPua155jHfm34v/2u
JN8HPmoBPuCnYuAHPwoEP/CnS/CHPtQPfaAfHUI/6EuyvtCfuqA//CEN/IF/
VAj/4C95wF/4T3fwH/mgGeQD+SE5P8gXyflC/kjO3y83qip1
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDiamond]\"", FontSize -> 10.88, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHPh06v6ys77ADV9ytGI8H6gc+
RPrfzGk87PCnryB16jy1AzXLC2+e8T7s8G4/W96jGNUDT69LcdTlHXJ48GFO
mb60ygGrbE+jdqmDDpcUjetrbiodSDygvu+H1X6HI0En209OVzwgLbh10xWR
PQ7bmuMniIUpHPi/54u07f0dDgGZrw2Pa8gduDK5rXPr+q0OJqfFnROXSh/I
OHa74uC0TQ4Q90keOCXzMOuY03qoe8QOlO6+vsh0y0qo/SIHHq7dIis+eQnU
PsEDkv6qp2feng81n+/ADecVvHsWTIeax3lgVsJq2fmdE6D6WQ4wStu6Vfq2
QtX/2+/YzuqvLFoBlf+yn/t19VWx6lQo/8n+WP3IgsI2VwcGKChdlXvBTsLa
FipvrwSVh+q3l4Dqh5pv745iPosDzH6o+xxmQt0Hdb8DzP1Q/zlIQf0H9b/D
A6j/oeHjAAsfaPg5nISGHzR8HbKh4QsNf4fr0PCHxo8D015I/EDjzwEWf9D4
dUiCxi80/h1soPEPTR8OsPQBTT8OtdD0A01fDp+h6Qua/hw+Q9MfAOJNMWo=

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledUpTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoH4oo5V/HeOerAFXcrxuOB+gH/
CfVqT4D8P30FqVPnqR04MuVnkMWtow7v9rPlPYpRPfD24N/PwluOOjz4MKdM
X1rlgEvhnlv/fxx2uKRoXF9zU+mAhITtnPlShxyOBJ1sPzld8cBn44UGM/QO
OGxrjp8gFqZwINNE7vjBtj0OAZmvDY9ryB3Iun++3+vYDgeT0+LOiUulD7x5
nr3zjdZWB4j7JA+sU1hnXXtgI9Q9Ygceyjhs1VdcC7Vf5ICkT5drtdtyqH2C
B1KFZ+cl/1sINZ/vAEeznNGhFbOg5nEe4NQ53OWyZBJUP8uBkomGT0/8a4eq
/7d/yb+/d3tlqqHyX/bLtV8+F6GTAeU/2e+mf+HmNnMPBwYoeLDkmJp9lZot
VN5eESoP1W/PD9UPNd9+GYr5LA4w+6Huc4C5D+p+B5j7of5zgPkP6n8HGaj/
oeHj8AQaPtDwc4CFHzR8HWDhCw1/hxxo+EPjxyEHGj/Q+HP4Ao0/aPw6SEPj
Fxr/Dm7Q+IemD4dP0PQBTT8OR6HpB5q+HIKg6Qua/hwSoOkPAO9XN64=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDownTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHVu1sYbGfedyBK+5WjMcD9QOv
VeY5hi467vCnryB16jy1A6/L+Mpbdx93eLefLe9RjOqBS/Knd4bcOe7w4MOc
Mn1plQORO38VqPYec7ikaFxfc1PpQIP/FpbKgCMOR4JOtp+crnhg1S51Rh+h
Qw7bmuMniIUpHBDtlJ4zde9+h4DM14bHNeQOVAp0Cmyu2e1gclrcOXGp9IGw
JW4Ws/O2O0DcJ3nggurp6Ia5m6HuETvwo7bS5b3gBqj9IgeMXIWTqpethNon
eIDRuORg9/nFUPP5DlRYvVwgEzIXah7ngSSPfR/u1U2B6mc5cPnuu7LCuC6o
+n/7Uzc/vJh8ohYq/2W/0MPWJ/E9WVD+k/1WHrP+357u5cAABS0/Px2p++du
C5W3F/GEyEP12/tD9UPNt09GMZ/F4RDUfqj7HDKg7oO63wHmfqj/HFig/oP6
38EE6n9o+Dj8hIYPNPwcYOEHDV+HSGj4QsPfARb+0PhxEIHGDzT+HGDxB41f
B1j8QuPfIRoa/9D04QBLH9D04/AGmn6g6cvhFTR9QdOfwxpo+gMAeL01sA==

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyCircle]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHmqIdp937esKBK+5WjMcD9QMd
j3W+sbOcdPjTV5A6dZ7agf/+p44v0z3p8G4/W96jGNUDc+In/5qTf9LhwYc5
ZfrSKgea2915Rc6ecLikaFxfc1PpwLFi2Y/zbY45HAk62X5yuuKBSSu+nfHa
fthhW3P8BLEwhQNXzKuslrsedAjIfG14XEPuwEquf7NY7ux1MDkt7py4VPpA
+i9emU9ZOx0g7pM8oGbxb8Yth61Q94gd6N6j7l+auhFqv8gBWy3jVLv9q6H2
CR4QfLHK6GnWUqj5fAeUxEW+uG2cDzWP80Dyuvn/VypPg+pnOXBRhV95W2UP
VP2//YYb06VvCjdA5b/s73/y7NGCFTlQ/pP9vutOCSVu8XFggIJ3pwyfvXoR
ZQuVt58ElYfqtz8K1Q81394ExXwWhxNQ+6Huc0iEug/qfgdNqPuh/nMQhfoP
6n8HmP+h4eMACx9o+DnAwg8avg450PCFhr/DKmj4Q+PH4TI0fqDx5wCLP2j8
OhyHxi80/h1aoPEPTR8OsPQBTT8OsPQDTV8OsPQFTX8OsPQHAIhhN1M=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptySquare]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoH9Njv9HXwnXLgirsV4/FA/QBD
TfjWO/KnHP70FaROnad2gGNpDX9e8CmHd/vZ8h7FqB7oWXfz/NPlpxwefJhT
pi+tcoBVTmRRRfgph0uKxvU1N5UO9B11XP/swXGHI0En209OVzxQ7uj85ari
UYdtzfETxMIUDlzkWPfnQ80hh4DM14bHNeQOuNRLtfG82+9gclrcOXGp9AGm
kM3PbmrsdoC4T/LAqrnRvo6btkHdI3ZAL4xZbdrETVD7RQ44bNiXIjl7LdQ+
wQOa77c3FtxYBjWf78ANp3Bf3mcLoOZxHvjjkffh1azpUP0sBxL5hXjNovug
6v/tf/dVIsVSuREq/2X/BqfA2Ue686D8J/u9+HLffZju58AABY80g6zLn7vY
QuXtY/kh8lD99seg+qHm239BMZ/FoQRqP9R9Dp+g7oO63+EW1P1Q/znoQv0H
9b+DDdT/0PBxgIUPNPwcVkDDDxq+DhzQ8IWGv4MbNPyh8eNwCRo/0PhzqIDG
HzR+Hfqh8QuNfwc2aPxD04dDHzR9QNOPAyc0/UDTl8P/akj6gqY/B1j6AwDc
ODCz
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 13647.795405588371`}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Energy\"", TraditionalForm], None}, {
        FormBox["\"Total Flux\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-7) Pi, -21.991148575128552`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "7"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-5) Pi, -15.707963267948966`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "5"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[5 Pi, 15.707963267948966`], 
          FormBox[
           RowBox[{"5", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[7 Pi, 21.991148575128552`], 
          FormBox[
           RowBox[{"7", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 13647.795405588371`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], FontSize -> 10.88, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDownTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledUpTriangle]\"", ",", "10.24`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDownTriangle]\"", ",", "10.24`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "10.24`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "10.24`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737904708442*^9, 3.737904986757*^9, 3.737905737642*^9, 3.737914368734*^9, 
   3.737914451465*^9, {3.737914599884*^9, 3.73791462074*^9}, 
   3.737914862499*^9, {3.737917159776*^9, 3.737917164525*^9}, 
   3.73791728127*^9, 3.7379184403859997`*^9, 3.7379195200620003`*^9, 
   3.737923927141*^9, 3.7379742368599997`*^9, 3.737977369332*^9, 
   3.737978657507*^9, 3.7379964852209997`*^9, 3.738006047366*^9, 
   3.7380068708120003`*^9, 3.738007309177*^9, 3.738008807102*^9, 
   3.73800935921*^9},
 CellLabel->
  "Out[253]=",ExpressionUUID->"5e126f80-dab1-4393-aa65-8e7727e71f9c"]
}, Open  ]],

Cell[TextData[StyleBox["Find Derivatives",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.737974639395*^9, 
  3.737974721185*^9}},ExpressionUUID->"7c32633e-ac44-4f33-9e6f-bac726fb1023"],

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt2", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t2", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Phi]ext", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", 
               ",", "\[Phi]4"}], "}"}], "=", 
             RowBox[{"listt1", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "1", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                 "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"\[Phi]f", "=", "0"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"h0", "=", 
             RowBox[{"H", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"a", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]1"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]2"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]3"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]4"}], 
               ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "a"}], " ", "\[Phi]w"}], "+", "\[Phi]f"}], ",", 
               " ", "\[Phi]ext", ",", 
               RowBox[{
                SubscriptBox["listH", "arm"], "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "\[Beta]"}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\[Phi]ext", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "2"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{"ND", "[", 
                RowBox[{
                 RowBox[{"ND", "[", 
                  RowBox[{
                   RowBox[{"ND", "[", 
                    RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]y", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Phi]z", ",", "1"}], "}"}], ",", "0"}], "]"}], 
               ")"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"xyzvalue", ","}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"ND", "[", 
                   RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]y", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "4"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "4"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "24"}]}], "\[IndentingNewLine]", "}"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"listt1", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"listt1", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"listt2", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt2", ",", "t2", ",", "j"}], "]"}]}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\[Alpha]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73790578819*^9, 3.737905817094*^9}, {3.737905928505*^9, 
   3.737905930734*^9}, {3.7379060343719997`*^9, 3.73790605558*^9}, {
   3.737915080697*^9, 3.7379151033570004`*^9}, {3.737915136238*^9, 
   3.737915163516*^9}, {3.7379152018859997`*^9, 3.737915204744*^9}, {
   3.737915262869*^9, 3.737915265118*^9}, {3.737917350358*^9, 
   3.7379173675039997`*^9}, {3.7379173983310003`*^9, 3.73791744863*^9}, {
   3.7379175632139997`*^9, 3.737917573197*^9}, {3.737917777321*^9, 
   3.737917812045*^9}, 3.737917948777*^9, {3.737917993009*^9, 
   3.737917995005*^9}, {3.7379212371359997`*^9, 3.737921270576*^9}, {
   3.7379213273640003`*^9, 3.737921437196*^9}, {3.737921468924*^9, 
   3.7379215051*^9}, {3.737977046237*^9, 3.7379770828190002`*^9}, {
   3.738004914422*^9, 3.738004937666*^9}, {3.738006245283*^9, 
   3.738006273587*^9}, {3.738006884381*^9, 3.7380068941870003`*^9}, {
   3.738009248573*^9, 3.738009256731*^9}, {3.73800976548*^9, 
   3.7380097714119997`*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"7a5beacc-ffae-4c9a-96de-1baaa80a76e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt2.txt\>\"", ",", "listt2"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738059086571*^9, 3.7380591067460003`*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"10e7b32b-c15e-44f7-a91e-0d990b781413"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x2\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyz\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x2y2\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x4\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.715555019587125*^9, 3.7155550757633376`*^9}, {
   3.7155551108593454`*^9, 3.715555139947009*^9}, {3.727351599610506*^9, 
   3.7273516022006545`*^9}, {3.7273542435197296`*^9, 3.727354244807803*^9}, {
   3.7281387925755587`*^9, 3.728138820592161*^9}, {3.728139436319379*^9, 
   3.728139440495618*^9}, {3.7281406529759674`*^9, 3.7281406795034847`*^9}, {
   3.737918101132*^9, 3.737918114972*^9}, {3.737918232457*^9, 
   3.737918290958*^9}, {3.7379184810559998`*^9, 3.737918525321*^9}, {
   3.737919099275*^9, 3.737919170507*^9}, {3.7379193986099997`*^9, 
   3.737919402597*^9}, {3.7379195434849997`*^9, 3.737919563053*^9}, 
   3.737920967723*^9, {3.737921222774*^9, 3.737921224389*^9}, {
   3.737977128842*^9, 3.737977133697*^9}, {3.737990190083*^9, 
   3.737990194211*^9}, {3.738006906724*^9, 3.738006908578*^9}, {
   3.738009263699*^9, 3.7380092662980003`*^9}, {3.738009776106*^9, 
   3.738009778466*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"ed235432-2ae6-451c-982c-f86a0d1a39dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<2rd\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xyz\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<3rd\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2y2\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Cross-Kerr\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x4\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Self-Kerr\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.737918530818*^9, 3.7379186407720003`*^9}, {
   3.737918694449*^9, 3.737918699797*^9}, {3.737919345267*^9, 
   3.737919351876*^9}, {3.737919555417*^9, 3.73791959533*^9}, {
   3.737919630546*^9, 3.7379197487799997`*^9}, {3.737919789435*^9, 
   3.7379197912799997`*^9}, {3.73791983059*^9, 3.7379199810950003`*^9}, {
   3.737920025667*^9, 3.737920083672*^9}, {3.737922266773*^9, 
   3.7379223096429996`*^9}, {3.737922366888*^9, 3.737922468296*^9}, {
   3.7379743415880003`*^9, 3.7379743703310003`*^9}, {3.737974914842*^9, 
   3.737974928793*^9}, {3.737977437043*^9, 3.737977465868*^9}, {
   3.737990212413*^9, 3.7379902157539997`*^9}, 3.738006350171*^9, {
   3.738006393299*^9, 3.7380064890699997`*^9}, {3.738006531491*^9, 
   3.73800654641*^9}, {3.738006919731*^9, 3.7380069443380003`*^9}, {
   3.7380085316870003`*^9, 3.738008534163*^9}, {3.738009269716*^9, 
   3.738009271826*^9}, {3.738009780804*^9, 3.738009782418*^9}, {
   3.738061838877*^9, 3.73806190294*^9}, {3.7380620234449997`*^9, 
   3.738062041163*^9}, {3.738062406172*^9, 3.738062435099*^9}, {
   3.738062528076*^9, 3.738062622811*^9}, {3.7380627235810003`*^9, 
   3.738062783013*^9}, {3.738062875197*^9, 3.7380628983310003`*^9}},
 CellLabel->
  "In[633]:=",ExpressionUUID->"13fdade2-56ae-4899-9bdc-483635922e11"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
13XLv/uL/78Pgb6m6v+7D/kf+zAUcA==
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
BXX/4rs17UpwFRGr9BIHqpHtohWec88WE0tbnkeXI19iWi5vGCslGjzb8gv/
5SfsQbF1ewWhptllno3cef2D4NpGirghXlOfjhwA3AXfP9PEloDk8rh/8W/T
5C5srSYGds1wBCOrG5jlS7x9QeR4XLLyRa7Uc7Lzq39JaMR+XH36X322RD0g
KmsIUZst3AeQPXTu2mSW1BJqT1WUTZAXtcs5eJ7WERHMqeqt/+qrOWLdkNNA
MDb9sZb6V381kwXrm28IuadJk5/Q98UgKTvq5+23ROKS2u0NyELXuFbssXtH
mB0Q/VaE/PWbc8Y3t2ZCO37WNgo589X6lxrhLYTY3cSrm5Fj/rQylyxvJcxk
7fKlka9uCj34X0IrcapGUo8H+VD6wOCF7DbCRIPt8h/qB2I+2UuLX3UQViFb
hVyQOe/b/Bdu0Uk0XXwmuQt5ooc31a6tk+ivWh2ugty0x01trv89QY0zz39D
/ShsPb5vG/cnQrTiVdxp5Pmv1g3H5HuIG88jV5qhfjfF/VB9t0sPgZGzXfLI
I7I8sZp5PQTFuZZ3DvXTzoOFh7g29RJVYW4nc5ELq1Z9y4IvxO/RN/4LqP96
JLcvH3bsJzwtJociUL92eabu/e5OP2F/+UmELfLht2GdJUP9hIBhb4gisjnP
loxIzwHCNNIpmkL9Hz+fqKkaOEh8GKVGR9F86N1ld9CDNUyk874rUUTzxHAg
4FhT1zCRn2S6bNwJ9ZvgjLNq0l+JgqpPzYXIVmUjoSOpX4nSR9vu70CuVr1S
5Jo8QmzqHkm3c0T5F86UcIwbI1wTL/u7ofm1eK9mXWXLGLH9XX2TErKD6ehG
adFvxLv5/OiBw6i/BGnv+njzG2HAL378GPL1HzWXbKPHiYwGN7BC81BzZGYM
M54gTFZkfFyN5qfTVv4LHScmCJlyYt1bOzZEha39HRYyQZwpGXkfgjyiQPAM
vpggMi7viBu3Res5FCGdZfSDqOBYafAczWvRprV75WCScNe+Y6mL5vv0I+LR
av1pIuJIn2cd2j+8VtUXOXdkmpCV3DJ+AvlOjo5PbeA0cWbnFM2BbMXeoO/7
cpo4wmnjrIP2I4+jJGtbLGaI2Z3pycnmqD5nf3VHOf0kBAumyohdbBhSeSTM
EzZLMHxqTATQfqgy+975w7mzxG6FX6o3gQ0JCtmtTxtmif0Ba5wlkE3Wpqcc
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
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
GuqZn1oWTIeVtm9Dvc5RESswdYteEB2SOX8/Mk5R0SnnOvE3gXRQ+aS4NcuB
iko+PQj9hJ2tuiuywhbnwza9zBa313By/NxyHMdHuxkXiMcryg7SHzxCRakR
K6+nx9Jh45cc9ow5Fb0yqu5el0WHCvUXI+IHqahFHpZqP8D5zxdP3GZIRXr8
GeFurTi/xXG/GVuoaHtl8d0pcQYcn6gwydKlIi05ZkKnEgM+bHyXVbGOikTC
Na7JbmDAcLmyxSBBRfTUq6FVlgz4W5lXtE2WirbcVu46n8aAph5tsVlpnM/N
e858LcX7aerhqcfLqOi3ZZtwYxMD9LS4CnrCeD81ExuL/zDAK7k9fMdvCrov
Y2s4rhEJU95zp+E1Bc2cC/7IGx0JY1tMlP+LoiBkb1Fv6xEFyKLdRzCCgvrt
xK5cCIwCxkWrrtrbFPTY9Gd+JCsKtHLsGXv9KSh1Cgr5H0TBeZmrfw0vUJCp
xpg0YywKhidTu/cb4/HAIsnifDRUSFA3iu2joMPwJJbXNxpC1uZFNu2hoL1L
jLMLw6OBcHq411iPgmiCX96J5EeDc0d9iYkGBU1snHvHGY6G/uKfUYcWU9Cv
42YnZy2ZkCQ4c+PYIgpa4Zi8NdmOCYeP8bk58OLx/LqdN51jQj2v1GH3P6po
n/nlFhN/Jtw7qLsq/qsq0pbds2dlHhOu/fBI/9CgipxDLZdLzDFBbM1c8YVQ
VaR0OFGuJJ4Fz30FMq8FqaKgrbfmDDNYcL1NjB1wQxUlkw13O/JZ8POa/FWm
lyp6vrwkuJ3Lgs46/e1lZ1WRZex6zoVBFqQ5BVTPG6mi/qN38ynabNiUJtgR
IaqKPNYtmU3C9dq2lksNO4VUkdGihsav+P7T/9tbOcmnipoP7g5f28KG/44+
yD0xo4I4e77/jsf37REJO7+1X1VQpYvLjKBgDFwLeLSmuVYFyUYrrVtkHAOP
TroEiN1QQdRy8+KNHTFQyXjjgXxV0COBG8Ene3G98nSXi5unCsr6JaYZOBAD
jbKyR3ovqqCHmkL8DydioKftuWa+rQpS2rqhrkg6FmZ2Knbt36GCXtLCk9ea
x4KeyiutsGll5FicoOHSGAscKVFd8wllVON5qNKvLRb4F+3ZunpMGX2CfSfD
u2Kh8XPJ7ruflVFrl/RU5FAsWBXEW73oVEYz116sNeSLA7ctJ2+IligjRu26
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
+P/v+0Blalzh3+/7/gfVh/tJ
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/+8FoZj7efi/3wv+DwwRgps=
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53172177#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt2nk4VN8bAPDsWbKXkGVmzCK+EqUS5q2knaIkqaRQWqikIkrKWiiUZeaO
ka1SJEuF7lGWkBAhCi2WKCT7+js9z++fmefzzJ1z3/Oee857zvNcipO7tbPg
vHnzLuGPf99bt0hvmKJoI/2ZX1cL5HmwNvfy4Hx1baRUru6fg61L6eMuUtFG
adz4qQxstVv7tmkt0kb806sGkrGlJ8rHl8trozLmO3sO9txRo1S2tDZqzltm
GoU9WJtss0NCG8WJr4kJwa5L939yTFAb6TyN5Xtiv1Yc3O81y0JXv3JsjmNn
Xz0ofn2ShYJvJnkdwI62W3uUN8RCBeLSkubYdvNHlBu/sVANv3u7BPYWzyPl
39tYqC/9ksukHA+MO+o8/7SwUHlsSfdP7CXPn9RI1bPQm58dS8qxF2ip+arU
sJALw/F9DvZsRNhSVhULVQsOf+Njd7geu7HhDQsN7crV98auq2802EWykEFi
pKsz9mv2xo6DBSxksvHztBV2shJ1rfczFsrfqmlGw3Ytbx3Mus9Cp8y/TBbL
4ngNtxKveCyks7VIOB17M+/5tncJLPRKsfTILeylF2JSu6NYyD0zbYktdj/D
ykH9OgspTRvva5fhQfudInHdqyz0RLu1j8SundXJX3OZhZih9pU87OzG+fJ7
PFnodby1ywFsr8DX5WFHWahy6sFEjTSOZ0j/fJwjC8UUl1Y+xLY7yKOmObDQ
DtbFtuvYxkaXfV/vZqHQiOm3RtgznSsNJ8xZ6ECZSOjtBTy4vvEB4UJnofQ2
7ecUKR6gMO+dGhQW6hV7MNQnyYPpum2CzUtYKOtB/Opc7HMH+523KLJQsnlf
hzm20wXD/3SFWIixr/WSnQQPiCLh9h+zTHS9PKhLBfuTUGMkd5KJloR+sP4s
zoOdkReHpYeY6MOEnZYDNvtBUcGfDibaLvzG32o+D7wHwk89/MxEp2KmisWx
81Y6ahxpZiIf29mR12I80HstGNBQw0RrbS8aGmAvad20Nf8VE62vbmoREuXB
pNSH5sscJlrGl408K8QDI5v7oStjmahY1m+/KvbZOE+T/igmeuS6QOiNIA9+
0pUSD4Ux0YEXaR3S2M1mDq7rvZlo1amjGbHz8P09ukbE7Jjomnql8bkZAoby
8tOQDROpfO9eJI6tNxO875IVE521uJLPnSYgJUSnqNeCiUya9OHNFAHRSR7X
q1cykVHSaou5CQLONEzKRykw0aXO1E9rRgm4a21lHy3DRLkF+1+8GSGgsPY+
P0aSichnp89sxxat3q4fK8REqV5tzvbDBHBKiR3cvwyUsnG52bEhAt7mrQ9O
q2egO2NCvK39BKjHhc4URDEQrLe1/tRJgLlSu3lRBAMt//B14xXs4zGGN1+F
MdCmouxMGnbO7c8qxQEMdPm7Pt/1BwFbQvVWl51joC2M4cUt3wg4PT/gSrk7
AxEb530+gx0d2FT29gQDWZq6hYlht127uqfqCAPtGz7ipvuVAE+fD2drbRjI
YZW5hX07AfETjJd1VgxUVhMd0t5GAHnBR6B+GwOhov3LnLAlPLUiP25gIKFP
dgcOfSGAd9LrcYshA829dnZc1UpA5QGVnh8KDPR80cXflo0EWPFM2JMy+P78
vMyUjwQ0dBy8KyPFQAtlH3SONxDw5ch9c2NhBtJzzDoRXU/A4HFdfsQwHe1e
cVGZqCXg/CPL8eRBOjLeeiO7sYaAyV8eVi9/0dH6WhtTSWxhj9yZHz/o6PHQ
2m7XagKUvMzsjT/SETnpWvq7Auc/3/GpVR0dXZrKpAtja05cm+9cTUcbx8tG
Fr4lYOnl8ryIUjqSzDiWrFNGgNm1nQqduXS02OWhp9prAo6GO72LuEtH/meT
Hkq9IOBnzXVayh068nBNcfuQj/Mtl+b9MpyOrD3u3L2TR8CF6D5WZyAddQYs
/yOQQ0BovOcN4wt0pLLkWW/8EwJkPt/9bHWOjo6rGG0weIzHR+2FobM7HSU8
z7rx5hEB3MSZrxGudJQUHxVUn04A9ZvGmpQjdHR23RWGdRoBqbT1kS8P0ZG6
5fHTlSkE6Dgf7a7ZT0cVR68GSycTkJUaaNa5l442vJV5/4FPwMqe9JhJGzrq
O3moMJJHwEvtql8yO+nIL3/d8c1cAt5kyCQYb6ajHXVitimxBDRmx45FrKaj
CVVum1IEATOvHmYZK9PRD33hkiFvAt61LJOaUqSj+tE7c2oXcX5Hc1wLZOmo
fHWxz4bzBJjokeom8+kovcYlxdedAG9u/U3TMS3UyUcVT48QMOozfQw+aqFG
jkDe8m14vFdbUixua6FKWSslGyUCvmf/ub1LXAt9MKQyB9K4wBGdvGYvooX8
5Cb2QTIXbO0FPY8IaKHj4s4QlciFtwIKtucnaKjkuuGUWRwXnuxcoRL3k4bE
bP4beBbKhYv9XkkdFTR0Je6B8PrTXFi+/krUz1IaCjPetrzcjQu9MUHXh4pp
aKzn4MFdrlw4YBrrIvyShvIeKtw678iF9TdfLGU9pCH2iZVCQjZckFo6ne0e
SkOWuu6Bjmu4UOornHwxkIbI1w+9LY244FcnFeN/jYae7FtZaG7IhT8X1S5E
edPQx9LTk1v/40JjudnafDcayoIR7RIKFyJVN+kiFxqKvq5jNanOhS3uVmoV
TjQUuF7jmPESLhQucpxrsachp+Nemz8t4gLf2f/N7FYacpNyCbknxQX7FyE5
YptoaF2lhAJNgguKC+6kyG6goXyfVqOXYlwIzEkKoq6loa2jqzSlhLhwUqhk
m4UODfn/PQTmkxyg731nYsWkoaqxrsMG4xxoe9jwnx2NhjYen1/y3ygHdll3
yrip0lBk7S61HUMcMOKLNtySpKGJff69hn0cMK45U7FOjIZ8lugEuP/kgNnM
51cjgjR0aTCeX9jNAYt9zx4cmKQitUf8yzd/cGBrkDpPbpSKvsy7T8p854Bl
bkh06R8qsrRgx6R85cBeOccr//2kIi8/NRGJdg44sKs8v/6goi0dFfRPXzjg
eMrILaaDiubJdnUWfObA0QT+oS2fqUhnY1pwdisHjlVI7ZlpoqL+6XtfPbBP
jl3Y+rSeiuJOhB+Owtd70L+znWuo6HzntpoK3N5F/xdLq8uoSOpH3bYzHRy4
nKml6f+aik4eOF/2Fcdz9UvEwpWvqGhTVYyoM443eI3LPG4uFRWcEspM6uLA
Tde6kZ1PqWjirk6AQw8HImNM+oQfU9EMN3CY2cuB2D/yjSeTqShRLyxw6DcH
OBp+VZqJVNSVIaPwZ4ADiTt+ooYEKlo7dFlxHs5v+gPykUkUFTkVlO+wxPl/
cfikv9Q1KkpNV7p6f44DryKavJAvFV1ArXFqglx4XbT+pOclKvp9ZrgpRZgL
lcrKez97UJFC2KfYdnEutNSV6mYcoiKrsRMKg4pcmFyn0bzNlIqqycuq5vh5
nHUPrZ5bTUXpb1uLffW5IEiMvH62goqsZV37EH5+JSarHqvqUtH+jc95TsZc
UM2+GNCnQkU708zOSW7mggn1g17YOAWJ26SOPD3KhUQFyRU2wxRkuMa7yeoY
F4REzNeoDlLQ3ooz7kMncHzduRsedVPQmssnH5if44Ld4zi7qkYK0jMdjl94
jQueqw9fk8ylIIHsUxq6eH43a8cH1Wfh9pJ3BA/f58Ja1fqbCRkUpBJVv7EI
rw+Cs+b3dJIp6MnUmVTLTC64DPhy/vIoKIe0L1r0jAsVHXn8ggQKUl0YKtuW
h+fbG1bGtigKGsk32LC5iAvDOYefKkRQkN9Qjec0yYW9qfF5raEUNHrs1MHM
11xQD5EqPnGNgo5HGDrKveVChuXgx7AzFGTjlret7AMXZEG71eYUBe3Q1Tjh
8ZEL55Y7dagep6CklVwr5WYuGCs29D5ypCC55COnXb/g9epT/lyVFQXN3fuu
P9LNhR9Hr2hL6VFQl+rMquZpLizxkfa92auJFt6ZV1xOx/U/uVKJ26WJBmon
tlNZBORVB2Y//qaJJC0ch32WErBLc677fYsmEux+E6+7jIDA0gFruSpNVBQh
cyJgNQEDMnWsu480UWmL8Ib5eL19nRzVwDupidhbK1Uu4vW5lrPczuWLBgo1
HZuMxPWr5tiz7pUFaui5Ul+Qw2YepGrXrd5ZpIqiTt5ZfqGcB/rxtR5nK5SR
SAlia6gnAkXftGXRIyV0KtNbR29fIvS+3Cgi+nQhqrijy2bfTATVEwWHL9xU
QBconiJqZCLMVsqnDJ6RQ8r2PZwjvxLhHFtq9/ExafR1fmbvHnk+PDesRiO5
EshheFtwthEf9JVubZZPlUC1c/lP9FfxIX1ye63eXQmUVvjp1hPs2OJ37a5e
EshUV8vrwWo+XLB6N/vJSAKZy6j3JxjzwehElcmrfHHkbTFw/pwZH3KSKp4H
vpiP8rM/Eb828iFTrixLqUgUuR/OoYnu5oP1QbmtHY9EkW/w380+2KMPHb6n
x4uij7MFiwexTcz/LjS+KIr+LHyX37yHD2+9NH0cDEVRUIzG35S9fOho9d7I
fyCCZpW22Onv54Nc6rKWpXeFkf/inQ+FnfhwzjhOyMxdEAUr1Ls9OM2H6GjV
z7YHBdGp9s41Yu44vn5ujvsOQSQSMptzFHs0KcmZryOI4v10MtU9+HBRMqNc
uEcAea9oyQ4/wwe/z6/CqhwFEKWhcOigJx+C/X4o7LOeh4J0mHroEs5Xs8uv
M+vmIb9l1ucUvPlQYfCzJFR/HordX3/EBVui+/f5Qul56OrK1xaSPnxQ4fVn
su/OkebLnyvsuswH+jrF1dVBs2T2rlWl7/z4YHzj0OYet2kyrKlr8fUA3N64
b8rBbdPkjqOHPpdj253kCH7UmSZ/BSTtkbzOh/M2nwqLf02RJz18jt/GzqLY
LE84PUVqZS5ZFH+DD8xXFiqWZyfJss3rr3KD+KA49t+vZ5fGyVglC/+TYXy4
77Z9y1L7cTL/GjmWim3Q5paaaDxOSjASaF+xd5amOd6aGiOHxU8m7L7Jh7Ao
ykcX3zHy+thiydW3+CCov/CVsv8oOdBf0j0YzoeBY9MRV4KHyZeXbl9ZeocP
DU+Wy1q6DJP6shYFh7BfDrtELjEfJo8erSCisa9frYt8MfeX1Imxt5vBVolN
vf3X6y8ZTq6Or4zig3n5zihX5yHyy2rlyN0xfNBeEKhgtGGIjLLdu+46trRN
QZQwZYhcRl8d/wz7Uxs9mv/5D3kzr2m93F0+nB6djG61+UMubtjk/hY7lp5y
12r9IGm5PdeAEcsH3xMti9Q1B8llP/oddmKXOmnofZoaIN9nJ+l5Y9t7D+sp
nBsgCz6efvsO+8YDQj/ocD8Z5mD98VQcH1rE/hq6m/0i20gZa148HwJKEozZ
493k1IknpSSHDz3v10Q5P+8mjZatqf6MbfmpqS/sYjcZGmcdNIGt0q/AbR7v
IqWZ2goGXDx+Sjfnzkx0ksf9dEJ42F/cLpckT34nWVUlP08QfFh/XkWt6uV3
kirqrXAdO/3K8/N/vL+TmmK8gQRsz+hhhtnUNzLo3kqyElvi1cmQpqmvZGKs
f4EWD+eD+pKjONlOftw5yazEXrNqdMdh73bSdM7u4hds4e0Gc48n20im8xKf
QeyE8w8Pb5r6QrZFvb+3MBHPx7fxDO/pVvISrfo/B+yoL41NZZdbydAVZnKn
sA8OyYcozLSQLeel03yxR1TD+jJmPpGc0oqfXGyqu09W+2wTaQaxVS3YvwPy
D+teaSJ/XRpY9xP7eexf+UtzjWSCQ6LbGLbV6xPn5ec1kjb7pOrl+Xy4vNDB
eKNAA9nQODG3EXvT0ti+2/71pNKchLg1tjy7gdMmUE8qb/EoOYD94Nj2uQuC
H8hcvxXWntiNBSYlD4Vqyf5FkRVc7CWXnNqGpGrINBf+yjTsm97bVkTKvye5
taJ7s7BP+Kp1VKq9Iy/bVb0oxm7xEzU6RqsiRbS1pyqwt14dCBPRriQlLjX/
qcNeGlC8Cla8JUunWXMd2PHXH976sqacVPn+dmEPtkRg1Hdvdhmp8yT/az92
b7BzRO7WErJo75W4KWz7UMtO651vyC89tjcEkvhQGbZq7eCe1+TYG2+GGPaD
cPHupYcRrr7JwXLYBpqdlyKrX5Hrwh9sWYQtT8unVzUXkkekx0kV7CF6SJ3I
j5fkgnsRferYdaz9vjDwnLzt7/6Oip2l85+2z2Qeaca858TAjtSba8gVySWP
fBV5oo3tsbzu6qDsM3KXeMETXeydK+7r6ix5StqN5x5dhn3odG9WleUTslxs
tGY5trpn+Px1zg/J/kjvQUPstksGjnk+qaTa7/VlK7G5Vxrzde4kkcnnLXet
wn4uMaK+fheXrA/g3F6NvWqR6XtdvxhywkM3aA32iQ0SU3q2YaTL3Znlxti1
OSuezXe8QJ7YIXPnnxs8M8wMnh5i8z1+p/wz98LGnzs5AWwFszdu/7wzy77U
lH+bXbv1049/7dUlyy+y8Yxjh5jqK/7zg+3Ohjn3E9m/C9+O/4un16K41exW
MjvD/f4dI+yl69SuV3ils72m0dcV/+JZe0l3t2MGe1qc2mWA3Rjv5jaglcX+
bVbO08cevRf7Kkc5mz2x7qm0HvaimDJ5b+kcdu2LDgOdf/27M+zCFspj03bY
SrGw7SKoBcLj+ezEJPkELeyLN3fKVP56wR53XNSu+S8/gRn5uxuL2BPZo4GL
sZsDWiRVqki2UHRDrwL2ZRDOGmhH7NSL00Iy//pvaiCc2/CafaVb11YYW89k
yxOlmjdsBdIoYhY/X6+MHe28K0rYgitv+Y5jt60Kz2C/KmNn3aV692GfNkqx
TXpezn5f4xT8A3t2ReE8kWdv2fPXD237gq1u0Lu7Mq2SHXpS4G819iFdi5nd
t9+zJRf+RY+wTWJTw0cTa9hF0qUZfGypa0Ky2+1q2QM9uXAP++fvI/zfrnVs
lTtjjv7YSaVaJfpB9ezgWbmAXdiRUw03BWQa2IYbhjLNsf2W39jz4W4Du196
/Poq7P3czq5zqR/Z7eEXmEuwFc+niueXNrFTLxyw/IrXC8FHth+CdjSz69b6
F9ZhD3aIJth9bGbz/qv7UIxdvd1Vd/LHJ7br7/GxROxALZaVqfBndobWFa39
2NM/d1cepnSwvz3QFCPx+vdX+LHeVucO9iOJE+MPsHs1RKIMHnSwV3f1347G
bt6Tu19o+Vd2l2Nq0THs3OKFv5PhG/vOo74xqX/rbVyjTM+hH2yai9WQOV6P
nXP0PGvv/2An73U/vBTboSaw+Xn3D3aO46eLMtjbRFbxQ9w72TP8mMRmvP6z
ztwz0LnSxX5tMlzvgv11s92e00QPe3Wm57uzuH6YdV4+XP2lh73PQ7lnN3a8
P/+UrtpPttAFv3wjbOuXvTd6E36ydzvdPjORwIfXOr55LnG9bDdpBRsf7CTp
JKVD0b/Yqembqz1w/TLoHfnF3DjIttoUnUHF9c5x9fxzTUcH2aEGLPOpe3wI
D1SZCLw+yDZ4XxhRj91LZYt0vRlk62gNrg/ATtofrJa8/g/bIj1fuR3XW4Vq
FUtNGGLbzdwMDcb1eTiTnbl47TC7zLXGPwnX+3c6a+U9DgyzM1+1ep/Cvp9m
dL78yjB7QccfldXY1rz/1nqVDLPj923f+e42H56Gq5bX7xhhq0npRw5G4vye
GmsLdxxlS0YePsaK4EP30kxpkcBxtr1a1709eP/yKvXhGYf0cXa2+m7vhdh3
qakNzyrH2cqp1sIfQ/lgocKNd5KZYIeoy8vYYCeLhzFQ7AR7YbzsvG0huP89
LmY+jybZSl9e2izF+6eWFPXTf2qn2Wkc0/bUa3zIE82wTh+aZttENKoewI5y
XbPqkOIMu6M9R0gBe7v27nnVe2fYa0J3ffT1x/FkhNxJb5tha9/2vmp1lQ/8
Z8N5h37Nsg8dFmv55ov3p46dc10B88BFs5VReZEPPqcLNu/hCcKJ4d4XnFO4
/rNHjkpnCsKjhqwd5tgSssv8y18JQnDR99i+k3h/8zTpxZo2QUi1TdqzBjtv
OGSpupoQbHKePVbnhuuBt51Ud7wQ5PbKTP115YNb0EjNxbvC4PT6abkg3j/b
JS7by7klCm1Bcsc34/23S1CFYHutBFyINlr7eSUf3lzX0blZJQ1lpZz4TgVc
7+U6Xyvuk4Pv419CD/Qnwl/jcrOvXgqQGZ0cJ1ycCJnuCyacPBZC2Eej3Zfv
JILwlS5/p2glqB+q1w3fnwj+cbQtStHKILtCvlFTKxG2CV/RLglRhZ3nwgdb
63nwZMup5v4HaiAqNiNes50Hq+PJ0vcpGjD0c3Skt5SAH3qZJseeaMCT94G0
W28IuP2GeCaQrwFNOsq39IoJ6P3ly1/xFhsK5dwLCeCwTXzjezXAyt2kpiub
gKtnHVSeKWmCcIb2rSweAZ1Kn+r8HDRB4I1y/JOLBJh823mrylETHmXslFzr
RcCdjLebFztrgv7wDX7ZOQLM1j0nn57SBNGnsytbTxMQ63bv8Q8/TfB3f/J+
4igBW4v2hGzla0LXScO1krsIeOL0ARZ1aULSB6NvZ/F5M+X45V+WvZqgZuEQ
/wufRzkejNigfk3Y9kV8qzONgFA/74HxUU0oeuEeYqNOgHM8lWgVo4DwvEB7
miIBSz6cnUrUpsB6t9bG8DkuKHxakvbpPwqMDnWtH8PnXYmOMmt5AwocerTh
5sFJLoz/VnkYYEwB636nLO0RLtSLv7Fz2UYB8radbHYvF0LXKeTpnKLA11F1
FILP2/6biw4fPUOBud18k3Z8Hr9o5bqAe54Cjf2mlw1rueByoOCotB8FHi9e
bdZcyYUDR51lN12jgF6lZRELn+d3n5ApvBJIgWOTf8YvlHJh3aUjCn/CKSCu
spMnj7iw+uoCUjuKAgNLS0QPFnFBLyjfzekeBSJnjLTSX3KBHn54UUICBbhe
4oZTefj8HiP5up5HgZgPezYbPsP9yXrmkZdFgUtR+3nSyVwYyD+wZCCHAszM
3OiNiVzoeiX2lvmCAn6dTJovhwsN7/ZrxBVToL/bVGsgmguZPULvfT7g63Vv
O3fdwP3R3K2zbpgCOcOtew8d48K5Ae91y8cpUIxc22aPcuHqK/5eyjQFalob
85MOcyHBYSBAQJgKfsecN43bc6E2NvRzsQIV1pMeC7/u4MIaueJb6w2p0OSd
Ztm6ggsWHd33DVZRweouq7BlOc5PpvRL6loqLE5Llfqmx4XTOxy6BDdQwUg+
0VhcmwtJIWNmb6yp8PhPjihS44KUoN7ghrNUmP1dDQLiXFCu2y26wosKM0Vt
d+NEucBI9Fmi5U0Fvraoo6kwzrdZxWbha1RwNeUtS5/jgJf3UX7JbSqIGDPn
yY1xIGBLWH5ODBVWVCrrSI5wIHJxdnVyHBWWVSy7Lf+XAw/z5iau86mg6ftu
aMsAB9qH4q03PsX3541sOtzDgV/FxcdW5lLhfoh+cFUXByYje/zoL6hgmptQ
Zd7JAcVlRo9EiqnQvVYcnL9xgDLrUDxSQoXiKunvUl85oFcd0NT5lgoMsW2n
Sto5sPlEnVBZLRWovadUj37hwB7jceW8BipcL9v7dPtnDjiJa+inNuP4n/vJ
W7RywKN5o8Xdzzj/lcWnS7B90046BHZQQfp8PuU5vj7UK+qs1w8qmDTfDS7E
7cVufBns0kOFR2Wp7nVtHMj+LpZrMUiFdxHnBnRwPJ7NVWVhw1QIkFq44RaO
d1V1RHPtOP6/2GthgR8cKMxTmrYXoIFzi2+lejcH/B61LkgUoUH20Yytb3E+
IJGn0SlOg/xa+vKAXg6UhjA3uMvTgP90tbZuPweC/fp25yyiwZHmP3nKgxzY
ei7TZUKFBtHmK+8rDXHgvcOq0AAaDWZ2xkdsGOVA87JNdfdW0GDsb6z/bjx+
8VqS3z+vpoHZPMfqIgE835RrhimmOB5l/WMr8Xh/E9y7OGMjDSQalwZY4uej
76PLIWRLg1wDi8UURS7M+gT+7rlIg9ItQ1LSulxAHlvn/vOlQWR9vqPpMi4E
OEvLnfOngepEwA8vAy7Mt7q7YiaEBlo+7p5ia7ggR031kUuggcxCqyv3LLig
9bZU3LiIBr4e0hFrjnBhq6III0xAC5w3XRZ5jucfrW5jUpCIFowKeBm74fk5
fStQ/bq4FhRO76Srp3Phsdh8JV85LfAJl7QIzeSC7JTEfHeKFmyQPmyUhNeD
j19le63XaYGYmOyB401ccMxc8kTFXwv8fw053JEgYM3JA0uVbmjBV8YqhZcL
CJDXJlIVQrTA5nXqeLssAW+SNHhSt7WAfUJghK5EAOMuNXI2UQuEHp9fFovX
177LrLPfkBbc1vseImBCgNfWFUYP59Hh1JIlFRZuBAxsSEu6I0yHspcN8yZP
EnDMVEXGZz4dvsTl5KW7E7Bff17PNlk62GWvtBj3JAAWvYv7rUEHifOWMQeu
EPBShi3aSKNDyzrrQ73+BBiKZ599xaRDxBXFyTPXcTzT97ZFLKPDy06NbWdC
CJD8dmRGn00H7o0j0/9FEXC9tfG48gY6qAie/B0eQ8Bsw5ZGgU10SNaoFOi9
R8Bg+bLMD5Z0+PXxg2k4hwC34iTVAms65BrTjJsIAr6/XBh83xa316wopMIn
wCEneDjMng7pMZPXbO8T0Ph4ytHzIB2me0OJLSkEWKWdrnZwooMjnRr2IZWA
t4lf12x0oYNqXyp1TzoBBVHl8otO04GxRShq0yMCEi9FleT70iHv/nuT71kE
KJ8TXZ7oT4cfN+PM1+L6eufkJW7wDTpEOblcvPWMgBuHDnntu0UHGeHIZM08
HO9GHdYUB/9+rveDUAGO14yI/p5Ih9+KN2f1cL12WC0n8C6ZDiNC5k27i3B8
OmOfOBl0SJ26WhtJErBC7k2YWSEdHqaMplTh+v9YwmicgXB78+Vnq0twfoUf
HJUpoYOtit31KrxfUB4LN+2oooOQT//+5+U4n5/tB/xb6aBwQ3LKvoqAivQh
69JJHL/DOqUPdQSMlwsWCM7RwX5R/CviA26vG09mIQakaizqc6kn4Brd8O9L
SQZsT/lB723A+4Wkc1FZSxjwbmH9kVdN/8YjYOq3JgPau0zPH28mIK4j6ogO
nQE90ilZsp8IGFXPMUz9jwGnuxvGbFoIyEoYrk8wY8Bam+z5WZ8JaHspbPJp
PQOGPccemn0hYEGLYvKiTQwoGZZbUonttnil520rBpjcMSxqaiNAK+a8YpAj
A3y/aJrUduD9SPjo7rPXGPD1suOKzT8IKHssWpQZyADhvuyTj7FH3i2i/w5l
wNXSm0Wynfj/vxi3lkbg+/8XsvYstrXkqhHXKAYs3rBhqg776tJNB1LuMWCK
aSun30VA5pa9pd8SGFAx7XDnJnbbMdf/NBMZQH3Y+EygmwCp4AsxB5IZUPbd
Tek+tnFa0Ex8OgM2TSaKb+gh4HjZPefmDAaIbvoZ9hW7TPj5SptcBrzsOWOh
0ovv5z/+cXMZAy4pPC7w/oXnn+ekrYYEE7YoOV3VHMHjvT9IW1GaCdmPOQvu
YQ+tV5yeL8+EwdrzF6VGCfCR0+MPKTPhV3tW31/s8CeH+0q1mTCxQPR47jgB
uT1vr5zcwgRRValSoWkCJmv2WB/ewQRJn0vPj2Gb5X/Tst3FhD8DazjvsN/e
mK5g72PCAePDa27PEPCZqq+ocJwJtWyRvgVzBAgeuJf+IpgJBb7XljcK8GCT
uZbPk5tMkGGdyFsqyIObOk933I9kwg73/WZ+2AsnK4duxjIhbHRuP1WIB6x7
syaO6UxgNSoOHBTmgWWdc53oWyZ4b93h/VCUB1HPh+5PVTGhipwoGMBu5l3x
GqxhgoK9k8IKMR4cPh2n2tLEhECNhfNfYntKVjs/7maC3OdC7YL5PEjYuGLS
RowFu24O20RJ8ODh4733XkmyIElSpKUW+/lCnxXasixICLtvs0CSB42dxadn
F7PAuF6SFYAtG2j1PX0pCxYclw9wkuKBRv/ZqwrLWHDjo2r9PWw927tqfoYs
kHyfS3uHvY3xZa+NCQuG05dUL1/Ag8Ayt3czO1iwpN/s9B/sGL3w48esWdCV
tGdQXZoHyXefitbbskDLfe7KNuxil3FIP8SCx1G33vOxp0UDc63PsKB+eInt
BhkeSLo/sC46zwLVHXvOHsdWaXo3wPRmgclm2oNw7FVpCktnrrHgxUmBU43Y
ZzfxibRoFoTaWvnsl+WBf2bJWvk4Flx6XBTnjR2p1NN8mcuCNIOS9ljsx916
CtapLHBfoPrzA3ahlXVW4UMWfBfJyOzHrsw/v4OZyYJNZ22TxeV40BNUGDSd
z4KYXxfVTbHHBtq1XAtZsJe7PG0Ptqid0Os6xIIisRtHT2HTWFunUytYQLfy
DYjHPvi2yWNXKwu2RZpc7cM+pT+1oLAd53PUpnUG+3Ks+iPGD9z/xPkXZeR5
EHfMuXPqFwuWS1Zd1sdOrw2+5vKHBbxTyj1s7LzVGRp1IyyosA9MsMRumP93
X+osCwRVTb/+e//su8eiMVkhbeiNLPfywh5qXhPtI6YN0PTH/hr2vHUHlndJ
aoMH2yHiFrbMg6vvd8pqQ49K2sJYbHW55BMFitqgWHB2gP/v/blL5fMZytpw
+Mwh9Uf/3q/72psSqaYNayMWJD/D/v/7dyDjonbt3/t3/wPr/fTp
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172177#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 835.7699159934142}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 835.7699159934142}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"2rd\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.738064593807*^9},
 CellLabel->
  "Out[633]=",ExpressionUUID->"2d845973-d686-422f-91b3-397b0a58b991"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Cuqgd3eId0sahf///wLyO6ICr+Un1PwfEPXq3Q==
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3fc+sZr/A3EfmNY=
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VUjT/wA4eQgF
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53172292#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
dI7o/v//LcwILvcf89zf9D/i+h1r
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172292#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"3rd\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.738064593954*^9},
 CellLabel->
  "Out[634]=",ExpressionUUID->"bf0d4dac-10d9-4840-92b0-f4e5e789202c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
//8/PTqQOJRsg13//wDybKYy
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtm3k4lN/bwGUP2bOmmDFmSFrGvs1BsiRbssWEIlvWISFRkq0oS7aSncqW
pSjmti/JFwmVJLJEIkmS9D6/63r/mutznTn3ufdznz8eKRdfS1dGBgaGa0wM
DP/7NTbi1vsjJQt2F+MklBrdkUZd+Ar7XlnYGfn16YaWB5KXWrwnJCYLwzHV
Oh50D8T9u2vjML8sRCS+Mac+90SDpVEV7oyy0Olenb121xu1Cq6cDt4mQaul
+XLYzgvoSSR1Z/QmCWKV1W72hlxAqbYa53JXSVA87/Cm19wH2bL/FB2ZIkHm
vPCbmllfZEQ72zU9QQINw8xxd7wfUp8cpH1/R4KedEqeu6Uf2vOs4j+u1yQo
xfGp6ZT7ocnz7tf12khQvfShJdraHw2+HjliQSfBe+6e84YR/qiVoj9JfU6C
C6SWXRxF/qhQGKcRWkOCKr07KzeX/dH5rvcrVQUk+M3ff6gzJADZko3vN+di
8peV10syApBh7rPjfdkkuN0q+SX1aQCSu5hWPJdCgj6jw9/SVwOQ+DST1c8k
TP+/tccruQMRl1nADqZEEoQXB154KxuIvsmYOeyNJoH3yOlUD8dA9PFO0075
SBIsOEx9HgoKRAPb+5+qhZPg7KhjstXNQPRkhJ3/FI0E8iVLt0oaAlGB7kW6
ix8Jlv5QD4T3B6LUihlvP28SJOldafKdCkTBMa1dCedIYP0wxqiRjYbOrx4K
ynQiwbfu3mRBURqypebiShxIYPz2olOqLA0Z9e4aqLUlgfRpTaqGGg2pK4df
brUigVJ/50FOQxran78gN2CO8ZOOUBZrGtrDbTf2wYQEH2PmPu8/S0N/Z5TI
v4+SYPcO03KmMBr6ZlE4yapDAr7iZetn12looon/lqAWCe6p+9TnJtHQf7JR
Gjg1zP/aIf7PM2gI0pbnDyqRQOvwiwO78mioegc1XeswCTrvzCenl9JQ/oU+
veMHsPyZeoTsKmko5a36d1tZEnx5UDtlXUdD0fpl990IJPhpUr3ndiMmLyHU
fJ8UCZKvI15nOg1tDR5nHNtDAtpf1bNmbTSkKiJRmyyC5ZvXjAK1k4YCqd9c
jQRJcOhGcmJSNw1VFNKFGXlJIMR2PW2mh4YWFpJ7GjlJ4Jy/66xLLw3JHHYJ
C2QjgShvEDc7xi4XyQfkmUhwlI21egzbf7+J+ePnbSIsaHOeG8Hkv2UaSb63
SQQ+n/8QUzsNCRqX6FqvE6Hl+D0nZ6Ah8+SQNe5VIjAl0cdXn9NQ4ohRcdcS
Eca/RfY31NNQ9x5x28gvRDiFkzd7VkVDzGe/7lSbIQJtkjNkpYyGKGVNz79P
EoEy6elyLp+GQpdvXXg4ToTmsRSiUBYN1Ss57Ts7RoStyMFJtts0tBp2eFB8
mAjbST4lGjdoSKGV8drwf0TofVGXWhNOQ57sw4o3XxLBo/l7i78/DRWZFs3q
dxFh4vgFwxBXLP7vDYyfNmPnz57odDuO5ZOU6JZvIxEKnQ1XLLVoKPX8Qjmp
HpN3tHwsSYGGONcS+bLKicC/75MRMw8NbXINjYXnECGYJBHA3x2IlE8WxCtl
EIEwn36SXhuIAjJpmt9SiMDSPdD06kEg+kIQfnAmgQi+7ZW3hS8GojFth/O6
oUQYqD32J3NPIBK8fkD0TxARBkOXZm8yByLzl9u9Nf5E0BR9SFhbDEBdNnkK
BA8ieD1P2iHZEIDq/WZ/stli+mSp/jp4IgCt1j8tgZNEUCY1Ur4fCkAKf2Pt
LpkR4d+xkiIlwQBUFLe/aeEYEdL5lxXM3/qj1Hy/6FdKmH2zTn9Yqf7If3iT
P0WACOFlB+5ZnPRD6ZZm9qk8RFjCj1ulH/FDLwYK8tI4ibBuM2qZwOeHWF+Z
HMpgwvQLSf8mes8X5XTcP3Hvhwzc0M0I0Ir3Qd31urElr2VAOPJu3c/j3mhv
Zvzf5ykycG5exw1zLup1FJv/LCADP9XzV2atHZBZriZlk0cGCrlzTg62nEbD
k9R0Hi4ZeIJ7dH9I/jT6cLbgqDqzDCSrWtTKMtmjFQ/5vKQ1ArSfqjfPqLZB
wsHa9upvCFCBq5hZEDmJcp46VZsNEuCipr+0xA1LJPn7KrvrKwI8MfJ0L/pp
geTCu+qTOgiwy/tYV9drc6R91Vxgpo4AV/hQSbTsCXTulktfUjoBuCaOXma2
P4q+/BeNL7pDAGYWmvX4UT3kw1cS2niLALmXzGkTh3TRxdRF0kwMAYSK8rii
uBCKz6JdV79IANcfCvvVilUQz3j6uFkgAfYxGqwdS1ZCqRINZFdfAtzh/xNJ
vExG9x78/ZR0ngDPRiqZEV0BVRXHaM/YEOCBQJRKWNlepDRfmrZ5kgADBGvh
t9PCqFH25VcecwJAruj4uBwfanvMk61uSAAGnY2H0z+/UUaeZPxKUiVA8u2g
gFGcEPxtflilLkoAk5LMe2prh6Hv3UGuP4LY+puD+rKpZMhZrz3/nJcAgoIs
jRGHlEBTgb5Xk50ApIIQ1bNUVQi99zpR65c0VOwfbTuepA3rYVvu6I00jAdf
v/gErw+dd6PaGQaloUzpj+3JUX1Iq2GVbOmTBkstUphK3DFQXOQd1WmXhhIh
hYxXcwYQaE/Q16uRhuird4ZOJBvDiqqp1LHb0iDTwaF8LckMwOp1OOtNafiR
cfLsFwFzSPKzHeuMlYZvJ3f+Vj9jDgqlLkkGkdIQavbtruMPc7ggfPGvoa80
BBMCVyv4LGHhZ+7b4yekgSGZ+/aajBU08hGUuIykwUWyImrd1QriDjxM7jsq
Dbd2t3jLFVoBybXW4ISmNPDKRGvJ7T0FbsPddab7pcGi9KRIBrs1TD/5ftti
pzRwBXDSNh7ZQA7r5lV7Fuy8mfkcvzEbsLZnpJ3dIQ3X+HRbKMy20L1DwDro
Nx6UBMP55uxsocJcUSzzCx4+Hrt/NvivLZwv1OTMn8EDO9OXP63SdiC5cXTr
4Sc8DISMNfgct4OU3FMTL97i4Qlf4/O5dDsI+RacP9mDB9VwYa9wGXs4rHsl
5UsHHmpihdsnDO1hIe1G9GoLHsBsxrvU0x4ctTLcmBvxwHxruzXosT3oJjbI
kR7iocz0qeBu2dPAJbf1xDceD/9tNi0YszlAx2XmwpAYbL2ZoSFH0gEiBrnS
oq7iYVP77H43NQf4HiJxMSUUDxd/ZvOd83CAkS5tjaeeeDjW5HWR1OYAyeIG
8uCGB9K8xubJMQcw8jWT6HHBw6UBq+P/vjrACyGnf+/s8fDKLujCW0FHyHON
ats2xkPpEIP+M6oj2DfE1bIZ4OGgd/GrbV9HENx1p4hXDw887U2mryIdIaY2
/wZOAw+uB63NWPMcAbE/Ctmvggfea85vA6oc4ffpGg9FMh7Sdv/w86I7gjdT
+/Fj+/GQfrHpA/O4IxBs+jTNiHiwuBHZVPLFESYeDh+wxePBwXqC/m7dESws
Z3g8xfEw/CRC5ycPFZTzWIdvcuKhav7TSxEtKqj/59+jw4aHJisrm0OGVND+
O978kxEPhjO/DvdbUuGYXU2Z4yYOqBx/WPPdqGB8Y28u3zoODiz4ZL3zpYJp
XVxqx3ccMFzXrLwfQgUbPqcrB77gQPnqrqT+WCo4UF7SPn3GwYeDhB+ayVRw
uqDsmTaJA56DdA7Nu1Rw7+E69XcUByp//867FVLB+9dF4+rXOHj4vr/N7xEV
/AjTFNf/cPAvr42N9wkVQqIa5F514uCxy+sE/mYqhFdKS0a14kA1+/jji21U
iPyQtFupGQfsqvnrQd1UiOb8w/GlAQdKYyynuV9RIVbNjeFeHQ7GxIp6dAap
kHh+8Kd5NQ44cyuO8L2hQnKa5iJzOQ5mmSxiLo9RIbWtZPJZKQ6uzjfW3nhP
hYzv/CPehTjYWBSrODRBhZx9ES8lH+DApTzX5dIkFR6c+ALD2Zj8lxdbXaao
UBhmVR97FwcBs4NNS9NUKC2jP9JMwcHxnPGj4jNUeDwql7dyCwdhiZ0GXzGu
YklPL4zHgZh1c73zLBVqyTsSbWNwoJexGhWOcYOzdxTXVRxwr97O1MK4OWk0
GC7jIJXx5VIRtr+1SdebdgkHS+59PvWfqdC5WO5MCsIBub2dyw87v1dU1Gbc
DweRNVNPX3+iQr9BtEmyNw4W3lg5TX2kwlDQss5Rdxzc7DVaz/lAhZECe5WN
sziIOrTiwYzZ/26wQ/7xGRxMFAc/EsX8M/HvEM7pNA6a+jgffRimwtSBHGFB
Gxyo6UzYWmD+nT3NtqvbEgfuBXuKgjD/L8QFMIab4sDtzs8rx3uo8O3ph18H
jXFgXH737et2KqzOGC5N62P5lXI4nweosKmzb+y4Fg5sNNl0iuqosO0b/+qf
Kg76tR78YqiiAuP9n601ijgoi1n8IPCQChybL8vF5TH7PU9uutyjAjdJpeA/
Ig5ij77izUunAr91fsY1PA4WP9UIZyVRQfxJyLVFMRx4fo56CpFUkJycDskV
wkHjjc5DK1g+S3Ob+Zzkx/zndeT0hB8V5D0Jds934oDDVz168wwVNHFDCgkb
UrBzUNrbRAOLvwCn4sk1Kbh0IKSl4TAVmFiOqomvSMEZvb+nl4mY/+fq9B7N
ScHSSONSvQAVbMszbV+OSEGw5uiZgXlHoKk6X+Wsk4JHW4cdf8Q5wmPTlTcJ
/lJQ3ksojWpyAF4k+/7kBSloLvzLbFnlAIGHXSbFPaSAu+BGFGOBA6gLDi88
cpKCRSfNuyyxDtD99um/l2ZS0Hno+9kH5g7w+dwVWS4FKXiY1bsRN34a9oRx
X05ckISSc+atqlP24FHYK3xvVhLSWfEu20P2UP8q5kn5lCTQ2cMdatvswULy
31z/O0lgsHfsXS20h5iOZUu+l5Kw5orzaXOzh2WeQVL6I0ksTz4uM87bQWth
ynCutySsewaVB07bwkDOYVu3D/sgeHen2Z4v1vCfe82c0nMJ+NHlQZz4zxKG
Pv4y166RAPfnjLS+FksYsdZsPPZIAng/vV1vrbGE8aMdiTbZErBg9+xp913s
PpQcPXwpTAJGcRcGVZwsgfntZtgLDQkQF/VtLlu1AHUjXV69F3vAczjHhG2v
BRTLDqqaN4nD5/FWs3/7zMCdWN0SWScOrLIZRv3sZiBHuG1cXS4O7HHCW5Xf
TaFC0sKB/744RCYfqdloM4WnwoNXhiPEQdJO5ZKYpyl0swx22iJxCH/8rWW8
4QSWVwNWzm1isKM+KlnuvAlUfKz6cPu5GByODKjNtDQBvw/Jbq01YnCRRWdY
TNsE1sbMQ/CFYtB1hWfRcrcJbP03kD0TLQbT89kVme3Hgbt5YMrjmBicVgXr
MJnjcChrwC+gRxQuyRQGOf4ygliTYMbfIAriW8yWvtNGMLktnnrlmSg0jzKa
pv1nBElnzz9NLBEFut3NSIlSI/gmv/23+Loo/EqbHpSwN4LH9P0J73VEYdq2
Q2mkxRCwYa/oaKMI+D17Xfn+gQFE3pVXeVktAmk0qZaAJAMYMxrqtigTgY8m
mjf2RBjAjQqJr9QMEcBxFP0qOW0Asxdrj1wKFgG1luHBHGEDKOSYopcfEQFJ
P62q73eOgdQhrXdCj4TB92i92lS6PphYfklXKBCGOLtUraex+hBCSzt5LFsY
WsMp61mh+tD/bKkvKEEY9CVrrW9R9SFU5z592EsYhrRF4/BEfRi2/Fd4R14Y
8n7MnP7beBRiglp8uSuEoI0dtym+pAfVdy/IyxQLQVoQtapqUg/GG0S/aN0X
AgudZZrlsB4c2fZ3uXBLCL5lDL6re66HvZtxp/p8hODwvvlQ0QQ9UM24ph5/
UAi89rFFG8vrwUKjPgtr9W7oe+R8kS1EFx7dftobWLoblutlTHW8dcHbXTb5
U+5uqEwyEIxz0oWl3bvEm27thquae1R0jXRhxW/4EM17N0xH37K0E9eFdZmz
DlPE3VD7PuIFd6sOMKZE1jTfF4TxzX4NJVEdaPNYDZFPF4TR8jFxfh4diEbn
tLNuCoJFq/rBP8w6wPLNoCcoXBC08m88+76CgN2I56O8vSA4UVoGfHoQcP+7
x5G9WxBebdRsp4UjEPd67nwxUQBcX7Y6XX5Dgazu7mO7ogXgSIfq1xPtFBCT
GdlfECYANJGHbOQajD+t/Oz3FABD3+vZ6rcpIGIjEy9jJACs9idWNU0pIKh3
+8kbFgEIZUxX2nqpDVzi55kUr/DDfErZxOs3WpAYQpvvCcaY1KrK3aUFnCNR
r8748ANBhTPB/pkWcNzOuZvgyA+2Z5U6SNlawM42tH9agx/cg0WOZzprAcsP
Tas7G3zQ7Xoz+Nl3Tdju5S9a8ecD5eQhA4a9mmCRIVMn7MkH4tke0SL8mlDo
qt6h7cIHZk/nNLRZNcGYwWUm0ZIPugJwC9XfNCBdqZogS+aD8X0nv6iCBhx4
YFbsvMYLA3kPHzS6aoBDUGLJUDAvdDaHn1VuVIdK3QdPf/vwQrZBCNtspTow
8tZ2SZ7nhS77oqy8InUoffh+zseGF/OPhKPmbXVY+yhH4lTlhdehxza23dVB
KO2OxY1VHjD0ul5XLqYOgRQuK49f3BCzf8cL+xg1OKpHv352lhtWPtpXVYar
gZBBwFPHN9zw7uqOcd5ANXhmOiZmWcMNvFaiWb/OqMGWY+EndV9uCDxb/stK
XQ2iwzV9ueZ2gRw+SW/Hd1VIb/COrxzhAlWtn8+13VThfNO+F2UdXFDJbMyw
7KgKqi1DSwW1XMCd7z9ZdkoV3nWrWmTc4QKTXawGFH1V2DvGLBJlygVKF8b9
5qRVoWQ9p8iykxMkb7FY4WdV4Bn5Ffys44C8g2Ham74qcEj4piF/MQe8Tcly
d/JQgdJNkwGFdA6oWLVP73dRgYyWvo/ngzmAze/vaOspFbho1rf9VpkDVEWi
VndqqoCy10vN5qc74UcqCuXgUIHa/J5nMQ3sUJw+kH30kTLIx8ShgjJ22F9h
EXKzSBkKPYy66ZnskOwjYfghVxlSD/WMblxih3h/o9LbqcoQ2Ny97qnODm5K
0w0mEcpw5F2XotlzNqhyzM5kPakMlXydVcJNrGAUwsnmuEMZLKl8xpOPWOFP
U1EOz5YSrD90mC7NYoWsfuKFnnXsvXj0x271EFbIf1d73/KrEnQHS4Y5kFlh
7Gy5S+OoEky+D9XPK2OBH57fzo5VKgFf8cF3cunMUNnnvLnbVQlqV0MDf0Qz
g74hzfqBkxLYUjq5XgQyQ9/E5uIhByW4P+ZAOWHBDOWzSgXnTiqBHGd8oS8X
M3iwfVbfpasEun6ffWqvMsHEf++2dCSVIFA9k0nblxG85DwyGT8pQmqq+Lg1
lRFmnzO/MfugCLXf7tX6nmAEEeV6u/y3irCen++at58RtFVfydoMKUII5+Mu
5vkdsPVi0epfmyJEjDcnvHTaAe4CSzb6pYoQG/FZwM6SAYxOCIhG0xShdMzt
q78OA5y72HfVz18Reo58aY8/xAAaRIXbzj6KwDG3FPSCmwGavRxvWLgrglju
t0pK+j96+GCCkbuDIhB0BFVf3dimM5+WK/bWVwT162cM5z236KXK6fJWYpi8
jctF1ONb9GitIy9XhBXB1juH8c3+LTpDBu9W8m5FCDr59kXL1z/0Na93O8d5
FaFK6uThbJ8/9ObEm/E5bIpAbD4mZhqwSSdm9nS1/ySD4K8DX2subdAfCdt6
5w6TocDTxEjOfoN+k19VqmyIDEcmPIsfqG/QRa8m8NcPkMG8o8Tp5p9fdPPp
ody3fWRISJF643b5Fx33qF/UoIMMjId2N4tGrdOLVIaONNSTYdl9K+lK7Bo9
NqKbPJdNhuGKw7ymbmv0wAT7s4ezyNC45pa85+gaveFrwZ+IDDJERw4mN/z7
QT/n8C5tXxoZxDKKb/8I/kHnsjrFHnaLDEe7zFPOu67SA77K8Q9FkUF2V4yA
st4q/aVL0uvjkWTgPvk8hVlqld4Vd+BDdwQZ3k4QUvPGv9MT49629IWRwWd9
M/X9ye/0iErd+3+CyJBBKEo3012hF9z6umvNkwyXvd4J7ZVcoXe9bLyU50GG
Dpd9Cm//LNPF1V7xWrqTwT50TUEgcJl+5GhUwwtXMlwvu3/ohvM3ukVYSOtT
JzK8Y/tB9tX+St9yU5bQsyFDYYqjItfmIr34rNA5nDUZfPd1K5bVLdI5ePUb
mE+RgVnlntK0/CL9s7DFjSFLMii4GajYiC/QhfSCr9wxJcO19mx1ysYcnWdH
rHH+MTLM96uluD6bo3egjfAWfTKYvh1dTAiZo+89q46mj2L++iZwb2xjll43
ZhaooEeGKuHEf/6/Z+iGxyJdpilk+OAZ3l64OU2viVHY065GBt0gMYmXjdP0
EH2FFjaMS688C/oeOk2/WPl68oQqGWipazLaf6bopx5N3PykTAaOZu+40T+f
6K9O5CbJKGL+xDXmCG5+pL++K/5U5iAZ1FTWTziHfqRXXXvRflsBs8/kyL/y
zQl6VA3l6L8DZMgOeuhs8OcDXZ7lRfoneTJ0d2fJhG69p6+EKYe2yZEh5cPI
aGf4e3r1nRQ2XYypq/xxAn/f0VvV/BnbZMnwUzxh8fHft3TmM5e1+0hkwPmG
VX3cHqWb8l2DPzJkWLr21Fn+yih9tO7Ww5sYP8v4wX/p3widW6XhrxTGZq1e
QfwMI/QnP9U+WBDIEL7bQV1/xzBdyDfVvx9PBgO5jMXbUa/ppsw6aYEY81OG
cyZ2vKYntz6UEMe4zN3k30XGIfqZyWh7fxwZRp5rtj9kGqAHPv5LU5ciw55L
LhOrXP/Rd0Yc4V+TJENi6HHFZP5+emP/no1KjL0uS0z2SvTRcZd25Chg/C6C
Vdkd/5JenfHD9vs+MhhHLiewyPbSd7XFO9RjLHetRQUpdtPH2+4qGWCcFf3w
5ge1LjrJiYVDAGOOmJTpUEonffUOG/7TXjIsxLom1Rm306sMGiSjMbaPN52x
NG+jX05yYrbDuDdBRWPlVCs95HeC3CGMy27tnJNzBvpjOlVzRgKrd8mZS8mv
mulNn/7KtGHMj39KeDn2gl5RzWtZgPEqIW6Q5XMj3YtfoOk6xoOk05fR8jP6
5GzkeU+Mq/YfkA3brKf/5hsxt8A4WeHfcB1LHb0g+FaIOsZ+hwcjV3hr6L2/
CBMEjM0VC+T376mm24WIRAlgfMZnoeqlaQVd+/0nJyaM99Juseu4PqS7Mm2H
/9xDholLR5zqw4rpDa/nh79gfO/KyNP9d/LppIN73Scxfsbxc6+uxT16zoao
8luMVYS0+uUj0ujMArbawxh76XH8UbBOoBs5W0UOYjxQq1jD7nSRbt8Z/2cA
42HaY+0j1WcoB+6kx/1v/d5F/S/mOdco5wtwS/9bN6+y79DKu03pXC6OG8J4
sJBf6CQtkyIsUHJmBOMyE1dybcEDinxZse84xgvHWt5r3yykDJ2QbfyMsZyO
RHRPcCnlbc4TyvL/9NG4JG/l9JjCf6STYQvjkSxPz2XpKopx2dxfDsz+9bsZ
zbWiTygW97NU9mAslNbJH8pdS1l/7FJxEGOVO2tuFKZ6yk7/Nhd9jG2TcM+Z
N55S7GLQKUeMQxLNeXq/NlDqYx1jLmL8LObxU6uRJspg2/XiJxiPXXvHKfaS
TlFQzEh/jXE4Yq5a/giUYQa7rnWM72kdYa4bbqWo7137qofli4KmUYXwf22U
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
4NYAvQ==
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
go9drsehZJ0u67aXSbAYSfKfBhy6lSa1bkROhqeqbt8/PMXm3wgOo4bJULRe
6f6+D4eYPsnvzJ1PBhNfmfMjgzj0PmgP863sZKg/L2fVM4VDrE/uttItJEOK
uM/g4y84xKLPKZW6nQznJuuMqHPY+LIqhEtcKcBtc/ho6zIOcarKSL9QSYFg
AwWlKho8elj0Ms4wKgV+6JYXZzPgEb+jwPSbKyngqinIHsGER1PqXdefFqXA
6UM0c4YceHQ2PmbhaWsKjEgHWCnw4JE7X6/7UHcKmEh9BWF+PMrk6OVVeZ0C
iPfltW9ieNQfY/50z3wKPGSnMI5K4ZG2GEudz68UIO954N9JxKMwv4kC/L8U
qKbDfyyTwSMpljO/SIypQNgqMMw4iEffonFKIWypcGuNuTWEjEfR55+P7OVN
Bf4fF3EOynh0Sf+r7oJwKmTPLWceV8ej2m72jT1SqcAyff7fIQoe3fH44ORO
SoWE96NuArp4xDIwT7vnQCpsj+iP0h7Do8L4Z+jzoVQIedWhs2CARxvC+wrW
yamw3Huw7rUJHg3KXQhDSqng3lUs1G6BR6+MTOw6lVPh88N9ySUn8Ogms0ej
l0oq2DUmr14+hUeLf83XDTGP1vx1CLTHo2mD7dvTMqlgWu7db3cOW78+2+mr
e1Oh7/Yn1aPOeFQVZ+cR9T0F2nN6uXi98WjoXKDqYk0K3A7LedpyEY+Et0eV
mqRSQCCA8fDtWDw6tylicnonGbI9w24kX8IjXBWO0/xdMlw6ezb45BU8Mps6
fFQ9PRncj8qQ/hbhEV1/Jkfo9yRQ4HxyWasD628kJZ0mNxGeVaxYdG9i6926
v9GSHg8bvXTtdDt4pCHfvafAJh4Is1gwoScgeDEeqiYeD3F48q+HLARUWIkL
mK6PA43igJx6YQLiSDg2qzMYC/WFq8OFWgS0ZHbxaBlLDHx4yKDxVoeAjEjR
3/TKomHvO55S3mMENOIqLuKuGA3u/IqBWaYExLCPZs7CKgpweUE8SQ4EdJMG
b9CTFwlX09et/OMI6PWZtINrB8Ogp4bxUV0iAT0Vlvsi2xMKay958d9SCeh6
ElPIgTOhgFsiXNmfQUApZw7M06yFYPWP8ppLDgH1nKlVv38lBGL2Hztzt4CA
rI7d8DlODIE6fZvu6UICUnvLkjjYFQwfXF0OiN8moEXuwTvgHQysySF5Z0oJ
qDeueFJWPRjUypP+Xa8goHc65pn5TMHg1lPgNF5NQJNv7Fc2R4Ogh6FV0bKJ
gFYibpdVBAdBTOzGm+M9BFT2h35bvysQam8zaSU+J6C98T9OqucHwiSVv+zJ
KwJK/mYszekZCGrbKsFaYwS06unFcFYwEFbDw3gV5rD+9C6+U4wNAMnrKVF+
SwT0mFmP5p9dAJi3Xftau0xAzx7lnclWDYDa323N0n8IqGFj+Lbwmj+4Bm6e
EGMmIv1fnKGOQf5QczpJmoeNiLQa7Tv1T/rDig7PFhMXEWme2XR4rekPEZxy
d1YEiEjDu/dBO5M/pNc6LnZLE9HfdhuTurt+MJz3/dHDA0R04NtDjdPpfsB/
MSKz7jARCfJQg/NC/KDYME/xmioRbelbdt8z9IOmub5oT30ien7JIFt80xc2
B6wtHI2JqCXXqmTnqy9otUzjTpgTEU+5+Y9TI77Qd2nrGeUkEb2b6D94sd4X
JiQP8XC7EVF5hxf/YW9fkGB+9HW3FxH189b1PLD3Beef+m1bvkS0N07x1k1T
X/hBPW//NZSImrIf9tyT9wW6MwUVbcnYfK6muLdt+sCxI7iI2jQiaugsXJ/6
5ANpMveNSzKJ6J/ERFPrMx/Yt/l8Je0qEW3Xqj5yLvQBUsG2hkMFEbnplIVr
6fmAV9RldutqIrrU6CrjJu8DD5z4p/XriSg7+t83MTEfUFeQTyK3EpGq3HKB
2KY3mAw5DTH2EZGLsQrzfJM35LSulPx9QUTTX1+MrN31hvFb0cHLA0RUt/om
wz3fGxy9rwm9GyOiH+G3esJCvSGQpd+pZpaIXmTpPa5H3lB4VGHTcjcJnZsd
M7wy6QVVNTYFnSwklPz2/avSQS9o3RehIM1BQtcieHCfn3jB6EyX9zY/CemQ
NqXaq7yAI9H0c8V+EoKsgCxSmBeIffeP4T5IQqx+fx71eHqB3Il8kSgyCS3f
dwg/6eAFhoRJG0sNErK/Xxmre8wLEnvcX/4zJqFKHrrpMG4vyJNLd3O1IKFS
b5+7rIxeUJp/n3H4BAnNvXdvdtzwhC7nDVRxloRI+tO3VCc8YYsxscnCj4Sc
Juoqlm95AotPpcWjIBIq0HJfnsnwBMGxlz+I4ST0xOmsrke0JyiXc+//F4f1
d3pwnvWMJ/gfu3OzPJeEVKwrzbY4PSG27qk61zUS2m/My/z4nwdk8s2NR94g
od5297SZOQ+omZXjtigjoSnr289lH3lAh6lFfUcVCXXXLK3plnnA85YgY2Id
Ccm/We+7le4Bc0kdSVstJOS6KHiU9YwH/P7xEefSQUJ3GG+f4dD1AEZb+sdD
QELKBm1bFJIHSJEMtsqekZBNSVQN07I72PeN+Zq/x9pZDv/MCHQHr0N/93Z8
JCE0Rj6BLN0h8qroPcIX7PqLITvzh9zhmqvTzN8lEsqoL/jHPu8GI0y/TpZt
k9C8OD+sG7rBZ1/e3xz00shIZtu+S8INVsZVcyN2SyOvrqEdi3VXYK+MeWXG
IY365/kIDwpdQZSz1KOdRxr5VKwJBni6gmxYLxNBQBo1GhYsf1J3BfVPC3cz
RaTRQ7cH9ht7XOH//2+Inl7dEq4fdYH/AQjIrrQ=
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9zPCWsD/jsa+
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172407#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Cross-Kerr\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.738064594111*^9},
 CellLabel->
  "Out[635]=",ExpressionUUID->"6ebc1aad-5084-48ce-bf2e-c92229ea2b83"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtmnk01N//x+3GvpNlZt5jHUuyZc9cKdlCSCpEZalsRRTJUh9UiqJCaUGK
VJQtYl4l+76rKGVX9iVZf+/vOb9/Zs7jvM/c+3w9X8u9c2Yox/3tPJgYGBiW
8Zf/vVuY85qsURTh/R3J6CPdCBkUXZolkBQh0ENkZRJnFcrvdFEJRYA48yDL
HoSINw9byooqQtxFc51LOPP+q11RF1SEt4XZUeE4b53UzqbxKoJcyXySDc6z
bVn2+zkVoW6j8vU8vt6goRDjUTZFuMKaLuiFc/uLqNfeTIpgZElieNWF0Cfh
2aPBm1T4YdlV8rkTobeRrhxXV6mw/6pt6OsOhDL/NBXfXqbCubOycafbEUp2
Mjj5eJ4KGok/Kf9aEfrvc47Aq2kqhLiIxx1pQShYbRu9bJIKVEeXtVtNCHk9
jPGpG6WC0l+jD/caEHIiLIn3/KKCd4UN17k6hMyDTtQOfadCjRxFkVKDkP5g
e9DcVypsf7XHMasKIanS163cnVQo5K4bVKhEiEeWGC7RSoWn3y3o1HKENhNu
KFEbqbCzyuPNZgker5f3fyZVVJgqyalRKsDj7ezROECnwuDHJb+oV3i8tL2D
ruVUEO0gK7/OQShLTNog9B0VJlfsf15/iuut/Tabn0mFaA75g04JuF5Ni0eV
j3F/pi3zPK8jZPa41LLpARXef/wmuf8/hJRC7maPJVHhukyEaWYoQtPyNs6k
q1T4Fln5JewEQj/uVHCoRFIhNIzIYueCUNumconeJSp0WJyzZDqE+91DEDwY
RAWroyaa8+a4fzGfam+cpELBH58QUVVcz7za+VQ33C/tk6mf5XE9ro+lnztT
QchwoN+ajPulfSn8kwMVhvzSGlb4ENoY2an5bw8VfHQcM+x+0NDVvTmPPOWo
QHs/InTmAA3BjVBbMoUKsoVx56cNaWi93ZKpT4oKzj6/+BSoNBToOu1hLkyF
h57DkWUbRuh4iOZ2FWYqZNIt7C89M0K0nIryuUEFWPjz6+3a2C60yt3Rd+mh
AhRdtlU4tcsQadtnXt+ZogC/mix8OjBDdC41yHA6SQFOeVmHsbIYogk5sSfH
bijAic4H1xrrDVCfkbPX7lAF2P85xHPCzgAVB4wusTspAGXhvMT6UX10tmtV
MElIASpb0nZu7NdF9+xsjiTzKYBK0Z1T0qq66ENb5tO7XApQXcNHU+LVRWzN
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
+Hr//3969ES/vvp//6f/P5tvQJo=
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mCCliIrSz1ItexD6/+8BUQl7ZEyqK0L/B3A+b8Y=
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
u1ThcX7FBP7//5vI5llqysMEE/gfzHT1YA==
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt23c8le/7AHAhjr335iwjSVbIue2VrUjGSVFJZCSjZKVQMiOjhFApygw5
VzJbiKwkUVklyQrxfT6/1+8vr/fLc+7nuse57uv648h4+tt70dPR0Z1joKP7
76+FOafhhow8lJrq1ku4I9CpubCAk5QHzoLzT18HIlCSmcsXFJUHj9dG1Zvx
CDj/dqzt4ZUHr6XeY78fIegti358kl4eShi8rpxcQdDCv3AkZIsMy96j7wOY
9eFplDtL3DoZYm2ptjzC+pDhrHP8ziIZfnG9DhHX0gdn3LLIwAQZ2qqGL5cE
6YN58LGOyTEyXG7yDCmO1gft8d7g3yNk6N0KfGl5Qx/E6x93s/eRoSbBG1dw
Xx/GT5y8bPiSDOZKpvaFI/rQ2zegakcjA+O5Oh3l7/rQQjEed28kQ+4D+fKQ
3/pQLCSrE15FBlYNuzoTZgM40fFxobIIi0/fJYmoYgDOey1uN98hw4vjV14M
7zMAszv1lm9yybCbvOe+q6EBKJzPLJlKJ4P2jKbsx4MGME+0cZWMI0NtB637
X6gBhMS3dCQdJ4NiOr558Rk2/qLKuVtUMrDpHEiAF9j47ndkS13J0DTzzSWu
ywC0NS5cbHEkg0ZNecnqkAH8+6a+968RGZRD1Ze7Vw0gzvj+bW8CGZgt7/BR
NQ0BksJtpWQwK917fxQZwmavJf2QOBnUD9vIXjY3hCD3eS9zfjJw+Hrd13U1
BM/ze3cpMZDhCMWnuzXWEG4/Z/z8dYsE56yOXyMnG8Iww0BK/joJSm3Kjduz
DcE2JXSJc5EE+owbE42PDYFy/3nj73ESMK0f1//2yRDCfyWfeTBKgqvBBYf9
Zg2hVp0qdWyIBLikvmHzVUNQbqGP7e8mwYbHsikjrxGIfzS1qGsmgd+5vw6j
lkbgLCOy6d9AgoLcl3jrI0aQcWL2EbmWBI07d3cpnDYCtqVrPDmPSFAW1tyi
cs0I1tnfD13II8Hqw9TfrX1GoOFQlKieTQLyc82hie9GEHgrWHc+nQRKDeSt
2HUjmCEIFXgkkeC+Jex3lTOGIT3XEwbhJGDPzmJsiDAG/su7RDbOkSCxz9vd
NN0YbF9vvaoKIEFrocKxsw+NocPprjLhFAl8e44X3f1kDLVnvy8zO5OAX+3c
+QFzE1isrSsFB+x9ww13b3qbgPK/q4fDbEgw++z2BGucCdxLUHw+a0KCg/SC
Y2IvTCCj8GzcW3UShIdnqKkbmULPtL5G/B4ShHbmX5vzNgW23XzTertIwLk+
7+2XaAoxjTWWlXgSDH3cP/StzxQC+td50/lIUO7lQfx91gxu2tu4ZHCRQMbX
Z2dulhk09RTdzWQjwZnO3TbsNDNgentAJZuBBHTZmXw23OaQ13bbKv8PEXJJ
MUs5TebQYvgn4/YvIiwF8De3zZjD1AvT0TtzRGjXfdb3WsgCVJsXfAonifDz
5Pe+oBAL6Kw1uFraR4QjlbFNoXqWMK+W1V3WTQRcunvEy0BL4KuaE3zwmghN
0sUn/pVagntFxr3yl0SwsBd7ZiZwAGJ3zfx4RCPCB7oiQQ+rA1D2cL9aRSMR
Cvz10/ziD8Cf0u8tT6qIoFzk1x+zcQCEiTqsVRVEKAp0SL+maQV6xTfsqh8S
4YbQBvVWsBUck/2aXVNKBM+slGcPn1rB1QKt8doiInis6om0/7aCx5LXSfV3
iNChu2dzdo819OV98XuWS4Sv4gHnqm5Zw5qoRm1DFhGk27TyB3hsQPJW4r/G
dCJwSjx/v5xoA0ZCn42e3yAC8Z2idyy9LZzK3HutOYkIBp9UCrYptlCdOir6
IpYIjc6Z9XpNtmCeqKzVHkQEZ+vyINNndhAc8T6wx4EIoZEaI/QvHOCVm+j0
Vz4i7DIduys16QQ2d3Qp61xEyNHc1+kh5wz94+43udix+H7Icwccc4ZPx4qM
tBmx+MrO3P0z4QwLp5Tu3lgigJD/N57fY4dBKETPRfsDASIr35250X4E8uqo
T2x6CXBE8Tgub4crSP+NwXm9JYB2EJ+mkq4rKFzoqL3RRoDG09SfLytcQS/G
lu9bDQFOcooxmae4wfFkzzc3bhJgKMlS0VfVA2a64+TupRHgNq+rp+8xD/Dj
KQ1vSCbAWT/WgsJ0DzifMUf+Fk8As9Ivr/N/e8DmB46o9RgCFMbsiivnokKU
kMog1yUC7M5nCRYjUiExJ/iy9nkCDGcu3CyyowLX6M1RmyAs/mq533XeVMiQ
eLbXy58Aj2kmcw4RVBD2+JgYfpoAlYM/hc/doEJ+wb8vN04Q4Jn4Iw6RIirI
Tkjtu3eMADwVwm77a6lQImeQ0uBBgI3HrTmfO6mg6HV8qvsIAbwYY2PxA1So
LInX++ZEAE32tVocZvXpssx1BwKwHG6pOfmBCg3yr39w2RIgRMRSzKSfCnqn
fxoSDhBA/MJGTOF7Krws58rVNiNAdoXu1Us9VDCb37NoY0SAyxPn28feUuHN
bkdzL0SAKEPB4RevqGAXEFIQrksA8o7oIwodVBh4mr16QwvbPwuZGZGXVDiy
1GB9T40AsweoEmnNVBhX/3SvQYUAFK3S9IxnVPA6v73ZrUSAp9oeU7LVVJit
l3H8RibAWMzvKr3HVPBfN3y4jieAJ6UjY6aUCks63vTcMgQYuW1OINylwr/m
B5XaIgTg3/G3xTENi29kN/sGPwG+xTKPZidQIW+l+kQjNwFiji49PRpFBV1l
mqQujgAv21beJfhSgd3CKHyTgQANwg7KP49S4aNX14embTzIeohFfTpEhfD8
vmv7V/Gw6H5x9xkKFSyeOU//W8RDxVe3Uu69VBD58MmweR4PcSuaJubY/tez
T6/rfccD2cl7VwwbFVYiNk+iD3gYCBCUyy70gPas6Fa6Xjzszlb2LI71gMwq
JukXb/BwaN/ZFxvY+VOb4x7Ub8VDpESSeZ6sBwS5EIwNq/Dg2v7JQyjbHRa0
rGVMUvFAOzZTeO2EG4Bj3wWm63hY2OpU16S4wY2zzkPtV/GwZ0Tvup+gGyiX
ed4wjcKDcwzuT/pLVzgjdP6fmT8ebBd7w5REXGF2+c6wpRUePERVAhVrXKCB
h6DObo6HtMiiO8lXXCBh14OUN0Z4EJgW0YDDLkD2qja10sVD4qYC851/h8G7
v7PGWhEPqnF5Is2Gh2Hy6e9UOxY81IcwJLIzOkMe03qMy048PPg4rxr21QkO
udAHH9uBByuGvInJVifo3MF36NxfOTg5tNeg5rITPLZVE701IwdvLOVCDjI7
Qeh8SOF4lxxoTlrbrLIeAnaFzaf+iXJwTsP4mYSQI7RdZCwOjZeDjV8l8fvW
HCCylz0zOkYObh+51uA57AC/QyXOp4fLgeqVEf3PuQ4w0KGnU+cjB7/GrQyS
ZRzgrlf0yy0LOZBQHCvbrWIPGneZ+q+zyUFbBM/2qJstaHcHdOkzy0Fgktea
BpYP9f6NNi/Ty8H6L/mup9K2YHK46r7buixk+bq34zttwImHemnXjCw8c6tX
2TlsDaHRzxTetsvC2q1TvL3SVvDsqG80e4wsTK8TxP/xWkDzjcEQuCgLx6zo
Ocu/YvfVcwPf4DBZ2GMwp1hSaw6vREScRs/KQmAXmgg/Yg4jvW1K5R6yEHMg
cfl2mRms60sNWe6XBX9+odwsW1PQlX2vnLQmA1ZkIabwD0ZQwMem5rAkA1Ja
f380VhoBw06jfWILMsDMamGuh9Ubr6ZqDB9OyUAxjHgzGGH1yqNbzq8HZKCB
S+nQ1VpDCNY6GsNWIwOtcwosJqUGMCSfc6WvUgYSeTjeB8QbgI5Y37XcchnY
oTgjO+JlAPRbRlmKxTKQsFP1qAfBAFJeksst02WAoy0qK6ZUH8qtFz4kBcjA
2v7kNGo9Am4k/9HhjAykWa8HXchFELTHc1zslAxwb+js7olEoM3fP/uQKgM/
Oq3nJEwQdA7Xbb+2wZ6n7GFMf0yBr8cvybMry8DEr/ERVWY9EI/gvHhtVhp2
xmTeb2LQgVPFr4Tyv0vDorJQ7pNhbah9G//00YQ01Np3/F6u0AY76e2pdyPS
cN/KvcHHTRvi237Z87yWBtl9ggorjfuwur2XfPOhNMiTSDzSV7SgpTi9/46v
NAh6ZZ0St9cArnc2/pUnpSFLeoK0qaIBrqtsrC+OS8NEV02ZKLcGrJrHUSZc
paFZregTT7c6KP0KfoC3kgbhpSiNdSt1yNx3KOr+Lml41d1vwOSoBj15e5y9
P0nBtC7pJj5RFeiK/W9+6peCqlMvZlnOqILKw0f9jm+kYNW6KkHRVhVSnsnb
GTZKwdCOllUZIVWwHZCxkL4lBfH6l990l+6BHi5e3RFHKWj/ESzc26cCdEK2
4XYHpEBoR2OGWYMKqEgm13caSkFu19Sd5QIVSFFiVa9TlYJdGiLV834qYGtO
r5zBLQXrNR/Y7DhUoCdmUcr6jSR8I3MGLJQoA12iinvbS0mYzOq1UApXBpVU
vzzdRklo9o563WalDCl3ZoUVH2D/vzt1jHNlF9g2TfDgrkoC3XYPdcxiF/Qs
v2doMcTGG33K+pxRCbpPVk2pN0rA5vmQSf1CeXj/edVWr0oCHtY/9KqMkoeB
Q7oNJg8loDZtNdfNQx5GjdquOeVKQBnOqSBQQh5mpQf3hEVIgGBNz8kLeVhf
NLwe0aQjAU8Hr/17dg+r220p31r3SkD4xULt71dIwNYRa/1WUQLoMsZELH1I
wFvDLjMmJgHKLNbaz3eTQCpVsn17QxyW3tw7pvWcCNrmBtyGTeKwEi3opj5B
AD2ID7OsFodjDKwazR0E0Nd8PeFQLg6rb/beCXuE1Q0Ex5rjeeIQofw4Pz6M
AAd3eLvEXxCHwcnhh/N8WJ3xLKG4S1ccaj/P8hTa4aFEvlfL9rkYjB/+ojj/
UxZOkp68iKoRAwbybOm5YVlQIKRaPHkkBudvz/HKtsnCY2k7V97bYnC2sIVZ
O08W6oR6L/VHisHFz9/2XrOQhc6dve3OSAyWdiz8oj2SgbkvPY5HX4rCp4ee
yWzXpeHx58pPqY2i8Ie9o4H9gjSc/ZTi3VIlCjtjRR2VTkvD0pBtqFyxKJw1
V8a1m0vDZndP7rc4UfCP9OZ2x0kDZ3PPxCkTUWBmYJ6eFZAClZyes4FdIjDm
fkmvx0wCrh4Iof8LIvDqyPZZT2ydx7fEMi7Vi8Dml/raXZwScOPYibprpSKg
0X0n9ky/OMwrbf0ruSwCZtyVh+OOiUM5TTHpoz5mk4AHBUligBVj94wahMH7
4NtA4RURiMpS0nz9RBh21HrF8o2JwJD5+067+8JwwOjpJ+12EbjyWOKHe7Yw
tr9fXTmyROD7+WrVsBBhsCwRZGzQFoFi1gnaI1VhCO9anl5OEAYZlf0jgg+F
oL+wq0TIRAgO2M/cVC4SAm9oczuiJgShwZkOJrlCMPtldHezrBC8q//55lyS
EHh5HjYZ3xaEcP3btP7TQtBVfV4upVEQ+u23i9OUhKAlovzDGS1BiD/3wp/z
sSDwh3B8yDERgCdZZ5SIJYJwRpJz9qCWAIw+E5nZf1sQ7hzzjMcrCIDqVoDn
mWRB+IWrP7afQwA+x8sefOMnCMWJk3aJ/fyglR2rnbhbEETjHwydO8EPsw3G
O5meCICRTkBQQz4fPEytexVUJgAW7h3k3hQ+8D0pn/LljgAI6Jpd347lg58C
HGLPk7HnZTvaCn34YOFsv0qwrwCYBhQXbmnxwQrxmOsESQCuf9wbMTPMC/Tp
UVXNt/khcf6I7HlFXnh5ajFU6SY/KNxP26spwwtx6LheznV+4P/9kYFViBd2
zpt2nbvAD8JyRYZT9LyAM+f6rOTCD3zT8z8jPvIA53Y+a64AP3gcqJhuucED
Yqcbj56/xgengwt0V+h4IKez04Qjjg9uHCoOq17jBlHigGJRBB9wu0sSoxcw
f1lYfofFTRfNE2o8zg3CTsREojkfPEjVfXAeuIHfMPXph518EFY7c8s/lhvY
xU4wqF3iheaeZi1hPm64Fho83RXCC+7PvXER7NzANhD91sOPF/TnT+XN7OQG
1tS8rCQ3XnCN3h/a95sLcMzvFSd1eMHDRIBlqpkLdv7RdUxb4wFrP3chdTcu
2HrFe28hgAf0Mh9P85dxgl02sUbIhwdEWGKjfudzQrGXdpueJw/A9Q39sXRO
sKDz/HbNngeC228uTF3ihJvqTwjye3nAb7z05TNnTthVYFNydIkbqjhbw405
OMH13LXS9yHc4Mvv8dcvmgMqDArq/vpxQ/euplPyYRxAz13dIX2CG7Yoj8J+
n+WAsgcfp/ycuOGFJQvpAZUDlj4rkNm0uGFwbiSyEXGAYGaa3ZVFLjAqCXI9
wMABQRR2x1OrnMDXupybncoORoa0y8e+c8LwZc4k60R2EDQNrHP7wAlB94Vi
eGLZod56SNS+ihNEf1pJNwezw6Zb8Rdtf074bZJsWuHMDnEXdP3Zpzjg1vaD
YhNZdrj5zDexYoAdTrfSBw03scGJ51JN99vY4RE5SWy8lg20Xrz/WVTNDjlN
216/K9lgpFPLLjuNHUDFqnDvPTaQHGIUjrZmB5nzgwzqyWxQupJ3z76dDfIm
c9okPNmgfu9bWK5hhcyQk2KiPGygInTdjLeEFSKl/70oZWeDsvUDPco3WYFf
i3NdF8cG2S/efD4Rwgp0cj/nLm6zwnmbN1vDGqywwJoW5DzPChqnX+s217HA
nI7I+vG3rFBd2FUf/wwHViL4F39vsIJSfAIquo+DoYOxoQeusULxKfNO2i0c
fH0wY3vvKitkqHQNroXhYA3XYXwqmhWCmjtXfLRxcC6y2HtfECuojnSo2TQy
w+itmcY/TqxQwdNeKfScCRTmbvrmEFjB3p3HYvwhE8iZVC16yrLCygPXybIc
JnDfWojfI8UKukZ/BLRDmeAEt8vTcWFW6AyRjnDdywRHLt2ji2dnhfGP4cZ3
7++EC480hyeXWICnZPeIwk1GkDi77lPaxQLVi+FBf+IYwVb1S5ZkBws4U9rZ
m4IYQb5APSunlQVuD7lSrOwYIR335FsBjQUU2BKL/dkZITT1hs9wDQsYnP3q
Vx3DAN1vLpu8KmSBIO1bDHr+9DAw8FB85hILZGSIjR5yp4er152zpi5i75vP
r/a3oofc1TczMxEssFJY6HVXkR4803O2/55ngVC28g7G6R3QU1pmZ3qWBSJH
m5NeU3eAuGZySepRLB4N/eNfbXaAc6jt5isPFqClvNT9p7cDJmV5epjdWYDO
uPOnssQOcDsq9jHJhQViH/XapA3TgbnB3okmBxa4GvmV77A9HUzG+71+bsIC
ZUPePwL06SDgyRMPJWMW6FKdaU1UoQPtDXnh24YswDr181wTJx2s3DL9nIhY
QPTOfAXl5jYtvEVQPkGbBQj6/Fpvr2zRcp/St/DtZgHtyx5m0z6btFHTB63d
Ith4axfvuVtu0tTZdUbvCWPr65tH/0Fxk8awu0k5UogFzjkMN734sUF7del8
mLoAC1TKOOzJ9dugZY/KOzdzswCp2UTUOnCdtr26760GjgVq93idb7Vfp+U/
3zLZzcwCRvdi+7X3rtMmChy65ZlYwPMaJJOW/tKUKzPpCIzYerloM+wI+Uvz
jnqftZeOBfhXd/2oClujSbjOKVas4aDI54C5gssajSw4rt+xigPVMZ+SAu01
GscjRu0vKziwbSulXt9YpakcbWsTXcZBUrrMB++Lq7TzARf+Ff3GAb2KQLNI
9Aqts+RiFPscDn6d3Lxx6eoSLZO10kf2Mw76H+/htvZeolEe4VI9x3DQsOSd
Im60RCszz7pc/AkHcVG9Kc+2/9Dix9SKyaM4EM0uSf0T8odWOyherTGMA6MO
2/QTXos0et7ktXt9OJDniOfTMFykrRknJmy8xwGnQ2M6o8wibdB5T6c95uEx
Qsbd0d80jQU7U6ZeHPitrGd8dPhNG667JRr9DgfZhHs3bQwWaPn7FWJbu3Bw
8fSIoKT0Ao3qcFpIDXObp5Ty8MYv2uPc27r3OnHgEr6kzBf0izaQ/Uj1WgcO
Lt+/rXLl6DztsZBCrm8bDkaY/+z11/tBO9MQ+/rcCxwUp7upsa/P0Xb9iMz6
Bzjwl+pUu18zRxMrrhqMx8yoma8+qTRH843IfZRPw4Gyt6mmk9gsTTtH5uLo
cxzEtuZqU9amaOcV54XzG3Aw/W5fulf9FG1P0p8WfczWw4NzSaFTtAtJcdlT
WB4SnefLH1r7TjNxCgANzJVC17YD/n6jaUdeH5mow8EnnwutxeuTNKmAmBm/
GhwYnBOVeN0wSXsozlgkg7nsUv253+GTNKEQ8cAP1TgIzlgi6m1M0Gw2N6wR
ZtZm34TBjS+0lJEvS7JV2HrKNuTxr3+mVdPduyD2BAf7NFesjoZ/pi0oC9h9
rsTmd0B1+9H6GI1PtUO1GHPuuQdHTTc+0XqiPortwdzZmUMM3/xI82tVCXGq
wEH6p4HB9gsfabskxUrkMLsv8ibw/RuhHRoX/7zwGAfLYklz5f+GaQ9O2Pkk
Y5b1j6j8vDVIK2SaHfjwCAc/Y+uOKl0apNGRN9ADzPXZf3jDtgdoVsZ/Ky5h
tmk5fY6XboAWsL80ZxfmCwKu2sY7+mlqZeoZmeU4MFXInkuN7qNZ7xIVCsTM
S+nPG9vRRxvRf5Fjg/n+yQPb5+nf03BYN8KBeaBRt/UBQw8NlxhalPkQB+Jh
nmOL7N204sGue+GYr4VbqqXwvqMxc0zmUDGfvigx/kriDe1xW8iR3ZhHIpk0
Tsq9pmnzrxCEMVtE/UraKf+KJv7F5MsOzAqxLzSRWict4Jo3eegBDnLiHlz/
tK+DpqChXdWKmTU+fTKc0k7rWppWeoo5/MqFfcLGbbSFXcsZBZhnr3rdqLFo
pRmZfpm9gdkl0fqbve1L2smS3cpRmF8laeosHGyh0T3xdA/AfD+ZZUrhKNDE
PKJiD2FWlf4WlvK2mfb9rf95C8y8cnWE10NNtJpIq0MUzIuEhN6dXxtoCoO5
UuqYe8lHLqJf9bRZ3U/vFTFXKu6Sj1ivpd0SyPCXw5yivN1fs7OGNtJusCyG
+eye3qgF7iqaXe3pYwKYbdWKlBTFn9CKzFOfcWH28JutfG39mBb4XX2VFbNk
cDJO3+sB7djiRzFmzGNhqtTaiBKaaN9OEiPm/EsDdYpphbR98+rC9JjrWZcl
Dezyad735+fpMGsK7n+nFJlJM/J5+uA/nzZk3VA+lEQLuclguQNzT7VaFY56
nnY3/Xj3f5/vDy7XU33iQVlWkVL9v/HPG8/Y5sVS1gaSzjH8F2+lS9v+u6kU
vH5N3n/uLeYVdAi+RRmk4Mr+e/7+Aa+91UUFFP+i31lM/+2HyYuPeteLKea6
Y74smBX0JeK6QsoorSPaJI7/4tEJU3KkllP22wR38GAeyPHx+YWvpPD6rFoJ
YV7Jym6uFnlKubuh0iiBWTCznTecs5pi3n+di/Df/NKWvCkMtRSv1nDLXZid
b8g2Mq7VUQ7lHffXwBx6zZbr1Y9nlFCl+gj03/rEl9c5DjyndNba2DhhHood
YRN9TaM8tTsjdBzzBcRY+eszUIy/l3b9dz7y96sy1vS3UMb2k+b/O0/KuuaP
hbpfUgruGh/977w1a1Odw7taKTFIDZ78tz+ayeWU5naKVIC64SBmP417hwrr
OyiZRTIn5zBvqTXR7azqpBTbp4bTYeddUnXW8VXpKwr9ycendmH2UDL555j6
jrK9r/1CGmbd7JLklYJuyoWAnAuVmNljGLgPOPdQkr/vyO7GPPPz2N2fJ3op
7fq1cjzY97OwDd+qcqWP8qb9e/5dzCkb/dd2cPVTdJfjEzoxR+65fPD9zX7K
dC9P5gLmI/nfvgeVfKBYWPNxGmH5gf9cCUtd2yDlvNvqzTXM9A8Pvb9iNUTh
w0mlkrH8szDOlOv8YYiS1nu14jDmtwdOKK1/HaZcD7M+QsMcjyfb7GccpbSS
+i9mY/lsc8bx1VGZcUqQzeGTMVi+/MP4SNnCa5zCGdMy1Yp5Vmpnuur9ccrH
avEM3NP/6siaIwx7vlBc+7rPpWOueSHwsxhNUEy2PH3r/su/twa4pj2+UgRy
ryburcWBV7VycE/RV8rD3jsCcZhdu+OH6qe+UjyfsQ5/wGy5U/Nugv83inmd
N/dF7D4gB2SpKl76TqlR2BkyUo+DL2bOB/1uT1MqP5m/fN+IA71vF46+/TRN
WUoe+6HShOWf6LtnlCRmKIkfclEKZvuG2cuzuTOUv1FPfO2x+6pF8WKt961Z
yuRXVfpvzdj6cxYKeWT8oAhHj4QZtWD7/aBdrrnvB0Ul48u/GswupnO7Jfh+
UlpqbraSX2L5JUrN7GPqT8rtGCVp3lbs/vvdHup0Y56yf/CX9hJ2v6rOLv8g
GS9Q9rPLHlrF7meqFi5o8PgCpYDvT9PFVzhIjhf9Gx+3QCkuXI3c+RpbT1nK
zu8vFygfa5pERd5g8Ry5KlFs8JuCM5YetcXuf763otbSaJGSWHLrEwNWTyxV
UCqEdZYoSSprbhexeuSNog7vWbcliqHSDtDB6pWiUo1zHZeWKKzBOSsbmO3v
7NIJaV2ifH9y9lf0OA6eJIt19FktU96csQkonsT258zqWDJ1hfJDYrHFZBYH
JjOL+t9jVih3E4O48Vh9JOE1X7z/3gpl4bStD8MP7H2u33x+zKxQLh3isuv8
ieWHA30r5kGrFGt74wOnsfpqSqGCc2f8GuWQ+GMmkb/Y963kQYBr2RqlIcal
SXgdBzdlS/qrXq1RDON31YpuYO8Tzc/x5PpLmVLWjiP8w+oRliQiZP+leF9P
nTu0gwWo0956EQ/XKRO1jkuKrCwwck/S73fPJqUslNOpTgKrL5nK7csWNylI
y3c3nRQLpJ/Yp+nB/49y7PrZQktpFjgg70j31ukfpbr5jtesLAs0lyeklY39
o4Q+2GgyJbPA3aqlWo8fW5SDbWf8bfdi9Tt/TK4g5zblSFZSUaMaC7ic44p6
u3ub4jFsUyevwQK8mgrmOkHbFDWn+AzOfSwQ1+DxUXB9mzI61ta6oYf1C9Rv
299j6ZCn0fHlk5YsIMujFNiSQYe4/nW+ZbRigZQXgV/z79Eh3Nvm8SJrFjgj
S9fl2EGHKl2F387ZsQDxq2haC+sOVPw5373ImQWyT9jib6fuQEdyOtxqvVkg
wq/R7OAdesQnQElPv4z1M5Tl45wV9Ghbj6wdeQWr/7l3R3c006MnZgzWvgnY
558UPts3Ro9oYXTd9tex9VpKUJCUYEBz7XvqzDNZYDHcmX0qhwENVBrKT95j
AZ8ry92hNxmR7Eqy6mWs31J13v1jTwkjGj2CCxt5zQJ/yadwczWMaEh6ZWjv
O6w/eTWK3D4wIp+UOfo/71mghKP1iT7/TtRx4UR30SgLfElPS2dN24k+ol+v
Pyxg/UTBbqe860xIXCHPrUKcFZaYx47ev82E8Fcv7fmA9Ycp/td8ayuY0IV1
kQU6OVbo0puJ7ullQgtSRx185FlB+1NhOaMgM7p2tarxMtb3iosK0p+5zYzY
SvQ9puxY4XP6Zvn+ChwqfN5lm32dFS5sPKizABxyj3QbuZ7KCsLHDrc49eLQ
TAB3ZGImK9ZH1g4G/MGhfcuw71Y+K0CPP32JJgty4D+iu/CIFQo5Jp04gQXZ
h6trX+lmBe8rXfSfe1iRupoFvlmYDVy5Ttd1jbOiMzNRZqYSbGCXxe5bvcCK
Xu1bVB2SYQPdUpsPCdxs6NDZ/Os8imzA2/GhVM2WDRmkv6RN7meD50wTBxK7
2RDdvWdGPF5swB+/flP9HTuqyivWnX3GBqyceZbSY+yI0r9rOo7GBtuZ++nY
5tnRRFfdIrmNDWbvRZ0a5+BAr6q+O13vYQNoY9JNsuJANeNunZ1TbOC7k+/L
+BsOlJAu7i8gzA4v4xQVr73mRMGJuILVSHbQ3s4sIH7kRA+jJDfSLrPD0zA6
wReznOiNeKX2vmvsUOj3gW6FhQspJXLVldxihxjnSwMeZlyomxv1Mdewg4FS
X/TeNi7kmeDHsfSTHcZP7fc948GNvHdqytOd4gDx0sUS7RPcqMxZ75lkAAc4
fy39wuzPjUp82cotwjigx53XqTCSG6mIAsvrBA4Ahyn9wXxutOzJ3+//kAPu
7E8V0h/lRn+8/YWP/OYAd55vLfyHeVCYIIHO6ConMOb0LyUd5UG/nZ7PcqZz
wgPZViKDDw+y+l6b8COfE1b3FiX+DudBK4Rmi/EqTkg5dNT+XR4P2vDliYwb
54SXuZ++XBnnQT/IfbGVOlxAJg7QbZzgRXt6vF9t0nHDu8dtqoFneZG7HteZ
G8zccE6z5vhMKC+qUxOa3sXJDS1mGZ2DCbxILke/OVmMG46ctk+pfsiL4k9N
Wk5ocENy5Tspv1+86Dop+M+kPzf80e7Q+xLCh7qvppXPzHFDu0OlcUckH9rk
aRTP+MMN2b63DjyK50M/NaX3WW5wg97t0y5hN/nQ/giT559ZeSBxB3cITy0f
Ot5x/UuRAg/Idjo/0l/mQ4HV7pxlvjxgd3BWrDCIHy2y6IaXrPEA3q9P9moE
Pzr6Smfx/Q5eWIlvkveL5UeckUd+crLxQl59sqZ2Oj96RV86XSPBC9Niex3e
P+VHzEfwB18a8kLUREQi/SI/UuU5wbeaxgsV/hx/Pc8KoK/TMWk5enzwo09l
dTFUAIXeYvSctuADBS3H5ZhoAaRry7N+wIkPiulyfxemCaDbXYdljpzlg5xU
8uxEtQDifX4190YRH8RVGX70/CuAClTO1ERw8oPLathzzxhB9PFWq2bwKj9k
HclvXEwURFN9p09NMQlAPw2exaQLoqdjHLYhggJgc5W5trBYEG0dH7W6qS4A
RiKZjyfaBdEhOq59O4IFYLdO5R1PNiE0PkkV9FkRAMZL36M9M4TQo789buf5
hMAviOHg0TwhlJLz8qUiQQiGTkiTqcVCqFbCvH1bQwjKbV3euVULId7Z61eY
jwiBo+w70cP9QogvJN4sr1gIitpqqmz4hZHL3kAVDj1hMGC//E03QxgZMiqu
30kSgXK6wnqdPGGkLrDzVt1dERBcbk7SLhZG9fQRuJU6EZj9tLZHq1oYNaY1
Uqa/ikBahW/k3n5h1HBUyK0MicKEvaOQAr8IgvRQWte2KETfkjMXyhBBzvfr
vpLSxUGJ+d7mz1wR9P5tNOeBR+IwFEysbC0SQVV9vBp3OsRB2VZeKLBKBKUW
lnP0b4rDCNPub2/ei6AIQk1nzCkJUAvWjo7hEUWnLnc+tzwgCd+t7Z79TBZF
0r513HIS0pDa9N639aYoesp3rfzyLmnQVXCUzr0tilpLexiY9KQhbafTFbPH
omgar1NO9ZAGSpPrwaK3oijGI+VwbJE0ZMuf/O3MLobytfje3d8jA5aMl+Rb
E8TQyA11tyFvWaA+1+43ShNDnid3t3FflIWQkJXIthwxpMy6FRuULguF02f6
2x+KIaWxnBRpkIW1N66Xut6KIQ232rokETkoztT+8I5HHKnQbvX96ZeDBuuV
Szai4uimt0iU5k856GZ+qtAjK45G9gycKt+Jh/Uw+ajeveIoJX3XW0VNPNi6
Cyv2HxRHF6SpTdfz8LBJXIkaviWOPpnsu2wcQADe8SeKLoXiqMCd1aX/GgFI
t84MjDwQR2eEn77JLSOAPds3xdFGcdTS+/DYwDgByn71DYx9EkeCa476zI5E
OFj/ROmrjAT6+XeCgWZMgsfmZ4bm70ugYCaBGTgsDwtpss5jTySQz3EHt6lw
eVAdHRx8+0wCjUf9WLbMk4daP4PB8i4JJNXFxN/7WR5o6UIDPjMSaPRoS8yH
UwrQ8+lF33eyJDqHG9wQSFQEXtJ5hwEVSRTrg1Pa8VgRHM8q9bVpSaLibK93
Ku8VYZg+632xmSRKTAmUpIopwQTJt9fzpCSqDoz+xPNECf4ECHaPlUqiYKmO
44dnd4FG42vrdxWSaB3+TY3yKkMoY/S753WSSIU9v7JCRxk2b869zeuQROTB
r+3GycrA2ARvXKYkkfRLw78mmrtBkOn0qwGiFOJLMI/OOaACWjm0tnf3pNBn
fXaW5p498FW5QvfkYyl0r1dtX+ePPZD68nbVjjopFPj0bRUHiyrM/rh4V61T
CiW64/UPGKhCHkX3Ys6sFFrD73lVVKcKUYGuolVC0qj2GpFR4vFe+CY03Bvp
Ko2kFwknJl+rg+6E7fXXVGnkefjupPEvdUgr7zQT9pJGW0YsXIu8GqCnX097
ckYarbkwySsc0YBsn6xHXyOlEYdbkrfSLw2weH4wweKuNBJL85/nJmrBY8/3
SPC7NDK7LHRCpF8b7p268MN6VhpdnczkUNyhA3lnidlX5qXRjPq+u9nKOpAY
Gf5rbUUaWeRyyiQm6oBXjuztj8wyiKWkL3zIRBfE3wduFMjLIO4yOPi0dz/w
DYuXDu+SQbzMlj3djHrAOt5uz6sqg0Tmwi44aOnB2k/RB7HaMugM8dv6jQI9
6GN56extKYMqSnuu/DpHgUR9vlrFMzIobzzc1jcHQbTZ86PHA2RQelaLmEMd
glCbExz552RQ5GFx2cB+BN5ujcc5I2WQ5UIm2YVLH/TDjvH9TpZBl3Cpwh+v
6MNaZdXZ2koZ1LLqM5Z62QC8pR0V9ZdkkKrIyxPSlUYQ9Ctcf8+aDFKbST1w
6r0RRDXfdZLZlEGZ+yWuzy4ZQa7rr9gdjLJorHT0501tY+jJThx9wSeLthfw
bXmdxrCP58V1g72yKPoVZ1zCLxNgp1deMAyURaIGk+xWPuYg0uvIpBYii45v
cgUwZpgDsSBCHB8ui1jH0jLWn5uDvl6XGWOMLBq05PxexGsBIeHH77amYu+j
0FssNFvA58Uce+Mnsuj+Fk93ntwBeDrJXGOyIIsEspJUNXRsIHjodXvSkiyS
lD7WURZiA5pvbwz1rMmi2wcDAo89tYGmWqFNlx1yKOooReqQgC20JZAM/Xnl
0Lx5E6v6DVsY2m3am6UmhwbqP2+0XrWDrYj4n9OhckgiT0FhPdkBLPh3EpN2
4BH/16Ze6XYnkOs1LryyE4+eDQdYffnmBJvX4yXjWPAoJ3Cm9c5OZ3jEjBO6
yINHcQ6aVfzGzhDfapYeJoBH9lvCKq+OO4N7dAJXiAge9fD0V0fEOYOm3quk
QAk8eh+nqCX30Bm4N1hx/jJ4lJD1/YvAoDNM11nGnSbgkefxypQt+sPwIvga
3Ul5bDwtti/DyochcJ7jL3UPHr0kXxxyiT8MH75wz9rr41FIRhoiqbnA49t2
3jbGeMROTxA18XCB+CNpE5bmeHTzk0uYbqILaH3g+2hkh0davA3ahZ9dIKdT
8I3GUWw+w/FTi1eOALVC/LFoNB79kHP7+OS1K+zzdVMQuoxHzWHavk8XXYFX
/nYJXwIehbKNWziKuMHLQqk77Kl4xCl4/ZiflxsQb8qmbBXgkaNKhXT+mhts
2R9j3yjGo7K3nHrm4u4wyFV8dbUMj75wmF+PoLjD1QRC9EIlNr8Hh/Z6xbnD
3AVy4ARg690o2PST2QNa952aH2vFIzSUFO9L8oC8lfs+HzvxKHnrp/chEw+w
Pqt4rL8Hj+1fzEe3GA+oPKbs2D6OR4Kxu56OLnpAgrR/T8tXPNr7kHDvARMV
PD9VHKBN45GOldp8Mh8V+Jz2GNcv4BHZ8WClmRIVQizUNB7QEdCTu+2xdoep
8MuwtDCNkYAWO5l9Th+jwsn9olwROAKq7GhrlDtDhSMqdNOW3AR0w5ibcuoS
FfrlgxzV+Amo8IUZ5c8VKljLfQdxYQKS5DpkJpBCBST45tZPKQLaJWzKK3aH
Cg1cFKYBOQKq7xm4u3GPCntZngY2kwgoxTF98Ew5FcrpCZ9LFAlItfC96Nmn
VCBuZlne2E1AIvWz7+nqqXBnmbX+/F4Cep6x54TkcyoI/7qIp2oSULbGP72O
F1RIm15IMdMhIGJe0Yu/bVRgmzj2T4VCQOMvww9Vd1Eh7uPAKRFDAkLlQ8eX
31Bhq998YIcpAbU48Dk2dlPh/Lsmg1kLAhqrj0pifE+FhY7dFe+tCYh7JCSw
u48KPi8KxRrtCai3xvKs6AcqTDYIXC06REB5Fgd/TGJ2rb66lORCQHM3Z6wU
Bqgw8GiDGuxOQCt/I7T73lHBptTvrasnATHmqcR5N1Ghs+DLPmNvAjIyUIk/
f58KjekdvIJ+BBSxT9lRPIYKBWHprXUXCWiIsHSpehcVRIKY9hREE9B53Z4/
oULYfH3D8q9extYvXdXzHR0VLnt4hBy+TkBFBjZ3Thd7gI+xInkjj4DsxI0f
BI+7gxrPyyS9JiyehPJUHw036CpbtG9bJ6DJN3zJtyIOw1oHfSP9NgH9MQ21
dNE8DMQpLJkwEFFyqmj060VniCHs/dPARkSOcVE/B086g25hUHqlOBE1ZNxf
NrJ3gsrcpb5cPSJ61LFLtFfqIIw1MOoOGxDR+7Z8zYhhR+AY4S8WNCWiPs85
Za10R/ARVg9OtSGijjNXDBmYHQGfeY7/CpWItoJydicu2EN28opjYAwRDZfO
nGrqsYX2R0zPK+KJSETFc0dIsi0svxEk/EwkolKSc3/xAVvA/yBeV7hBRLlJ
33A2bLZY/aO5fCKdiPiemiUuZ9hAlIKp270sIhoScXN35beBCnOntolcIgo0
0x0Zy7CGsZMndkkXEJFFgHniYUVrYL96PtOtmIjmr+XfPz1lBdqlV/7llBER
no899n6xFZxqz/IaKieizRYZSe5jVtDOWK/uUENEe/PO1VlOHoCo6LUPZu1E
lCiGt5D/bQmPC3B68a+ISH1AhdGlzhI+0YRLXr4jIrcqi6bcSEvQ3tIK0Rsk
ovbeISMTbktYCg8TVJsmoueXXyZ+pVjAyeD1Q1KsJLSbfj2u/K0ZPDpyRZ6f
k4ROnFKjdygxg0UD/k0cLwklJ7D/e37JDCJ4lO8uipCQm71066CaGSQ/PjrX
Jk9C9zNvMwyWmkJf5vzzhl0kJON4Y9gt3hSEL0akVOwhoal41bFML1MotMxU
v7WPhDhKRd9wEU2hZrrzkq85CeUc1S6ZemwC690H7Y9akZCD/RW36jQT0Kub
wB+yI6EXgblLkudNoPPyZhflMAmZFxSJtuqbwKisCj/fKRIS1Nt8wjpmDDKs
z78znyEhHl3Lvph2Y/D+bf5s8ywJiRJCLl+uMIZftGPu30NJWL6dXZKONQZ6
t6yyZ1dJSImBz9dXxRhMjfARj6+RkM8MS9SyuDFcU3xiVZRCQkIhvz8ssxiD
wPqrxWvZJHR2XLzA/psRkLO2dKllJDR29ZHIvrtGcCYyietgOQkdVV0s00o1
gqdewhPmlST0dL+uYl60EeioqV7ZW09C5wZ9jl4+ZgTWvV69TJ0kpFm6vp2n
aATp9YtFG69JiO6XanqopBEM3bkUstBNQqsOl18V8xjBUb9bYiODJETso4/8
tmYIwWxvvR5NkZCBhvzx1leG8GzxsFbhHAnZr67HfqEZwtbwd9asXyS0kLKx
plNjCFfL6CqjVkko8SGfzp0CQ8g1Vlt3YCajnZwnkz6GGcKDR05ZzWxkdKpq
KP+GvyHUC0SoyXOT0Ymlr9XnvQxh4NsLvy1hMlK7OBkzYGcI3PE2k2UKZHRE
cDvvrJIhxLf7vPlnRUaPOyefE78bQKZy8qmT9mRUhKy1rn4ygOKbT5j6DpGR
Pf7u9lS/AbzwXkNlHmQ078nHnPnSADaZ4mvsA8jIXL5y1aTAAAJN794uzSCj
IN0tB1FHA4iuaNXhvUVGEgm7G9+aG0CK0PTQhXwyKua5WWdOMYBHU8p89iVk
dJBVkD5Z3gCmrzRd2awjo3NMJ0dn1vVh9ddn/IkmMjK93TUXO68PTM4MLb1A
Rswj8dWvv+iDHNlis6SLjNwDSIxOHfrg3jl41u4jGWUlXcnZuq4PZ1Q2OJo+
k5FIxYGgskh9uJAt+ZD4lYxyx9Llv/npw62TXt82fpDRg8xGYLHWh37cn8Ml
W2Qk07OSdZdJHybPCq5yM8ijTzT7I3F/ECwO7cuIYJZH9+WcpD9/RsB1P+qd
Lbc8io3w1f9Vi0CSp/h0I788usFy5Xv+XQRKYR04oog8aqC4SdUlIdD5Mnsv
RUIebcwGpWieQ/D/v59DLkM2Y2LuCP4HDvCaNg==
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
zshaiPKKMcBUHqlm
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
QP9lLNrxOR7ASkkOQ/shKUCZBMmsPwgewKR4sME=
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172522#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Self-Kerr\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.73806459429*^9},
 CellLabel->
  "Out[636]=",ExpressionUUID->"3cad1df9-7fba-4b2f-a87c-88dfdd6ab212"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.737918246744*^9},ExpressionUUID->"37217412-a6fa-43a5-8f5c-c38761a96037"]
}, Closed]],

Cell[CellGroupData[{

Cell["Phase Diagram \[Alpha]", "Subsection",
 CellChangeTimes->{{3.737974971333*^9, 3.737974998705*^9}, {3.737975404993*^9,
   3.737975423785*^9}},ExpressionUUID->"5ddef5c8-b972-4641-9cf9-e24edaa3b92e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"len\[Phi]", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"-", "4"}], "Pi"}], ",", 
        RowBox[{"4", "Pi"}], ",", 
        RowBox[{"Pi", "/", "5"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len\[Alpha]", "=", 
   RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.73797620533*^9, 3.7379762473129997`*^9}, {
  3.737976284322*^9, 3.7379762957609997`*^9}, {3.7379763382980003`*^9, 
  3.7379763511689997`*^9}, {3.73800819205*^9, 3.7380081957860003`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"0f92135d-211e-481a-81ff-046ef142ffe3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"table\[Alpha]crossvs3rd", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"listt2", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"\[Alpha]list", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"listt2", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i", ",", "4"}], "]"}], "]"}], "/", 
            RowBox[{"listt2", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "len\[Alpha]"}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"table\[Alpha]selfvs3rd", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"listt2", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"\[Alpha]list", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{"Log10", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"listt2", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "5"}], "]"}], "]"}], "/", 
             RowBox[{"listt2", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "len\[Alpha]"}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
   RowBox[{"table\[Alpha]crossvs3rd", ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
       "\"\<\[Alpha]\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "/", "2"}], "\[Pi]", " ", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "6", "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Phase Diagram lg(Cross-Kerr/3rd)\>\"", ",", "14"}], 
      "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Mesh", "\[Rule]", "1"}], ",", 
    RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"MeshFunctions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Boole", "[", 
        RowBox[{"Greater", "[", 
         RowBox[{"#3", ",", 
          RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"ColorData", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<TemperatureMap\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}], "]"}], ")"}]}], 
    ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"table\[Alpha]selfvs3rd", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
      "\"\<\[Alpha]\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], "\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "6", "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Phase Diagram lg(Self-Kerr/3rd)\>\"", ",", "14"}], "]"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "1"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"Greater", "[", 
        RowBox[{"#3", ",", 
         RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"ColorData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<TemperatureMap\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}], "]"}], ")"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.73797580141*^9, 3.737975818946*^9}, {3.737976069203*^9, 
   3.7379761658900003`*^9}, {3.737976198626*^9, 3.7379762012019997`*^9}, {
   3.737976278546*^9, 3.7379763261540003`*^9}, {3.737976358067*^9, 
   3.737976381625*^9}, {3.7379764999*^9, 3.73797650185*^9}, {
   3.737976617804*^9, 3.737976625043*^9}, {3.737976692995*^9, 
   3.737976739178*^9}, {3.7379767719300003`*^9, 3.7379767929779997`*^9}, {
   3.737976850282*^9, 3.737976872026*^9}, {3.737976912866*^9, 
   3.73797691445*^9}, {3.737976956859*^9, 3.7379769579779997`*^9}, {
   3.737977316083*^9, 3.737977323498*^9}, 3.737977556731*^9, {
   3.737977657102*^9, 3.7379776587869997`*^9}, {3.737977798851*^9, 
   3.737977816033*^9}, {3.7379778634449997`*^9, 3.737977864707*^9}, 
   3.737978381763*^9, {3.737978732571*^9, 3.73797873529*^9}, {
   3.737978786091*^9, 3.737978818499*^9}, {3.737978870899*^9, 
   3.737978908058*^9}, {3.737978963587*^9, 3.7379789717139997`*^9}, {
   3.737979024594*^9, 3.73797911101*^9}, {3.737979141788*^9, 
   3.7379791501619997`*^9}, {3.737979267949*^9, 3.7379792693780003`*^9}, {
   3.737990362604*^9, 3.7379903697460003`*^9}, {3.738001643547*^9, 
   3.73800164677*^9}, {3.738001683811*^9, 3.738001741262*^9}, {
   3.7380067942679996`*^9, 3.7380068005950003`*^9}, {3.738006953028*^9, 
   3.738006957139*^9}, {3.738006990523*^9, 3.738007018116*^9}, {
   3.738007056459*^9, 3.738007110858*^9}, {3.7380071783389997`*^9, 
   3.738007179627*^9}, {3.738007507723*^9, 3.738007516034*^9}, {
   3.738007569483*^9, 3.738007663098*^9}, {3.738008044365*^9, 
   3.738008113875*^9}, {3.7380082310360003`*^9, 3.7380082685550003`*^9}, 
   3.738008501932*^9, {3.738008560028*^9, 3.7380086016289997`*^9}, {
   3.738008652093*^9, 3.738008657075*^9}, {3.738010081998*^9, 
   3.738010109508*^9}, {3.7380584103710003`*^9, 3.73805841217*^9}, {
   3.7380596222279997`*^9, 3.738059662611*^9}, {3.7380600764849997`*^9, 
   3.738060126212*^9}, {3.73806033527*^9, 3.738060346343*^9}, {
   3.738060416994*^9, 3.738060466634*^9}, {3.738060502084*^9, 
   3.7380605030179996`*^9}, {3.738060577884*^9, 3.738060633924*^9}, 
   3.738060671293*^9, {3.7380615645959997`*^9, 3.738061568435*^9}, {
   3.7380615995810003`*^9, 3.738061602692*^9}, {3.7380616397*^9, 
   3.7380616404110003`*^9}, {3.738062937132*^9, 3.738062942363*^9}, 
   3.7380633409309998`*^9},
 CellLabel->
  "In[589]:=",ExpressionUUID->"b378d9d1-f660-4e5b-bd70-2b26059dc113"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxlmG2oZVMYx8/oeDlMpw67c21TJ9uc2eYoSXOLGlorL/FRk4SZjJc7jJrw
hQhN8YEvjEgi+TCIiS+aUij7flBmGhQajOvmXvugjby1Q8Zc2tf5P7fnd/eX
6d991vnN2uv/f9ZaO7v5zi07jmu1WpvXtFrNv6efe9nVR7PR7PSm5vk0SD/3
bPMcMd1afhaCry9N33Zr83yH8ZXpDz9onp/CyTd8ue3KhbONJy2etHi+vjQt
nh9fmRbvn8fv2vH0C7nxpMWTFs/Xl6bF8+Mr0+L9XJxwxzfbNhhPWjxp8Xx9
aVo8P74yLd7Cr8/fc966ofGkxZMWz9eXpsXz4yvT4n2Sbdr9wJGzjCctnrR4
vr40LZ4fX5kW770tBx85+ExmPGnxpMXz9aVp8fz4yrR4bz68/Yn+NWcaT1o8
afF8fWlaPD++Mi3eVbf/eP77GwfGkxZPWjxfX5oWz4+vTIs3fWjq0pteXmc8
afGkxfP1pWnx/PjKtHj/5z9Ff0nRX1L0lxT9JUV/SdFfUuS9j7z3kfc+8t5H
3vvIex957yN/CfKXIH8J8pcgfwnylyB/CfLQQx56yEMPeeghDz3koYc89ODP
LvzZhT+78GcX/uzCn134swu/dOCXDvzSgV868EsHfunALx2sXxvr18b6tbF+
baxfG+vXxvq18T6XCv8+lwr/PpcK/z5VX5r271PjK9N+fnXh51cXfn514edX
F35+deHnVxd+fjV4Y/DG4I3BG4M3Bm8M3th4rckjnrR4LfcsoL40LZ4fX5nG
/ALmFzC/gPkFzC9gfgHzC1g/8GrwavBq8GrwavDqAH8G+DPAn8bz9ebPAH8G
+BPza0fkLyJ/EfmLyF9E/iLyF9FfIvpLRH8xnq+3/hLRXyL6S0T/jOifEf0z
+vfZjeifEf0zon9G7A8R+0PE/mA8X2/7Q8T+ELE/ROx/WL8E65dg/RKsX4L1
S7B+ScT+bjxp7O/G8/W2v0fs78aTxvkFfknhlxR+SeGXFH5J4Zc04nxmPGmc
z4zn6+18FnE+M540zp/w5wD+HMCfA/hzAH8O4M9BxPnaeNI4XxvP19v5OuJ8
bTxp3B+Qhwx5yJCHDHnIkIcMecgi7kfGk8b9yHi+3u5HEfcj40nj/of8DZG/
IfI3RP6GyN8Q+Rsab3L/NJ407rfG8/V2vzWeH2/3W+Q9R95z5D1H3nPkPUfe
c+Q9N97k+4HxpPF9wni+3r5PGM+Pt+8T6C8j9JcR+ssI/WWE/jJCfxmhv4yM
99XW4vhf/s1n9Xu3vPLH0hvH8tnln/t9Iby6+9Cfd+9b+V6h7xtrmvJd8+Gk
o/ddfOLalfH6+/L47mL4dnTd3A/1yvcHfa9YHv/6517PzIW/v3/wqVMfWv39
otH7Zw6HGy+Yeee3R9fb31/8+IrPLn93fdzZTHftYfHsfU3q7X3u2XP/ObG3
IX7UTP+MOef/5vcn87XxL+18bGrj3on/LvxC/79Vftd8vp7fN3z7r9V+1/z2
X3Rs1yVTE79duxiuH9x74K3TJv54bT5M731y0O6t+Mn585R579/Ni+E/vNe4
Vg==
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwtkVkKwkAQRCcSFEwQN4wIivseTdS43sIjeAC9vf6pr0l9PKie1FQXk8Hj
dX8WnHMd8OHsOdeAJlxgBWPOe7A0DW10HSboKUTorr7bbF7zzNEDCNBl6KOH
8tdg5OUZlmUe8ybwRX9gjd7Cz+VnMXoPvjyJ+lhWpH0LL+9i80z7quiWZutg
XaraHyvLMg9whKJ22u5McwhXL+9k3d6w0R27G8AOUnmLyrpBBUpwkieQJ1Vm
qDc/y1PS/Uz/oKkMy/oDVwAW4w==
           "]]}]}, {}, {}, {}, {}}, {{}, {
        GrayLevel[0], 
        LineBox[{297, 295, 290, 291, 288, 289, 293, 292, 296, 294, 298, 299}, 
         VertexColors -> None], 
        LineBox[{302, 300, 304, 307}, VertexColors -> None], 
        LineBox[{308, 301, 303, 310, 305, 306, 308}, VertexColors -> None], 
        LineBox[{309, 314, 312, 313, 315, 311, 309}, VertexColors -> 
         None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
R3U+4v8DvngP2A==
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Alpha]\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-7, 2] Pi, -10.995574287564276`], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"7", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-5, 2] Pi, -7.853981633974483], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-3, 2] Pi, -4.71238898038469], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
          FormBox[
           RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
          FormBox[
           FractionBox["\[Pi]", "2"], TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[Rational[3, 2] Pi, 4.71238898038469], 
          FormBox[
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[5, 2] Pi, 7.853981633974483], 
          FormBox[
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[7, 2] Pi, 10.995574287564276`], 
          FormBox[
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     FrameTicksStyle -> Directive[6], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram lg(Cross-Kerr/3rd)\"", 14, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
      0.30000000000000004`, 0.9}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJzt1Ps31HkYB3CKSoNKd7cWncoal1WbVNu7sRXadlMuKRVFJJdIahGaELUq
ku1GFAqJSpdBMkouGZNRk7vcjZnvfD+1SnaFnf0f9sf54TnnOa/zOed5zvN8
Ph+9/Ye3H5isoKBQIwtFWfyX5wV3H3lm1Q9O0BRJprsIypxDovuqBPa7HYf3
6A0gt2d+QcKsQbBZC8O79AlGrapDJiYGkGpvGHSibBBjr6tmaVgSZBquGUvv
ECHh5WqLg35ihDgcu221lWDzzPyTVqWDOLV8y6i9lgRf2hevCTpAkLdT9SUV
KsbsYW8q/L4EPRw9hfm/EzgoliZ+YUhwvcvSz2AxhRoHzX1UjKxutp/beIoE
+nUqdPVlCgUfNV6UJ8nq2umaTjWhkMtp9vdnSJEczzC4fJNgywh/bEYZBfPM
HDI7UoqwZUrRvgUEQ2mRvAV2UhRdCAko+kuKfRXfelmlBCnWZtf1uqRghdl+
2utJw9rty8b5tQScyVTTxqU00q68CIy6TsM+u/U1M5DAQ/9MtJoHjVVtZg2N
1TT6s+CweTrBTNYSM2E6jYZFaebMYRrHMzLavTJoPHN92ZrSTsPHXS3ppAHB
tJtTvWLW0vCKcIv10CRQuhM29M6O4PoNn4+3hFLMTh0zZ+4guCEetDeMIGCm
vAnh+kvRZmaw6GAUwX1GpntMKgGlleDT2UJh6qYr7N8SCWqtvD9syCDYcXZr
VfRnCcxd1HpXpBH0h5i4KOUQcEfUDQzVJdgTcGqT1j0CxQdD71/mExh58SPq
looRF/M1W7GEQFvE2R71iCBZeK4lkDWIwmu+DFE1gcWiCL5VMYHChl9XznMR
oaOgy4//nmC708+bJ3EJvB+qXiw+OoA4dbYBW+YnGQ8P/C0772ur3iSc04/l
ZSNHld8STH6iZXK6kCCwb1vN06u9aD8cUHnmDUGMW8ywRh5BEDu5+KpuD+K+
E81X58nmxSDP0zIJjus03w3L6IK5wNX7oqyfs4+dY5myOZwo0k7ds6wT7ezG
4nmvCNTcXmwtSiaYyOVqR+5qR6pzcMKTxwSFrtWKQx4EhoZU3i5hC3baLjcV
xxIYPMuSBL+m4ZTQdzc6sBlzV3+q09lFkLQgSjhiSuPU147cfLUm1H9f4LuN
STAp2K0sLFmKe3ubcppy3iNey48RM07jiOCnnPF/KLS8EmRP2iSEjapRLqee
RpexVhLbTbYn49o7zO63UBoT2VC3aNidHTmhVCnb06WK204RDeiLihfTsvtX
lHaIOfeDGM3+rUu7hQJc6G/Ln7eExj2/zqrx9kHwdn+zjvMTwNLWOGhdnxTp
a5zcRW0iPN+sc9BEWYCeu+EWnplSXFLhjQtaB/Bg1bq4dyn1OKfOHz3nLkVs
I+taSUs/Mpa4ZoeuqIdFoC73sb4UoVlPf8xq7oORoUIi68obDPUaex7qoeBk
vr+qurEXJRsCb2jX8mEhaCwfzaEw8wel6ImGHkxXKc3wYfBxopStcy6AQq3p
7fUr+d1wrpuWU/xLHbg5RiG6FhRiTGzGfGu6cCfRIV8lngflP4XvCsYkWG8s
Lsqo6MSwY3qhM68WtqcizVgVsv9ixwLpo8gP2KBJce6o1uK8v2F8w1kJvB13
e+ofa0dSh8Xz4S2vUbKXO7jfUYLBvItpZU9aEG3Tfz72TA3+CHft7tGToHzh
53jNtEYsE6RYWldUwyVlvMWDFuPqacfQ4Nh34O20750yUQWjktS3fcViBAw9
8ao/LEBAt8qFSssqjDav5XnGipHINct1us/DHB+u5emjlagdaa0YsBdj/bWh
aFV2JThDx3o3FrzC3GqKGSp7T3NcWG81jMrBmvHYb4Gy3OUud7nLXe5yl7vc
5S53ucv9//Z/AcC97zo=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000001, -112.50000000000001`}, {
                7.500000000000001, 112.50000000000001`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -92.64705882352942}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -92.64705882352942}]}, {{
                    7.500000000000001, -48.52941176470589}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -48.52941176470589}]}, {{
                    7.500000000000001, -4.411764705882353}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -4.411764705882353}]}, {{
                    7.500000000000001, 39.70588235294118}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    39.70588235294118}]}, {{7.500000000000001, 
                    83.82352941176471}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    83.82352941176471}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.500000000000001, -103.6764705882353}, 
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -103.6764705882353}]}, {{
                    7.500000000000001, -81.61764705882354}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -81.61764705882354}]}, {{
                    7.500000000000001, -70.58823529411765}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -70.58823529411765}]}, {{
                    7.500000000000001, -59.558823529411775`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -59.558823529411775`}]}, {{
                    7.500000000000001, -37.50000000000001}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -37.50000000000001}]}, {{
                    7.500000000000001, -26.47058823529412}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -26.47058823529412}]}, {{
                    7.500000000000001, -15.441176470588237`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -15.441176470588237`}]}, {{
                    7.500000000000001, 6.61764705882353}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    6.61764705882353}]}, {{7.500000000000001, 
                    17.647058823529413`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    17.647058823529413`}]}, {{7.500000000000001, 
                    28.676470588235297`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    28.676470588235297`}]}, {{7.500000000000001, 
                    50.735294117647065`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    50.735294117647065`}]}, {{7.500000000000001, 
                    61.76470588235295}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    61.76470588235295}]}, {{7.500000000000001, 
                    72.79411764705883}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    72.79411764705883}]}, {{7.500000000000001, 
                    94.8529411764706}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    94.8529411764706}]}, {{7.500000000000001, 
                    105.88235294117648`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    105.88235294117648`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -92.64705882352942}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -48.52941176470589}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -4.411764705882353}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    39.70588235294118}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    83.82352941176471}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.6666666666666665`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.308746, 0.441842, 0.940894], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2058306666666667, 0.29456133333333334`, 
                    0.6272626666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.308746`", ",", "0.441842`", ",", "0.940894`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.308746, 0.441842, 0.940894]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.308746, 0.441842, 0.940894], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.935699, 0.951565, 0.993729], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6237993333333334, 0.6343766666666667, 0.662486], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.935699`", ",", "0.951565`", ",", "0.993729`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.935699, 0.951565, 0.993729]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.935699, 0.951565, 0.993729], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.995282, 0.992317, 0.727853], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6635213333333334, 0.6615446666666667, 
                    0.48523533333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.995282`", ",", "0.992317`", ",", "0.727853`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.995282, 0.992317, 0.727853]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.995282, 0.992317, 0.727853], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.955963, 0.863115, 0.283425], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6373086666666667, 0.57541, 0.18895], FrameTicks -> None,
                     PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.955963, 0.863115, 0.283425]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.955963, 0.863115, 0.283425], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6028180000000001, 0.438666, 0.161198], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.858405, 0.449932, 0.203562], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5722700000000001, 0.2999546666666667, 0.135708], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.858405`", ",", "0.449932`", ",", "0.203562`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.858405, 0.449932, 0.203562]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.858405, 0.449932, 0.203562], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.8800672823808062`"}], ",", 
                   "7.250037030925988`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.738012068666*^9, 3.738058412704*^9, {3.738059624211*^9, 
   3.738059663867*^9}, {3.738060082033*^9, 3.7380600947790003`*^9}, 
   3.738060127388*^9, 3.7380603366*^9, {3.738060418663*^9, 
   3.7380604675620003`*^9}, 3.738060504355*^9, {3.7380605860039997`*^9, 
   3.73806063474*^9}, 3.738060673535*^9, 3.738061569402*^9, 3.738061603573*^9,
    3.738061641546*^9, {3.738062926834*^9, 3.7380629431610003`*^9}, 
   3.738063341958*^9},
 CellLabel->
  "Out[591]=",ExpressionUUID->"8cd47702-15ab-436e-82a4-e67361eadfc6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxtmG1sU1UYxwtpMCVS1nktXDYrl5VCE9Ag44MQOScBcVEgvCuCe2FBRiJK
MBkZvqDh7QOmAZGgCIgRwhSRBAaKwroPiEMHIjSFAcKy2zHuSsSQqwLqYnt7
n6c5/3q/LP/0Ofe3c87zf557jrHotVmL+3o8noY+Hk/27+DRk+f8bURbysdm
nwuC9PaPsk87a4/zdAg13mS95OXscwPGW6zPtGWfW6J/5eWFFR0jmEeaeKSJ
p8abrImnjrdYE++f2PLFW3dFmEeaeKSJp8abrImnjrdYE++3eL9XOxcOZx5p
4pEmnhpvsiaeOt5iTbyO33fUP14SZh5p4pEmnhpvsiaeOt5iTbzzxtjVb7YP
Yx5p4pEmnhpvsiaeOt5iTbyTs05vOL3NYB5p4pEmnhpvsiaeOt5iTbyja6o2
BecNZR5p4pEmnhpvsiaeOt5iTbwZS9NjfhgZYh5p4pEmnhpvsiaeOt5iTbzy
nwZNqtlbwjzSxCNNPDXeZE08dbzFmng5/+tQX3SoLzrUFx3qiw71RYf6ooPf
g+D3IPg9CH4Pgt+D4Pcg+D0I/tPAfxr4TwP/aeA/Dfyngf808EMA/BAAPwTA
DwHwQwD8EAA/BCA//ZCffshPP+SnH/LTD/nph/z0Q774IF98kC8+yBcf5IsP
8sUH+eKD/fPC/nlh/7ywf17YPy/snxf2zwvr2RtX17M3rq5nb1xdT4o3Wavr
SeMt1ur87Lg6Pzuuzs+Oq/Oz4+r87Lg6Pzuuzs8GXgp4KeClgJcCXgp4KeCl
mOdxH+KRJp5HeTog3mRNPHW8xRrmJ2B+AuYnYH4C5idgfgLmJ2D/gGcDzwae
DTwbeDbwbAH5KSA/BeQn89R4zk8B+SkgP2F+Xgn+k+A/Cf6T4D8J/pPgPwn1
RUJ9kVBfmKfGc32RUF8k1BcJ9VNC/ZRQP6W6nn4J9VNC/ZRQPyX0Bwn9QUJ/
YJ4az/1BQn+Q0B8k9D/YPw32T4P902D/NNg/DfZPk9DfmUca+jvz1Hju7xL6
O/NIw/cL5IsO+aJDvuiQLzrkiw75okv4PmMeafg+Y54az99nEr7PmEcavj8h
P0OQnyHIzxDkZwjyMwT5GZLwfc080vB9zTw1nr+vJXxfM480nB/ADwb4wQA/
GOAHA/xggB8MCecj5pGG8xHz1Hg+H0k4HzGPNJz/wH9h8F8Y/BcG/4XBf2Hw
X5h57vmTeaThfMs8NZ7Pt8xTx/P5FvweAb9HwO8R8HsE/B4Bv0fA7xHmufcH
zCMN9xPMU+P5foJ56ni+n4D6EoX6EoX6EoX6EoX6EoX6EoX6EmXeuQ1pa/zr
+fuV889+81n7Mve+ZGCnGLVi4yvDluTvRzrePlUf2ureP8xM8H3Hx1m97LJ4
onl82eza/H0G/Z69W3rnmU5x4P78FR3v5u9Dmio+GPK87sY3XlPvO365Llqn
VdW2Ti0ruL9wfj96Rayqvbl57XL3fmHNRfW+YMclUfzYzOo3vnTP4+mEeh+w
MSmurnvu2MoLRsH9gqOrb4npMuC7Ny7Ucjar5+TP/32yvLaEaJpktlRPNlqc
5b6b5t/rstrsUc/j8zL1ZtLnuwZF3fP79vx5nHQyubN7ZfIRXp+K4q0VL43I
n9+V83ayW0yfv2Xvtul6ixP+Sf487Pw/sRtiU+mRg7Njg////NrQJSprW4v7
n3k4pxd08fnSed+aLtFdGnt6XewhZ/5TD3eJ+z/L+paTxfy+O5cPjht9L5Cb
byecHxu6xfHyylBde1FuPvtuivK6mlF9Y0U8nz9fbEx8WFrk5Ienp0esqvq0
+dL7A/P3E7l4zt+mmuDXf4wpyuV7TZriC753iO/+vwXfEzS/PY2+7l8Pa9LZ
zz1dav/PrM8LC/b7S/RBufE/dtF68vtGHts37SuP26835fs5rX9Tc9IO6G5/
XHBBHN/SO3PCt0Ny8Zu71f6c2c/m+L+3H+w7VI7Lxl9PUD4U9GPKp359Tg2o
W12aqwdrb1K+8HpdjY3+vp76dT7fWFcOuF1y7C+3fy5Kcr+k/P5i9YmR9xOP
5t63v4d/d/Ihk9+H4omJS3sM6Sy/fVHtlxl/TdltlD6ZcPvxxjT5uaDfkt/O
H7qYfi89TDr15Kl2kVgyo8x7oiz3voYrar/L+HveWwcOTTns8tffIj9zPjRP
NO/cnRuWDi5xTe1vmfrh1jf+f4IN322rmhZx5td2LkH1rKB/UX3qaTs7oXX3
cIc/dT3XN96vB+Y2l8ytd/vBkStUbwv6E9VP0lQv/wPMAJLH
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
d75JzIaM0zX+D+zBfGM=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlMdzDVAUxu818cyIQchghUSitwieRElEgogSiRo1T3tREiXa/8YGC1bY
YJiJMqMtlAViRv19c77Fb9533zvtnnvOqykN9QyOSSntgwo4lFN6w+cLfYcu
wzf0LziPboNj6OOwCX0ORtFf4ST6MLxFv4Mj6BPwKUWM0+hTOWw/Kga6P4dW
zoOKncNXPiX0Viih+2ELeic8QN+FHbZ/j34FRx3/C/qH61H+zylsSs73IYWN
8stHvi9dr+6suz+HPvSBHL89g/3oeqhCT4cF/n0kxZ1192EYBwW4DBdhgs9X
YAnUYbsIFqMvwViogKvu9/cUNatfeo/XKWpWf5bl8F0BS9GzYTx6MtShF6pG
9CzlQDfDBnQ7rHX9M9BTYC56FRRT2BR9XoNugJXoBliewkbnJmhFN8PqHDmU
SzHn5+iJejPT51qfq1zfnBy1ToJ5qg160NthvXJDS4oaiu5hwT28kaNm1V4J
NY43ze9R6/srt3qsXstGtuqRenUTJvqNhh1TsafCNb9Hpb/T2/XAE3yfQi96
F9xHP4RudFeOWbynO6DboU9v5f3YqBlJsTNttr+NvgXbciB9x/Os+ZZWDuXq
yLFrZ2Azejc8SrED3a5ZtVfDdedTbvW01ftTRg9Ap+Npl1Sjam0UmkXPk3Io
V9n7pt81a02aOc2CepxiJhpcj3qhHqlX+o/Qf8VvuIAegD/ov7oDegj+oX/C
Wc+zctd7H/R/ot2Vz4B3pmCfQfsrlnZGZ8VQrFHH35vjrUa8r3vgcYqe9Xof
OpJnTLOmO6R4o1b7a9flI1/NuGa90ffXjGpWFWNdjp3SbnX5rHmWVswWv0m1
Z06z9x8Tkogg
           "]]}]}, {}, {}, {}, {}}, {{}, {
        GrayLevel[0], 
        LineBox[{295, 291, 290, 292, 288, 289, 294, 293, 297, 296, 299, 298, 
         301, 300, 303, 302, 307, 306, 310, 313}, VertexColors -> None], 
        LineBox[{304, 305, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 
         320, 321, 322, 323, 324, 325, 326, 327, 328, 329}, VertexColors -> 
         None], 
        LineBox[{332, 331, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 
         343, 344, 348, 349, 350, 351, 354, 355, 358, 360, 364, 365}, 
         VertexColors -> None], 
        LineBox[{346, 342, 347, 345, 353, 352, 357, 356, 363, 361, 359, 362, 
         367, 366, 371, 368, 369, 373}, VertexColors -> None], 
        LineBox[{370, 376, 374, 375, 377, 372, 370}, VertexColors -> 
         None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
n9X7UnYgf3LkXN+A/OlOrMKRP/ezrj+G/CmRUX/bC/hz9dy+3diPdmmUGWE/
YovXvcsG/Whixdty7EfLAi7rYz/SnDbUvAb96O3cwtLV0I8+LGm+gv3onZOw
vCH0o6g3L/ZhP3p88G4l9qO2OfZXz6AfaSyWaGE/clto+NePZI2mzmA/krYe
p8agH2mHtG4Ygb/LLGDh2An96EqI/XHsR8HP3FmxH3mVjFR6Qz/yil3thv29
LbmnH/v7pV9mTH3Q34kt/1Ps7yE6cZLY3+PqTfQnob/nUS+ksb/PtG1Ix/7O
y38qsgb6+7kPZdyfoL+fPb9VDfu7YVIy1xPo7199TZfOQX8v9g/vwv5eZ2Ek
hf2do9GfbxL6+yEtV3vs7x3R1dVR0N+pq2IS2N/PhjBxY39/1vlqmSb097E3
sTukYf6xsho7ifPShZXJMWIwL73kczyI89KSQU4HnJdO+3CttIZ5yVf9VQnO
S0anldfhvKRc/n7oPMxLd76u/4vzUmks0yOcl3g7rs79B/OSyMoUSZyX2KUZ
DjgvTdqsK30J89LN2ZvyN2FeWtNdtCsG5iWpe/q1FjAvmdbkXcZ5qXd4wgbn
JZke3avFMC/d/M5+HufPofbrPDh/fj3w63E9zJ+7v9nn4fwpdU2jBeuudE7E
H+fP11PKqTh/1gse/o7z5/BsVagAzJ/72UfKcf7srvyjjfPn6ahV2WIwfz42
uxO5CubPAM3tUpVwD1m3jcvOw/xp/EZbNBvmz+1OjMwqmD8LE2Sz6TB/pq19
zSMG82f8jcnm1cCXT/iGXhGYP3PExaJwnmcxkWzA99eYvNhwAub5NXqTzjjP
S3b5v8N5Pme5iYYlzPPis2/NcZ6Xu/NSDed598iWAWGY5+mSK1Rxnt/bIKSM
8/zVz2p7jWGeP+GRt1UJ5vnB7zuDReA7ve3sG6Jhns827C7AeX7gnUoXzvOX
RatHcJ535w6weArz/MhAjbMOzPPs0rx5jTDPH/z6bAr3I7sbD47gfvQiX43r
M+xHS/fd+g/3I78bvHK4H222PZUfDvtRlu9PH9yPTAYenMT9yM0mrssU9iPm
J0YLCrAf6UT1+uB+ZLw4unw17EeJx7xkcT9irmM1wP3Iq8qprQv2I0eOxRpX
OIdgL2sM7kc1lf9dZsB+RAWtoonBfrSgVTfYB/tR5VEt5m7Yjy7R2gjum+q3
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
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Alpha]\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-7, 2] Pi, -10.995574287564276`], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"7", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-5, 2] Pi, -7.853981633974483], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-3, 2] Pi, -4.71238898038469], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
          FormBox[
           RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
          FormBox[
           FractionBox["\[Pi]", "2"], TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[Rational[3, 2] Pi, 4.71238898038469], 
          FormBox[
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[5, 2] Pi, 7.853981633974483], 
          FormBox[
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[7, 2] Pi, 10.995574287564276`], 
          FormBox[
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     FrameTicksStyle -> Directive[6], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram lg(Self-Kerr/3rd)\"", 14, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
      0.30000000000000004`, 0.9}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -76.85643564356435}, 
                    Offset[{4., 0}, {7.5, -76.85643564356435}]}, {{
                    7.5, -32.301980198019805`}, 
                    Offset[{4., 0}, {7.5, -32.301980198019805`}]}, {{7.5, 
                    12.252475247524753`}, 
                    Offset[{4., 0}, {7.5, 12.252475247524753`}]}, {{7.5, 
                    56.80693069306931}, 
                    Offset[{4., 0}, {7.5, 56.80693069306931}]}, {{7.5, 
                    101.36138613861387`}, 
                    Offset[{4., 0}, {7.5, 101.36138613861387`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -110.27227722772278`}, 
                    Offset[{2.5, 0.}, {7.5, -110.27227722772278`}]}, {{
                    7.5, -99.13366336633663}, 
                    Offset[{2.5, 0.}, {7.5, -99.13366336633663}]}, {{
                    7.5, -87.9950495049505}, 
                    Offset[{2.5, 0.}, {7.5, -87.9950495049505}]}, {{
                    7.5, -65.71782178217822}, 
                    Offset[{2.5, 0.}, {7.5, -65.71782178217822}]}, {{
                    7.5, -54.57920792079208}, 
                    Offset[{2.5, 0.}, {7.5, -54.57920792079208}]}, {{
                    7.5, -43.440594059405946`}, 
                    Offset[{2.5, 0.}, {7.5, -43.440594059405946`}]}, {{
                    7.5, -21.163366336633665`}, 
                    Offset[{2.5, 0.}, {7.5, -21.163366336633665`}]}, {{
                    7.5, -10.024752475247526`}, 
                    Offset[{2.5, 0.}, {7.5, -10.024752475247526`}]}, {{7.5, 
                    1.113861386138614}, 
                    Offset[{2.5, 0.}, {7.5, 1.113861386138614}]}, {{7.5, 
                    23.391089108910894`}, 
                    Offset[{2.5, 0.}, {7.5, 23.391089108910894`}]}, {{7.5, 
                    34.52970297029703}, 
                    Offset[{2.5, 0.}, {7.5, 34.52970297029703}]}, {{7.5, 
                    45.66831683168317}, 
                    Offset[{2.5, 0.}, {7.5, 45.66831683168317}]}, {{7.5, 
                    67.94554455445545}, 
                    Offset[{2.5, 0.}, {7.5, 67.94554455445545}]}, {{7.5, 
                    79.08415841584159}, 
                    Offset[{2.5, 0.}, {7.5, 79.08415841584159}]}, {{7.5, 
                    90.22277227722773}, 
                    Offset[{2.5, 0.}, {7.5, 90.22277227722773}]}, {{7.5, 
                    112.5}, 
                    Offset[{2.5, 0.}, {7.5, 112.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -76.85643564356435}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -32.301980198019805`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 12.252475247524753`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.80693069306931}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 101.36138613861387`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.6666666666666665`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.308746, 0.441842, 0.940894], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2058306666666667, 0.29456133333333334`, 
                    0.6272626666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.308746`", ",", "0.441842`", ",", "0.940894`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.308746, 0.441842, 0.940894]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.308746, 0.441842, 0.940894], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.935699, 0.951565, 0.993729], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6237993333333334, 0.6343766666666667, 0.662486], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.935699`", ",", "0.951565`", ",", "0.993729`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.935699, 0.951565, 0.993729]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.935699, 0.951565, 0.993729], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.995282, 0.992317, 0.727853], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6635213333333334, 0.6615446666666667, 
                    0.48523533333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.995282`", ",", "0.992317`", ",", "0.727853`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.995282, 0.992317, 0.727853]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.995282, 0.992317, 0.727853], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.955963, 0.863115, 0.283425], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6373086666666667, 0.57541, 0.18895], FrameTicks -> None,
                     PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.955963, 0.863115, 0.283425]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.955963, 0.863115, 0.283425], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6028180000000001, 0.438666, 0.161198], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.858405, 0.449932, 0.203562], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5722700000000001, 0.2999546666666667, 0.135708], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.858405`", ",", "0.449932`", ",", "0.203562`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.858405, 0.449932, 0.203562]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.858405, 0.449932, 0.203562], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.5645984789187724`"}], ",", 
                   "6.455556700025439`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.738012068666*^9, 3.738058412704*^9, {3.738059624211*^9, 
   3.738059663867*^9}, {3.738060082033*^9, 3.7380600947790003`*^9}, 
   3.738060127388*^9, 3.7380603366*^9, {3.738060418663*^9, 
   3.7380604675620003`*^9}, 3.738060504355*^9, {3.7380605860039997`*^9, 
   3.73806063474*^9}, 3.738060673535*^9, 3.738061569402*^9, 3.738061603573*^9,
    3.738061641546*^9, {3.738062926834*^9, 3.7380629431610003`*^9}, 
   3.738063342117*^9},
 CellLabel->
  "Out[592]=",ExpressionUUID->"fa0fad37-ffc7-448a-9ade-92a85639de36"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fix \[Alpha], Varying \[Beta]", "Subsection",
 CellChangeTimes->{{3.737979305699*^9, 
  3.73797934009*^9}},ExpressionUUID->"61b5a43c-801a-44c4-88eb-eaecfbb476f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["hereH", "arm"], "=", 
   RowBox[{
    SubscriptBox["listH", "arm"], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]list", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0.02", "i"}], "+", "2.5"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "0"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]listname", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<\[Beta]=\>\"", "<>", 
      RowBox[{"(", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[Beta]list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ip", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "4"}], "]"}], ",", "20"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7379793500699997`*^9, 3.737979373448*^9}, {
   3.737979404736*^9, 3.737979604362*^9}, {3.737979685738*^9, 
   3.7379797449849997`*^9}, {3.737979776826*^9, 3.737979780689*^9}, {
   3.737980744642*^9, 3.7379807663450003`*^9}, {3.7379808270030003`*^9, 
   3.737980907818*^9}, 3.737981021866*^9, {3.73798113865*^9, 
   3.737981150241*^9}, {3.737989040266*^9, 3.737989067513*^9}, 
   3.7379893476029997`*^9, {3.737989655491*^9, 3.737989664617*^9}, {
   3.737990602637*^9, 3.7379906235299997`*^9}, 3.7380095625220003`*^9, {
   3.738010320074*^9, 3.738010332203*^9}, 3.738066122314*^9, {
   3.738066165369*^9, 3.738066188115*^9}, {3.738066561083*^9, 
   3.738066639698*^9}, {3.7380785260179996`*^9, 3.7380785333380003`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"d29eadb8-faca-4e3d-bbcd-3fd41aa0c9c6"],

Cell[BoxData[
 RowBox[{"{", "2.5`", "}"}]], "Output",
 CellChangeTimes->{{3.737979590182*^9, 3.737979605093*^9}, 
   3.7379799376470003`*^9, 3.737980769958*^9, {3.7379808334119997`*^9, 
   3.7379809129960003`*^9}, 3.737981151782*^9, {3.737989053148*^9, 
   3.737989068164*^9}, 3.737989666468*^9, {3.737990610238*^9, 
   3.7379906242539997`*^9}, 3.737996617967*^9, 3.738009571535*^9, {
   3.73801032406*^9, 3.738010333778*^9}, 3.738012068856*^9, {
   3.738066183777*^9, 3.738066188835*^9}, {3.738066570666*^9, 
   3.738066640505*^9}, 3.73807853424*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"2192592a-fabd-4584-9b1a-8798c5277fd6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt3", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Beta]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t3", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"zt", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"res", "=", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    RowBox[{"Hn", "[", 
                    RowBox[{
                    "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4",
                     ",", "0", ",", "\[Phi]ext", ",", 
                    SubscriptBox["hereH", "arm"], ",", 
                    RowBox[{"\[Beta]list", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]2", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]3", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]4", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\[Phi]1", ",", 
                    "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "}"}], "/.", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "ip", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"zt1", "=", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\[Phi]ext", ",", " ", 
                 RowBox[{"zt", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "}"}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]ext", ",", 
             RowBox[{
              RowBox[{"-", "4"}], "\[Pi]"}], ",", 
             RowBox[{"4", "\[Pi]"}], ",", 
             RowBox[{"\[Pi]", "/", "5"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", "\[Phi]ext"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"listt3", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt3", ",", "t3", ",", "j"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\[Beta]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737979789572*^9, 3.73797985813*^9}, {
  3.7379798947539997`*^9, 3.7379799328900003`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"4efba044-d2a3-4eb6-8c4e-07628b6b508e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt3.txt\>\"", ",", "listt3"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738059162538*^9, 3.7380591645769997`*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"b51afc67-3eca-4b5e-8af5-847cf48d8bff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"listt3", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "All", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "listt3", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Total Flux\>\"", ",", "\"\<Energy\>\""}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.73797996865*^9, 3.73797998721*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"341762ae-b1e9-44e3-a221-be614060e88e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHPh06v6ys77ADV9ytGI8H6gc+
RvrfzGk87PCnryB16jy1AzXLC2+e8T7s8G4/W96jGNUDT69LcdTlHXJ48GFO
mb60ygGrbE+jdqmDDpcUjetrbiodSDqgvu+H1X6HI0En209OVzwgI7h10xWR
PQ7bmuMniIUpHGDY+0Xa9v4Oh4DM14bHNeQOXJ3c1rl1/VYHk9PizolLpQ9k
HbtdcXDaJgeI+yQPnJV5mHXMaT3UPWIHSndfX2S6ZSXUfpEDj9ZukRWfvARq
n+ABaX/V0zNvz4eaz3fgpvMK3j0LpkPN4zwwM2G17PzOCVD9LAcYpW3dKn1b
oer/7XdpZ/VXFq2Ayn/Zz/m6+qpYdSqU/2Q/h35kQWGbqwMDFKx4/8NKRFrV
FipvLwuVh+q354Lqh5pv745iPouDINR+qPscZkHdB3W/A8z9UP85SED9B/W/
wwOo/6Hh41ACDR9o+DnAwg8avg450PCFhr/DNWj4Q+PHgQkaP9D4c4DFHzR+
HWDxC41/Bxto/EPTh8MTaPqAph+HWmj6gaYvh8/Q9AVNfw6foekPALEiMFQ=

         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 10012.926965685072`}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Energy\"", TraditionalForm], None}, {
        FormBox["\"Total Flux\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-7) Pi, -21.991148575128552`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "7"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-5) Pi, -15.707963267948966`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "5"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[5 Pi, 15.707963267948966`], 
          FormBox[
           RowBox[{"5", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[7 Pi, 21.991148575128552`], 
          FormBox[
           RowBox[{"7", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 10012.926965685072`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Beta]=2.5\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.737979987962*^9, 3.73798100123*^9, 3.737981243068*^9, 
  3.737989186476*^9, 3.737989773428*^9, 3.737990619934*^9, 3.737996744398*^9, 
  3.7380098177320004`*^9, 3.738012192408*^9, 3.73806621171*^9, 
  3.73806672285*^9, 3.7380785481359997`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"b7b29a5c-da7c-453b-b2c4-1096a596b4e1"]
}, Open  ]],

Cell[TextData[StyleBox["Find Derivatives",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.737974639395*^9, 
  3.737974721185*^9}},ExpressionUUID->"acd5f5b4-f454-43ae-9ff9-5cc9a52dc1ca"],

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt4", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Beta]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t4", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Phi]ext", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", 
               ",", "\[Phi]4"}], "}"}], "=", 
             RowBox[{"listt3", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "1", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                 "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"\[Phi]f", "=", "0"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"h0", "=", 
             RowBox[{"H", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"a", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]1"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]2"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]3"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]4"}], 
               ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "a"}], " ", "\[Phi]w"}], "+", "\[Phi]f"}], ",", 
               " ", "\[Phi]ext", ",", 
               SubscriptBox["hereH", "arm"], ",", 
               RowBox[{"\[Beta]list", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\[Phi]ext", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "2"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{"ND", "[", 
                RowBox[{
                 RowBox[{"ND", "[", 
                  RowBox[{
                   RowBox[{"ND", "[", 
                    RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]y", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Phi]z", ",", "1"}], "}"}], ",", "0"}], "]"}], 
               ")"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"xyzvalue", ","}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"ND", "[", 
                   RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]y", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "4"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "4"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "24"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"ND", "[", 
                   RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]z", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "4"}]}], "\[IndentingNewLine]", "}"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"listt3", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"listt3", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"listt4", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt4", ",", "t4", ",", "j"}], "]"}]}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\[Beta]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73790578819*^9, 3.737905817094*^9}, {3.737905928505*^9, 
   3.737905930734*^9}, {3.7379060343719997`*^9, 3.73790605558*^9}, {
   3.737915080697*^9, 3.7379151033570004`*^9}, {3.737915136238*^9, 
   3.737915163516*^9}, {3.7379152018859997`*^9, 3.737915204744*^9}, {
   3.737915262869*^9, 3.737915265118*^9}, {3.737917350358*^9, 
   3.7379173675039997`*^9}, {3.7379173983310003`*^9, 3.73791744863*^9}, {
   3.7379175632139997`*^9, 3.737917573197*^9}, {3.737917777321*^9, 
   3.737917812045*^9}, 3.737917948777*^9, {3.737917993009*^9, 
   3.737917995005*^9}, {3.7379212371359997`*^9, 3.737921270576*^9}, {
   3.7379213273640003`*^9, 3.737921437196*^9}, {3.737921468924*^9, 
   3.7379215051*^9}, {3.737977046237*^9, 3.7379770828190002`*^9}, {
   3.737980110692*^9, 3.737980157883*^9}, {3.7379801955550003`*^9, 
   3.737980252675*^9}, 3.737980657708*^9, {3.738009972591*^9, 
   3.73800997994*^9}, {3.7380785559960003`*^9, 3.7380785685480003`*^9}, 
   3.7380789131400003`*^9},
 CellLabel->
  "In[126]:=",ExpressionUUID->"24f345e3-2bd1-458a-9153-7edf41ef0bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt4.txt\>\"", ",", "listt4"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738058826803*^9, 3.738058853561*^9}, {3.738059114035*^9,
   3.7380591157130003`*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"b7e2c8d1-c766-46f6-858b-6c2c7e14c6fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x2\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyz\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x2y2\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x4\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x2z2\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.737980399297*^9, 3.737980422034*^9}, {3.73798937751*^9, 
  3.737989382521*^9}, {3.737990241724*^9, 3.7379902435150003`*^9}, {
  3.7380099892349997`*^9, 3.738009995106*^9}, {3.738078581098*^9, 
  3.7380785969449997`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"a9a70368-462d-4a8d-b969-1d83028c641c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<2rd\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xyz\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<3rd (xyz)\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2z2\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Cross-Kerr (\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)\!\(\*SuperscriptBox[\(z\), \(2\)]\))\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2y2\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Cross-Kerr (\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)\!\(\*SuperscriptBox[\(y\), \(2\)]\))\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x4\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Self-Kerr(\!\(\*SuperscriptBox[\(x\), \(4\)]\))\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.737980454613*^9, 3.7379804581070004`*^9}, {
   3.7379805105299997`*^9, 3.737980511474*^9}, {3.737980592308*^9, 
   3.7379805960109997`*^9}, 3.737989403723*^9, {3.737989573363*^9, 
   3.7379895841610003`*^9}, {3.7379898316029997`*^9, 3.737989844057*^9}, {
   3.737989886571*^9, 3.737989889802*^9}, {3.737990252493*^9, 
   3.7379902562349997`*^9}, {3.73800987694*^9, 3.7380099033459997`*^9}, {
   3.7380100189969997`*^9, 3.738010036163*^9}, {3.738010174707*^9, 
   3.738010205932*^9}, {3.7380102365959997`*^9, 3.738010240082*^9}, {
   3.73801027562*^9, 3.738010290586*^9}, {3.738058544783*^9, 
   3.738058547483*^9}, {3.738074063484*^9, 3.738074128586*^9}, {
   3.738078615651*^9, 3.7380786287720003`*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"592d4a65-c83f-4b5a-b11c-55056473e671"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ytnuEusVC/7/+z5g32uS+/f7vv8BgZoEKA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9396987#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 976.7257555543777}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 976.7257555543777}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"2rd\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Beta]=2.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.73806460274*^9, 3.73806647259*^9, 3.738073228443*^9, 3.738074130691*^9, 
   3.73807881512*^9, 3.738079151074*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"60155a24-d9fc-43ad-af1e-2c49ede830e9"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
BGTMh8vv4ooBzlYjx6f2BBwb63txZl0MnP3LvvWVDQHbn5foJc3R4K+en8bw
WQJ6GC8Sj3fQQH7WpYB4nIAf7Z2PeMbQIE7lpHf+TgJe4/hC5RalQXvKbsvL
A5Jof56F1LQ/GtZlOcYPdEnigMwJGKNEgyL9SZd5iyQ67AkY4BeOhqgXsiba
lZIotDSlyViKAuMeKX1CoiRSpzN3l7yKgnZOHrU+c0n0+684k9+EiX1/Shq2
SOBEoDOv8L8IWBeieP7Nawm8wqW0KflLBChG30hRq5TAfAWNw2pvIyDq8aSQ
XIEEdrWwfuuPiQDjqmHuzUES+OPn+vchihHQ/vsDa522BP5bZczfdwyHNvuS
8X2V4ihqkzKtui4MPnz5a6xeIo4c76Xlk6ZCoeek2ssjdHFkORt8nOtjKHzS
eRNmkSyOi8qzTVAYCpOEj7vvuYvjta0TpUXnQmHDf4vuVQfFkXv087MnGAKq
elpc2lViaKNrr+oQHwzqzE3ZoFQM37xStnbxCwbNA++GzRhieLWJzh7pHAy6
JPMymxQxpLXfvLNqGAwn1l8+HeAhhiH/Ha2p2xwMTi+Cs5rUxHD90+t2TV5B
kCPboWxcLYr9hwgiPO6BYE959sq7TBR5xP+pZV0LhB2kaP1nT0QxJ7Rv8PDZ
QCgkmJzlSRXFlw/D12IOBUKFYIdX131RNF0sM4pfFwiNGzveWoIoCow129kG
B8DUULv5xdciqHDqlGBFtj8oJrU7OTcJY9adPNfbG/0g6Jgryz8UxnLNJ+MK
Cw9gcFU01uu5MAYt5Qf9nnwAkZfsKsJyhfH2F+KGgvYHMCO/upLjL4ztbWZ+
T1IeAKNWLrRfUxgPhu9+zX7gATCXq2ydl0KoelXl6f5bviCleKhPgC6Iv3ui
PXO2+sAx02/xCpmCuMXy6NLzdT5w1yXO7EiyIPLpNjl2/vGG1uffW26HCqKT
w09Owog3uGmm1nZdY/IfCs8JVHlDl+laFk1eEKfrXujddPSGgNuvHLcXCiBB
096Gp8ILJl8e3sj2jB953p3q2xLiCaLXKi/eCePFpPyCeyLW92C1mSd77iY3
LpbqXPiv9zbc0uAwv/J3O7JqDoTsHHGG53vf4++yrXhpqDA9YNARirjfPhWs
ZsPZlg+DIxVX4ZZqIqu6IwtWWsXuHLtkC6r+F3Qnri7XRlrf6DtmYQWz9suR
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
uUkG////Kij+qX6+2zFe4/8AD5ElqQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9397060#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"3rd (xyz)\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Beta]=2.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.73806460274*^9, 3.73806647259*^9, 3.738073228443*^9, 3.738074130691*^9, 
   3.73807881512*^9, 3.73807915115*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"31bae202-f2ad-465d-9b77-35f08148afb3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9397133#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Cross-Kerr (\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\(z\\), \\(2\\)]\\))\"", TraditionalForm],
      PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Beta]=2.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.73806460274*^9, 3.73806647259*^9, 3.738073228443*^9, 3.738074130691*^9, 
   3.73807881512*^9, 3.738079151219*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"d8d0ae99-937d-4a50-a8e2-7ca0cc5a6e42"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+A==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9397206#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Cross-Kerr (\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\(y\\), \\(2\\)]\\))\"", TraditionalForm],
      PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Beta]=2.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.73806460274*^9, 3.73806647259*^9, 3.738073228443*^9, 3.738074130691*^9, 
   3.73807881512*^9, 3.73807915129*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"4b6b7039-be5e-4766-a766-99329deb136c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mlpKTD+7bAr///9NJDL/bjQz2hT+D+6M+jY=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$9397279#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Self-Kerr(\\!\\(\\*SuperscriptBox[\\(x\\), \\(4\\)]\\))\"", 
       TraditionalForm], PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Beta]=2.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.73806460274*^9, 3.73806647259*^9, 3.738073228443*^9, 3.738074130691*^9, 
   3.73807881512*^9, 3.7380791513599997`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"510b41e3-09b4-4d41-ab89-ea57124c1e1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"len\[Phi]", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"-", "4"}], "Pi"}], ",", 
        RowBox[{"4", "Pi"}], ",", 
        RowBox[{"Pi", "/", "5"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len\[Beta]", "=", 
   RowBox[{"Length", "[", "\[Beta]list", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ttt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"listt4", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"Log10", "[", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"listt4", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i", ",", "6"}], "]"}], "]"}], "/", 
          RowBox[{"listt4", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], "]"}]}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ittt", "=", 
   RowBox[{"Interpolation", "[", "ttt", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"ttt", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ittt", "[", "x", "]"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "Pi"}], ",", 
     RowBox[{"4", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<lg(Cross-Kerr (\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)\!\(\*SuperscriptBox[\(z\), \(2\)]\))/3rd)\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Dashed"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pl", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ittt", "[", "x", "]"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "10", ",", "12"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<lg(Cross-Kerr (\!\(\*SuperscriptBox[\(x\), \
\(2\)]\)\!\(\*SuperscriptBox[\(z\), \(2\)]\))/3rd)\\n Zoom in\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Dashed"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ittt", "[", "x", "]"}], "\[Equal]", 
    RowBox[{"-", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "11.3", ",", "12"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"pl", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"11.425295257153826`", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11.425295257153826`", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Dashed", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"11.174048074833545`", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"11.174048074833545`", ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<11.174\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"11.174048074833545`", ",", "0.1"}], "}"}]}], "]"}], "]"}], 
    ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<11.425\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"11.425295257153826`", ",", "0.1"}], "}"}]}], "]"}], "]"}]}], 
   "}"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.738065169849*^9, {3.738065201618*^9, 3.738065215545*^9}, {
   3.738065267986*^9, 3.73806541909*^9}, {3.73806557141*^9, 
   3.7380656447609997`*^9}, {3.738065683508*^9, 3.7380656948900003`*^9}, 
   3.738065728915*^9, {3.7380657673640003`*^9, 3.7380657707860003`*^9}, {
   3.7380658259309998`*^9, 3.7380658294969997`*^9}, {3.738078671922*^9, 
   3.738078679211*^9}, 3.7380787127939997`*^9, {3.738078827083*^9, 
   3.738078891245*^9}, {3.738078953138*^9, 3.738078972258*^9}, 
   3.738079173682*^9, {3.738079275258*^9, 3.738079314666*^9}, {
   3.738079347975*^9, 3.7380793561140003`*^9}, {3.738079387947*^9, 
   3.7380794635220003`*^9}, {3.738079541998*^9, 3.73807962809*^9}, {
   3.738079663906*^9, 3.73807979441*^9}, {3.7380798339*^9, 
   3.7380798795629997`*^9}, {3.738080248932*^9, 3.7380802752530003`*^9}, {
   3.7380803806429996`*^9, 3.738080579466*^9}, {3.738081189059*^9, 
   3.738081218283*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"cf8bd144-e1e7-4bd7-afe1-b2217d9a6edf"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUmnk8lN8Xx5EtZN8pzIwlpEKK5LlElErhG+1F+0LZEpIt2guRiLJGVMqa
5FySpZR1ZpBlxr7vKoTf8/trXu/XPHPvuZ/zOefe+3pGxcnV9jQXBwfHa24O
jv9/7topvH1BZS1OSCpcU54kjrbm+U3wr1mLMx+Umy+fEkfaKsPx0vJrcS3/
VkcLdXEkPFf5d6P4WtwmpcCazRRD9emBb89xrcV+jo9ecuaLIkf+WTlGlwZ2
bF71VD5uFTpb+WsiO1kDNx6y5gtU4UWOersSSl5oYEZQQ5xOFg+yelFoXROn
gUd0T0drbeZBmtei0vojNXDfX4lx+b3caEzN5siaEA2sln/mNmcAF/IKLau8
d0oD18V9suUaXiRCLDISzqhq4OzTUxtKz04Q+J7PPiUVDbxnV97EotA48a/e
mqtZUQOf6j/KubR7lHA/NnZ6p6QG/mZnsD+7aZBwuqa3TnuFBg5jLezsWNFN
EBmfP02y1DE3OnUsIrWS8Bl/ePl1mzoWlaZa1u0pJfI3nVByblbHqP74Qzp3
PqFTxhXcVKuOOQTFR/2GQ0Hxl+WughJ1PGB9jOmYXw3zQg3Nfs/V8Y7ZwYTP
Y2wwsEu+uymGHH85ZW58bze4PfMwHotUx1fWht/1zuyBQVWZl8fvqeNL/Eup
Zw/2Q7PJkbNmPurYjVuX9jlsBCRvrZNb8FTHfpr+4S+rR2Hf96VvOVfVcR9e
7HrMNw6VDok6qufV8Q29mvKPnyYg/0rfLJ+jOm5mqFCVJaZhKr/gFbZTx4x8
OYWvydOgs3j74HUbddzhpd1mrTsDqXe0Pg/tUMfyWtTTI1az8CTpSsiPTepY
1rXFbO7wH7jaNC8eKaGO35TeeU9ILUC0rc2hJyLq+K9cZMMnnwUorktOjBJU
xwvpBo+UOhaA98fuDTEr1PGWJOPxhwn/4PnXhD3x02q4wJ9OT+FZgrLt008S
xtXwHUGz47MHl6C/1LLtxbAavmS8Nkskawl0SyYuJHWr4SzskBKxcxmq8s1u
v2pUwyXnumty9TnwmP7T2vRaNay1tLu39j8OLJEzLP36uxrWVzw1jT058LF3
T1Kzvqhhq1WRPqs/cODgdYMjb0ANc4ylbbn1kwOnZ27Tf/dJDce4nfD6NMiB
p1/1lb3PIecLKp6/p8iJZdW2CuS8U8N0hcOhFH1ObJLyaH9uphqmejxVCNjF
iZ0pPTF5r9SwR8R4W9JxTnz75RZWfrIajr7BHrntzonfrnmgXvhCDTsYD1/e
EMqJG5+zXT7GqeH0+9t9CwM58V95g/yip2p4iyq3th35/Jpndxc/RarhRRq3
Sr4zJzaX6TT//EgNc6WuLOqz5cTno/Tul9xTw9YlrQeGECfODW+TLw1Ww6PK
f+UD5Dhxi8hGp7Kbavjg8zrO1dyceOnBrYwvvmrYWOrBxaRRDrzzrs6WCnc1
nOj8bYffZw7swh98s9JVDetdZF77lcyBn4QyK6ouqmG3JtbrLXc4cEdQwH/f
ndUw7wbOaK79HNjDt8Gtzk4Ny0dYzNBfL0PsnFpRvY0atjDwPZ94bhngmi9n
o7UaPqcj2FlCWwYBD9pj+nZy/O4L1fIxS/DiktebVj01LN3i/zD40iJ8Oyo/
0COhhqu+pXgE0OfB5oUxMS+ihsX/6R3RvTkPTaxj0SJCalhh5yqREfV5aHdO
NjfiVsMDX4oPvvCag4nz2omPZlQxVuiVVRH4CzJeJoeM6Kr4trXA6GXxWXhe
cOK9Tb0qfllb23f4/QwozwXxn/6hiuNSDxZO28yApl9l/qOvqng3vfn0zvvT
YBK0T6I3TxUXqhwOSOeaglMPnWoeRaviiu/G5bSOURisDaGmRqhiY1Pfi0Xy
o+Ai9sqn6KEqVq80+NXvMALXngxr9IaS4yk5yR9uGoK7sR63jK6p4hewaXsr
sx9E2qLbbNxVcawX/6HTCv3wZPVHvdOuqtjSo8FC80QfyB7/ddfnoipGyxSr
bWm9EP9ykf3orCp+fexO0ofRHqB0KRmmOqtipZYn0QkGPZBGNXtcdFwVb85r
Oi0V2A1ap0/11x5WxZ2FPDcFh7sgOy3UpNdBFUufyd89lNoFmwbSo+btVPGi
2kqpq05dULT2+4jIPlUsNJVoGqfcBV+yROKMrFSxZ8Aml8pENjA+xPx5tEUV
j7k3Ji3ls+DwTNHeVH1VbOZroaAcwALWpvbUog2qOBCttsC7WDBUqGLfq6GK
rT4rvGqq6oTFktfZRnKqeN3n8obq/R1Q07peaEFSFf/+qcj1abodnv/OPftJ
VBXrnjC72xLTDsY6sMaYXxXbv+f/4TrSBkK7zH3+rVDFQdUfFOpi2+DX6Wp6
8TIN3xfbNqyzuw184hvvb/tDw5Jd3Js+FvyCXR8dBxanaLilzHr7j6u/QI7e
vr1kjIZFQ27NZ+v8gkKhgXmTPhpOduy5V5jdCrc1Lh9YZtPwjnLx+XLPVnAw
n3oP7TQ8gXcYum1rhd++/84hOg0rrGmwDWhqgYqngeUc9TTcw9AtrU5ugagc
XuXSGhq2rM/UuOXZAvrDokzTchqO2TonQFVuAW6+aF0uTMM/VzDlxv42QxNF
4WHZJxreWtK5819jM7gfUrXYnkPDqChkU87jZjDzev1yxTsaptpr3jJ3awbx
iPX/vrym4abHq9YM/dcMXW9yHULSaNhdUW9XzNZm+FBtmGOeRMOU5Bd226nN
ENRbIsyTQMO89Q4hnULNsJ/T/MLXZ+T4tifUTv5lgvLq6q+3omj4b8Pn4OJe
Jkxs2auyI5yGHZc9+nqbmIDtG/14H9Cwf/DdmPqvTHh0xbG54jYNPxRc0eNe
yIRj99v1wkJo+O32bvHSLCbopDs9sgygYZ7m9a5vkpiw9KV/iM+PhvM8Rs3W
xTLhZ+elHVXXaLj7q3KzfiQTEhYmE2+70/CHaz+9Cx8w4bLMtUUrV1I/gwWX
rDtMMNb757jyIg1Xvsnk5gljgpBNYG71GRp2uNsTnH+LCW0XeEXvOpH58H5t
kEdyVui9i7uO0bABlevsbCgT/JJEKwUO0XDt5oljF8nxrEuiKN//o+GVTtfP
CZLzybfK+9/bT/LepB/V4UwYmn3RYr2HhqdeuTbHPmVCkZjqJqGdNDyo0Nfg
lsCEO+teP64xp2GpAwJ8O9KY4Lhz/ch9RMPPuNgl/O+YoHE613KPMQ1H/3Ax
f0fq8zfAMHnVFhrWdy5kr/vChMrnJUs/9MjnXctY3j+ZcKapKm+vFpmPeE1t
i34mGEzsERNRp+Ea6QihdzNM4BFqvFRLoeHsghqvfC7SL+qOVY/WkP7V7sy1
EWuGlO3t1H3yNLyIRXfukW0Gj+NON0WlyfGTj5rYcDSDuW9/a50YDXP2hr+r
GWBC94fJ8P0ryfo4yUrY9IkJz3nngw7x0LC8qOOjJ+R6Dhzi8nDmpGHm3Hqr
wxFMqOKUOOA5R8Wma0RvKl5kwtt9+vLPBqnYUWx51l6FCWdTjAWTeql4y7/e
1S0ipJ/+mv97zabiaOfdfZ+XGBD54r+O4hYq/mj1qjy1nQHeY15JrGoqrm/g
yqK/YMBGs5uRg1+peJrPrsYinAFDUWEhU6VUfHLB9LRIMAOObos5w11ExQIl
gpczzzLA7P5HTY3XVFwjW1w1qs+Ahc5ShY1pVPwszTVJdC0DcvW+CRklUfFN
fXbNrdUMUP/VOmYdS8UBk6sCnPkYIKT574PrXSp+fGDBrrGDDl9vcKd4h1Lx
VWuhdFc6HfzrhaICg6jYMGie5lBDh0nv1dcifajY+YA/D/cnOryuUT333IuK
N5crvKj8QIdTyjoHU92ouEUy7UfDazowKk22Flyg4tPLj/8rjqPDYwVLbXyG
iivOz/XEPKHDTleb1dVOVNzscMzz4wM6FEufWG49RMVLx9fxfAmgg+eFcxPd
B6g4eNcLo9c+dNApucIesaXipIOr2+s96JB4OvDL0i4qjgrdQ+84T4dDH+/k
8llScasH38myU3SQXBWRKrqdihM12r92HadDaG5SGGUrFT8JHA5lHKAD4s/0
1tpMxZv+aMml29Jh7nDOeX09KjZufDrxYS8dLq0ot96hRcZ/nPPXFUs6qDrU
GNuoU/F8Jy+NYk6HjtdN6xypVNx21nLNSlM6xCy1rTmpRMU7Oit6aCZ02G/b
K3JBgYpdde5EeGylg0DaKIe7DBVHbosw+7OFDuVzs5O+ElQ8MtMrkmVAhxt7
lrpCRKj4vfFtqQh9Ohgk8jY9EKTi1Yt+Lum6dDCqvVptykfF9GsHbL5voIPJ
YlvJLBcVJ5gdKqWtp4OZllVuxhIFH66RSsxZR4cdB3Myjs5T8FSw9HcvbTrs
ClvzQuw3BVs2Dypc1qLD3rw7T75OUjCxZfWVKE062HbP3Lk+SsEl4iYpY2vp
4CB24ua6QQrOYLQ8uUbyEeK7B7uHgnumbqxZT/KJywYXolgUbMcoWC1J8qm4
xOM72yi4bVzSVZXkc9VC/y0yKfjAUfsYew1Szz/Xdr1vpOD6jYJ6+ap0uKLa
TZyupeBrOlaNplQ6eAd+1PxRQcEvvPT66Gvo4PeOphxYRsF71tV/bFekQ0D7
I6lNJRQc1NVoL6xAhxDBBYHBjxTcYJ1z9qwcHW4bnuGIz6Ng+pr+pAEZOtw/
Wz+77z0Fq4j154dLk/6LMh7mfkOO16xp7yRFhydfXrEK0yl4fK2m1iFJMn+T
4oxLKeT8n46MeEvQ4bmS/3fll6R+ZkZWJeJ0eLlnEDfFUfBNT6PxtSSn+Nrn
335Kwe389PBPYnRIz4BM40gKTv4QyHIjOYupmTjxkILPaBTesyE5myc6OuUu
qa/SxPb9JOfqcd53DKVgs72JH6+R/PHkpUChIAoOO789vozkkkdML3yDgmnq
e19sJOcr+2x2yeM6hfSH4ZVykiuG35zU8KTgL8f9sA8Z7zc5OYe2K2S8Fo+Q
Pbmen5Yhux9fouDGlMGX+8j1NniOm5qfo+DFjSsiXEk9GMmHNv91pmD+ZLvy
bFKv1vqv2lnHKfjOG9sBCVLPjuUNlBOHKViGz/ttjDwdutY9l5F0oOCdp7dW
mpD56DvMt6rKloLzb0h285D5GrrjxuW3l4KneXw/jCrRYayg/c/6XRQck9PX
O6tCh6leq9FuCwo2Nq5dt4ZGh3lTpWbrbRTMzJ0t/kH6Y8n17o/lLRT8T4R6
2p70J1fCbFmOPgX7KGZ1z5F+Fpj//kZBm4JblbJVX+rRQVhjc3KtOgUPBsrv
eknWj/iBpJhgKgVnXQTeEkM6KHzwDh6Wp+CkrKcC+xEdlFnd3i+kKZjbtejD
1+10oAnbuNiJU7DHo9+5B8j61r6gevDTSgpm4Gd3asj6N6Y06Nz7q4IVy5Lx
0jEy/xKC+nYzKtjb8omOoTMdVvCYGypMqGBra5f798+S+vfnbc/sV8FHXzcN
+V2hg+ObZ47fGSrY5Rv1j28wHTy2nAwSzFPBurmR7u/f0KF5bWxYY7YKXhgc
jnHIocNWhcb7cVkq+Lgwz7zYR3L9S+ZPtVJU8NySq1lZOenfLxpZ1pEqWEji
XPnFNtJfeyfo966q4EMBEV++CjJAFK39ZXdZBSeYiwwtizHAfaMTS+G8CqbQ
VylbyzLASLJpKPOECtZZtFwrqcqAqpaC5e82KnhzS17BJYIBPadurhXSUcEG
KPmfzDUGKPoK37g/pIz7ypQHHCcZcD7lm0x8nzIWn7mt3P2XAfk/Qj+86VLG
Bn1ThDcHE/YrL/f/bFXGu8fZn8vI/S/067it2HdlbFL21Y+uw4RxkXqN6Exl
PMW4vLXZhQllKZFNLy4p41dy95xCZplQ93yj45l2JcwvbH9KQaIFas/l9G/6
tBrzebrHK779BWlr67fs+6yAX/YeTn8i2QHn1N+XBuQp4I81RkOxqztAUzV8
1/s3Cjguc0fnc7UOeKu8/4h4ggI+VVjhdGtLBxTI1N9s8lfABu6qwhxHOqCK
p77CESngdxcVKySSOmCYXWd/8os8Vnulm3hKsxPedma3h3+Sx9Kml7k/6XbC
lfbHZ8py5PHNNbdTBbd2wkzzPm9qijzOE3/mHmfdCf9q6+J6Q+Rx9iBecr/U
CcIldV3nd8jj6mcTP5ayOmFDbN0Vt2o53K28Mi5KkgW3d3txzWE57LMwczhT
lrwvLCk8uVkoh9/4iLOLFVnwyPlswf1Xcnj1aJp8I40FY9pLi2m35PCDPVH+
3/VZkAVa936ZymFex1spvXYsIC9XqeZFsthudX6j2kMWBDzV3vz9vSy2mBxQ
fxHOguadDVX7M2Rx3ElPD/EoFoS9XT1yLEYWZ6KrXYNxLOi7lqt73UsW98rW
hRzOYEGKQBe80ZXF2gYrfCy+sEBlw7ZW6UwZbG7J1y46zYLdtoPROskyWPlw
2Mu3syzw9oiy2xEngzdXffOy/MuCn4WjNZ73ZLCuuZH1hUUW+JgmQNNFGWzY
IabiwceGJtvllAhtGWx11X74iTwblj0yT76myeBz2S/G2Yps0HzqsKZMUQab
JGp8XavEhoBf755OCslgLZ2IxgwqG9adOnF336g0bheRF7yozYZQz1JX4bfS
+Gz1G5sxYza8f3pZWy1NGgd9Ou/XZ8KGto9yg9sSpPGf61EDzYgNuktXnS4/
lMY71f1uvjBnQ2co5b8aF2nMjPYeGbJmw5aYYKO766XxKa3ZNO+DbHAuWv8n
UV0aC7N22osdZsPDtl85H5Wk8fFZ6vmUI2zoUdZfNygijZuzyuDjcTaEZ/Qo
WU1IYaet1PaXp9kwVGTBw/teCidu2VJ87AobMsMLvrmnS2FW/q6NBVfZcOnc
2sfsF1LYLetVL787G0alVil8fiiFOVP/LD/1ZMPElaYNHpek8PDxsZRTPuT6
LHf8ZjtLYba2XUmoLxvc1hR+sjkshVdh16VEPzZMf4/bobVLCvuzQvu++LPh
t5rzkS51Kdwcr8WRF8SGgsUmlX1KUjh5w565F8Fs8G7a0f9ZWgrfbY7kCAlh
w1ygptszHiksJ2K5bnMoG4ocn2/mW5TEvpMPd/OGscFnvfCix4wkvvD4w+Wf
JP9rmwzb1y2JT2Ruz9h5hw2fc5z3lLRKYhXf+5//kex/ly6u3SCJWW/PVqbf
JfO9+WM8X6kkrhm89274HhuwsJazZ6EkzjHPDgu6T+a797lG9ztJLJC5eqf4
AzZwRQbklCRIYj/Tu76KD9nw5fyUt3a0JN7/9VRfNMkh6JRJ7ANJzPfPREfg
ERvMZRgr+G9JYv9HvPu8SOYZs6z29JPEj9ZmWP0iuaL848Nud0ks5yEpZfiY
9E+clv3+i5L4j6zBh0ckW7rFy4ETOV7ZgmInyfw7RTq1D0limpydrXo4G6qV
AlNi90tiraq1NudIvvt76jz/Tkk8531ZNInkXT9OrfdCpD50wcgmkgVTGDPd
myXxobCpxmWSa3ysivavl8RpW0TqqBFsuL+/6CaokeNF2oQgkvdoaFusWyOJ
y1Hi6H8kCy/HC8RJSeI9f552nyC5li5Sx79KEu8bvd/iRPLjrMAoL25JvI7r
zo2jJO8Lnj7UsyCBaSrff+wjWezQaWXbaQnsvimiypjkhg3MXhiSwI6aqy+p
kBzBtzNzXZcEFht+nb9ExmfXUXQlrkUCtzv5pP0/fsk8bYOV9RJ43u+bYTLJ
9HsJC15VEjiN1upygeRoJ9HSHpDAyhYD2zVJdjAMCrUtkMCvqvUKukj9ZEVn
rPFbCewdv1ARSXJL32kxnTQJXJ/pf3UbybGfmYy4eAk81bmQ20nmR+Hip5PX
7kvgoDOs5VUkx1ZV7VgVIoGVNKr1npP5lldjaCX7SmC1a89NqP9n9sTszwsS
uFzzeIMC6ZdYk6XWU04SmKvin8MD0k9yzwXx/EEy/sPsN39Iv8k6qN1V2ymB
z/f++pJP+jEmV8+1GEngMJGXAYIky4ib2ttukcDvEvn4DpL+lf5xeI2/ugS+
dHH1hQ7S75Lbwz/QeSRwVfjQoQiyXp68THh6cVEcO83tM3hD1pPEUqYf56w4
TkuW+InJehP/WLFjXY84vr5OQLshgA2i6/+1hpSJk2e37e7xZL0+vr8SyxeJ
4/sPxFf4k/UsMiSdmv1eHPfT/pg6kPUunLrRte2lOK6UPVIxfY0NQgpnV+jf
FMcHxRU/NbmR/vH2GKj2Esed7gpRPmQ/EWQE/jjuIo53/xgQlSP7jUD486f3
jopjHfrOfuIy6We+Bq3ureKYMMhi6Z9lw+1TnaLX9cSxnn1S7AuyX/GVjcwK
a4njN+ZKg1yn2MB7gw8byYvjOwIC23JOkPU0bWwf8VcM86prRhSR/TFk3y5D
jQkx7MxoLx10YAP3W4c1Jf1iuE+33lvsAMnn3QYGGWL4w4lGz122ZD13vvIz
zRPDYfdrbjjtYsPSN/HUiati+Hx1cbOWIRv2x6jlyVwQw09fLvUKbGZDymmj
ryZOYvhkwPDhbn2yvjiceu/biuG7hQO+ARtI/216r7pWTwxnJZ10vqhO7g8v
bdJOzojir3INYVySZD+57Jx/e0QUz0V9d70mRvrf6FrFux5R3B01l94rTPY/
ekLfYpMoTr8ptfLtSjaUC4ypxeaJ4pMR2xzGllhwxPP+qwYvUax5pbFLa4AF
78xeFsy5iOLN2xV1NvWygEs0t1L5rCiWk6LmbO5iQfrrX/0uDqJYVfLBKY02
Fsx0amoIbhHF36W/bC2sZYF0VMT+sCkRPDa41f1xHgvcCSH783+E8bmU0DJZ
PxaYb4dbzn3CmHlkpcP0NfJ5S7eCo3RhnLdKovirOwsK9zbL2+YIY83LxMT+
iyz4dzSFbeQqjMvex9TwHWJBiJ+xq1D/KtIPRBy/AQuiP166+44hhD0qp/XE
6zrh7Gel4oyvQjjZwy2+9GsnbCltGE3OFcIu4hfqjn/qhNaqLftjIoSwNPel
q+fSOmFNM7ds4F4hbLO4Pz/DtxNe/X6ealshiG/pn+DopXRCod4PPJsngMWU
/tvKfaoDNsg8sBJPE8CvzfinbB07IH1+d51OtAA2O99XGr67A2JKazrPeglg
ZiJvRKd+B1yzqVlqMRDAHpMCBp+4O8Dg4nfjkoKV+EJ4ecKlxHbITaouDP3I
j3NHN1gn1LaBdugdlJzBj+vMvZ8IlbVByvmdVfCMH8ePPmo4n9sGTzZUM/9e
58ceZ7cOTcS0gXtJ1e8LRvz4glP9h/Un20C3tVLf5hMfrnh1acXJsV/wTqwi
W+YzLx7imvdcvdAKtsfEdrEyeTHH3Dn334Ot8Pv1ke70WF4s6mX3p7C5FYzN
p6WMvHmxy62L2+bzWqHKS9n3iB4vPuN72OWiayuwfvlYJGbw4AsMBp5tbwGx
tPWtmtHcOKNFQUoqoxlyp3zcp0O4MRdzLmH2STM4EhVCxe7ceOQok+dzQDMk
NB8h9uznxnD7pBSHYzNoCt5NcRXixrTgdR9KeJrB7EqPS27QCjxmVLz+6HEm
uBs9W2HiyoX/ZWw0C1gk77dPFNoOHOPCb2f0V9T1kffNsfhc1z1ceJhFyeSs
o8PvpKTTiVpcWJQ7qmNlEnn/Fsyq5B7gxG0m7xTSzeng31Zy7/sJTjxJT1w3
FtwEt/17JA7acmBDng+vdAcbIL35zMhVUw68c6Br9uDPBqjWHSy/u4EDNzx/
n3gkpwEE+kc9i4U5sCVrCU37NYD8i7F3RPQyvI/d1HdcuAFUTSW3/Ahbgl7t
+ZUrNevB6NZxq4EL/4Ay7PJ2R95PqP57I/WY9T+4FfbhBOeNn+B46TkXXesf
LJmGcJ42/wmedi3FpSMLUNQ/HEFp+AHZKnYb41wWYLgxINxhsAbUS3bI73Wb
h2iFc91veL6D5J91IznX/8LV7858emMVkHxh907NQ3+hUmw8rDO9AnQ7LqS9
NPoL5ppMGTHnCtj39dWJBwt/wDCdObhE/wr3IlXoZ278gcd5e6d788qBa4NU
iVzgb7jMVRzYd6QMwpP1FB6f/A3XHiq4HxUpA2UZW29es9+QvYMIsSwthW1L
D3WnuX7DBvHRO1eopeBdw/+qJmQWFnvX3RwtBeBD6tzbT8+Cit+zpz9XA0Tn
WJz8aDELWeUzy8HeJZAbG6SQxjsLf+TeVjlpfobtwoneiv0zYLSo+iYssBga
AoEeUTkDA0Tp4DXmJxg/9+/RzdszEPA4yv39zSJoertRdO+ZGXhQq5S648tH
KJo581jRfAY+Ol8jzvB8hBdGz0WHVWZg5cvVZ1ftKISQgPrHH5enISja6GWI
SBFcqOAVu90+Da0rbc6beRWDjZBx+IFP0yCtwmc23VIC8jFp4dNe0/Ds4Vvd
Q99KYbn9l1iZPcmGxQMrZsughyoW8Vh3Gp6qy1ldUCyHd+98I9aNTUH8NhNa
9vEKMK/cF3n29BTcO59s/DvzG6xdFSphsH0KxMyfqR/O/g7Cdp8iuVWm4PP2
liWutzXQ0qH6JLFtEuKpeZHHIn9CCe2w5JWiSThaLNKl51MLKRcePzGJmYTX
s7IvLLXrwOX3/JNfdpNw2yT15arFOrAz3iD1euMkbKi5WWxwrB62BJ2O8haZ
BP/2f67mRfWwpipWynJ0AiKUdystizbACuG6KKnvExCzPV5nvVMDDNjxSPek
T0DWjBJX/JsG+PnMKPpD6ASMsVcsiU43QE6nq3TgqQm4/dE71E63EWJUU6Nt
zCYgdu3bZe2LjXDjYqv0GuUJMGM1/jgd3whfnZR0WhbGIe2e3H8VVY3weOyO
jlfBOAy0vJ2THm2EQz4zOhLu46B9/YuSskATqPIeX5+tMw4RMmFar5WaYCK8
ev2eoTEwcV4beGNdExSt1t8wlDoGtgKtIU56TXArI2FD2MkxmCqqilXZ2AT7
Nq3cSFtNPk9VVQ9WawL5UveNpc2jcGhyzUMbiSbo3d2x8diTUTjT2Ktn86cR
sputdBdsRuHutQy/XQ2N4HMqRzdGcBR67j2rWZnSCBYTq/U2VY5AbElv2H+X
GkHU77ZeQ9AIVH3+LP5bsxFa+ab1XE1GIHrz/vqczgZIiTyqLzQ/DLTWWnWH
uw3gqlSln5E3DLF2533SNRvAKFN3046rwyBpu2fdFVwP3JvjN3VrD0NucGaK
l3U9/CzjMwgYGIKX0TnmId/r4NleN4PVKUPwb0vU1ZOoDnTOWG52UBiCldWW
PI4iP+Hv5PvNM4xBGI88ccw+pwa+3FDcEh4xCJVjGVO6xHdwjJrc8n3lIOz/
aj3WIlQFVJUjhue+DkDknFPflz0VMJZVYcgTOADtOhpbGz3KIbg8zoj42w/B
q4wUU90xDPw0jDxd2A8GyQnW6qxi2NvCHL7n3Q9Bpor7fqcXgvyYRHzz3z4w
/u8Bv7bNOwj4+352qbAPTtEVibmCVOjl2rdX9Xof4Cy/VdxeTyFb5v7y1ble
4HjxUbR8OIKQpmg6xnzshYF73XzJWSmEr3ZVdsn1XrAy/O18Tj2bYBmcWdlr
2As8li5vh3TyiR2m3E6C8z3g5nH/8oPLxUSWdVLRxqIeCE0upXO5lRLiB5CE
o08PyCaZGYZUlxPeJzou+hv1QLK305nUbVVE+wW/8pT5bsAKapwWiz8JM0/5
1d+LuoHD8cmJRx5NRPrNQs9Jn26oEzhTZeDdQng8mVEzWeiCwqXUQ1sb2YRA
yaU7zAU2oLeXGUGWI4QLpei55HwnnLinf+AN9xxhuPn3npM+nRDjKitncm6e
4N6tu/xmvgNES0tXLNcsEHGer09aLrSDN0fL+8BnS0RVVayaz79fsE8l5cHe
1VyI4uqb3bnEhOT1e4tYJXyI8cm4/PWKOkhs0sqR3y6GFK87dUwJ1UKdY0de
aIQYuu9jrf9Y/CeowKV+dbYYunhjNevb6hrwu3SBa8BXHGkGl25G+lVwoovH
0i1NAsWGvH7QblgJ/SK547FjEkggNLLbh6iALU+aV+dtkkRDt08/yttVDrd/
1W96jiVRxsOV/ZonMWxcTAy2qpJCusq91x//KIHd15XCRPmkkTi1QPV7czE0
4zdnQs2lUb3G4RtovBCiRnb2HvwkjbK11q31nc+HyctLz9JmpNFjneWmPJ48
EJsVPXBTWwbt00/W1lJ8D1N740Vynsqg4y5D2d/3voW2ks+UxW8yaI3HQ37T
06+h0+XOuff/ZFD8TUaBVkQSBFa7FhgclkWFArNrzPbHwy6xjYzfYbJos/S2
n9r+UXCzcch2+YMsurhdYEHnwD3IPXal0LJNFtXl6ufwn7gGAZxR4ZUr5FCT
R5aJ7vvjRFjqy8Hn0nIo/prF4L7nwYST5+ITzglZtC/70NdtieHEv8YVYc8q
ZVF9iri0ncczQsWDpX85XhZl7D6tl5v8kkjjxxK3rsqioR2lv0wepBAHzWtj
BreT82+9rm1/Iot44Lf+QlG3DGLEXrgwTssm3na0vNz8Xgb9fhpTkiv3gSBy
zthSb8igzREzZ4gV+cSsf+v8WVEZVBiaVWDP+Ex4rhfWjVSVRs3BrYLy34Ho
yXknerVfCvkh7uzxTkxYmj6T4EyXQvHbdLnzmsoIDbM/hw6qSqGOzQ+ziJIK
QvNiGWaKSaLj2jsW7cN/EmF1713dPooh45i0h79f1hL5Hh9cM53FkFDQCtHd
jnVE+1zbiwUhMTQ46pw4eraeYKaeKBM6KoqSvtLKN4Q1EtV/pphoYBWS9Exb
WfCVSWgX7D/BIcKPuDIPNITtaSa+NwkIeu/jQxMs3jhHejMR/PpF8rVwXvRj
91nt+Z4Wot63hPO0OA8KpWnYbONuIzJS/Nf+J86F/g3afzupwiIOCU5WsY3+
EtPcb3R2nWYRofn1NOEvv4khJZ5I3QwWYVJy/dri7lmi+b+8wys2somLHd2V
9WemiLxSqdEU1EU88//LL+UySGS1Xd7/IKSLGHfsFxRN6SNS/nzN86zqIt42
e8iYs7qJOPE18seEugm3Ba5HfFQ2EbHOy3/Hvm7C50Z/5smWNuKO1c8unSfd
hD6yfaHtyyQCnNUsZZq7CTUjAVDUbiCu+ftnLiv0EN/u2xrJjVUTLs8YIgPH
e0g9ZR9I61cQp3N1POqSewgr+cf/EmLLiCO1oc2F/T2EyuCmHffMSghrns2J
d1x7ifEdrEV3+feEmfIjHrecXoLr2WxyQUUqYbS1//yhP71ETO3qeOeUSELj
6lNdrZt9RJXvzNH9J5+B0v3xaIkvfYTEvGjIKbNXIP3KcmGBt58o4zggm5Sd
Ddztf77UPOwn7mOtvAS1Ilj4Y6OR19BPnFbWEe98WAJT4un346UHiA9e09vv
nygFtpXjfy4JA4S+4JZZl+1fwaTX7+SP9gGiodLuucFEBcQGJl7WXj1IbEif
6R8JrYLfqyuu3zsySGz9nOowxPcNbIuGbg3FDRLtMlMXwty/w9sDIhE7fw0S
/6pOJSp+qwGBab2EdPkhIoh924dL6CeUad3IP/NsiNhQcXtl+No68nySWPa1
eYjYoVxxLjSrjtyPK37SZIeJThs3WbpqPTA4hluDHYaJq+22jhlR9aAbL9Lf
FT1MuOxfd279v3p4aKg/bcoYJnbrV4ZFHmyAIbrj8kupEcJfuO8359sG2OF2
Q5DjvxHC+5zNbNpcAyQJJ8kcfzJCvP9WVfbWuBGWXldQSxpHiJjPMi8srpHn
E8vh9aslRonUas5vTzMaIb9bxNjPdpTYfW13cH1jI4gH6Fv9Ch8llvd+FlD6
3QguigftjepHiU0tci+zRJvgW+GNE89Ex4gTCerBadQmUPsv6dJfmzFiRi1r
esv6JgierPB2eDRGnFm4tPExeZ5hPRgOyf85RmimrPdr3tAExpqi4VLC40Re
xkcJE/UmiKnQj/fYM05cf1K3eVS6CWacDmY03h8nRkYMNcQ5yPPP8o083Zpx
ImjrJ1pLVyMw9tSzqngmiLf88pddoBG4n3ef8VadIPraFEyXohpBd2h2RN1i
gkhAoazcM41wYgu/O/PUBGFZvOZeycZGeBgqPxcaMkEcbH4dYPmnAYqbtG8a
pEwQFqsnOPwKSH0pBE/flwkiUCLX+rZbA8he3X8vqpvk7cUvYzRIvcFZzGLF
JFG06SfR0lIPSYdvr04xmySSglQPP9eph7qM2GQ7p0li69jsgWsNdbD0J2vt
iqBJom1bX5yeWx0celK/yal0kpA8cJ2Da3ctSPyQ36uMpggfuwLH+5XfwUxh
XVPt8Ski2vw+nZv5Da6cJw7dvDlFCN2aY61gV0MNz6kzHSVTROTm6sQ/vZUQ
YvLG//m2aeK6sXuJ8+cv8OE+cO8+Ok28DETJJa/LgNVaf3fBb5o4Er8kfiqq
FITX9ohmPp8mnr7c8iDrBgbja7+jDxVPE1e2TFPYlSVw4Sv/aoG2acLG7JmJ
WHgxxEgoJH9cmCbiA65finUogoqT69aeV5gh/CUb14aoFMLMO+Kd7NYZImZt
6Qi1sRBqtLaKXzk6Qzw+u369YcRHSH5l4Fl5c4bYIvGlrcmmCGxfrNvqVT5D
GNdFrMqs+ATvHypUNu6ZJYrTjzRSk0vA5fKfjocnfhPV/BNv+oXKoF/znTBP
6F9ic8tFtsbKSihJe331SPpfoq74sfyAXSVEU9Kacr79JS5Va7TKJlTCDvn4
WCeROaL/4s/8pg1VkLLynhqOmSMqDXMvddhUw4mBMya+mfMEkl3F6e/5HVpT
17hM1v0jBJqFboicr4V83izb9Kl/xDHrCYmC5FqIPGu4+bjkIsHnb/ibs6MW
dq+15/jhsEjcXp9z74tGHZRk3YlI71gkaCduRRjFkueanJn84yNLhN8+jgLp
gHrIPdG73BfMgTQb3zrKbG4Eipi2W9kTDnSqte+XzX7y/lDq1hOfyoGuSDeN
nyLvG5cpHNX2lRxo7RvimeqLRlDrkY8oE+BEGgzPBF4esl7O7qMlhHOi0TW6
jR7fmsDX5ZPVfy+4UEPt3ZFL2xhgRsyeEn7Hhf4+NWKssWWAgOj6wMoSLuQ2
03W/4AwDYt4nfTTs4EI3919dmfCIAfkzdzTXrF6BVo/VtmxnMWDKx1GoP3YF
qjAdz5C5wYQLYbO13tHcaO4iR6hbRjPoOq4f2ZjGjZLUUX3xp2aY0zjPP5zH
jfT1gyynfjTD7W9t6CidG1kszs6umWqGtFXl700leZCF75xyoGELsCMjIgUi
eNCh2we7vMpbwPHleofnD3jR6+mqjGffW2GGr+NkRgIvWhvhn/O5rRUeu96/
lP+OF2Xk5iR+H22FapPBwLp6XjRdc8o/VeQXGLUnZXFL86H0bUf87Gx/gaK8
NNflBD5kW+Ca9rrxF3RG/sva9o4fJVSnhjMq2sBv4XXBLsyPxF33mh+nt4Gs
88Eyh3p+VNFQeLWpuw326eYzr07zoy2KcY9CONoB17lypW1eifKakNoWw3ZI
WtXtIIxXokfSB2FlejucCavm6qwTQCMBG/qzrnXAEZGLBdUsAbQrOe/zluAO
2P9U6FLuhAByX1xbmPuwA4xf2dDviAoij9w1+jdSO0C8kv5Kf58gMs4a4d3f
0AGfebt2360VRHs/lawSWNsJkqHz0Zt+CiGQP7xn8lsnCAg/t1buEELDLguN
D5s6YTlqG4fgmBAyot9wXN3RCUOpAedZq1ahR3pnvVZNdgL+ymt8b88qJHoY
Oa0WZMElHgk2q2YVSjn9sbZfhwVfQrS07n8XRv/6z5sevMoCo+Wol2q/hJHb
7479up4s+HCdQ7p0SBgdmcsI4L7OgiQXOsfvlSIoq5qXeBLAgiDHm4zjViLI
XtTk7MlHLDDTbgzU+yqCNKQL0nMyWVCUtu3PjyYRZG3wwlrpHQs2qqRfOtcj
gnyWJ6ghH1ggeq8k8yenKKL5RPsYfmQBR0Bk9AoVUVRw33rAtoIFrPPbLl0+
LorM+Nz4zTpZoPhqKs3orCh6H8T/zrSLBY49r9h8rqKo4rBiklEvC+qOiTsk
+YsiAclAd9lhFmC7flNmvChaKZc4HPybBS+2hcuYtomi3f/ZeCgIsaHVZ4et
cI8oSvOsfZQtzAbpwoX7v4ZFkWk6S5gQY8ND3TNcXgui6MRG321W0mzwV986
+lpeDFnbTIcIKrPhmFhvmeRBMWQVu4LDQZcN3LFNM/dOiqEvYbE8H/TZ8JpS
rrbighjiKPtylGczG/7oJd+d9BFDkXLaq6K2suHxgZO2P5+LocUTZjOO5mww
6NwXYpEqhqgJoweu7WBD+1mUX/xGDO3lfi3/0IoNmteV5DNLxNDRaumalN1s
+BLXzg5jiSGptBW81+zZcIH2Q2J5QAxJxPm+dDzABtE3xRZek2LIJfdWhq4j
G46UxGWc4hJHffWiwnWH2fCbdfCqKU0cPVLfsS/biQ0aagyOhbPi6PwnKz1+
Vzb8fPtV1+2KOHLIvhp49QobPDfnnRr0Fke2WOdg41U2lFk9qWLeEUdy71Sz
AjzYcPii7ePcTHH0YvMukaDrbOCaMS3TyhVHqR4OLe982JDut3EmqVgciVRd
N2L4smHmgahj+A9xVLy+pErIn9Q7+6eSy7g4Wu92x1wliA36hiX7e/+II6GG
oN8SwWS+St8EH+GQQKnbxfcsk6zeeL9/l5gEKmjJGYNbZLyH/eTK5CQQ3za1
bVGhbPDouWhtSJFAeP24gXMYG/DsrnfqehJIytRCb/A2G874G7ETtkqg2wm6
hol32LCKT1NC2lwCia7cPLn/LhsOya68xv0fOV6whX/8PTZwJP5N9z0qgfbW
vzuw5T4b0tYOtE6dlkD2ryf7v5M8bVRpwvYiv/cp3tr+gA0VdtkWlf4SaIg1
/NP2IRtiLj3b/SZUAq3nnBMrI/nirSC7yIcSyLTJjFfrERtMEi4euh4tgczt
NN48IFmswP7k8QQJdPAaP/8QyT21285ZkPfeFEMzWfSYDQUDaq5abyXQrkj9
zv+/D73LKeolli+BLt0wOdZC8lH5Ob8/nyWQzmRJtGI4GzbodQW3f5VAuf2S
dw+SvGL397tffkgglUMvDB+TzDiVG55Bl0BPTT+nYZIzbsTHPGqXQFuf/mgY
ItkvOvSFZy8Zv/16EI5gg80717TDoxIo+qrpZW2SKVWOb0xnJVDUgFPHdpJn
Waa56osSaM+HKYn/vx+tmtP8tIpHEnVX2oj8//1onLhk2bSQJPKhtNSfItlF
a7GqRVIS6X8aPeJMsql5Xy0oSiLF5IbaQyRLHq1lpNIk0bSli48Vyf2ehe33
tMl7fsXY1HqSix4m9lzVl0Slbp+2ipH84NXdYQdjSWSYsNVhhIz/BHaf2mYu
icSeMyxLSdZrOTJH3S2JBGFa5P/r552y4BCwl0T9B+ffO5LcIrCeb+KwJDoD
+zcokJxFlRVmOEsiS7OTD5ikvvv/G1JIcpdEBsMWo/9/P0pzaaTc9pVEX/MH
Z/rJfP0OLV7rEiyJPg519dwj+Xnhw81GkZKogeEWVkrm37X+molynCS6rt9s
Ykey2dAJC95kSXTbYsNAB+mfAQU9u4YPkqi95j/5HtJfn/QVDxUWSaLUgclX
R0l+uIfnZEKZJGJyrdlYT/pT/ybT5UIDqeeNL0Qa6d+ALt+7XFOS6HvM43B+
0u92C6fCB+Yk0XjunIktWQ9qkntjfnJKoaDT6xb+Xy81FsppsWJSaPpneIYg
WU+yGeWluhulkFRdnEp2IBuGS99UyRpKoY/P025/C2BDSWt07RKSQrWR+WKd
N9lwSuh8+7d9Ush+d3Dk7xtseOe6as7pihSqn1Z81kn2g5HGDX+mvKVQnrEQ
M8eb7Gdb7GeDAqXQ2KPCHYHX2JDCETeZFCGFnEbDKvk82RAbrjHUlSuFzmaV
pHwh+xFz1nrA7bMU4r9iV3HShfTDIdc+rgopxO1C0527xIZHlPwuClMKibwv
mpG4wIaQnO2/nOak0B1fT985Z7JfyZxtmeKURlJGGeZOZL9b9r3LDBKQRlzO
MVfKT7DBx7y+MUlBGnHeH/jncZTMD/1YTdc2aZTmtGpbGNlPD/25/tkpSBpp
O9uudLdkw9PD8Z+m7koj2Zjsy+4WbGgC/DEoUhpdfVp1+vJ2sj5u8+UnpUgj
9X7jh1YEG8zlot52VUij0b6tSgkGbFi/NfuFk6AMCvy8e60ijdw/bvYFOj2R
QaeJOMvb8yxwcV/x38nnMmif6ef/Rv6woPmsssaJFBmEvD8fsJ5lQda+Qz+P
5sogduhOs/lxFthTfsofbJJB8nrqBorkfpj8NS/HRlIWcam/t/D4Se7PQrd6
jZ/IIq3rZRkR8eTvOZIKtz6XRVvHz1odjWWB9GzJPaMUWfTnlftJ6lMWDLX/
3bglVxapdr+VSHrMgoh3l/z1mmSRzX3r8fPBLOiytZfRlJRDF1YyNqufY0Hg
M+pOmSdyKB1rs3nJ84U2X+q/0Tg5dJpXvtRek4zfQy27PFkO/Wtz7UtQY4HO
vrUybjlyaGzzNVkNJRa08q7vrWmQQ1bBXZ+ERVmg72EUGCQmj/ZV6Cud6uqE
vr37P44+lEdvy1fVTJ3sBGvum2vL7yig6+eU/ou36YC3Oy83j2WsRtuF826d
//ILtsTC15+pSugd5o75Zt8CPTrvjM+9VUJ7XtT6Ru5qgfAvCTmcBUqo8vbR
EydRCwyN3EjUr1JCIbsTIoS0W+A5YXwjdkgJOVnlX0xe0QIBbkfkc2SUUX/c
f1cGc5qhV6al3v+IMlrxuyLOQq4ZjLv2Pfh+Qhkdq0qS/iDSDBFZVVayp5WR
k0PLgBpvM5iYFsL7y8qIu1p9neY0E2IuPH3T46+Mrn/jvBD3gwm7Pv93Z1ei
Mtpafu7QrhAmvHVqQNJ9ykg/+Pf2/jkGpJ73G9k7pIxi7UqDaicZ8PyKWkzY
mDLZf9ZfLh9kwF1/n/G/v5XR4ZAwRlMLA07HUhJ+8amg5yMrf0cWMUCxwW3h
5VoVlM6bTmT6M0CiRfFVyzoV9CvT3dL1GnlfYFXYiuuqoNDzSqZmVxjwd1T+
dbCRCnpmlhYn5cSAxpVfHM9Yq6DhuUMDnjvI+Uwl8rUuq6DpsawCY3EGBFp9
PnnqqgoyvGEywiHEAG+bs6viPVXQNs8RRwYPA84c/XRK2F8F1eZrX8qbo4Pp
dWeJyYcqyE5Yw9Oqiw5/s3Ou5GeroK8y8ioBOXQYLziqOJ6rgq5I3gxpfkOH
vhK+KvWPKuhGWIK7RTodmmoOKz0rVUHxWpmUY/F0eDew4qdvgwqSHbBZEXmb
DmeU7bVMZ1TQSomL1bud6eA+7mO68a8KmmzgMTl4nA4BJYkOKv9UUPuT+XTf
w3SIOzIezMlNQXueVR5YYU+HdC3p2Ek+CpJ6JiB5fh8d8ueNs9mCFHRB6kZx
72461MXcbSuVoKCdS1+/0HbQyfPa+6n3MhQko8EX329GhyGDZv4kBQpasNpz
oIygAzdddVMQlYIihz4fxYZ0MBQrfWCmR0EfefncenXosIPVn6y7mYKWzXYs
Xtamg/074SLKVgpyubjJVlSTDi57jvRxbacg24W/e5JV6eCrGPxvagcFCSpv
cX1CpcPt4Qzx7l0U5JX5b+9LFTok3flj8sWWgsavDJusXEPq47jmv5wDFITO
BVSfUaRDsbrFxeRDFPQDXeFjydPh2++LgZHHKGjzwYlNnnJ0YH6NeBrsREEU
UYMINVk69Dz5+Mb9DAVtKPc6OCNNhyln1hfnCxS0oqm/qkOKDsu6fK12LhS0
LaFkdZ8kHYS4dCa2u1FQQOCGKAGS5ertefW9KMi1ze3Sbgk6qL30VaT5UNCb
VZ9YmeJ00HdN0pX0p6BWd5P1////tqlJtRV3EAXFXdaNKhejw95VE8dmblHQ
44M1Nv4kH2mT9uy5Q0FHo02fHyD5fOa2e00PKCg5qLJgD8lePqcSy8MpiPdG
ZKczycE77xXkRlGQWk/rvmckP5b98CPlGQW9km60GiM5vr+5+0k8BWm6v+d2
Jud/nb88F5JIQXaOmaV/SC64pSbqmUpBX2i/i7PI+Mvt96idzqAgxc2VekHk
+hqoHsb/vaEgrjE7Z29Sj86pWFuL9xQknV5/+xGp10hp6blNeRQ0/8WTXSlD
h/nHA/6qH8l8vvR8rULqzXdCJErqMwWVxPGqxJP5kFxvkMlTSkFdkseCjMh8
qSwdKZ0tp6DjF94Lzq+mg86PYGZvFQU1z2+a/6VEB6uL9Ssq6ijIyjJ9gY9G
h/+M/srlN1FQMOa4Y6tGB6eVShvSmilo+/jxK1iDDleaLXZEt1HQKqJ5mbqW
DjdeXToSyiLj23fFRIrku16Rbl495Pe1Gz9okRxjUXT7zAAFcTuc33qO5FRJ
dsKBEQp6Hupc9J3kD918eTsmKCh84ZKIA+lXj+bvFfdmKEh8Z7OWohYdNv94
1Fz3l4I4Ftu3i5P+ni+1G5JaJP260dXTaB3px3yZf4c4qeghx42OKLIe/DN/
rXrJQ0XOIX+fq26gA3r5Qql3JRWJMht+Dm2kA1eU80ZNYSp6J74Y3qdHh693
1Le7ilPR4f3nuOUNyHrwH7bPlaai9W94zEO30GGX+7szc/JUZIEqXLS3kv48
5+5tokRFhbS4pFUmdPh5ZPPdYCoVJXl4Lmqakv7YvxBXpU5Fa3btiL9lTge7
HfBmlTYVWcHSizVWdGheb1n/VJ+KhCaHLETJ/hBLE+xu20JFv9gcqhfJ/nFU
rnZGZRsVfWkt6+A/SIcuLgfZLAsqMtsjckiM7Ecpf+Q1J3dSkfCCr4P/ObJf
jXRsNdhLRUflDr7SdaHDMP3McXyAioZF1uZ7+tDh7TfNqzyHqeiE4lI2byCZ
PxgL2nWciko5+b26w+gwk+6V1nSWit6DPyMkmg5LvqGjA95UhLoPbA4toAO+
smt53Q0q4ozY+O0JJuvhtLCYeyAVhQ5VS/+tpgO/TbT+4h0qMuH8a1/aTvaD
7Yd2mD2kotRp16C1A3S4v2WNY1gEFRn+Pc8emqKDGCXNVyyOSvo3PfPGSgY0
SV94cOAFqYd3re1+KQZEC+q8iEsm8/HNODlIhQHys3llqllUpGb5roBrKwNo
VV9XGn2monN+trNP3RjQV3xH4WYpFcEKoXXegQzIeL9nXflXMj7Gk8WSxwzQ
iaPv2/uTij5XNLNCshmw2aX3qVMnFX3Puv1bdJYB804ZGa+6qcj1gsJWCz4m
FDtc/jTST0U25rz8g3JMQKazHV4TVLQtL/1DMCL3W0ketXucNFR65mY4LZIJ
1HqLpDAeGnIap7XfeMWEfw9C14SspKG7O/+TRcVMaNpVGRuwioZapj9rXapn
whs+fpkbYjTEdVmIY0U/E0LLrSKvS9FQit7YDZ5FJhwLvCPiJUdDJytEH3pI
NMNmk2/33FbTEIPB0t0q1QyiCwL8rio0tOXhq2dOfM0wUGAdclGVhlqVzq7k
m2dCqcd9jnNraeiCzREd3VEmxG784XdqHQ3FsL7kjrKY4Da2au7ERhqSedpq
tZ3OBOvMvZ5HN9FQpEF7tPE3JtDOPZo8aEhDJUH81t1ArodWd/nANhraTTwT
M81nAp0tOmRrSkP962uij78hzxsJ+8/YWNCQmWxHqFUquZ7DEV3WO2lIuFjw
IU8CE47LNh6z2kNDcx3hji+fMmELXeKX+X4ayjN/E0GJYIJohL2D6X80NJUd
OxD1gAmDe6Matx2koWP90bzcd5lQJsiwMTpKQ1mZHTFeYeR6qqRrDE6S+pa+
tf5ziwnutxys9E7TUMbI9u+PSN5tFlO+/jwNFU20ftkZSq5nuRlpX6ahS+HZ
bJ3bTFj8JPdZ4yoNuUZw1lvdYwLD+5ChqicNeRQImCQ+Itez6X8tXGs8lHsX
ndGQIjGkJqLD8zwzg5LwoshW5FCEhHJJoeJUHEp5USS3UpRKEiHhyC0ht/o/
RaKki2HGNfdblBy5G+98eD/u39of1l7rw97ry04q+SMAA5Ua0Waju1wUOdmu
oRAsmC9Id7fWQy5yLZDP3xiKwdnHLRpXMrhI77SzyvpwDJyWFK2087mIzk7J
lI7GoMrC2sy+nItGB7qUJG9goO+QVf/rLRdVpys+Er+Fwe1ul2AJDhc9POoq
t+quwK+cYskXfVx0Tj4tQTgRA9+AAfXfU1xk0dojLZSMgavU1sivAr+Je0px
/FQMerU/vHGQ5yG+jZv4QgYGj3Pmbt7azkPctRlRM9kCPprTCRHmPFTY0E+b
yhXoEb8UbeTOQ1HReOhEIQbusfulGi7z0LG9J5bGijFgjCq2qSfz0I4VWQEj
ZRiEnSyO86/ioe9BLN9eEgPVVumLTZRWVKPn+aOrBoMmWwfqEi64d6f/8Wqv
w2CQas3eZtGKLH1U3TifMTBYthZpS2tFxJbT3z5zMGhsaZJ2/9SKlkdyHT/y
MHj0Y9FHYbkVFbptta3txuDeuM4Hc482FL3Z+/ObfgxYTtWbPye1oeOdBfvR
MAbPGCP+uZw2JG2vYVI2gYF93HRznEU78jfX+k8OBYeQplfa65070M89Wem3
aTiMxBgtDz7pQKcMNq4NFMXhY/SBLPjVgRy3UYb3SeKgNrRrZWlsJ+Kw/Wy1
ZHCQl9Gb6+vtRJbKg6T8BhzyN00YkLpdCGQbEscVcXA7WquZPdaFKtYairQo
42DgzleoNf+GNFcV+b5i4vCoC/tS+vQbIhYT9sWq41B2Qufyxp3dSKzXbWmb
IQ7MHlaz9XpBvmxv8WTsweG9tVqwqk0P4nPMWqimOBy7x1u8LcjzFxqrdo+a
4zDe87w3pqEHTbxTL/hqiUPaSeOXm8R7kdfrdLlKGxwKj0jKmVv0or6KdVGP
7XCQ+5F8TTauFzkVR01dP4LDukN+DyI5vaglb8H1nAsOUQ7m34/u7UMHss5+
dDqOQ5dOcNXifB+qS+3RMzmBw1hOvRH7WT+qjH9Hlz2LQ39D1Vj3H4MoNSC+
5kUwDhJhXq4J9BHE8BPRSA3FoTGs7uylLyPo9umA5KhwHOwYjnq2t0ZR+NGj
/odv4OAephoZKD2GvExUWQsPcYAWblq44k+kJVV9fVcVDkHmbEf/9ElUnz1p
83YeB+PCsnLZh7No9p1QpdCyAPee2JTFn0XEkGA5ryDgHt9H4k/XOXQF1/y3
QoyAiNk09ajN80g/3S++UJ6AGEtGUWL8gkCfsIXxzQS4hoy/2Du+gBK7491U
cQKmD5eEJJssommFYs3MLQR89z4/LTO5iAqTppqSdhFgsXFNUbUuH3VV0PRb
dxNwOYgjYR/BR2vaZDJkTQnAXHZ4bPnKR14btM/dOkCAs5jOA2/3ZXRfx6Sj
8SABXTEXa1/nLKN3doeMxR0IyJ3Li1T+uYywu+dlIl0JcKfg23/pUkib4vCg
GncCQrPzBukOFDK06W4/1ZOA7YtHniv5U8guqdLioL8JkHNq7J3Mp5DiGrXy
FecJ2FfteTqznkLutGq5OhNAwPx1juPWPgp5/+a0re8VAnJm3pSn0alkbZ7I
y4IIAtJ/yx0IYVHJ3w2y+Pg1AoTFfiYwDKgkNkbcUIklwHwgk3nSikraiOn8
PhlPwKBG/q3jx6lkiIqp85MEApxSvD2F/ahkgZn9294kAli8Q7vNrlDJrlMn
t2xOJcCO93zO8SqVFI+6cNc5Q8C/XSHRzYdK7siKXHqQTYBB00eS5kglPWsT
PHi5BCRIOjw1Mhbwo5VpHywh4GuS4/MEAd8p5brkuHIC5qJX7C2ZoZDKe3jC
jS8JmFnqC7/QTiFDQmeb/6wlgFH2dGYyhULmp4ruinhPQFjK65TCSxSyE23I
rG4U+LfvTKecM4Xcwdf138UlIFO3T4wmSyGn/hsgqzVMgNr+XNXnE3yk9CD6
0t9jAv1ELGuuJvGRdXniYP6EQD+rOO3mPXyUP1Neyp4jgE5/5k+7sYROnZu3
U1zNhB2cIGOG0CLKc4xky0gw4Zy8k4Vv6gKa3C2zKEpngoK0UEel/gIKlNqa
NslgQpHqxZXq3vPoZv6x72/ZTFAZHqIsVM6ikuG6y6fNmEALz22wnZ1C858O
2RyzYALhLdF06sIU2vWiF7OzFvRHxtpkTf2L6sIX6w0PM2G161u9opFJ1KG0
TUbakwnTd9roHq8mkJBzQnZ5FBOCaLRgjsowMjXGAvNjmJAl0vmz8NcgilF9
ZvE4jgkzx5/stCsZQOvm30/G3GfCgmeh/QbNPsRK4Ou7ZjPBsv396DV6B7L8
4vFFpI4JNQ31zE9a5SjJRGv+4EoWdJfUBStm9xvm5NknvBIT1O7qSiKeg4Zl
6wK12JIsaPA7/6hBbdiwZeD1Wf4GFuiqGbd8rvpuKBlxoC9bhQWl2dqijZd+
GUbUejUsWbCgyOeMWenirKGvaVpK1h0W6D2hqbW70yC0oGYnPZEF0tMrFLcP
0SBu/TAvKJkFZZJX/5rwFIa8oa3SNpksCH7tvXTfRwSGI6siF1+wYPUAJ/Dg
FVFwqeP6WLezoOITJ1GvRBzObFtYU/VNUJtub+Xqr4Gg+wpPiX4WuAqVKJfU
rIHEUx4DC2MsqHSOr1VqlgCO6L+HM/kCnDTrNAqShD4f2RnJFWx46bPUP0JK
wiRP707gSjZkdOe6ZAlLwdp/QhqtJNmw6aZminOsFChIZfxVKcMGC2n820GO
FKgFvBMlGGygD+2NOsKgw86e0Sdxm9hwaAth7+NCh///o4IPq6xW3XlMh/8B
oEkJyg==
       "]]},
     Annotation[#, "Charting`Private`Tag$9421943#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7eXJ5/xbUfMAAwQcSD9++8OGxRpwfovrynlpqgh+
4ZVfQpOF1eH8U7FSL54Iq8H5f/et2mAlqQrnP970cWIgpwqcb7aQ7UovtzKc
b6N0Sa/7hyKcL1PNV9vzSgHOvzDHMCLtrjycfz5j83PT3bJw/jLNixYBe6Xh
fINZFwqKTkrC+YoGtrfEVovD+a92ubKybRSF86WzdyeW9wjD+f9OCS39UCgI
5xfb84RkfueD83cYnz3wdSsXnL9e8NgG8b1sCPVWM5nt8pngfKvWeI8XWX/2
w/jvM/7013d8gfObj8y2sv/xHM6/ttvmyCrmC3B+vI7b35CJ5+xh/IceEaF5
817A+V/W26+XsP4C599aKpf38cIfOL86b7dH6HwmBxg/YoF++JxeNjg/rf0k
0/0LXHD+4RZt7Z7TfHB+nODTQyKRgnD+Z6vjdg/LhOH89fm8P5MKROF8lvpn
jUlTxOH8xpnKnuJTJOF8b5Z6zSOd0nD+Os/cG+9WysL5FrP2Hz23VB4hn3TJ
QeyZAsK9CiHajl8U4fxNj9m3un1QgvO9RFjVuhlV4PwyLxOzVQyqcP7JFZ+C
jv5C8DNKfoXJc6nD+bNdTX4Fs2vA+UXuC+ctn4LgQ/MLnA8A7t7n5g==
       "]]},
     Annotation[#, "Charting`Private`Tag$9421943#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{756.6666666666673, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"lg(Cross-Kerr (\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\(z\\), \\(2\\)]\\))/3rd)\"", 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.738080465031*^9, 3.738080548781*^9}, 
   3.738080580593*^9, {3.738081208848*^9, 3.738081218915*^9}},
 CellLabel->
  "Out[392]=",ExpressionUUID->"5b58c146-537b-4a4d-9ab7-b4b5490a682c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "11.425295257153826`"}], "}"}]], "Output",
 CellChangeTimes->{{3.738080465031*^9, 3.738080548781*^9}, 
   3.738080580593*^9, {3.738081208848*^9, 3.738081218955*^9}},
 CellLabel->
  "Out[394]=",ExpressionUUID->"60cfb2e6-e5c9-4a18-b5b9-164bd9ff89d0"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
nqcdog==
        "]]},
      Annotation[#, "Charting`Private`Tag$9421993#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzTsnjpGBQcWBAQIOdKk7H+XhQvA5Nqt3Soog+Juc
4h8+1kTw/zLv7LOxQ/Cddy7m1w9C8C2e/0m4lI7gn3OrYGepQfCF5ZPqnk1E
8INf3zmRtBzBN3lZmZG7G8E/Et96Q+Migv+VffPcoqcIvuKSQrOwnwj+nx3z
5r/iU4XzK/+/jeVVRvCX7Fv95oEFgn+q8Jefnx+CPyksm80rCcHn2OLV960c
wVdw9sk27EHwn3ntkZBdhOCvcNs7c9F2BJ+75EH+ttMIvqxUkVj1QwT/wkdV
oXNfEfy6vVkPd3Gqwfm3GeUaI+QR/Jvln0tbjBH8tjRz60RPBF/Pk+fK9TgE
vzyW+dCdIgQ//1VGw6QOBJ9j5YfJ1+Yg+HOiOau3bEDw77dNMHI+huAffmxp
n3ALwQ/bGSij9wHB7zrQ7dfFog7n79wdFtIggeBP15+gpa6H4ItdfR0a44Tg
u3zeGugUgeDnsgoqHspF8M09+1wvNCL4G1irrPqnI/inPre33FmN4N+/qrbo
8H4Ef7GByYToqwg+x97ky40vEfy6CUwvD3xB8D8nL/z3/z+CDwA53tXm
        "]]},
      Annotation[#, "Charting`Private`Tag$9421993#2"]& ]}, {}, {}}, 
   {Dashing[{Small, Small}], 
    LineBox[{{11.425295257153826`, 0}, {11.425295257153826`, -2}}]}, 
   {Dashing[{Small, Small}], 
    LineBox[{{11.174048074833545`, 0}, {11.174048074833545`, -2}}]}, 
   InsetBox["\<\"11.174\"\>", {11.174048074833545, 0.1}], 
   InsetBox["\<\"11.425\"\>", {11.425295257153826, 0.1}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10.000000040816326`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{753.3333333333342, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"lg(Cross-Kerr (\\!\\(\\*SuperscriptBox[\\(x\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[\\(z\\), \\(2\\)]\\))/3rd)\\n Zoom in\"", 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.738080465031*^9, 3.738080548781*^9}, 
   3.738080580593*^9, {3.738081208848*^9, 3.738081218962*^9}},
 CellLabel->
  "Out[395]=",ExpressionUUID->"67572ec3-b7ac-4b87-a68f-fdf2e2717f9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"11.425295257153826", "-", "11.174048074833545"}]], "Input",
 CellChangeTimes->{{3.738080763033*^9, 3.73808077317*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"98b2ae0d-3586-4382-901d-03a7a44b6de6"],

Cell[BoxData["0.25124718232028087`"], "Output",
 CellChangeTimes->{{3.738080763961*^9, 3.738080774974*^9}},
 CellLabel->
  "Out[367]=",ExpressionUUID->"15f84327-58c0-41ff-8865-6d684fd34b5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "/", "Pi"}]], "Input",
 CellChangeTimes->{{3.7380807768050003`*^9, 3.738080784177*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"c424ae71-b6c9-4223-97f3-dc95028029f3"],

Cell[BoxData["0.0799744620083667`"], "Output",
 CellChangeTimes->{3.738080784691*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"07c18ba9-3adb-47b9-8c47-242fa94c16aa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1904, 998},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 426, 9, 56, "Input",ExpressionUUID->"41b9eada-926d-4f9b-b6cf-5982c86c502e"],
Cell[CellGroupData[{
Cell[1009, 33, 232, 3, 56, "Section",ExpressionUUID->"6969e32b-6cd5-4880-8da6-9cc177d65628"],
Cell[1244, 38, 4772, 117, 491, "Input",ExpressionUUID->"54b54782-c0ea-4eed-912c-f75c74c0e58a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6053, 160, 155, 3, 80, "Section",ExpressionUUID->"8ea9f4e5-c859-46c2-b708-7d315745f382"],
Cell[6211, 165, 164, 3, 41, "Text",ExpressionUUID->"0bfa07cf-22b2-4fc4-82c1-12fab99d6641"],
Cell[CellGroupData[{
Cell[6400, 172, 4981, 94, 203, "Input",ExpressionUUID->"b02f79c5-1699-4357-a47d-01fc21ef7a5d"],
Cell[11384, 268, 873, 13, 39, "Output",ExpressionUUID->"3e6919b0-b77c-4df3-baa4-6cebbeabc644"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12306, 287, 172, 3, 80, "Section",ExpressionUUID->"4905469d-de32-4058-bb2b-f92c640f70d5"],
Cell[CellGroupData[{
Cell[12503, 294, 1353, 31, 60, "Input",ExpressionUUID->"1488c04b-ad32-4201-aa59-ca2c1baab2ea"],
Cell[13859, 327, 715, 11, 39, "Output",ExpressionUUID->"99d025fa-4d9e-44b9-8c62-b3fc22c4af72"]
}, Open  ]],
Cell[14589, 341, 2406, 44, 35, "Input",ExpressionUUID->"22cf45a3-2ca1-49ba-9eac-6d27afc99f6f"],
Cell[CellGroupData[{
Cell[17020, 389, 1421, 37, 60, "Input",ExpressionUUID->"f5b14626-761d-4254-a232-ba78fd801876"],
Cell[18444, 428, 22265, 405, 295, "Output",ExpressionUUID->"2c1e3354-fa44-4c04-bb35-57ff0650723c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40746, 838, 1355, 31, 35, "Input",ExpressionUUID->"f65a3e19-1355-4f3a-a2c2-25d20524d50b"],
Cell[42104, 871, 30802, 545, 290, "Output",ExpressionUUID->"48322e0a-a27c-41d1-beda-3510f6f38759"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72955, 1422, 154, 2, 80, "Section",ExpressionUUID->"5a99d994-908d-4150-81e1-531ce0275825"],
Cell[73112, 1426, 4587, 113, 144, "Input",ExpressionUUID->"c152647a-67b7-4d47-ba23-8bcce28fd3a9"],
Cell[CellGroupData[{
Cell[77724, 1543, 169, 2, 65, "Subsection",ExpressionUUID->"e90ec7eb-29c1-426f-ba17-d648abb9c5b0"],
Cell[77896, 1547, 1000, 23, 119, "Input",ExpressionUUID->"f4546922-6b78-442b-9994-811c33321bf4"],
Cell[78899, 1572, 4704, 106, 699, "Input",ExpressionUUID->"66fc426c-75a0-4d9e-b7cd-d9c4bfbaa955"],
Cell[83606, 1680, 266, 6, 69, "Input",ExpressionUUID->"c6a1c4d7-c240-46b6-afe2-46ca0f9488df"],
Cell[CellGroupData[{
Cell[83897, 1690, 1319, 34, 264, "Input",ExpressionUUID->"e98a9a52-b65c-4c99-9a6a-9ba6c61c4ef2"],
Cell[85219, 1726, 43220, 905, 2342, "Output",ExpressionUUID->"5e126f80-dab1-4393-aa65-8e7727e71f9c"]
}, Open  ]],
Cell[128454, 2634, 203, 3, 306, "Text",ExpressionUUID->"7c32633e-ac44-4f33-9e6f-bac726fb1023"],
Cell[128660, 2639, 8186, 189, 4461, "Input",ExpressionUUID->"7a5beacc-ffae-4c9a-96de-1baaa80a76e9"],
Cell[136849, 2830, 271, 6, 362, "Input",ExpressionUUID->"10e7b32b-c15e-44f7-a91e-0d990b781413"],
Cell[137123, 2838, 2801, 68, 1067, "Input",ExpressionUUID->"ed235432-2ae6-451c-982c-f86a0d1a39dc"],
Cell[CellGroupData[{
Cell[139949, 2910, 4131, 101, 1765, "Input",ExpressionUUID->"13fdade2-56ae-4899-9bdc-483635922e11"],
Cell[144083, 3013, 116864, 2053, 2427, "Output",ExpressionUUID->"2d845973-d686-422f-91b3-397b0a58b991"],
Cell[260950, 5068, 105702, 1871, 2400, "Output",ExpressionUUID->"bf0d4dac-10d9-4840-92b0-f4e5e789202c"],
Cell[366655, 6941, 171698, 2952, 2452, "Output",ExpressionUUID->"6ebc1aad-5084-48ce-bf2e-c92229ea2b83"],
Cell[538356, 9895, 171387, 2947, 2556, "Output",ExpressionUUID->"3cad1df9-7fba-4b2f-a87c-88dfdd6ab212"]
}, Open  ]],
Cell[709758, 12845, 142, 2, 432, "Input",ExpressionUUID->"37217412-a6fa-43a5-8f5c-c38761a96037"]
}, Closed]],
Cell[CellGroupData[{
Cell[709937, 12852, 202, 2, 45, "Subsection",ExpressionUUID->"5ddef5c8-b972-4641-9cf9-e24edaa3b92e"],
Cell[710142, 12856, 769, 20, 119, "Input",ExpressionUUID->"0f92135d-211e-481a-81ff-046ef142ffe3"],
Cell[CellGroupData[{
Cell[710936, 12880, 8266, 193, 1185, "Input",ExpressionUUID->"b378d9d1-f660-4e5b-bd70-2b26059dc113"],
Cell[719205, 13075, 62258, 1183, 3719, "Output",ExpressionUUID->"8cd47702-15ab-436e-82a4-e67361eadfc6"],
Cell[781466, 14260, 64225, 1193, 3719, "Output",ExpressionUUID->"fa0fad37-ffc7-448a-9ade-92a85639de36"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[845740, 15459, 168, 2, 45, "Subsection",ExpressionUUID->"61b5a43c-801a-44c4-88eb-eaecfbb476f3"],
Cell[CellGroupData[{
Cell[845933, 15465, 2033, 51, 132, "Input",ExpressionUUID->"d29eadb8-faca-4e3d-bbcd-3fd41aa0c9c6"],
Cell[847969, 15518, 630, 10, 39, "Output",ExpressionUUID->"2192592a-fabd-4584-9b1a-8798c5277fd6"]
}, Open  ]],
Cell[848614, 15531, 3970, 93, 324, "Input",ExpressionUUID->"4efba044-d2a3-4eb6-8c4e-07628b6b508e"],
Cell[852587, 15626, 271, 6, 35, "Input",ExpressionUUID->"b51afc67-3eca-4b5e-8af5-847cf48d8bff"],
Cell[CellGroupData[{
Cell[852883, 15636, 1244, 32, 108, "Input",ExpressionUUID->"341762ae-b1e9-44e3-a221-be614060e88e"],
Cell[854130, 15670, 11745, 257, 290, "Output",ExpressionUUID->"b7b29a5c-da7c-453b-b2c4-1096a596b4e1"]
}, Open  ]],
Cell[865890, 15930, 203, 3, 41, "Text",ExpressionUUID->"acd5f5b4-f454-43ae-9ff9-5cc9a52dc1ca"],
Cell[866096, 15935, 8982, 207, 582, "Input",ExpressionUUID->"24f345e3-2bd1-458a-9153-7edf41ef0bb3"],
Cell[875081, 16144, 314, 7, 35, "Input",ExpressionUUID->"b7e2c8d1-c766-46f6-858b-6c2c7e14c6fc"],
Cell[875398, 16153, 2546, 72, 132, "Input",ExpressionUUID->"a9a70368-462d-4a8d-b969-1d83028c641c"],
Cell[CellGroupData[{
Cell[877969, 16229, 4537, 122, 164, "Input",ExpressionUUID->"592d4a65-c83f-4b5a-b11c-55056473e671"],
Cell[882509, 16353, 21760, 395, 311, "Output",ExpressionUUID->"60155a24-d9fc-43ad-af1e-2c49ede830e9"],
Cell[904272, 16750, 21058, 384, 319, "Output",ExpressionUUID->"31bae202-f2ad-465d-9b77-35f08148afb3"],
Cell[925333, 17136, 27875, 495, 309, "Output",ExpressionUUID->"d8d0ae99-937d-4a50-a8e2-7ca0cc5a6e42"],
Cell[953211, 17633, 27895, 496, 310, "Output",ExpressionUUID->"4b6b7039-be5e-4766-a766-99329deb136c"],
Cell[981109, 18131, 27887, 495, 309, "Output",ExpressionUUID->"510b41e3-09b4-4d41-ab89-ea57124c1e1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009033, 18631, 5305, 148, 257, "Input",ExpressionUUID->"cf8bd144-e1e7-4bd7-afe1-b2217d9a6edf"],
Cell[1014341, 18781, 27574, 474, 602, "Output",ExpressionUUID->"5b58c146-537b-4a4d-9ab7-b4b5490a682c"],
Cell[1041918, 19257, 303, 6, 39, "Output",ExpressionUUID->"60cfb2e6-e5c9-4a18-b5b9-164bd9ff89d0"],
Cell[1042224, 19265, 10853, 200, 615, "Output",ExpressionUUID->"67572ec3-b7ac-4b87-a68f-fdf2e2717f9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1053114, 19470, 225, 4, 35, "Input",ExpressionUUID->"98b2ae0d-3586-4382-901d-03a7a44b6de6"],
Cell[1053342, 19476, 190, 3, 39, "Output",ExpressionUUID->"15f84327-58c0-41ff-8865-6d684fd34b5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1053569, 19484, 198, 4, 35, "Input",ExpressionUUID->"c424ae71-b6c9-4223-97f3-dc95028029f3"],
Cell[1053770, 19490, 168, 3, 39, "Output",ExpressionUUID->"07c18ba9-3adb-47b9-8c47-242fa94c16aa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

