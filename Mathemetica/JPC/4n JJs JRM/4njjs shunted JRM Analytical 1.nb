(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    596898,      11056]
NotebookOptionsPosition[    593401,      10987]
NotebookOutlinePosition[    593821,      11005]
CellTagsIndexPosition[    593778,      11002]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"EJ", "=", "2618.942"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EL", "=", 
   RowBox[{"2.5", "EJ"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nmax", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nlistname", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"ToString", "[", "n", "]"}], ")"}], "<>", 
      "\"\< JJs / Arm\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "nmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HJ", "=", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["n", "2"]}], " ", "EJ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "a"], 
        RowBox[{"n", " "}]], "]"}], "+", 
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "b"], 
        RowBox[{"n", " "}]], "]"}], "+", 
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "c"], 
        RowBox[{"n", " "}]], "]"}], "+", 
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "d"], 
        RowBox[{"n", " "}]], "]"}], "-", "4"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hshunt", "=", 
   RowBox[{
    FractionBox["EL", "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[CurlyPhi]", "L1"], "2"], "+", 
      SuperscriptBox[
       SubscriptBox["\[CurlyPhi]", "L2"], "2"], "+", 
      SuperscriptBox[
       SubscriptBox["\[CurlyPhi]", "L3"], "2"], "+", 
      SuperscriptBox[
       SubscriptBox["\[CurlyPhi]", "L4"], "2"]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SubscriptBox["\[CurlyPhi]", "a"]},
      {
       SubscriptBox["\[CurlyPhi]", "b"]},
      {
       SubscriptBox["\[CurlyPhi]", "c"]},
      {
       SubscriptBox["\[CurlyPhi]", "d"]}
     }], "\[NoBreak]", ")"}], "=", 
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"1", "/", "2"}], 
        RowBox[{"1", "/", "2"}], "1", 
        RowBox[{"1", "/", "4"}]},
       {
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], 
        RowBox[{"1", "/", "2"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"1", "/", "4"}]},
       {
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], "1", 
        RowBox[{"1", "/", "4"}]},
       {
        RowBox[{"1", "/", "2"}], 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"1", "/", "4"}]}
      }], "\[NoBreak]", ")"}], ".", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["\[CurlyPhi]", "x"]},
       {
        SubscriptBox["\[CurlyPhi]", "y"]},
       {
        SubscriptBox["\[CurlyPhi]", "z"]},
       {
        SubscriptBox["\[CurlyPhi]", "M"]}
      }], "\[NoBreak]", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solvecros", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[CurlyPhi]", "a"], "-", 
            SubscriptBox["\[CurlyPhi]", "L1"], "+", 
            SubscriptBox["\[CurlyPhi]", "L2"]}], "==", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CurlyPhi]", "ext"], 
             RowBox[{"4", " "}]], "+", 
            RowBox[{"2", "Pi", " ", 
             SubscriptBox["n", "a"]}]}]}], "&&", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[CurlyPhi]", "b"], "-", 
            SubscriptBox["\[CurlyPhi]", "L2"], "+", 
            SubscriptBox["\[CurlyPhi]", "L3"]}], "==", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CurlyPhi]", "ext"], 
             RowBox[{"4", " "}]], "+", 
            RowBox[{"2", "Pi", " ", 
             SubscriptBox["n", "b"]}]}]}], "&&", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[CurlyPhi]", "c"], "-", 
            SubscriptBox["\[CurlyPhi]", "L3"], "+", 
            SubscriptBox["\[CurlyPhi]", "L4"]}], "==", 
           RowBox[{
            FractionBox[
             SubscriptBox["\[CurlyPhi]", "ext"], 
             RowBox[{"4", " "}]], "+", 
            RowBox[{"2", "Pi", " ", 
             SubscriptBox["n", "c"]}]}]}], "&&", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[CurlyPhi]", "L1"], "+", 
            SubscriptBox["\[CurlyPhi]", "L2"], "+", 
            SubscriptBox["\[CurlyPhi]", "L3"], "+", 
            SubscriptBox["\[CurlyPhi]", "L4"]}], "\[Equal]", "0"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["\[CurlyPhi]", "L1"], ",", 
           SubscriptBox["\[CurlyPhi]", "L2"], ",", 
           SubscriptBox["\[CurlyPhi]", "L3"], ",", 
           SubscriptBox["\[CurlyPhi]", "L4"]}], "}"}]}], "]"}], "/.", 
       RowBox[{
        SubscriptBox["\[CurlyPhi]", "M"], "->", 
        RowBox[{
         SubscriptBox["\[CurlyPhi]", "ext"], "+", 
         RowBox[{"2", "Pi", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["n", "a"], "+", 
            SubscriptBox["n", "b"], "+", 
            SubscriptBox["n", "c"], "+", 
            SubscriptBox["n", "d"]}], ")"}]}]}]}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["n", "a"], "\[Rule]", "m"}], ",", 
       RowBox[{
        SubscriptBox["n", "b"], "\[Rule]", "m"}], ",", 
       RowBox[{
        SubscriptBox["n", "c"], "\[Rule]", "m"}], ",", 
       RowBox[{
        SubscriptBox["n", "d"], "->", "m"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hshunt", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Hshunt", "/.", "solvecros"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HJ", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"HJ", "/.", 
     RowBox[{
      SubscriptBox["\[CurlyPhi]", "M"], "->", 
      SubscriptBox["\[CurlyPhi]", "ext"]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Htot", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"HJ", "+", "Hshunt"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.738082586014*^9, 3.7380826082790003`*^9}, {
   3.7380846097539997`*^9, 3.738084647851*^9}, {3.738084678258*^9, 
   3.738084743177*^9}, {3.738084882675*^9, 3.738084890733*^9}, {
   3.738085011505*^9, 3.7380850640179996`*^9}, {3.7380859603780003`*^9, 
   3.738085985329*^9}, {3.738086639891*^9, 3.738086643627*^9}, {
   3.738088233771*^9, 3.738088235337*^9}, {3.738092446026*^9, 
   3.738092453698*^9}, {3.738537983716425*^9, 3.738538013363408*^9}, {
   3.738539138943064*^9, 3.7385391821310086`*^9}, {3.73853937065166*^9, 
   3.738539371089344*^9}, {3.7385394278047647`*^9, 3.7385394324874244`*^9}, {
   3.7385395120637827`*^9, 3.7385395127198844`*^9}, {3.7385395549577494`*^9, 
   3.738539662012706*^9}, {3.7385399336502104`*^9, 3.738539968203572*^9}, {
   3.7385400154109735`*^9, 3.7385400191402917`*^9}, {3.73854026047157*^9, 
   3.7385402855611343`*^9}, {3.7385457066453886`*^9, 3.7385458047533293`*^9}, 
   3.7385458380515122`*^9, {3.7385486685818915`*^9, 3.7385486811592417`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9d8ae10d-0676-4aba-b090-a3acc0b0b11f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["n", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"10475.768`", "\[VeryThinSpace]", "-", 
     RowBox[{"10475.768`", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "ext"], 
        RowBox[{"4", " ", "n"}]], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "x"], 
        RowBox[{"2", " ", "n"}]], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "y"], 
        RowBox[{"2", " ", "n"}]], "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "z"], "n"], "]"}]}], "-", 
     RowBox[{"10475.768`", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "ext"], 
        RowBox[{"4", " ", "n"}]], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "x"], 
        RowBox[{"2", " ", "n"}]], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "y"], 
        RowBox[{"2", " ", "n"}]], "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        SubscriptBox["\[CurlyPhi]", "z"], "n"], "]"}]}]}], ")"}]}], "+", 
  RowBox[{"1636.83875`", " ", 
   SubsuperscriptBox["\[CurlyPhi]", "x", "2"]}], "+", 
  RowBox[{"1636.83875`", " ", 
   SubsuperscriptBox["\[CurlyPhi]", "y", "2"]}], "+", 
  RowBox[{"3273.6775`", " ", 
   SubsuperscriptBox["\[CurlyPhi]", "z", "2"]}]}]], "Output",
 CellChangeTimes->{
  3.738539457687585*^9, {3.73853951359521*^9, 3.7385395175903397`*^9}, 
   3.7385396687014523`*^9, {3.738539938502741*^9, 3.738539969080996*^9}, {
   3.7385402631140738`*^9, 3.738540286994548*^9}, 3.738545807768839*^9, 
   3.738545847058442*^9, 3.7385469712308197`*^9, {3.738548656174178*^9, 
   3.738548695147226*^9}, 3.738552722190978*^9, 3.738575119679*^9, 
   3.7385937316619997`*^9, 3.7386101826646*^9, 3.7390491179448*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"9f660488-ae4f-4c62-832c-90bac1e95c19"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"H", "[", 
   RowBox[{
   "\[Phi]x_", ",", "\[Phi]y_", ",", "\[Phi]z_", ",", "\[Phi]ext_", ",", "n_",
     ",", "EJ_", ",", "EL_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], " ", "EJ", " ", 
    SuperscriptBox["n", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox["\[Phi]ext", 
         RowBox[{"4", " ", "n"}]], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Phi]x", 
         RowBox[{"2", " ", "n"}]], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Phi]y", 
         RowBox[{"2", " ", "n"}]], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Phi]z", "n"], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Sin", "[", 
        FractionBox["\[Phi]ext", 
         RowBox[{"4", " ", "n"}]], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Phi]x", 
         RowBox[{"2", " ", "n"}]], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Phi]y", 
         RowBox[{"2", " ", "n"}]], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Phi]z", "n"], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "4"], " ", "EL", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Phi]x", "2"], "+", 
      SuperscriptBox["\[Phi]y", "2"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Phi]z", "2"]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7385391652105045`*^9, 3.738539318764745*^9}, {
   3.738539450804118*^9, 3.73853945106968*^9}, {3.73853949695918*^9, 
   3.738539498287882*^9}, 3.7385395296815577`*^9, {3.7385399765511236`*^9, 
   3.7385399772817698`*^9}, {3.7385469579405856`*^9, 3.738546964143757*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b21e7b45-bba1-4d66-aabe-4a924ce36837"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ip", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.", ",", 
          RowBox[{"20", "\[Pi]"}]}], "}"}], ",", "3"}], "]"}], ",", "50"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listEmin", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"n", "=", "1"}]}], ",", 
     RowBox[{"n", "\[LessEqual]", "nmax"}], ",", 
     RowBox[{"n", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"zt", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"res", "=", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    RowBox[{"H", "[", 
                    RowBox[{
                    "\[Phi]x", ",", "\[Phi]y", ",", "\[Phi]z", ",", 
                    "\[Phi]ext", ",", "n", ",", "EJ", ",", "EL"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]y", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]z", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\[Phi]x", ",", 
                    "\[Phi]y", ",", "\[Phi]z"}], "}"}], "/.", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "ip", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"zt1", "=", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\[Phi]ext", ",", " ", 
                 RowBox[{"zt", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "}"}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]ext", ",", 
             RowBox[{
              RowBox[{"-", "4"}], "\[Pi]"}], ",", 
             RowBox[{"4", "\[Pi]"}], ",", " ", 
             RowBox[{"\[Pi]", "/", "5"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", "\[Phi]ext"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"listEmin", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listEmin", ",", "t1", ",", "n"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "n"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.738538017894998*^9, 3.738538020302003*^9}, {
   3.738538368708161*^9, 3.738538431443511*^9}, {3.7385384641976213`*^9, 
   3.738538497851437*^9}, {3.7385397033299294`*^9, 3.7385397505402465`*^9}, {
   3.7385398427214456`*^9, 3.7385398430389585`*^9}, 3.7385399878967543`*^9, {
   3.738540025254783*^9, 3.7385400257234263`*^9}, {3.7385400750634665`*^9, 
   3.7385401337075663`*^9}, {3.738540223155952*^9, 3.738540247624572*^9}, {
   3.7385403651281347`*^9, 3.738540374627988*^9}, {3.7385406096282353`*^9, 
   3.738540610187936*^9}, {3.738542779406786*^9, 3.738542780062993*^9}, {
   3.7385428808783293`*^9, 3.7385429237959723`*^9}, {3.7385430817374067`*^9, 
   3.73854309873123*^9}, 3.73854325712939*^9, {3.7385433550817313`*^9, 
   3.7385433569100485`*^9}, {3.738543457485137*^9, 3.7385434580660048`*^9}, {
   3.73854369011304*^9, 3.7385436955359073`*^9}, {3.738544039829102*^9, 
   3.738544041281726*^9}, {3.738544487065381*^9, 3.7385444873154545`*^9}, {
   3.7385445963311176`*^9, 3.7385445992347045`*^9}, 3.7385447584846535`*^9, {
   3.7385450103918595`*^9, 3.738545028909449*^9}, {3.7385450641762543`*^9, 
   3.7385450660230093`*^9}, {3.7385451512840204`*^9, 
   3.7385451529675627`*^9}, {3.7385469833290944`*^9, 3.738546989176308*^9}, 
   3.7386103107946*^9, {3.7390491288627996`*^9, 3.7390491321118*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"dcd015dc-ca9c-48a4-9e7d-6ac38df47900"],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["E", "min"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c63a756e-22e3-4607-92a7-a95412645bc5"],
 " as a function of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "ext"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9cdadda2-a83b-4542-a23c-b466df1e0ba8"],
 " "
}], "Subsection",
 CellChangeTimes->{{3.738545913744779*^9, 
  3.7385459594724207`*^9}},ExpressionUUID->"7717b5bc-2774-498e-8805-\
c2753db5137d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"itpEmin", "[", "n_", "]"}], ":=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"listEmin", "[", 
     RowBox[{"[", 
      RowBox[{"n", ",", "All", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"itpEmin", "[", "n", "]"}], "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "nmax"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "4"}], "\[Pi]"}], ",", 
       RowBox[{"4", "\[Pi]"}]}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(TraditionalForm\`\(TraditionalForm\`\*SubscriptBox[\(\[Phi]\), \
\(ext\)]\)\)\>\"", ",", 
      "\"\<\!\(TraditionalForm\`\*SubscriptBox[\(E\), \(min\)]\)\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "10"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "nlistname"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(E\), \(min\)]\) vs \!\(\*SubscriptBox[\(\[Phi]\
\), \(exdt\)]\)\>\"", ",", "Bold", ",", " ", "16", ",", "Orange"}], "]"}]}]}],
   "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7385406546081676`*^9, 3.738540655315731*^9}, {
   3.7385446408312507`*^9, 3.738544661910039*^9}, {3.7385452880453715`*^9, 
   3.7385455817032814`*^9}, 3.7385458234117785`*^9, {3.7385459814431853`*^9, 
   3.738546004889638*^9}, {3.738581753057*^9, 3.738581805151*^9}, {
   3.7385818495769997`*^9, 3.7385818676730003`*^9}, {3.738581899049*^9, 
   3.738581991024*^9}, {3.738583951153*^9, 3.738583970976*^9}, {
   3.73858401276*^9, 3.7385840982650003`*^9}, {3.738584136521*^9, 
   3.738584182352*^9}, {3.738584244984*^9, 3.7385842453199997`*^9}, 
   3.738584302487*^9, {3.738584336009*^9, 3.738584355071*^9}, 
   3.7385844299119997`*^9, {3.7390491487307997`*^9, 3.7390491513288*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"70c87146-6b57-4d78-8551-d86d6ede22c3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$117585#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
H/gfZl/Xeg==
          "]]}, Annotation[#, "Charting`Private`Tag$117585#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mlRwdoMB/+sX8H9+8T8uGTJH
          "]]}, Annotation[#, "Charting`Private`Tag$117585#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
PQT+v4f8DxrLU+Y=
          "]]}, Annotation[#, "Charting`Private`Tag$117585#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
gzep8L8/BP7vh/w//cxOrQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$117585#5"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {{{
          NCache[(-20) Pi, -62.83185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "20"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-18) Pi, -56.548667764616276`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "18"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-16) Pi, -50.26548245743669], 
          FormBox[
           RowBox[{
             RowBox[{"-", "16"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-14) Pi, -43.982297150257104`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "14"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-12) Pi, -37.69911184307752], 
          FormBox[
           RowBox[{
             RowBox[{"-", "12"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-10) Pi, -31.41592653589793], 
          FormBox[
           RowBox[{
             RowBox[{"-", "10"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[10 Pi, 31.41592653589793], 
          FormBox[
           RowBox[{"10", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[12 Pi, 37.69911184307752], 
          FormBox[
           RowBox[{"12", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[14 Pi, 43.982297150257104`], 
          FormBox[
           RowBox[{"14", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[16 Pi, 50.26548245743669], 
          FormBox[
           RowBox[{"16", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[18 Pi, 56.548667764616276`], 
          FormBox[
           RowBox[{"18", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[20 Pi, 62.83185307179586], 
          FormBox[
           RowBox[{"20", " ", "\[Pi]"}], TraditionalForm]}}, {}}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(TraditionalForm\\`\\*SubscriptBox[\\(E\\), \\(min\\)]\\)\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(TraditionalForm\\`\\(TraditionalForm\\`\\*SubscriptBox[\\(\
\[Phi]\\), \\(ext\\)]\\)\\)\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-20) Pi, -62.83185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "20"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-18) Pi, -56.548667764616276`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "18"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-16) Pi, -50.26548245743669], 
          FormBox[
           RowBox[{
             RowBox[{"-", "16"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-14) Pi, -43.982297150257104`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "14"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-12) Pi, -37.69911184307752], 
          FormBox[
           RowBox[{
             RowBox[{"-", "12"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-10) Pi, -31.41592653589793], 
          FormBox[
           RowBox[{
             RowBox[{"-", "10"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[10 Pi, 31.41592653589793], 
          FormBox[
           RowBox[{"10", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[12 Pi, 37.69911184307752], 
          FormBox[
           RowBox[{"12", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[14 Pi, 43.982297150257104`], 
          FormBox[
           RowBox[{"14", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[16 Pi, 50.26548245743669], 
          FormBox[
           RowBox[{"16", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[18 Pi, 56.548667764616276`], 
          FormBox[
           RowBox[{"18", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[20 Pi, 62.83185307179586], 
          FormBox[
           RowBox[{"20", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(min\\)]\\) vs \
\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(exdt\\)]\\)\"", Bold, 16, 
        RGBColor[1, 0.5, 0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> 
     NCache[{{(-4) Pi, 4 Pi}, {0., 
        50017.33752389632}}, {{-12.566370614359172`, 12.566370614359172`}, {
       0., 50017.33752389632}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"1 JJs / Arm\"", "\"2 JJs / Arm\"", "\"3 JJs / Arm\"", 
       "\"4 JJs / Arm\"", "\"5 JJs / Arm\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7385840998859997`*^9, 3.738584430675*^9, 3.738593761335*^9, 
   3.7386102398996*^9, 3.7386103589756002`*^9, {3.7390491443578*^9, 
   3.7390491519898*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"391d114e-0d36-4a8a-8ae7-d7a073f66c3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]node", "[", 
     RowBox[{"n_", ",", "j_"}], "]"}], ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"1", "/", "2"}], 
          RowBox[{"1", "/", "2"}], "1", 
          RowBox[{"1", "/", "4"}]},
         {
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], 
          RowBox[{"1", "/", "2"}], 
          RowBox[{"-", "1"}], 
          RowBox[{"1", "/", "4"}]},
         {
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], "1", 
          RowBox[{"1", "/", "4"}]},
         {
          RowBox[{"1", "/", "2"}], 
          RowBox[{
           RowBox[{"-", "1"}], "/", "2"}], 
          RowBox[{"-", "1"}], 
          RowBox[{"1", "/", "4"}]}
        }], "\[NoBreak]", ")"}], ".", 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"listEmin", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "j", ",", "1", ",", "3"}], "]"}], "]"}]},
         {
          RowBox[{"listEmin", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "j", ",", "1", ",", "4"}], "]"}], "]"}]},
         {
          RowBox[{"listEmin", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "j", ",", "1", ",", "5"}], "]"}], "]"}]},
         {
          RowBox[{"listEmin", "[", 
           RowBox[{"[", 
            RowBox[{"n", ",", "j", ",", "1", ",", "1"}], "]"}], "]"}]}
        }], "\[NoBreak]", ")"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]node", "[", 
      RowBox[{"2", ",", "2"}], "]"}], "-", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]arm", "[", 
      RowBox[{"n_", ",", "i_"}], "]"}]}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4", ",", " ", 
            RowBox[{"1", "/", "5"}]}], "]"}], "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]node", "[", 
           RowBox[{"n", ",", "j"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "<", "4"}], ",", 
             RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{"\[Phi]node", "[", 
           RowBox[{"n", ",", "j"}], "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"listEmin", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7386249022886314`*^9, 3.738624906023533*^9}, {
   3.7386251861963763`*^9, 3.7386251959944096`*^9}, {3.738625549331399*^9, 
   3.7386255541128964`*^9}, {3.7386257848440485`*^9, 
   3.7386259673023415`*^9}, {3.738626160743723*^9, 3.738626194528626*^9}, {
   3.738626257881007*^9, 3.7386262629284897`*^9}, {3.738626349437664*^9, 
   3.738626380847006*^9}, 3.7386264216177855`*^9, {3.7386264885678086`*^9, 
   3.7386265548720937`*^9}, {3.7386266487760706`*^9, 
   3.7386266871881323`*^9}, {3.7386267586345353`*^9, 
   3.7386268738347406`*^9}, {3.738627079873747*^9, 3.7386270964223757`*^9}, 
   3.7386275425315156`*^9, 3.7386287871478753`*^9, {3.738628873891358*^9, 
   3.738628888486715*^9}, {3.7386289203022184`*^9, 3.7386289216149087`*^9}, {
   3.7386290875560584`*^9, 3.738629116826068*^9}, {3.738629184491892*^9, 
   3.7386292063802795`*^9}, {3.7386293750447874`*^9, 
   3.7386293930494924`*^9}, {3.7386294309169273`*^9, 3.7386296364422994`*^9}, 
   3.7386304886696835`*^9, 3.7386305598654356`*^9, {3.7386306099615746`*^9, 
   3.7386306104563355`*^9}, {3.7386310462720585`*^9, 
   3.7386315116968822`*^9}, {3.7386315539113703`*^9, 
   3.7386315696019964`*^9}, {3.7386316534077263`*^9, 
   3.7386316572022743`*^9}, {3.7386320896328125`*^9, 3.738632243646713*^9}, {
   3.7386322760259275`*^9, 3.738632291437188*^9}, {3.7386323490239677`*^9, 
   3.738632355274452*^9}, {3.7386324549860415`*^9, 3.738632459142606*^9}, {
   3.7386325626289167`*^9, 3.7386325639032435`*^9}, {3.738632599663617*^9, 
   3.7386326040234585`*^9}, {3.7390391714458*^9, 3.7390391726378*^9}, 
   3.7390394028058*^9, {3.7390394685178003`*^9, 3.7390395083178*^9}, {
   3.7390396055818*^9, 3.7390396214628*^9}, {3.7390396590298*^9, 
   3.7390396967818003`*^9}, {3.7390397732858*^9, 3.7390397782628*^9}, {
   3.7390399216298*^9, 3.7390399511008*^9}, {3.7390401024778*^9, 
   3.7390401508858*^9}, {3.7390402391828003`*^9, 3.7390403291577997`*^9}, {
   3.7390403821577997`*^9, 3.7390403923817997`*^9}, {3.7390404324077997`*^9, 
   3.7390405115578003`*^9}, {3.7390405573848*^9, 3.7390406555028*^9}, {
   3.7390407244958*^9, 3.7390407553738003`*^9}, {3.7390408178378*^9, 
   3.7390408228218*^9}, {3.7390410659658003`*^9, 3.7390410928058*^9}, 
   3.7390411254298*^9, {3.7390411617278*^9, 3.7390411661108*^9}, {
   3.7390413192307997`*^9, 3.7390413239748*^9}, {3.7390493704638*^9, 
   3.7390493897128*^9}, {3.7390495624128*^9, 3.7390495724618*^9}, {
   3.7390498154628*^9, 3.7390498396118*^9}, {3.7390498864138002`*^9, 
   3.7390499011618*^9}, {3.7390500506127996`*^9, 3.7390500894758*^9}, 
   3.7390502756127996`*^9, {3.7390503118227997`*^9, 
   3.7390503356628*^9}},ExpressionUUID->"bdab8694-1671-4e67-b674-\
1af5c021c8bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.984513038415985`"}], ",", 
   RowBox[{"-", "2.984512987426017`"}], ",", 
   RowBox[{"-", "2.984513016449403`"}], ",", 
   RowBox[{"-", "2.984513041349809`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7390397791458*^9, {3.7390399253938*^9, 3.7390399518348*^9}, {
   3.7390401109778*^9, 3.7390401516888*^9}, 3.7390403326498003`*^9, {
   3.7390403844798*^9, 3.7390403934768*^9}, {3.7390404332368*^9, 
   3.7390404667068*^9}, {3.7390405019988003`*^9, 3.7390405125128*^9}, {
   3.7390405615668*^9, 3.7390406559198*^9}, {3.7390411391688004`*^9, 
   3.7390411669908*^9}, 3.7390492320198*^9, {3.7390493756148*^9, 
   3.7390493901148*^9}, {3.7390495627978*^9, 3.7390495732958*^9}, {
   3.7390498403128*^9, 3.7390498484558*^9}, 3.7390499048108*^9, {
   3.7390500518658*^9, 3.7390500899388*^9}, 3.7390502766038*^9, 
   3.7390503135548*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"a2a29773-076e-4595-aa99-b5960084b4a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", " ", 
   RowBox[{
    RowBox[{"\[Phi]arm", "[", 
     RowBox[{"2", ",", "2"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7386323093075857`*^9, 3.738632312213879*^9}, 
   3.738632404679161*^9, {3.7386324876432304`*^9, 3.738632521879205*^9}, {
   3.738632680989438*^9, 3.7386326837659726`*^9}, 3.7386327389583893`*^9, {
   3.7386328032704177`*^9, 3.7386328187846546`*^9}, {3.7386328955252695`*^9, 
   3.738632923443629*^9}, {3.7386665324035997`*^9, 3.7386665349466*^9}, 
   3.7386666248426*^9, {3.7390391768858*^9, 3.7390391800288*^9}, 
   3.7390392263658*^9, {3.7390392928928003`*^9, 3.7390393024448*^9}, {
   3.7390393447268*^9, 3.7390393774698*^9}, {3.7390394367827997`*^9, 
   3.7390394392298*^9}, {3.7390395203338003`*^9, 3.7390395847258*^9}, {
   3.7390397127818003`*^9, 3.7390397479018*^9}, {3.7390397834858*^9, 
   3.7390399024547997`*^9}, {3.7390411935668*^9, 3.7390412055508003`*^9}, 
   3.7390412465987997`*^9, {3.7390412792628*^9, 3.7390413559978*^9}, 
   3.7390413995738*^9, {3.7390496505628*^9, 3.7390496522288*^9}, {
   3.7390499257128*^9, 3.7390499646118*^9}, {3.7390500258738003`*^9, 
   3.7390500297258*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"b4fe6031-afb5-47a2-ad8f-d8a18509d688"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQLaHrEvJbUfMAkFkgLO28jyvuVozHA3UQ3+KxZvy+
P30FqVPnqYH4Nn/Cc+ze7WfLexSjCuJP2PjHxe7Bhzll+tIqID7D3g2e+y4p
GtfX3FQC8RVq4u33HQk62X5yuiKIb8B3wtduW3P8BLEwBRA/YeMLx30Bma8N
j2vIge3rZ/TYZ3Ja3DlxqTSI33DX2MgO4j5JsPzVZa52EPeIgc23WGwDtV8E
bL+B8zNbiH2CIL5HfrQL1Hw+ED9iww4XqHmcIH6AIoMmVD8L2DwOezk7iPp/
+0HyEQnG+yDyX0D8gqgp5lD1T0B8keW/lewYYOBGYVv0w6l7ofL2IPe7Lr5u
C9UP4muE2BrAzAfxH9w0lIOaz+IA5AvY71TaB3UfiH9hQqcyVD0fiM8Q2iMP
DU9BEL8gNcwRql8ExF/wwNYIGl9iYHnueUZQ8yRBfI45C51h4Qvif1mWEAUL
fxDfo363Eyx+wPYdeM1mB40/EP9Aq4qdHTR+wfK+DKJQ+1XA7j/n6wpLHyC+
w+1gF1j6AcvPmBcBS18gfsejkHBofGiC+BU1M+LtALqh6mQ=
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-12.566370614359172`, 
   12.566370614359172`}, {-2.9023385916815414`*^-8, 5.2794241423015364`*^-8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7390496544958*^9, {3.7390499394708*^9, 3.7390499651368*^9}, {
   3.7390500263087997`*^9, 3.7390500305808*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"597ca45e-644e-4113-9f14-e1d72116c188"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find Derivatives", "Subsection",
 CellChangeTimes->{{3.7385461215195246`*^9, 
  3.7385461577661314`*^9}},ExpressionUUID->"fac482de-e280-4cd5-869f-\
6f0f4c4491aa"],

Cell[CellGroupData[{

Cell["Discuss (\[Phi]x,\[Phi]y,\[Phi]z) at the extreme points", \
"Subsubsection",
 CellChangeTimes->{
  3.738546204675083*^9},ExpressionUUID->"ca57020b-4cdc-47de-8617-\
25c756067233"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]zmin", "[", "n_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"listEmin", "[", 
         RowBox[{"[", 
          RowBox[{"n", ",", "k", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"listEmin", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "k", ",", "1", ",", "5"}], "]"}], "]"}], "]"}]}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"listEmin", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"itp\[Phi]zmin", "[", "n_", "]"}], ":=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{"\[Phi]zmin", "[", "n", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"itp\[Phi]zmin", "[", "1", "]"}], "[", 
    RowBox[{
     RowBox[{"-", "20"}], " ", "\[Pi]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.738541352375745*^9, 3.73854135501731*^9}, {
   3.7385413992392235`*^9, 3.738541401676711*^9}, {3.7385414680596323`*^9, 
   3.73854158765585*^9}, {3.738541660518773*^9, 3.738541686453052*^9}, {
   3.738541757487532*^9, 3.73854178115977*^9}, {3.7385418166258993`*^9, 
   3.7385419622382975`*^9}, {3.7385419970770674`*^9, 3.738542105660305*^9}, {
   3.738542178596933*^9, 3.738542230710074*^9}, {3.7385422938597775`*^9, 
   3.7385424477046747`*^9}, {3.7385427258909187`*^9, 3.7385427282859755`*^9}, 
   3.738543487640582*^9, {3.73854359901007*^9, 3.73854367117476*^9}, 
   3.7385437154723897`*^9, 3.7385437637217546`*^9, {3.7385438042218657`*^9, 
   3.738543873987341*^9}, {3.7385449277069006`*^9, 3.738544932159297*^9}, {
   3.7385450488472652`*^9, 3.738545050551468*^9}, {3.738545186284334*^9, 
   3.738545258376383*^9}, {3.7385456206276083`*^9, 3.7385456242850533`*^9}, {
   3.738546272268655*^9, 3.7385462742189727`*^9}, 3.7386104962816*^9, {
   3.7386105265526*^9, 3.7386105282886*^9}, {3.7386105712986*^9, 
   3.7386105730086*^9}, {3.7386107078106003`*^9, 3.7386107143775997`*^9}, {
   3.7386107979386*^9, 3.7386108425376*^9}, 3.7386108822265997`*^9, 
   3.7386109138646*^9, {3.7386109736356*^9, 3.7386109754816*^9}, {
   3.7386111104666*^9, 3.7386113250916*^9}, {3.7386115570256*^9, 
   3.7386115961136*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"fd0346ed-094e-4bce-a406-14fa9fc15353"],

Cell[BoxData["1.5993478902035987`"], "Output",
 CellChangeTimes->{{3.7386113155746*^9, 3.7386113259866*^9}, 
   3.7386115626546*^9, 3.7386115976666*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"65cbeb96-a7ca-4cbd-a45b-79914e3b5173"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate the Derivatives", "Subsubsection",
 CellChangeTimes->{{3.7385462310816402`*^9, 
  3.738546241828679*^9}},ExpressionUUID->"25c7858b-3ee4-45f6-86eb-\
8340a2938482"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"x2", "[", 
    RowBox[{"\[Phi]ext_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"H", "[", 
        RowBox[{
        "\[Phi]x", ",", "\[Phi]y", ",", "\[Phi]z", ",", "\[Phi]ext", ",", "n",
          ",", "EJ", ",", "EL"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]x", ",", "2"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Phi]x", "\[Rule]", "0"}], ",", 
      RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
      RowBox[{"\[Phi]z", "\[Rule]", 
       RowBox[{
        RowBox[{"itp\[Phi]zmin", "[", "n", "]"}], "[", "\[Phi]ext", "]"}]}]}],
      "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xyz", "[", 
    RowBox[{"\[Phi]ext_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{
       "\[Phi]x", ",", "\[Phi]y", ",", "\[Phi]z", ",", "\[Phi]ext", ",", "n", 
        ",", "EJ", ",", "EL"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]x", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]y", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]z", ",", "1"}], "}"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Phi]x", "\[Rule]", "0"}], ",", 
      RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
      RowBox[{"\[Phi]z", "\[Rule]", 
       RowBox[{
        RowBox[{"itp\[Phi]zmin", "[", "n", "]"}], "[", "\[Phi]ext", "]"}]}]}],
      "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x2y2", "[", 
    RowBox[{"\[Phi]ext_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"H", "[", 
        RowBox[{
        "\[Phi]x", ",", "\[Phi]y", ",", "\[Phi]z", ",", "\[Phi]ext", ",", "n",
          ",", "EJ", ",", "EL"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]y", ",", "2"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Phi]x", "\[Rule]", "0"}], ",", 
      RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
      RowBox[{"\[Phi]z", "\[Rule]", 
       RowBox[{
        RowBox[{"itp\[Phi]zmin", "[", "n", "]"}], "[", "\[Phi]ext", "]"}]}]}],
      "}"}]}]}], ";", 
  RowBox[{
   RowBox[{"x4", "[", 
    RowBox[{"\[Phi]ext_", ",", "n_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "24"], 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"H", "[", 
        RowBox[{
        "\[Phi]x", ",", "\[Phi]y", ",", "\[Phi]z", ",", "\[Phi]ext", ",", "n",
          ",", "EJ", ",", "EL"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]x", ",", "4"}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Phi]x", "\[Rule]", "0"}], ",", 
      RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
      RowBox[{"\[Phi]z", "\[Rule]", 
       RowBox[{
        RowBox[{"itp\[Phi]zmin", "[", "n", "]"}], "[", "\[Phi]ext", "]"}]}]}],
      "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"x2", "[", 
        RowBox[{"\[Phi]ext", ",", "n"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Phi]ext", ",", 
      RowBox[{
       RowBox[{"-", "20"}], "\[Pi]"}], ",", 
      RowBox[{"20", "\[Pi]"}]}], "}"}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Phi]ext\>\"", ",", "\"\<2nd order term\>\""}], "}"}]}], 
    ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "]"}]}], ",", "None"}], "}"}]}],
       "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "nlistname"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(\[Phi]\), \(x\)], \(2\)]\) \
term vs \!\(\*SubscriptBox[\(\[Phi]\), \(exdt\)]\)\>\"", ",", "Bold", ",", 
       " ", "16", ",", "Orange"}], "]"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"xyz", "[", 
        RowBox[{"\[Phi]ext", ",", "n"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Phi]ext", ",", 
      RowBox[{
       RowBox[{"-", "20"}], "\[Pi]"}], ",", 
      RowBox[{"20", "\[Pi]"}]}], "}"}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Phi]ext\>\"", ",", 
       "\"\<\!\(TraditionalForm\`3  rd\) order term\>\""}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "]"}]}], ",", "None"}], "}"}]}],
       "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "nlistname"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<3rd order term vs \!\(\*SubscriptBox[\(\[Phi]\), \(exdt\)]\)\>\"", 
       ",", "Bold", ",", " ", "16", ",", "Orange"}], "]"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"x2y2", "[", 
        RowBox[{"\[Phi]ext", ",", "n"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Phi]ext", ",", 
      RowBox[{
       RowBox[{"-", "20"}], "\[Pi]"}], ",", 
      RowBox[{"20", "\[Pi]"}]}], "}"}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Phi]ext\>\"", ",", 
       "\"\<\!\(TraditionalForm\`corss - kerr\\\ term\)\>\""}], "}"}]}], ",", 
    " ", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "\[Pi]", " ", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"-", "10"}], ",", "10"}], "]"}]}], ",", "None"}], "}"}]}],
       "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", "nlistname"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<corss-kerr(\!\(\*SuperscriptBox[SubscriptBox[\(\[Phi]\), \(x\)], \
\(2\)]\)\!\(\*SuperscriptBox[SubscriptBox[\(\[Phi]\), \(y\)], \(2\)]\)) term \
vs \!\(\*SubscriptBox[\(\[Phi]\), \(exdt\)]\)\>\"", ",", "Bold", ",", " ", 
       "16", ",", "Orange"}], "]"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7385481883785973`*^9, 3.738548258669409*^9}, {
   3.738548306636567*^9, 3.7385483230819473`*^9}, {3.7385483667535877`*^9, 
   3.738548368636121*^9}, {3.73854857097899*^9, 3.7385486032536535`*^9}, 
   3.7385486478362336`*^9, {3.738548716332517*^9, 3.738548949065749*^9}, {
   3.738549010841233*^9, 3.738549194512974*^9}, {3.7385492289563203`*^9, 
   3.7385493534965067`*^9}, {3.7385493841244793`*^9, 
   3.7385494565657845`*^9}, {3.738549524848573*^9, 3.7385496442993965`*^9}, {
   3.7385496932496085`*^9, 3.7385496977671103`*^9}, 3.738552777112359*^9, {
   3.73858241462*^9, 3.7385825427060003`*^9}, {3.738582577084*^9, 
   3.738582646392*^9}, {3.738582922852*^9, 3.738582937624*^9}, {
   3.738583053635*^9, 3.738583083992*^9}, {3.738583321642*^9, 
   3.738583340026*^9}, {3.738583464082*^9, 3.7385834697939997`*^9}, {
   3.738583517546*^9, 3.738583550476*^9}, {3.7386106474046*^9, 
   3.7386106744276*^9}, {3.7386113010036*^9, 3.7386113048356*^9}, {
   3.7386113358286*^9, 3.7386113409716*^9}, {3.7386113712686*^9, 
   3.7386114372116003`*^9}, {3.7386116155886*^9, 3.7386116174116*^9}, {
   3.7386117328206*^9, 3.7386117363306*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"a60deca3-5800-488a-93ab-f0fbc2531eaf"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
GSqD83oSserYzf26m0iIOuVwQiUoCZWeX3iKW0kIj+cdT1RNhmutQPyAMQkh
Yn7pnt+SISnpElAPEv5OH1IJ6knB1d0LX863IMGi96dFa2cqvKtuU12tSXhH
6ng1vC0Ni2dHVJbbkjBcmtjslJiGW04bFGd2ksBtXdda8iwNiiL8L/nuJJy8
d5Xjuzcd7fYsl897SVgq2f7R+Xw6QsrEW80OkLDvtbzbsrF0PGIG8F+HkKAI
A8kzBzIQn081X5lIgswiq+SnNpnQnZisPJxGgv5eg+mu6EwMUCsVm7NJeBK3
gC1C6B+T0WXjnoUkFPz4ZHRwRRa+Gn3hC2pIOG1X0PLrWxbcXvDGNd6Q4Fzt
v1TZlQMpbdausPckDG2eU5Qey0FdtHhb+zAJNo98ovZe4EBOIyB3/w8S9FRk
GuWmOWiOWCVxfYqEFS/PsXxW5iCgsydQUoQMv9q+yiqLHHSEUC0uSJKReTbc
fktKDsLuTl6aXkjGfduKJ/sv5WC1SqWSjTwZg5RV6fzHOTh+e9nE6Aoybmot
dJ+Q4UJP9kuujh4Zhz7UHLoZy8Wgj0Ai2oiMrCafOe4FXKRddz78cBsZ3+bt
Yl68xsWwx22LQCsyBkK/90QPc8GtCa9qZJGhZ6PhM0uUB/N5G5QX7STmM/+v
NWMpD4WXeBNVe8h4lPM28h2ZB6Y4y1V0LxkNWsObSx14mHYUv7Pdj4zlS0TC
Q/fz4PDvUN63YDJutNGlmEk8iNuvmkONIKMvoTXLIY+HKmHP4axoMs59jVgR
fIEHKSbVUo9NRnPMxafSd3h4niv/a20qGTmz6tlLn/Bw5tMHoWoWGWTRE7bO
/Tzs07/moMAjI+rnq8hHQzxsjjstIVVABm8qOSbqKxFPl0vtrBIyovl3JvdM
83BbVdvnVxkZbydfZh8R4yPl0Iz8WDkZlp5PtW5L8uF4o7N1sIqMUj21MvNF
fKhKFoa8qCXDhGSm8keBj2HHw6s768nw2OdS91GJjyul5GctjWSI5Mm0zVXl
4+g32bi6VjJCZRQu7FHnw4L0XreygwyNwonR0dV8LEytfSd4SMZFixrtKg0+
XvSdyuI/JSMw/7pGhSYfxWudqWk9ZDyT1pR7S9gHwtZ+j+sn4x7df/tZwtZt
my6JfEvG6PuVy//3/6G/sg/sDw+RURnRVtBL+L/jUSDmO0bGbP6bJTRi/rTK
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$962815#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 839.0335474103914}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {{{
          NCache[(-20) Pi, -62.83185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "20"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-18) Pi, -56.548667764616276`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "18"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-16) Pi, -50.26548245743669], 
          FormBox[
           RowBox[{
             RowBox[{"-", "16"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-14) Pi, -43.982297150257104`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "14"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-12) Pi, -37.69911184307752], 
          FormBox[
           RowBox[{
             RowBox[{"-", "12"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-10) Pi, -31.41592653589793], 
          FormBox[
           RowBox[{
             RowBox[{"-", "10"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[10 Pi, 31.41592653589793], 
          FormBox[
           RowBox[{"10", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[12 Pi, 37.69911184307752], 
          FormBox[
           RowBox[{"12", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[14 Pi, 43.982297150257104`], 
          FormBox[
           RowBox[{"14", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[16 Pi, 50.26548245743669], 
          FormBox[
           RowBox[{"16", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[18 Pi, 56.548667764616276`], 
          FormBox[
           RowBox[{"18", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[20 Pi, 62.83185307179586], 
          FormBox[
           RowBox[{"20", " ", "\[Pi]"}], TraditionalForm]}}, {}}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 839.0335474103914}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"2nd order term\"", TraditionalForm], None}, {
        FormBox["\"\[Phi]ext\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-20) Pi, -62.83185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "20"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-18) Pi, -56.548667764616276`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "18"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-16) Pi, -50.26548245743669], 
          FormBox[
           RowBox[{
             RowBox[{"-", "16"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-14) Pi, -43.982297150257104`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "14"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-12) Pi, -37.69911184307752], 
          FormBox[
           RowBox[{
             RowBox[{"-", "12"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-10) Pi, -31.41592653589793], 
          FormBox[
           RowBox[{
             RowBox[{"-", "10"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[10 Pi, 31.41592653589793], 
          FormBox[
           RowBox[{"10", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[12 Pi, 37.69911184307752], 
          FormBox[
           RowBox[{"12", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[14 Pi, 43.982297150257104`], 
          FormBox[
           RowBox[{"14", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[16 Pi, 50.26548245743669], 
          FormBox[
           RowBox[{"16", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[18 Pi, 56.548667764616276`], 
          FormBox[
           RowBox[{"18", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[20 Pi, 62.83185307179586], 
          FormBox[
           RowBox[{"20", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Phi]\\), \\(x\\)], \
\\(2\\)]\\) term vs \\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(exdt\\)]\\)\"", 
        Bold, 16, 
        RGBColor[1, 0.5, 0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> 
     NCache[{{(-20) Pi, 20 Pi}, {839.0335474103914, 
        2946.307363931279}}, {{-62.83185307179586, 62.83185307179586}, {
       839.0335474103914, 2946.307363931279}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"1 JJs / Arm\"", "\"2 JJs / Arm\"", "\"3 JJs / Arm\"", 
       "\"4 JJs / Arm\"", "\"5 JJs / Arm\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7385493182248588`*^9, 3.7385493672841377`*^9, 3.7385494572503457`*^9, 
   3.7385495300970335`*^9, 3.738549588269498*^9, 3.7385496476279125`*^9, 
   3.7385496990406523`*^9, {3.738552769046703*^9, 3.7385527779095025`*^9}, 
   3.738575186259*^9, 3.738582651467*^9, 3.738582938934*^9, {
   3.738583061035*^9, 3.7385830888120003`*^9}, {3.738583335042*^9, 
   3.738583340788*^9}, 3.73858355238*^9, 3.738593771217*^9, {
   3.7386114146786003`*^9, 3.7386114383896*^9}, {3.7386116037646*^9, 
   3.7386116184706*^9}, 3.7386117377636003`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"cefbbc4e-e416-4f60-90ce-72dc243cc3ba"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Q3gvU39khTH8fvuBMut3FbCvRqVfKyb7H2C2mxOqglapedPqPGOI8ol4q3y0
EpxP2tC3ZhuDTHVodO+xCli73vl88Kox3Oej8Q2QKYfCx+JZMynGcE6f73gu
TRlorudY/0kwBqZp9S+0r0sgysP3BX+kMVx6cdKK17GI3P/jucohxqAb2VCz
TV8IHX06jsYBxtD4YX0w8F0+uG7Wcbj5GgM93Y7qtbU82JJjnwzyNIYEtnYn
Ot48KD2dUJzibgzns7nP6RnnwrH8xRMlLsZwbK3uc9dKDsT+7ZkGa2MIPvZ6
n3svC/gV5SonzYxBbSMC+1yZCd2eRaeWcMYglHqpacvmGuwOXpjlOGYMHWFR
JgNzV6ByZ4ogo2EMY8zq/8n3pYOeMs5bT9kYWD/HVR1rTYPEYt6v5ySNoWCt
78Tf7hQQGkqtjxMxhhMcw2k/Ji5D794vv9zD5Hqb0QPrejIc8H36/cEhY6ge
+aR/2DwR8KUqd8aYjcFwec3mVkE8GI5UBC/QGcNz5a2AXyuxkKIe/of5nxEo
9nHa6y1Fg9j5D/dE/xpB5bm+YYbLUdBXbh55ZM0IaNrOK3DJXgRqSuHNM0tG
EMZH6LZpCIeUAZpExi9GcOqdXuoH/zA4kPWDuv2TEfQN75zK1Q6FXY4udsZJ
I3jN8j1SnDcQYt/iy9peGAHO0B4ucwfAVuVVkTNDRrDr/rNlUckP1iSPK7X1
GoG6/tMvVKk+EL6k0366ywjONZoI9rzyguUmMV2GdiPonVMc5NM7C8ERDH2t
zUbA0p3wOCL+DPw4umxxusEIopOvpqXd9oCA3alx+lojUBg+bdFCfxIW4dGJ
1hojaDam1ja5cQI+W2T50heR8Wt7iR1OJ/BiCf9x74YRlB3Ob59gc4DZCdeI
U5lGcDHNS4H6rC2cLjHYpksn86X7Sf34bAkz7lKX7yUZQeubUBWzBjM4KXKQ
/lSsEYjkmEaxNRnD28+rOXQXjeBpfczt0WlDcLk1zXUvxAja1MOK0lP14XXQ
40qPACMgZai+cnp8DBzVborT+RrB3wVWkm2AJoxv5DTcPWME1nIqWoMxqmDb
fVHV46QRfElaOqA6JQ8jSR6dtMeN4Ca8cbGPkARLYyODu3bk/Enxp1anCsMz
erkBd0sjch8tVTmFcYHpKJsNrYkRZDWzr73XYYD+vM1XLQZk/VslqY6fVntx
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
090q+Kb7/9/3hJ/X/9/7nrr/B1h99iM=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$963018#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {{{
          NCache[(-20) Pi, -62.83185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "20"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-18) Pi, -56.548667764616276`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "18"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-16) Pi, -50.26548245743669], 
          FormBox[
           RowBox[{
             RowBox[{"-", "16"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-14) Pi, -43.982297150257104`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "14"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-12) Pi, -37.69911184307752], 
          FormBox[
           RowBox[{
             RowBox[{"-", "12"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-10) Pi, -31.41592653589793], 
          FormBox[
           RowBox[{
             RowBox[{"-", "10"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[10 Pi, 31.41592653589793], 
          FormBox[
           RowBox[{"10", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[12 Pi, 37.69911184307752], 
          FormBox[
           RowBox[{"12", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[14 Pi, 43.982297150257104`], 
          FormBox[
           RowBox[{"14", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[16 Pi, 50.26548245743669], 
          FormBox[
           RowBox[{"16", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[18 Pi, 56.548667764616276`], 
          FormBox[
           RowBox[{"18", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[20 Pi, 62.83185307179586], 
          FormBox[
           RowBox[{"20", " ", "\[Pi]"}], TraditionalForm]}}, {}}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(TraditionalForm\\`3  rd\\) order term\"", TraditionalForm], 
        None}, {
        FormBox["\"\[Phi]ext\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-20) Pi, -62.83185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "20"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-18) Pi, -56.548667764616276`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "18"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-16) Pi, -50.26548245743669], 
          FormBox[
           RowBox[{
             RowBox[{"-", "16"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-14) Pi, -43.982297150257104`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "14"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-12) Pi, -37.69911184307752], 
          FormBox[
           RowBox[{
             RowBox[{"-", "12"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-10) Pi, -31.41592653589793], 
          FormBox[
           RowBox[{
             RowBox[{"-", "10"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[10 Pi, 31.41592653589793], 
          FormBox[
           RowBox[{"10", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[12 Pi, 37.69911184307752], 
          FormBox[
           RowBox[{"12", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[14 Pi, 43.982297150257104`], 
          FormBox[
           RowBox[{"14", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[16 Pi, 50.26548245743669], 
          FormBox[
           RowBox[{"16", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[18 Pi, 56.548667764616276`], 
          FormBox[
           RowBox[{"18", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[20 Pi, 62.83185307179586], 
          FormBox[
           RowBox[{"20", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"3rd order term vs \\!\\(\\*SubscriptBox[\\(\[Phi]\\), \
\\(exdt\\)]\\)\"", Bold, 16, 
        RGBColor[1, 0.5, 0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> 
     NCache[{{(-20) Pi, 20 Pi}, {-2618.9419938051565`, 
        2618.940733726481}}, {{-62.83185307179586, 
       62.83185307179586}, {-2618.9419938051565`, 2618.940733726481}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"1 JJs / Arm\"", "\"2 JJs / Arm\"", "\"3 JJs / Arm\"", 
       "\"4 JJs / Arm\"", "\"5 JJs / Arm\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7385493182248588`*^9, 3.7385493672841377`*^9, 3.7385494572503457`*^9, 
   3.7385495300970335`*^9, 3.738549588269498*^9, 3.7385496476279125`*^9, 
   3.7385496990406523`*^9, {3.738552769046703*^9, 3.7385527779095025`*^9}, 
   3.738575186259*^9, 3.738582651467*^9, 3.738582938934*^9, {
   3.738583061035*^9, 3.7385830888120003`*^9}, {3.738583335042*^9, 
   3.738583340788*^9}, 3.73858355238*^9, 3.738593771217*^9, {
   3.7386114146786003`*^9, 3.7386114383896*^9}, {3.7386116037646*^9, 
   3.7386116184706*^9}, 3.7386117379296*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"f905edb1-3c3e-4227-87fa-076cc5e94fa3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
T/t/cjFI7w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$963233#1"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {{{
          NCache[(-20) Pi, -62.83185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "20"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-18) Pi, -56.548667764616276`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "18"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-16) Pi, -50.26548245743669], 
          FormBox[
           RowBox[{
             RowBox[{"-", "16"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-14) Pi, -43.982297150257104`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "14"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-12) Pi, -37.69911184307752], 
          FormBox[
           RowBox[{
             RowBox[{"-", "12"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-10) Pi, -31.41592653589793], 
          FormBox[
           RowBox[{
             RowBox[{"-", "10"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[10 Pi, 31.41592653589793], 
          FormBox[
           RowBox[{"10", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[12 Pi, 37.69911184307752], 
          FormBox[
           RowBox[{"12", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[14 Pi, 43.982297150257104`], 
          FormBox[
           RowBox[{"14", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[16 Pi, 50.26548245743669], 
          FormBox[
           RowBox[{"16", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[18 Pi, 56.548667764616276`], 
          FormBox[
           RowBox[{"18", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[20 Pi, 62.83185307179586], 
          FormBox[
           RowBox[{"20", " ", "\[Pi]"}], TraditionalForm]}}, {}}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(TraditionalForm\\`corss - kerr\\\\ term\\)\"", 
         TraditionalForm], None}, {
        FormBox["\"\[Phi]ext\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-20) Pi, -62.83185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "20"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-18) Pi, -56.548667764616276`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "18"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-16) Pi, -50.26548245743669], 
          FormBox[
           RowBox[{
             RowBox[{"-", "16"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-14) Pi, -43.982297150257104`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "14"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-12) Pi, -37.69911184307752], 
          FormBox[
           RowBox[{
             RowBox[{"-", "12"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-10) Pi, -31.41592653589793], 
          FormBox[
           RowBox[{
             RowBox[{"-", "10"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[10 Pi, 31.41592653589793], 
          FormBox[
           RowBox[{"10", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[12 Pi, 37.69911184307752], 
          FormBox[
           RowBox[{"12", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[14 Pi, 43.982297150257104`], 
          FormBox[
           RowBox[{"14", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[16 Pi, 50.26548245743669], 
          FormBox[
           RowBox[{"16", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[18 Pi, 56.548667764616276`], 
          FormBox[
           RowBox[{"18", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[20 Pi, 62.83185307179586], 
          FormBox[
           RowBox[{"20", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"corss-kerr(\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Phi]\\), \
\\(x\\)], \\(2\\)]\\)\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Phi]\\), \
\\(y\\)], \\(2\\)]\\)) term vs \\!\\(\\*SubscriptBox[\\(\[Phi]\\), \
\\(exdt\\)]\\)\"", Bold, 16, 
        RGBColor[1, 0.5, 0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"1 JJs / Arm\"", "\"2 JJs / Arm\"", "\"3 JJs / Arm\"", 
       "\"4 JJs / Arm\"", "\"5 JJs / Arm\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7385493182248588`*^9, 3.7385493672841377`*^9, 3.7385494572503457`*^9, 
   3.7385495300970335`*^9, 3.738549588269498*^9, 3.7385496476279125`*^9, 
   3.7385496990406523`*^9, {3.738552769046703*^9, 3.7385527779095025`*^9}, 
   3.738575186259*^9, 3.738582651467*^9, 3.738582938934*^9, {
   3.738583061035*^9, 3.7385830888120003`*^9}, {3.738583335042*^9, 
   3.738583340788*^9}, 3.73858355238*^9, 3.738593771217*^9, {
   3.7386114146786003`*^9, 3.7386114383896*^9}, {3.7386116037646*^9, 
   3.7386116184706*^9}, 3.7386117380556*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"d3f6b4bd-3a42-439e-ba53-e70ba6019fe9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xyz", "[", 
         RowBox[{"\[Phi]ext", ",", "n"}], "]"}], ",", 
        RowBox[{"x2y2", "[", 
         RowBox[{"\[Phi]ext", ",", "n"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]ext", ",", 
     RowBox[{
      RowBox[{"-", "12"}], "\[Pi]"}], ",", 
     RowBox[{"12", "\[Pi]"}]}], "}"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Phi]ext\>\"", ",", 
      "\"\<\!\(TraditionalForm\`3  rd/corss - kerr(\*SuperscriptBox[\(x\), \
\(2\)] \*SuperscriptBox[\(y\), \(2\)])\)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "10"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<3rd,n=1\>\"", ",", "\"\<cross-kerr,n=1\>\"", ",", "\"\<3rd,n=2\>\"",
       ",", "\"\<cross-kerr,n=2\>\"", ",", "\"\<3rd,n=3\>\"", ",", 
      "\"\<cross-kerr,n=4\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}], ",", "Red", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Dashed"}], "}"}], ",", "Orange", ",", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Compairation of 3rd and Cross-Kerr\>\"", ",", "Bold", ",", " ", 
      "16", ",", "Orange"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738583554894*^9, 3.738583620881*^9}, {3.738583684033*^9,
   3.738583738641*^9}, {3.738583794689*^9, 3.738583827473*^9}, {
  3.738584474976*^9, 3.738584579592*^9}, {3.7385846299300003`*^9, 
  3.738584636008*^9}, {3.738585207914*^9, 3.738585249352*^9}, {
  3.738585308833*^9, 3.738585347449*^9}, {3.7385904599370003`*^9, 
  3.738590471592*^9}, {3.738590511458*^9, 3.738590548216*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"a21d29c2-f526-4a50-a41e-d89e718ff310"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         LineBox[CompressedData["
1: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
qC9MEvwQSMBMcIqEWA4ZXS5T+0KDCKBJvCYeppOxajDq7mAwAfbPpTUdk8n4
o+ZQGesJAjb95/1g+QIZf5X3PFhlcIvoHciLJqP1QshIcygBZ5t+vTQ9TcbQ
6xaCh8MIMPDfajsSQsbl893ONQz+InRhJMqfjCw2pLoPDCYaXx2V8ibj47BJ
+UEGHzkm+O2xKxnD7MQLsxnML+B0ysWBjDa8R0kqDG57RGdeO0DGamKy9Rwj
3jnvz5eu25Ax7R05soyRzxZePUHYTkZe2zyLvBACvj+MKBglk1HHi67oyNBT
5tmkfM6YjKta8XKT/xHgupHrrpweI9/Lf7aaMeoh/GC/cZMGGZVYdM66+hPQ
6ZbT5KFMRsbL6NQePwIucH3ctU6WjBOBR85w+RJgVq06QBdj9Ct0t1X6UQIq
2Os+TWwg4/t5agqbGwEe99aCLrCR8Y+2o8Q8o9/iR6yWlZjImC4lsljxfz/c
GdzgM2+OYwd2N8YeIADspTPZv5rjyeX5x7Q9BCwye8uUTZmj5Mdc7aSdBHgf
/KUzM2yOa9ITec8pBEivmTUk9pmjcErbTaGtBAyUxVmSOszR18jYUXcLAZZ/
BQ4fR3PkKup91bOZgJUbR0a5681x9pbdTTtVhl/30o/dum+Ouy02OhPyBMjR
daO+lphj8g7vqJvCBAzZRKy/QjPH7+sD2N15CUj9/fSKZq45NhWEExOcBKxa
7y/677I5zsnMHbL9S4eR7/+1/Dhhju00pUvd7+lwLffB3vQAc3wpEnTlxyAd
dlmuDen6mOM+pQTD0U461Gdd+XzC0RzVmJKalZ8w5pv5bd7fYI7RG4v0j+TS
wTZ51nF5ozmSS1Znw6zpMM15spmdwxwPVdGnt5DpcDZ+naYQizke0Oy379Gn
w81YSWbt31vxW+yWr7EyjHl4ek/p0fdbUeq13rnPP4uh6mjVfPedrbgyYO02
nVYMO8bNnd+XbcWYmAlxngvF8N6tveVz8VaMFC0e5zpVDFxOEzlsWVuxc2qe
/5JzMbgfEAaz6K14W5BQLFYuBl5yRHLp3q3Y7xwkbHevCEoesf2utt6KRz+o
zC8VFYGZyVXXJout+Gvrpv7w9CLwNbil+85oK67fPKO+GlIEqP5+iF92K/5R
n+Ag6xbBf6JUpbPfzfBYzzHD8nIadP7gfGKXZoYpeXqJTsuF0F9LujN2yQx/
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
x3br+w1PQdwQ+/G6G2PevLnvEHVYXxDbCg99cImmw0Wemqv1AwK4e8jwjpMD
HXQmkxwEngggMfPOIGQvHUYaPGT8SwTwt/9EovM2Ouge462QOimAbGeSvtVo
0+HDs+NNMaICGKPToB20ng5bTsv/2H6EH+lpNfdkSothfO+f2usW/PgxalG8
ILcYrih3Ry2p86PSu/a3Py4Xw0TfGY6bf/nwsoNln1xoMaRpDstsLOTDzf9O
1BaaF8PseMqevlFeHPLUOaj8qgi2FCwfbnzFg9Y02e49jH3Fe3GnaFgOD9qU
K12KfECD6cDcIZI3D9b2qx04Q9AgG0wcMtc24hnayy6mszRYGj/tGKC7Ea+e
T/i5QYsGD0h/nCSyuVH4Ds+5Dv7rYFi36H7SkwMDb8xGmVDygafISn6zNgcq
eHmmE3z5MJWYNTb2lx0fCnxJavnIeH84YuS5J5MdPdpfiOify4Nfq+FeSi/Z
0MLtne6zR7lQve23d5/merwYW9wkq5IDen0Lx7WWmfHyHtOK8FcZwHTkuKZN
GzNOFj+dv5SdAa/GPn73zWUwF+VDoFcGeP3sDCs2YcYTfu4hpSvXIIOvPFoo
kglnHca9p1Wuwdfr9cqLi/8a5U9dbeU7lQ6hOUlhKSuLjUBUed1duAysYkeU
Y9ZPNyb2Z3O1Jp4F1uKFx2tfpsiL6+V/iKqdwdmff2fr6j6RN7QVq+1WO4td
FutFQ+KmyYdVFpb11aIxd1IoZEJilnx71yyd61oMaqkZKb/c+ZX8ZFju83Rq
LG4eMrOy7v9BTnvxbn3cuYto7xpdya+7RJYxEnwVZ3CF8ft03fZvWUtkzxMv
XwTcuYLmd+NH2v8tkSXFBLk5VVJQgTmV88LLP+TV0rSeMu5UnCumeS66rZAH
Zfd9Z11OxfNTT0VGUlbJngasz+I70/G1IQv2hrPAE/KYyf0DmSh5S4rTsYQF
OBex5dKFTPSQMz7wcYAFjmd007XrMvELd9DEN/11MCTOdnVSMguZPr7j2Di/
DqrCW1Wnx7NQNenhfqv/1oP3x+in331y8PSHoPEGHw6I8bzVq7EtH5/YJWtY
ZHFA4/HSL6tB+cjaVhrW1sIBjxPrd6Tn5+OV6vfsw0qcwKujY7XyMx+LE200
fo9zQn622d/2/AJs01MN03bjhnaxZj6RiUKUSPjAdsOeB8bHr1FCr9Pw/VN7
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
          "]]}, Annotation[#, "Charting`Private`Tag$939089#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
BDIMnbA8RYqduGCGqm5dbScltiLHYefroaNm+O/uty+73jljZWjlj64KM/yc
s4d7o7YbClPizlx3MUNeUVfXnWc9sewx98IDezMUlKoYmnvqiabG/21vtDTD
O8UFSXYLnhhucFtvxIgVn3jLNSrQC1FjdFBUzgyPjR+MOarpjXvELZQTv5ni
QkbYNU+mD3Z852vwzDbFxg1rll4+3oZ9NeoV42mm+LtpWTh7dhsOxTsWRh83
xTefmCbr5fzw45qziWcOmqKfkXGzZYofrm4WpjQFmLLem03Ntpb+SLTYiFvU
TTG281J/1MMANOQxuvdU0RTHFvaGFEwEoGm7z1UXaVMU8X/umigSiHbeeUm7
hE3x8rmcJK+IQAyOkKIWL5ggWxfXVSfx7ZiTo9Ao+swEe39MCSfqBeFFH8vK
q49N0OWWxa+zNkFYKMW4pl1jgp2PxnJjtwVheVlpisNNEyzzrrFkJgfhszqC
ZUqmCeZYhtS6dwThz3Htpu9+Jug98EaRsj0Yl6+7PDjqZYKJbXfy/osORrbd
0SWCLiboWfn9eV1yMAou3j+uZmGCFw9vyk0qDkYVAQPrYAILX56ympwIRp8t
Js+7fhrjpYXtgbOBIRhZINyRMGuMe0VEUjftDsEUno/9hCljvLFV75xofAje
fps1mfTWGDOSLF8eyQ1BtuMfuXQbjVHTOW5KqS0ExWbr147UG6M2NWjXm4EQ
VKdlbzhdbYy7rU41B06EoJemqdLYDWM0i6hJebsSguV92ZbZmcaYIxvYladB
R6Z5mKPZaWNUtXnzqNuQjn03TD0+pxjjjvMfz7yh0nE14VMI9YAx9no8S6b5
0NFT2Szluz8rfzs7pnASHXdmiqYVeBtj1ZcO/ubTdEz8/Snb3tUYU29sjbb7
j443X+UUFVka48q5veqPS+n4b/8Uuqkb413NyVHPl3Rc//7Jy7+KxvjLJyzu
aBcdCQ7/dd2UNsY9VqOJhwbp6CFj/p5dxBiHnLxj+z/RMTx1/dQdfmMsd58w
Jc+x+Oan5ny5jLFka7LCrgU63nj+3+r9RTKiWuAyiYuBT4g7eQK/k9GgR6S1
j5+BPZfM1/F/IeOC5+NocxEG/o36LBMySkZHEypnvDQD3TdRzEWbyXiDr+jS
hS0MDEveYNPQQMYryvoJV0kMTPjyeWtELRnXLMs1HjBj4HXmuYDGW2SUCZRw
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
HZco35ku1Mrxjlo6BnQLDwomfWO+KLt0suklHY/Ipg18Yp9lyn4YyMv/SMcK
c8bYNouvzF0ONKlrX+k4GmD+5VXKDNPV5t3f+J90hMvz/6o4vzAl/qwpusnO
QK7NfipJa6aY0v+aeqY3M1B8qEWlxv4Tc7LQaDRKloGa+STVmbMfmcu3OvNe
KDHQU3ojgbZxkjlh1PxjQZuB4aPHCRnbJphulYYJr7YwMOHKD0JT4QdmGPNX
6iESA4vlu9WIquPM/t2neZyoDHw4TlHfsWuMyXgWuGOfNQPbiivUL999z/xm
ekxxrz0DJx3FfYSjR5kSx57lfnJl4NqOXz4JS8PMZodO02BPBuq79tKmkt4y
N7jwy9/1YeBxz4xtmD3IVMr+fepFAIN17tzlpykxwPxMzvybHcTAPpq9/8Vr
/cwLIpsuEOkMXBlSCeDS6GNurv7qXBzKQMUArsDoqh5mhn6H7HQYAx3fjQUO
m3Qzr8j0cK2JYOXTmMjMSu1kCqTv/f1jF4v/BflpeF47M1Lp2O+a3Sz+tp+N
UN7CVNQ1ZXfew+LrvNskXv+ceTafKPgomhW/L+L5t7ZnTO/f7hJLexkYM6j8
8uUwMkVzfioLxLLWP3r6H/VtPXOV0aw1z8KKjUYXvq9UMzm0+3Tu7GNgY+ud
S0Uy95h9OzPUTfezcJmtaXFSCZPhi1JXWJgtOuwkd2o2M4rr/JrXLCxcw353
sukgxcokd+I9C/M6TgUcjiigdF+4/YjJwjYbeG8M7y2nNB+RPRHDwsfZM1zN
N1VR/m0+b/ubxTe5tGlrxq9ailKwKIcnC9t8K7If7W2gHBb8U53Cyq/vh5ji
Jt9GSne+SOiJGNb6uW3yFLtmymvbgyL+rPr0v1yRDTN6SYnguf2Em1X/5McJ
6UyVNortiYzIE1EMzB1Xk3oo1kHplfCXH4xk1bvH6OyelC4KoeXeu38svVdm
fM9wLndTHHRP3fodzuKLSEi/sLeXUpBOOv1yB4tvx9PTzKDXFOqDnWfHgxno
P/Eh1WNwgDKfua9BazuLP4Q79ZPLG8rH4OiNW/1Z/AGOJ9dRhiknj2735PVm
YMPb3SeKa0YozYNdtiXurHx8s44bab+jBKroHNngwprX8oind4XGKDav6tr3
2jIw6/MfPNw6RnlA91kMtGTNN+EsWp4cp/hbM4/LUVj7oewuc+DvB4rI8cEZ
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
          "]]}, Annotation[#, "Charting`Private`Tag$939089#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwUmnk41N8Xx7MmIiT7nn0f2yyWOWgRZYm0UNFiSSRbtiSlZB0zU7ZUJEva
Q6LMqWihEiFKSMiWLd/I+pvfX/O8ns/nc++557zvue/7PKN06MTOo5yrVq26
yL1q1f9/ZyvtgmM6rZE61bKjL4yJYxf3l19ot0aPsYzHXWzu3RP0l/bZGhWK
jAYa2dymeY6U+8kaj+x80XefzQ3zl6NufbDGhK12dxLZXNtY8ux+gzXaL/+0
cmPz46s1y0/fWOO4yO2bkmwuCfgIdXXWOEutbW4KZeJVyx/xH19YI9nX9n00
mzPWzdR11FpjZUo4Q5bNF3p5V/+sscak5hj1RyFMjHoote13lTW+jrmcaM7m
E/E6ybMV1rjv76onNcFMPOJC/cDx2BpH3/A81mfzHpWd69Y+sMYHVydjsk4y
0fr1KYbibWs8f/NdtG0QE00zk9q0iq3RtuXEw/QTTNT2zZMwKbTGrUv+lY2B
TBTjf5W77Zo15pRKGSgHMHHNt7bvLrnWGKVTfsv8OBOXy4YUDmRZo9a98DF7
fyb+2iFUGExnxy90acLWj4ld8kqDMenW+G90+o6pLxM/TRhpXEyxRqirspDy
YWJ1xt47uRes0e9x07dnR5iY0lZYXhdljQ7adbKxB5l4tujJ34+nrFG7JOai
6AEmhp9qIHWGWiOrXL4x14OJB6Umn/0OtEZ+z329KXuZaLjfrF78MHu9y/n7
hncyUU3PYbWSJzt/JoGFKs5MlFnx3Ka93xqljpA+ujoykTv/wgfqbmvMv19X
z7Bn4pf+5jZfe2vklOI+lGLDxPcV/RIhttboc7rrbaAVE/HC7N7Tm63xiewO
yS1UJt7WkOvOoFojlj0J+0xhYsxx38FqI2t0NLPb4UdgovLM8t+1stZocIsv
K16WiU1D7jFfJK1x/attxqek2O9/r+Io2GCNOlSpHwfE2fp6HbyWuI6dP7vD
oauFmZiYPajkxWmN1tJhNc85mThu+XF7xZAVSky7VuAAA3ONtFvODFjh3fHb
7r9+MNBWI3G3XZ8V2ts4m3J0MzBfxPpQzzcrtL5zgy7UzkDX/opTa5qs8PY0
XZ9Wz8CaS3kF+yuskPVhajehgIG+sfPqGo+sUHVmf3xKHgPFQnbfnb7Hnk9a
UvBbFgMDPUSqLpZY4S1PhuPOdAYq6yd8eJhrhbztpj2l0QxMbD0+xxNvhSdv
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
4P08sWHfXiZuOTBRtXBWHXLbPIr79zFRkbJCu5+qDs8iM28c9mDHNyVvJXFL
HQ5Wiw7AQXY+vA7kD35WB60W9fyII0wUtwiMzOlRhyiK0Payo0yclIx1dhhV
Z8ebKfjZm4mFn/I4Kjk1oE9PoYXDj4mxd+52+glpwHTz9Ge+Y0zck/j8oZy0
BuT6rx/h9meiAHz3SiBoQO+4qnPXcSb2y/wmky00IOK2TP6TACbWzi6K/LbV
AC0Ob67EQCZmfV47csNVA9ZEXj614wQTg+/LvnT11ADuk7C0Oohdz2SdHL7j
GqCoxMV8wmY1H/PgZ6c04H7OGTOPk0z8Ku+hrJKuATwn7GvOBzOxfN5//kuO
BmTpLNL5QpiY1h7dklykAZciNaPOstn3UfJt6iMNcCmhB7H9Jlqn5cb/ea4B
1QOLYWw/irLHyvYVv9OAEZJREtuf49/NNYbubRrAOMd7l+3P8ZNSI/+6H+x4
43d0k8OYWLr0te/lmAY4NvbLsf05xneOVIfPaQCh+Z5/Hps9KubpWtya4NrL
eFPLZtMMfv/udZrs/hlPYPttFA6QtqHLaIIvI6CU7cdxxFZLZou6JpAknPR/
sLlOhfLnn6EmCB/RfNXO5mur7BrvWmqCreDKkRdsjujae9PLThN0znaJ5bN5
Z5Vf9AY3TZjl+9wSxmYdZqTLOy9NaHj77xqVzbxBl7RPB2hCLisgcpm9nl77
bC5CpCbovXE+9IjN1eql3/rPa8I84+NedzYzuZ4+zqJpgmSFqOc/dr4Ce94m
b7+qCVrMnWEpbLat6Ti8qkQTzMLeZouxWTlzyKz8sSbcCi//kMGux2Lw3Hpf
liaM0jxEuNnc7sA3JtOoyfZpa4/6s+v3QEuyrqldEwSNxd+9Ydc3iVfj6rk+
TTg08clCis1H+oihxHFN0NXIeXWQrQ+JnN0q13m0oOfjCNd7tp6Ef1lOOItq
QX3a4u1utt74jdWquRW0IGXsdGg/W4+LH2Ycj5G0oJDX4eQ7tn7/SndJy23W
Av8tk7dKfJk44fNqoMlZC7S0SleifJjYx0GPNvHXAuq/A6r/2PujyyFyy9Ap
LfinNzldeJiJbbmeIrnntSDsKg7ZHGLiWxP94lXXtGDy0Q0nd/b+uuf3vqXx
kxbQr93VntzDxJLKx3mx37VAstZxl8luJuZz5foSRrTgthfv/YBd7Pzm+S1f
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
rTGHAdWfmxOZ1jBWoCz3aZ05yJhQGzdp2EBcp4dl1QZzGKnc/Le51gaKtzTH
JSqZwx81lcWYmU3wV7GaR5NsDnxnLgiOx2+Fy23J6475mgOH6vqAev0dUFVH
uN0caA754TMGrtwO0PX4yyZymDnbgYe9/9DlACr0jVF88eaQrdIS07HdCR45
1PQX5ZqDtovoG2vlndBu4XVGqMAcijvlUrqu7oR/Oqulw0vMQfJRzN1cKRcA
ARfHzRXm8PBop12BlCt8fDPy9OdHc5igMnyjjd1gupLmat9mDsM9kYEj6AYb
ikwnHn0zh01ddMZ9x93gcT5eJX7IHGLndS/qh+6BUZBOV+S0gJGl+Zz5L/uA
r3rbkf0mFrBtUvyHq6An6JROLNeZWUAMV1FVho8nOGZdztaxtoDd1+P5TV55
wpXwHx8XHCxAKTR0uDbWC1SMIsk5vhagq3rv247Vh8HqTonQl1wLGCpxXX30
oDccyXUotSywgCsNyktKzd6QmDRjU1RiAVnOogmXNvnAJ1+IDKuwgN/n7ZYC
DXzhgGrHz/VNFuDvaFpKkDsGUddWP3XitASdHQotQY6BwHrqG2LPZwnez/ZH
9LcGAnfbO90tQpYwPR38QcLjBKQJpBSYSVuCj4HC0CAxCAoihFPUDC1B/MMm
SofrSWjcKXVw0csSuF8uVdQ9CQHhwCipWR9L6FXYMf6cLxTcLn37PBVgCRv+
Nf9+ty8Uell5tr8iLYH3UXG5BmcYzOgoG7ZkWEJl7nPLQwfCQXa1Nk/JC0v4
x+liF+MYCV7KKayCN5aQJfaZuPFxJBRZ/I7M+2AJURMS/2rEosAg9P44vdMS
6PPK5kkdUbDph1HH6SlLeBtY3qp7MgYuLTLpEbP/a+HM46nOuzjuUURzGw8x
MRKyliVKzQj3fn5fS/TkJjxGoUWWkmT3JCRbZOm696tETIuIxJRX1iikNA8q
dE0ja6PVmqIpNHder/nz/c9ZPue8zuv8cV6HjYiSPqFObxQ6VsxsC5ln4+6s
y7o7NtFw5VY3HpDmYE+ak/Lk6hj415lfc1LnQK3/6HW/yeO4Iczz5upwIO3f
e9PIJBYzUwuqdgYcnOP3DK8KikWsbiNlm3Lg1WztNTgWC5plHbNmBwfWt5rN
zaZPoP4Id8fXWA7OPns4vMBJwPuRz9O9SRwcvrWp9X8ZCdB1LzpTnSay132p
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
          "]]}, Annotation[#, "Charting`Private`Tag$939089#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
EnpuZnf4myoVNks1NkdxkpBvH2/rmjgDUN89c7WSoYveWgkb1zDIkKKQLPpm
vzYaMzyudFdXGfx0U+dHNDTQ3YQ1hl/UuCFKh3/1Nk0VZfJdKv5xXgyVDiXb
nOdTQv+5Ow47PlFH1FtxlY2Cimi7F6EYXauH4tvcuLuyZBDZXnw7z11DVOWs
bhV2SwZltMT4ZGUbornBiduqZ2RQJ+fJHwYVhshh5rRUgJkMKo+MN9rCnstl
RcI0eTs3IZ+c94E67Dn/sVX6PpLIJlRw2y9KaKMxKvjYmnb9ohSa7HSnnrtm
ggYZ9/s1XKRQhVxZev99EyRR56T6zUIK3aGY+Bm9MkHnfwzkb5KQQlorN6QL
u0yQ8TyrIi9fEkmFha1WGZiiSt0NYx2DEsiF67zwwX5T1PJoJ2WbjTiS+37J
5JQEoNCgzUvhmDh66eG9DskD0tg3W9ajII7WVMnxCagDurySuSeWuRFxRwRe
CTcCpH1w5fjM3Y1oU5hQj+hRQOFChffefxdDi7bck8FPAWEXtjB3OIoiaYuQ
jDM6ZujX3r9FGeaiqEVii+ATqhm6rfIteEFTFK3XuS9ah5uhgeZLfNlLImhy
j1Hz8l4zFLutQ14wXQQJPq7P++NrhsZ+xVg39wqj78xsAf5cM4Sl/bMn6oSQ
+jkFwdktdCQcbiV1NlkIRTrGmodr0NGIz/12DXchVNxFbhAg01ESO2MTVgWR
T8iHpmmgo4VfFw55kwXRrdDL3FRnOnqr8fewTJIAOu9vwRueQEe3xSzlGo8L
oKmrsU6H0ujIfSmpK5wkgI5e2kVseUxHEvWYM6tmHSIEX96LeUVHgf7nj1Qv
86M3+qJ8HbV0RCmeP3bOlQ8NfFU8r7pCR0IPd27R1uVDx3ZlRBuuNUdDkYn9
/Uu8aIhy0cNsnTlKcKS6WifwotzYHz4aEuZodiXwuHI1D7Ix/2R+UtscFWyf
c2/exo32JT5oSThojvSaZ7x0/q1Bnx6cc09+Zo44HL227a5ZgzI+uzk1vTBH
df19Ux7316BxQycbjlfm6Dir/mym4RqkLiqqaPTOHMWLPA8Vv8iBbpXd09aq
Nke/M96rzM8vEw0HdvH+GzJH4XlPc3STlonq8eg3V8bM2X01TtcTWybkinfT
Vn6bI+tuH8Ou80vExhPh1d9nzFG+7Fbrir//iLdeHz6vrGGgM8nRZ2MW54nn
Z5qzKJsYaP3z8/++pMwTW1JuCQnIMdh9zS2U03iecCgJ1muRZ6DWNjzybPAc
kahckctQZiBMYibVcXmGOPeuCdJ1GOibcp9ifNoMkfp87IQUmYFOGtRn1ZvM
EMamPhChz0D3DzzLNwuZJohvuzjMaQy0ePdwpeoqk0hpqk0g0xkoLtPS8lgG
kxBqDlXaz2AgrdeU+vs4k8gx9zrovoOBnBqF2wUvTxElrB0Fp6wY6JJ8VNvw
mkni2Mq6Dcx9DJRrerzvEP03oRK2822hLQN1O5mOfw2bIKy+ya34/MdAkMpa
ecM1TkROlbkSDgy0VtpR5TL3CCG258zZNmcGkvpRrVJkOUw8o8ct0o6y9adg
qhO3hojnT7qjYo8x0AE5CTUHiUEiWFG8XP44A3l0X1O7fWiAsCI/9LBzY6Dg
jGm1yvRfhMnDRPEwdwZ6pNiorqvaTyhfYlwu9mCgt/24hrtXH/FYoca44iQD
1T7K1UjN6yVWYxyWyz0ZaHCXlL2wXzfhZeZ74+Ep9nvUz9oHL3QSzZxz+y57
M5C+TbPDyOWfhHVMmNwBHwa6duD2IRTbTlyRGC/+4ctAL1q9HLU2tRHc/TMR
t/wYqMXB8nBS5nfi+aaj9gb+DLT0Q8VprWYLIX2mSaWJjbc6rXX2e9NEWNya
n3UNYKBdPX3OnUaNRPLU5coxNh4sDyHu3Ggg+Deq3HU/zdb/mVbmkVxHHD74
2LmNja/VzpRDdjVBFSLUTc6w9TXkVUqVVBGWp/DpRDbe2uJZNVVbQbgnz7wf
ZuOAduUvXzoRkfH0zWWts+z978rumf0sIZzi7RnubLy1nJrIXCok/PeUccez
cXnNy/sPN+cTKk/bKov/h7N2Gj+6/Jg44B5xpZGNOfxOhPPciCWOGFUY9bCx
cNGavMHKc7hlxdXpPjbm2zXidMEzDc+P+Pysg413bOR71umfjTeu3HWs+p/+
NbdtTCXf4FejpwSesfHgguSe27PFOPXS1LuQ/8lPPbTsbi7FRzc8d7Ni45Zp
8a2SB8txyVOUDQL/2//nkCJu8Ql/nfW+CLHvpz+eIX+C+gUXKHM67MXGg0MD
cjEqtXjpsz0cAmyc0K8u+1a8Hk+ilmZmsP231Zd6yzfsGx6iN2quzsZLEwdv
cv1rxC2thQaesv3f4hkcnejfjGcrn74qw8bX3MsiiaOtuIaMblkf+30PD/y6
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
SdMKYg==
          "]]}, Annotation[#, "Charting`Private`Tag$939089#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
NiIeq8IvvrnyiP7/36vAUMn/fa9i8j+dbnii
          "]]}, Annotation[#, "Charting`Private`Tag$939089#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
4v/fN0DPsf973/A/HTfYGA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$939089#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {{{
          NCache[(-20) Pi, -62.83185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "20"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-18) Pi, -56.548667764616276`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "18"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-16) Pi, -50.26548245743669], 
          FormBox[
           RowBox[{
             RowBox[{"-", "16"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-14) Pi, -43.982297150257104`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "14"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-12) Pi, -37.69911184307752], 
          FormBox[
           RowBox[{
             RowBox[{"-", "12"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-10) Pi, -31.41592653589793], 
          FormBox[
           RowBox[{
             RowBox[{"-", "10"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[10 Pi, 31.41592653589793], 
          FormBox[
           RowBox[{"10", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[12 Pi, 37.69911184307752], 
          FormBox[
           RowBox[{"12", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[14 Pi, 43.982297150257104`], 
          FormBox[
           RowBox[{"14", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[16 Pi, 50.26548245743669], 
          FormBox[
           RowBox[{"16", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[18 Pi, 56.548667764616276`], 
          FormBox[
           RowBox[{"18", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[20 Pi, 62.83185307179586], 
          FormBox[
           RowBox[{"20", " ", "\[Pi]"}], TraditionalForm]}}, {}}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"\\!\\(TraditionalForm\\`3  rd/corss - \
kerr(\\*SuperscriptBox[\\(x\\), \\(2\\)] \\*SuperscriptBox[\\(y\\), \\(2\\)])\
\\)\"", TraditionalForm], None}, {
        FormBox["\"\[Phi]ext\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-20) Pi, -62.83185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "20"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-18) Pi, -56.548667764616276`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "18"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-16) Pi, -50.26548245743669], 
          FormBox[
           RowBox[{
             RowBox[{"-", "16"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-14) Pi, -43.982297150257104`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "14"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-12) Pi, -37.69911184307752], 
          FormBox[
           RowBox[{
             RowBox[{"-", "12"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-10) Pi, -31.41592653589793], 
          FormBox[
           RowBox[{
             RowBox[{"-", "10"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[10 Pi, 31.41592653589793], 
          FormBox[
           RowBox[{"10", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[12 Pi, 37.69911184307752], 
          FormBox[
           RowBox[{"12", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[14 Pi, 43.982297150257104`], 
          FormBox[
           RowBox[{"14", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[16 Pi, 50.26548245743669], 
          FormBox[
           RowBox[{"16", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[18 Pi, 56.548667764616276`], 
          FormBox[
           RowBox[{"18", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[20 Pi, 62.83185307179586], 
          FormBox[
           RowBox[{"20", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox["\"Compairation of 3rd and Cross-Kerr\"", Bold, 16, 
        RGBColor[1, 0.5, 0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"3rd,n=1\"", "\"cross-kerr,n=1\"", "\"3rd,n=2\"", 
       "\"cross-kerr,n=2\"", "\"3rd,n=3\"", "\"cross-kerr,n=4\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738583560159*^9, 3.738583591002*^9}, 
   3.7385836215769997`*^9, {3.738583686368*^9, 3.738583739267*^9}, 
   3.738583795804*^9, {3.738584476091*^9, 3.738584517836*^9}, {
   3.7385845501099997`*^9, 3.738584585251*^9}, 3.738584636984*^9, 
   3.7385852316219997`*^9, {3.738585309793*^9, 3.738585348017*^9}, {
   3.738590463085*^9, 3.738590472499*^9}, 3.7385905520559998`*^9, 
   3.7385937763450003`*^9, 3.7386116243515997`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"f94dc58b-ab02-4635-a7d2-bc83f044774e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]extlist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Pi]", " ", "i"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "20"}], ",", "20", ",", "0.11"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len1", "=", 
   RowBox[{"Length", "[", "\[Phi]extlist", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ratiolist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x2y2", "[", 
       RowBox[{
        RowBox[{"\[Phi]extlist", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "n"}], "]"}], "/", 
      RowBox[{"xyz", "[", 
       RowBox[{
        RowBox[{"\[Phi]extlist", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "n"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "len1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "nmax"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"laratiolist", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Phi]extlist", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "n", ",", 
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"ratiolist", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "n"}], "]"}], "]"}], "]"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "nmax"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.738549884316533*^9, 3.738549933949376*^9}, {
  3.738550006776757*^9, 3.7385503102372847`*^9}, {3.738550392518545*^9, 
  3.7385505482376213`*^9}, {3.738550595560644*^9, 3.73855065238173*^9}, {
  3.738550696237547*^9, 3.738550785082035*^9}, {3.738550842235799*^9, 
  3.7385508692845163`*^9}, {3.7385510765751038`*^9, 3.738551081498145*^9}, {
  3.738552815580992*^9, 3.7385528380742965`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"5a1e18f3-8eff-48a3-9f72-d477851ba685"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<ColorBar`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ColorBar", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7385513934074636`*^9, 3.738551403995139*^9}, {
  3.73855145676613*^9, 3.738551478105412*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"ce6595bd-dece-4f39-a38b-ac3a6ebe1662"],

Cell[BoxData[
 DynamicModuleBox[{ColorBar`Private`control$$, ColorBar`Private`addControl$$, 
  ColorBar`Private`removeControl$$, ColorBar`Private`controlPoints$$ = {
   Hold[ColorBar`Private`local57], 
   Hold[ColorBar`Private`local59], 
   Hold[ColorBar`Private`local60], 
   Hold[ColorBar`Private`local61], 
   Hold[ColorBar`Private`local63], 
   Hold[ColorBar`Private`local69], 
   Hold[ColorBar`Private`local70], 
   Hold[ColorBar`Private`local72], 
   Hold[ColorBar`Private`local73]}, 
  ColorBar`Private`defaultControlPoints$$ = {0., 0.125, 0.25, 0.375, 0.5, 
  0.625, 0.75, 0.875, 1.}, ColorBar`Private`getControlPoints$$, 
  ColorBar`Private`controlColors$$ = {
   Hold[ColorBar`Private`local74], 
   Hold[ColorBar`Private`local75], 
   Hold[ColorBar`Private`local76], 
   Hold[ColorBar`Private`local77], 
   Hold[ColorBar`Private`local78], 
   Hold[ColorBar`Private`local79], 
   Hold[ColorBar`Private`local80], 
   Hold[ColorBar`Private`local81], 
   Hold[ColorBar`Private`local82]}, ColorBar`Private`defaultControlColors$$ = {
   RGBColor[0.277546, 0.355398, 0.484215], 
   RGBColor[0.304739, 0.42573, 0.46747], 
   RGBColor[0.336447, 0.468254, 0.376802], 
   RGBColor[0.397271, 0.511821, 0.352482], 
   RGBColor[0.495398, 0.562531, 0.427457], 
   RGBColor[0.610225, 0.62717, 0.537364], 
   RGBColor[0.735256, 0.728382, 0.656772], 
   RGBColor[0.867237, 0.859925, 0.784232], 
   RGBColor[1., 0.997467, 0.914244]}, ColorBar`Private`colorData$$ = 
  "AlpineColors", ColorBar`Private`colorDataList$$ = {
  "AlpineColors", "Aquamarine", "ArmyColors", "AtlanticColors", 
   "AuroraColors", "AvocadoColors", "BeachColors", "BlueGreenYellow", 
   "BrassTones", "BrightBands", "BrownCyanTones", "CandyColors", 
   "CherryTones", "CMYKColors", "CoffeeTones", "DarkBands", "DarkRainbow", 
   "DarkTerrain", "DeepSeaColors", "FallColors", "FruitPunchColors", 
   "FuchsiaTones", "GrayTones", "GrayYellowTones", "GreenBrownTerrain", 
   "GreenPinkTones", "IslandColors", "LakeColors", "LightTemperatureMap", 
   "LightTerrain", "MintColors", "NeonColors", "Pastel", "PearlColors", 
   "PigeonTones", "PlumColors", "Rainbow", "RedBlueTones", "RedGreenSplit", 
   "RoseColors", "RustTones", "SandyTerrain", "SiennaTones", "SolarColors", 
   "SouthwestColors", "StarryNightColors", "SunsetColors", "TemperatureMap", 
   "ThermometerColors", "ValentineTones", "WatermelonColors"}, 
  ColorBar`Private`colorFunction$$ = ColorDataFunction[
  "AlpineColors", "Gradients", {0, 1}, Blend["AlpineColors", #]& ], 
  ColorBar`Private`defaultColorFunction$$ = ColorDataFunction[
  "AlpineColors", "Gradients", {0, 1}, Blend["AlpineColors", #]& ], 
  ColorBar`Private`getColorFunction$$, ColorBar`Private`updateColorFunction$$,
   ColorBar`Private`generateColorFunction$$, ColorBar`Private`colorbar$$ = 
  Raster[{Range[0, 100]/100}, {{0, 0}, {1, 0.1}}, ColorFunction -> #]& , 
  ColorBar`Private`triangle$$ = 
  Polygon[{{# - 0.025, 0}, {#, (-0.025) Sqrt[3]}, {# + 0.025, 0}}]& , 
  ColorBar`Private`getXPosition$$, ColorBar`Private`initializeSettings$$ = 
  Function[ColorBar`Private`x$, 
   ColorBar`Private`colorData$$ = ColorBar`Private`x$; 
   ColorBar`Private`defaultColorFunction$$ = 
    ColorBar`Private`getColorFunction$$[ColorBar`Private`colorData$$]; 
   ColorBar`Private`colorFunction$$ = ColorBar`Private`defaultColorFunction$$; 
   ColorBar`Private`defaultControlPoints$$ = 
    ColorBar`Private`getControlPoints$$[ColorBar`Private`colorData$$]; 
   ColorBar`Private`controlPoints$$ = Map[Hold, 
      Table[
       Unique[ColorBar`Private`local$$], {
        Length[ColorBar`Private`defaultControlPoints$$]}]]; Evaluate[
      ReleaseHold[ColorBar`Private`controlPoints$$]] = 
    ColorBar`Private`defaultControlPoints$$; 
   ColorBar`Private`defaultControlColors$$ = 
    Map[ColorBar`Private`defaultColorFunction$$, 
      ColorBar`Private`defaultControlPoints$$]; 
   ColorBar`Private`controlColors$$ = Map[Hold, 
      Table[
       Unique[ColorBar`Private`local$$], {
        Length[ColorBar`Private`defaultControlColors$$]}]]; Evaluate[
      ReleaseHold[ColorBar`Private`controlColors$$]] = 
    ColorBar`Private`defaultControlColors$$; Null], ColorBar`Private`local$$ =
   "ColorBar`Private`local"}, 
  InterpretationBox[
   TagBox[
    PanelBox[
     TagBox[GridBox[{
        {
         PopupMenuBox[Dynamic[ColorBar`Private`colorData$$, 
           Function[
           ColorBar`Private`x$, 
            ColorBar`Private`colorData$$ = ColorBar`Private`x$; 
            ColorBar`Private`defaultColorFunction$$ = 
             ColorBar`Private`getColorFunction$$[
              ColorBar`Private`colorData$$]; 
            ColorBar`Private`colorFunction$$ = 
             ColorBar`Private`defaultColorFunction$$; 
            ColorBar`Private`defaultControlPoints$$ = 
             ColorBar`Private`getControlPoints$$[
              ColorBar`Private`colorData$$]; 
            ColorBar`Private`controlPoints$$ = Map[Hold, 
               Table[
                Unique[ColorBar`Private`local$$], {
                 Length[ColorBar`Private`defaultControlPoints$$]}]]; Evaluate[
               ReleaseHold[ColorBar`Private`controlPoints$$]] = 
             ColorBar`Private`defaultControlPoints$$; 
            ColorBar`Private`defaultControlColors$$ = 
             Map[ColorBar`Private`defaultColorFunction$$, 
               ColorBar`Private`defaultControlPoints$$]; 
            ColorBar`Private`controlColors$$ = Map[Hold, 
               Table[
                Unique[ColorBar`Private`local$$], {
                 Length[ColorBar`Private`defaultControlColors$$]}]]; Evaluate[
               ReleaseHold[ColorBar`Private`controlColors$$]] = 
             ColorBar`Private`defaultControlColors$$; Null]], {
          "AlpineColors"->"\<\"AlpineColors\"\>", 
          "Aquamarine"->"\<\"Aquamarine\"\>", 
          "ArmyColors"->"\<\"ArmyColors\"\>", 
          "AtlanticColors"->"\<\"AtlanticColors\"\>", 
          "AuroraColors"->"\<\"AuroraColors\"\>", 
          "AvocadoColors"->"\<\"AvocadoColors\"\>", 
          "BeachColors"->"\<\"BeachColors\"\>", 
          "BlueGreenYellow"->"\<\"BlueGreenYellow\"\>", 
          "BrassTones"->"\<\"BrassTones\"\>", 
          "BrightBands"->"\<\"BrightBands\"\>", 
          "BrownCyanTones"->"\<\"BrownCyanTones\"\>", 
          "CandyColors"->"\<\"CandyColors\"\>", 
          "CherryTones"->"\<\"CherryTones\"\>", 
          "CMYKColors"->"\<\"CMYKColors\"\>", 
          "CoffeeTones"->"\<\"CoffeeTones\"\>", 
          "DarkBands"->"\<\"DarkBands\"\>", 
          "DarkRainbow"->"\<\"DarkRainbow\"\>", 
          "DarkTerrain"->"\<\"DarkTerrain\"\>", 
          "DeepSeaColors"->"\<\"DeepSeaColors\"\>", 
          "FallColors"->"\<\"FallColors\"\>", 
          "FruitPunchColors"->"\<\"FruitPunchColors\"\>", 
          "FuchsiaTones"->"\<\"FuchsiaTones\"\>", 
          "GrayTones"->"\<\"GrayTones\"\>", 
          "GrayYellowTones"->"\<\"GrayYellowTones\"\>", 
          "GreenBrownTerrain"->"\<\"GreenBrownTerrain\"\>", 
          "GreenPinkTones"->"\<\"GreenPinkTones\"\>", 
          "IslandColors"->"\<\"IslandColors\"\>", 
          "LakeColors"->"\<\"LakeColors\"\>", 
          "LightTemperatureMap"->"\<\"LightTemperatureMap\"\>", 
          "LightTerrain"->"\<\"LightTerrain\"\>", 
          "MintColors"->"\<\"MintColors\"\>", 
          "NeonColors"->"\<\"NeonColors\"\>", "Pastel"->"\<\"Pastel\"\>", 
          "PearlColors"->"\<\"PearlColors\"\>", 
          "PigeonTones"->"\<\"PigeonTones\"\>", 
          "PlumColors"->"\<\"PlumColors\"\>", "Rainbow"->"\<\"Rainbow\"\>", 
          "RedBlueTones"->"\<\"RedBlueTones\"\>", 
          "RedGreenSplit"->"\<\"RedGreenSplit\"\>", 
          "RoseColors"->"\<\"RoseColors\"\>", 
          "RustTones"->"\<\"RustTones\"\>", 
          "SandyTerrain"->"\<\"SandyTerrain\"\>", 
          "SiennaTones"->"\<\"SiennaTones\"\>", 
          "SolarColors"->"\<\"SolarColors\"\>", 
          "SouthwestColors"->"\<\"SouthwestColors\"\>", 
          "StarryNightColors"->"\<\"StarryNightColors\"\>", 
          "SunsetColors"->"\<\"SunsetColors\"\>", 
          "TemperatureMap"->"\<\"TemperatureMap\"\>", 
          "ThermometerColors"->"\<\"ThermometerColors\"\>", 
          "ValentineTones"->"\<\"ValentineTones\"\>", 
          "WatermelonColors"->"\<\"WatermelonColors\"\>"}]},
        {
         TagBox[GridBox[{
            {
             TagBox[
              GraphicsBox[
               DynamicBox[Typeset`ToBoxes[
                 ReleaseHold[
                  Apply[ColorBar`Private`control$$, 
                   
                   Transpose[{
                    ColorBar`Private`controlPoints$$, 
                    ColorBar`Private`controlColors$$}], {1}]], StandardForm, 
                 Graphics],
                
                ImageSizeCache->{{0.7606933090100938, 
                 419.2393066909899}, {-16.239306690989906`, 
                 7.239306690989906}}],
               ImagePadding->{{10, 10}, {0, 0}},
               ImageSize->300,
               PlotRange->{{0, 1}, All},
               PlotRangePadding->0],
              EventHandlerTag[{"MouseClicked" :> If[
                  CurrentValue["CommandKey"], 
                  ColorBar`Private`addControl$$[
                   ColorBar`Private`getXPosition$$[]]], Method -> "Queued", 
                PassEventsDown -> Automatic, PassEventsUp -> True}]]},
            {
             DynamicBox[ToBoxes[
               Graphics[
                ColorBar`Private`colorbar$$[
                 ColorBar`Private`generateColorFunction$$[
                  ReleaseHold[ColorBar`Private`controlPoints$$], 
                  ReleaseHold[ColorBar`Private`controlColors$$]]], 
                PlotRange -> {{0, 1}, All}, PlotRangePadding -> 0, ImageSize -> 
                300, ImagePadding -> {{10, 10}, {15, 0}}, Frame -> True, 
                FrameTicks -> {True, False, False, False}, FrameTicksStyle -> 
                Directive[FontSize -> 12]], StandardForm],
              ImageSizeCache->{420., {26., 34.}}]}
           },
           DefaultBaseStyle->"Column",
           GridBoxAlignment->{"Columns" -> {{Left}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Column"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dynamic[
    ColorBar`Private`generateColorFunction$$[
     ReleaseHold[ColorBar`Private`controlPoints$$], 
     ReleaseHold[ColorBar`Private`controlColors$$]]]],
  DynamicModuleValues:>{{DownValues[ColorBar`Private`control$$] = {HoldPattern[
         ColorBar`Private`control$$[
          Pattern[ColorBar`Private`pos$, 
           Blank[]], 
          Pattern[ColorBar`Private`color$, 
           Blank[]]]] :> EventHandler[
         Dynamic[{
           FaceForm[ColorBar`Private`color$], 
           EdgeForm[{Thin, Black}], 
           ColorBar`Private`triangle$$[ColorBar`Private`pos$]}], {
         "MouseClicked" :> If[
            CurrentValue["ShiftKey"], 
            If[
            Length[ColorBar`Private`controlPoints$$] <= 2, Null, 
             ColorBar`Private`removeControl$$[ColorBar`Private`pos$]; 
             ColorBar`Private`updateColorFunction$$[]; Null], 
            ColorBar`Private`color$ = (
              If[# === $Canceled, ColorBar`Private`color$, #]& )[
               SystemDialogInput["Color", ColorBar`Private`color$]]; 
            ColorBar`Private`updateColorFunction$$[]], 
          "MouseDragged" :> (
           ColorBar`Private`pos$ = (
             If[# === $Failed, ColorBar`Private`pos$, #]& )[
              ColorBar`Private`getXPosition$$[]]; 
           ColorBar`Private`updateColorFunction$$[])}, Method -> "Queued"]}, 
     Attributes[ColorBar`Private`control$$] = {HoldAll}}, {
    DownValues[ColorBar`Private`addControl$$] = {HoldPattern[
         ColorBar`Private`addControl$$[$Failed]] :> Null, HoldPattern[
         ColorBar`Private`addControl$$[
          Pattern[ColorBar`Private`pos$, 
           Blank[]]]] :> 
       With[{ColorBar`Private`symP$ = Unique[ColorBar`Private`local$$], 
          ColorBar`Private`symC$ = Unique[ColorBar`Private`local$$]}, 
         AppendTo[ColorBar`Private`controlPoints$$, 
           Hold[ColorBar`Private`symP$]]; 
         AppendTo[ColorBar`Private`controlColors$$, 
           Hold[ColorBar`Private`symC$]]; 
         ColorBar`Private`symP$ = ColorBar`Private`pos$; 
         ColorBar`Private`symC$ = 
          ColorBar`Private`colorFunction$$[ColorBar`Private`pos$]; Null]}, 
     Attributes[ColorBar`Private`addControl$$] = {HoldAll}}, {
    DownValues[ColorBar`Private`removeControl$$] = {HoldPattern[
         ColorBar`Private`removeControl$$[$Failed]] :> Null, HoldPattern[
         ColorBar`Private`removeControl$$[
          Pattern[ColorBar`Private`pos$, 
           Blank[]]]] :> ({
         ColorBar`Private`controlPoints$$, ColorBar`Private`controlColors$$} = 
        Transpose[
          ReplaceAll[
           
           Transpose[{
            ColorBar`Private`controlPoints$$, 
             ColorBar`Private`controlColors$$}], {
             Hold[ColorBar`Private`pos$], 
             Blank[]} :> Sequence[]]])}, 
     Attributes[ColorBar`Private`removeControl$$] = {HoldAll}}, {
    DownValues[ColorBar`Private`getControlPoints$$] = {HoldPattern[
         ColorBar`Private`getControlPoints$$[
          Pattern[ColorBar`Private`cd$, 
           Blank[]]]] :> Block[{ColorBar`Private`func}, ColorBar`Private`func[
            Pattern[ColorBar`Private`c, {
              BlankSequence[List]}]] := Part[ColorBar`Private`c, All, 1]; 
         ColorBar`Private`func[
            Pattern[ColorBar`Private`c, 
             Blank[List]]] := Array[#& , 
            Length[ColorBar`Private`c], {0, 1.}]; ColorBar`Private`func[
            BlankNullSequence[]] := Array[#& , 5, {0, 1.}]; 
         Switch[ColorBar`Private`cd$, "Custom", 
           ReplaceAll[ColorBar`Private`defaultColorFunction$$, HoldPattern[
              Function[
               BlankNullSequence[], 
               Blend[
                Pattern[ColorBar`Private`x, 
                 Blank[]], 
                Blank[]], 
               BlankNullSequence[]]] :> 
            ColorBar`Private`func[ColorBar`Private`x]], 
           Blank[], 
           ColorBar`Private`func[
            Part[
             DataPaclets`ColorDataDump`getColorSchemeData[
             ColorBar`Private`colorData$$], 5]]]]}}, {
    DownValues[ColorBar`Private`getColorFunction$$] = {HoldPattern[
         ColorBar`Private`getColorFunction$$[
          Pattern[ColorBar`Private`cd$, 
           Blank[]]]] :> 
       Switch[ColorBar`Private`cd$, "Custom", 
         ColorBar`Private`colorDataList$$ = 
          Join[ColorBar`Private`colorDataList$$, {ColorBar`Private`cd$}]; 
         "AlpineColors", 
         Blank[], 
         ColorData[ColorBar`Private`cd$]]}}, {
    DownValues[ColorBar`Private`updateColorFunction$$] = {HoldPattern[
         ColorBar`Private`updateColorFunction$$[]] :> (
        ColorBar`Private`colorFunction$$ = 
        ColorBar`Private`generateColorFunction$$[
          ReleaseHold[ColorBar`Private`controlPoints$$], 
          ReleaseHold[ColorBar`Private`controlColors$$]])}}, {
    DownValues[ColorBar`Private`generateColorFunction$$] = {HoldPattern[
         ColorBar`Private`generateColorFunction$$[
          Pattern[ColorBar`Private`pts, 
           Blank[]], 
          Pattern[ColorBar`Private`cols, 
           Blank[]]]] :> (Blend[
         Transpose[{ColorBar`Private`pts, ColorBar`Private`cols}], #]& )}}, {
    DownValues[ColorBar`Private`getXPosition$$] = {HoldPattern[
         ColorBar`Private`getXPosition$$[]] :> 
       With[{ColorBar`Private`mp = MousePosition["Graphics"]}, 
         If[ColorBar`Private`mp === None, $Failed, 
          Clip[
           First[ColorBar`Private`mp], {0, 1}]]]}}}]], "Output",
 CellChangeTimes->{3.7385514789915667`*^9, 3.7385528422105303`*^9, 
  3.738575212428*^9, 3.738593789599*^9, 3.7386116524856*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"f12a3ae3-660b-4b94-bcf7-b05d43521b48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ldp", "=", 
    RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
     RowBox[{"laratiolist", ",", "\[IndentingNewLine]", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{"Automatic", ",", "Right"}], "]"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
         "\"\<n\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
      RowBox[{"FrameTicks", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<Phase Diagram\\nlg(Cross-Kerr \!\(\*SuperscriptBox[\(x\), \(2\)]\
\)\!\(\*SuperscriptBox[\(y\), \(2\)]\)/3rd)\>\"", ",", "Bold", ",", " ", "16",
          ",", "Orange"}], "]"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "1"}], ",", 
      RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"MeshFunctions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{"Greater", "[", 
           RowBox[{"#3", ",", 
            RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "0.6"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"ldp", ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*FractionBox[\(Cross - \(\(Kerr\)\(\\\ \
\)\*SuperscriptBox[\(x\), \(2\)] \*SuperscriptBox[\(y\), \(2\)]\(\\\ \)\)\), \
\(3  rd\)]\)<\!\(\*FractionBox[\(1\), \(100\)]\)\>\"", ",", "12", ",", 
        "Bold"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"28", ",", "4.5"}], "}"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.738088186605*^9, 3.7380881993719997`*^9}, {
   3.7380882905810003`*^9, 3.7380883251870003`*^9}, 3.738088444756*^9, {
   3.7380925081949997`*^9, 3.738092559475*^9}, {3.73809272606*^9, 
   3.738092751435*^9}, {3.738092820436*^9, 3.738092856995*^9}, {
   3.7380929001879997`*^9, 3.7380931673529997`*^9}, {3.738093221546*^9, 
   3.7380933587530003`*^9}, {3.738093388962*^9, 3.738093502658*^9}, {
   3.7380935329370003`*^9, 3.738093588209*^9}, {3.738093625914*^9, 
   3.738093732148*^9}, {3.7380937707390003`*^9, 3.73809391202*^9}, {
   3.738094050668*^9, 3.738094082028*^9}, {3.7380941497469997`*^9, 
   3.73809427569*^9}, {3.738094313251*^9, 3.7380943298190002`*^9}, {
   3.738094371116*^9, 3.738094399275*^9}, {3.7380944357799997`*^9, 
   3.738094452203*^9}, {3.738094485347*^9, 3.738094496891*^9}, {
   3.738549761909337*^9, 3.7385497641295633`*^9}, {3.7385498099688635`*^9, 
   3.738549881893334*^9}, 3.7385508029509497`*^9, {3.7385508771283236`*^9, 
   3.7385509419755907`*^9}, {3.7385509873153267`*^9, 3.738551005257864*^9}, {
   3.73855104272919*^9, 3.7385510475972376`*^9}, {3.7385511187939997`*^9, 
   3.738551123511925*^9}, {3.7385511542864666`*^9, 3.7385511790512505`*^9}, {
   3.7385512241128335`*^9, 3.7385512247927017`*^9}, {3.7385513768302784`*^9, 
   3.7385513916128073`*^9}, {3.7385514940731263`*^9, 
   3.7385515026601973`*^9}, {3.7385528602924805`*^9, 3.738552880406535*^9}, {
   3.7385533572989693`*^9, 3.7385534704171286`*^9}, {3.738575229826*^9, 
   3.738575233877*^9}, {3.738590617366*^9, 3.738590662105*^9}, {
   3.7385918716400003`*^9, 3.738591991417*^9}, {3.738592075258*^9, 
   3.7385920884*^9}, {3.738592156273*^9, 3.738592281744*^9}, {
   3.73859250405*^9, 3.738592588968*^9}, {3.738592798189*^9, 
   3.73859286873*^9}, {3.738593026868*^9, 3.7385931063120003`*^9}, 
   3.7385938090950003`*^9, {3.73859384167*^9, 3.738593854824*^9}, {
   3.7386116337476*^9, 3.7386116365926*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"ed381656-613f-4fcb-99ad-97aa9b963642"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
1Y1refM8PZCuvgrz6fyxcUsH33f4zEYDo70GXFLm/Zb15nm0g8r2Cy8fm9Pk
3zn4fsNEGxV6VzLz+S3jMG+eD3LQyJkdC69/ZHzBwfcZ7rHRjsimvld3NPZ8
PXjuoOJ/RAWvnmic/6VTJB8aIQ+9dxDfZxhvoxqfHV/+9STjn2wsT7AH0a6L
lypejjV5yFtnkym5O9Rc8P/ff+g6k+Is233KgpfzTD46iO07dJGNVu580ndA
B5N3tfF9iH2DSP2m0ldXfP/recX2ISb9lub8qeTcx7f7m/zjYL7/cI4XRZUs
WO7zUub1tnjxvHwwtW00aE70K7P/rjjsRxz8ytl28ri4i2Q8I4jvQ2xoo3+m
Z9+c1zvLET1tPB8ZxPYdJhV46nRcyfdFtlCTP3GwnNz/PJY9t37q3KtZVtqb
5U8vOWhoy1wLDqdY+/729X1GvjeNYx18H+Iob9q28lufHluNl3nz3P3P88UY
r2flthunBPL9hzYfEl4Lnz+eYFzQh+fufx83RSUlTh5rPDaQ7zsc4kOD64/P
LN3JeJYPz2MDqeyYqM4prYxzBPL9hvd9qL6Xz8BOFY19fHmeGUBxrm82jCiW
5YTNAXyfYUtfalmjzYyhAVl29fflufv74/2NiV2LvDH78ZoE8P2Fe3yp15nP
H8QkGV/w5Xl0AEW26ft10oksJzzx5/sK8/pRw7JNrpXdYVzej+eJ/tSx9cpu
Py0ynuPP9xPG+VHi152XXJtiPNmP5+P96eCWE+W29zWu7c/3EZ7wo7wLZlfs
9vn71/PjeUV/WrD/tmMvGafAPsLcdlqQ60zm6UpZpuJ2nt+RVKlhiVpXw7Ls
Wg37B7vaia4OP+nvMI6183yJpGOuHdVK/GP218XAvsHldopI+eBU5A3jdXae
d3Lff+Ba4UU7jYvBfsFEO+nAxnvDjWWSneeRkjLy2R3L5lj79f53P5UrPZzv
l7oZTgN+rh5drp7x5Wd8v9TxcErr3cf+T5yx+/PaqsVpV6eUen/9a2fZDwqN
a9TsfQ77rp48c96OWbOppHl9cr8+2x+1KZw6hefY8IOXuX5TKn/9/KnOfTHt
5p4i6/2yfVHfh1OvGT/H1zxifPk532eVnuq8kPx3kQ7h5v6j4Ww/lCsO+uQL
5/3Y7j/d+8d4XTjf/9Q6nEbeatdg21prX9OM6DcV+uwynhrO9ztVCqf2K1bO
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
4zmhfF/CFRu1/7HFwq/+MvsOGtqoSeO+vrOrmv4JiqYnv3b86WvtW2D7ERbY
aNSBB7seRxgf9uL55hBq2M/+c7vlxktC2D4El7JR3U21N1Frs89gAexT8Amh
1LhslWrlsvYjZPZ8+KzO38angvk+hD2wP6FiMMVS2epx081+g2aZfD9CrUxn
tY6Bgd1ymutPB7F9CAnOILrZpFWrIhfN/oHBGXwfQtsM574/Xjcu/4npW+Lg
+w8iHeRzOluBHPmM97zj+w8mvnNGHYoq5BxhXDmQ7ztIDKBZ9X3vHo4x+wpC
3/F9ByfSnRWPzuz7y+osu77z5/sNOvtTWucW40JTrH0DN69lXGm60XhoOt93
4ADftVP71U3iT583fmKnvIs+Ktgs1ewTyJvO9xs0fMu96P/+fKxEo+L5jQ/b
aZ7Pb49Sypn7o9L4PoNm4Dl2Kvso9MC0nsbT7DRw0fc3Dw0x+wLGvuH7C2LT
uGPsdLWbo8f29cY+djrWZFjOF5fMfoCbaXxfQce33Ef9qOXLPNmjHmRd72rq
RxP/DOnlX87cf+It208QEZHOnGD3oz0fb643u6i5PtaX1l3dNiBqUlHz9Unn
+wiucqcW8CWR58aKpx1N3sSHon78oWDQDTPvv+c7vn9gHtjuQ/HJXzacN9X4
sY1iJ855e6Kqcf0Mvm+gJ3iHjYo+XTav9U6zD6CGF6174/3T/ZnG9TP5foG2
mc6+58+tSSz5H/sGIr2o/snBPc5NNfPTLz9zXn+8eECL3Wb+ef1U54tz44rs
2/0f89k3P3OeqNZj+4Vvcpmv3xs2bz3hyWtn+qxvhNdEM6+8/gs+P73pGz7/
PO8L5+MH0S83uLJ7Xi972/bheZuaeZJ5XzpzLpx/5u7JLLsGZTrDYsa0yTnJ
mn/J5k+2felMunnAccJu5j0uesnmTya4Mvn8yOSXzvyvfJpd323Ng/Sb86Ne
HWXNuxtaw7/Zol3Gi7zo5mcR1brfMXY/r/7vvDuX4Bb7vKjrwdsjv2po5tf5
eNPI118ubLbUuHYGm4cXEcEtKntTrcqdK+e7YVzRhxatujq7Qjszby7+HZ9/
1xIc50Pn43MtXDgsywmVfWlPsFoWE2rmy91O5/PuZoGH+9Kj6XLRmFzmeu1H
XeNj68QfM26ZzufbXX3L3dKP9pZObzt1t/EpP9rg+PF436FmHl2NdDbPTqm3
fL6d+/tF3X/eUFxH46Huz8ffyA+eNTPz4g6k8vl1N95wL3B//yrd+V1aiHFH
O01M3rgz6KWxVxqfV/cL+Ds7JX59o9jCA8Yt7ZRx8vGLXvPNfLnIt3w+3Szw
JjvNGDXp8vY+xvF2CqnaZPL5FGt+XULy61wbycyD80nn8+mapzv33T760bBg
43p8Pp2rqaTRjaPLLE02+YV0Po/O8c75Sbabt8v+YLzHn8+fe+JPrutbZY/p
Zn7cmnd8/tyFd84Bt67NXFzB2C+QzZtLaBNIE0esKNOoctZ8N9f0DD5vbk2G
s++IfxyzT5r7iznYfLnU79w/nz8Om3A50Vw/L5PNl6OlmU5l/7NR81zWfLii
vutHDu9uri8aRMu/f5L7xhcm3+rF580tCaJdoXVOVvcxuU8wnx/X1Ysu72nu
UzDTeION52ODaXzPd/PmrDQ+HMznxTW2Udvn3VrRauMwb57XDuHz244qanJt
eeHt9UweE8Lnxf3k/rx4vX3LeiXN9dHePL8Twua3JfwQSjkKpw27+dDkD0No
U7u63w/x/Y/5cbdtdLbCkjJlRhs38CbXH/cvdHAar4N5bl3D+Lw49+fj1lV9
cl6/alzbm+b883OnbycY9wjl89uCw3mf+/PxhsybK/0qmtz9/NWzzVFbuXMm
Dwvj89pWhfO+m+73P77axTVTjXN5U9vH3XqUzmu8Ce4/bKPyYzJ2n7lbzvP6
NfYf7rO/Z5YTKofTPP9+pamRmZeW/ILPg5vl/vkbFuBaVMt4j42Cx806OWJH
1v1J28NpyvP16dseWPPlNiXO6HlrtLn+svvnXbOv7hYv9x/z4da84G5mo+tf
DJv2wZIsU5z79b7wTmxxx+SJr/k8uIlvmOUpL4q54//RiXST3/Gisq8KTGnb
1cxH6/uMz3+b9prZFWmj5zUdE1s0M3lNG5/X1vYZm/fmumyjlcVs+W4ty7JM
tZH/lDEVNn77H/PcvvSmaqF6YY4U40nefN7afW+KWnlvc3pd4wAfPj8txoeC
v/u0UZ0FxqN9+Dy0Cz7UN1+rTnceGT/34fPNavlS3zshJ4/XNO7oy+eVrfWl
0qPmf31ltvFBXz5/LMCP0gN+H1vpvnFBPz5PLMaPep3Z8eTPGsZD/fh8sD1+
dH90w0MHZxq7fx6yeV8OOxWVG89fSzbObefzu9w/f+KG/9KwVg3jz+18Htcs
OxVavWpgxsws01I7n6913k5p3j9sKXzf+KKdZiVNmRVXxZpXVTHH4CVL3s/P
8oH5Wm6H5T/1at0c42iYl1VRUvSkSr0nPTL+HOZfNZDUPerrxC11suZBUU8+
z0rF/N++0erhBRab3AXzqTZIcj19SwWeZ9l1FuZNpUi6uGv/yxb1zDynvP58
XlQtf9I1Cvn2WWTcy5/Pf5rhTwPaL37V75nxbn8+z+m2Pz0NKneiY11jRwCf
z1QxgJqU3PBr54XGHQP4vKXJARTg+KpFxFPjbQFsfpJMCqCJ+32KBdUx84p8
Avk8pIqBtKPV3t8vzzduF8jnG00KpKMtP5ux+7HxhkA+rygxkCK/ujxm78fG
6YF8/lB5B31q/77kpHnGzRx8ntBYB9XolzNo1CPj5Q4+H+iCg8qOvfDBtt+N
dz11LpoyM2NMLePnDj7/JzKIkht+ff6Oj5lns+eVU9gSy8888h/zgPY9dS6t
NHz83LlZdlEQn/8TF0S1alcs90Fj0+f+/svm+WS+cr7KcH506qG5Pj6Iz/s5
GETnL8T4pR1+f/0LPu8nf5rzwr62K4vVMr4QxOf7OIL5fJ4aKc7d54s3bDY3
y64IyFsG0+g1AY4J/ta8mGk1Jg+8/tDkMcF8Ps+iYFpZ4UhGsYLG64LZvB1K
CqbbW6KSXjUy+cNgPj+nYAjZ5g77+9pA45IhfB5OxxASd7amX1xm7P58wubb
zA/h82Rsivreu1b8r1Pv318In19zLoTPi8mvqPGyN188fm3y8yG0e5XcJQpY
81YCDmbsyfY//Ww+TA1Fd4bkTS3axDgfzHvppGhUyOmHRxda810W+dYpFfQ+
Lyro9rHm2QoNMa7G57uQS9GxXCNbrlpj8l2ZfP4MOlJQk7Ulqo87a7xKkG3z
Mm1fadwO5r0sV/S02Q89P7lk8ssZbB6NK4FbLBJU+o+z8yumGef1om1J6T43
ThsPgfkvRxSV03kGbPXNMqkMPp/m9jvmBLsXbapc+tOikSYf70VPP4u5s/mN
6V8A82DuKTp7dNuMvysYd3zH5tW4Irif9vaihpPqn8jdxORPvGjJd/svTnr/
erthPkxQKKXunLfzz8+N96Tz+TUx3AknvWjw2RMtHgwy/Z1tFP+k0ZTKTc31
12FeTLlQqvFgXr2R32VZVUnn82xWvmVOKmWjjLn1q4YvM/ljG933PtXk6RBj
r1A+P6Z1KD1de3j95V+NP0hn821cZ9O459oof9WaX7X4zVzv7UNRpb5rsmql
+f2LDOXzZIaGUvLF7qElU8z1p1/zeTc/vmF2feBNXa50/ed6psmPe1H2G/tv
x54xrhvK5stELA2lz+9tDm+YK8vUJY3Pv0kDj7ZRyzz5ft5TyviqF/nUbDw/
d5rp7xXK580cCaX74dN/21nLOOYtn4dzHJzHRrFfv2s+sl2WXTO96PnSy58c
izT5tFA+f+ZeKKUfetN3SaxxdDqfjzMW/KsXldzcIGPChCynOr3opuhmG9jU
5NtC+Tya4DDq+H2Nj1fNMZbv+LycWuAOXhThWPdpws/GtwWd7/JsR+GhxhdD
+Xya8mGUHv/TtVEJ769/x+fnyAzuV4Ky75O5y942HikoIWFE73Mr3/9+hfJ5
Na3DKNbWs0TR+ya/kMHn6SSDxwvatC5f9Zth5n6H2xEBEd+eMXn+MD6/ZkgY
PSww+Wn396+XnMnn67h99MH83c+y/8e8HXd/8IeTb1VOM/01w9g8G9eiMCrf
b3qBB5HGMWF8Ps2+MKoSNnLIT02Nx4fxeTM3wmhe0YzoPkON14bx+TG2cLq4
olv+6B+NT4TxeTCFwmnsnwnB2c+a/H4Yn+9SK5zK2vNmPkkzeUA4n9fyeTgl
VRn05HgR45LhfP7KyHDKyH/08aZPjRuEs3kqtCiccm5Me3J0r8k3vXRm9EkP
XDfMuHs4m5cSsSuc0hO+sF+6bPLbb53je/c4GrzuP+a7dHzp7J9ndOu5q8zr
jQ3n81LOh9Oawcsq3dTGUa/4PBf398/r+TeMXnzO3L80nM1HcT2EvuSXzrqD
h07fk27u3x1O9dPeBD1pas0niSw77+TvxYz/DKfmvt9XEC2MH7m/ntmKbV8V
Z80jGWsbFPrjHOt8fGqnG9mnmPP6Lm84z59uJ0fqncX73zvNznP3807tgnNr
JRwxrsDP77uO2Sn16y4h5Y6Z/KCd55UlDW1Y727CU5PHwnn9eDstP7Bmz+mX
xqPtPI+TVHz48ksL8pjz3hv4+XxXfTvNizo1Z2phk0fb+Xn9ne7XSywdX7+u
cQqcx0/3o4R8234d08z4oR/LEzIlddz4ybp/+pvc6c/P22/wo/aHpjwZ+63x
Aj+eN/WnuNS1IxotNJ7lz8/Xt/SjwV12X9qw0bimH89X+tPNn+btXnrk/fvz
5+fp3/hScu7DD19eM77py/MM9/17Zibff2JcN4Cfn5/lS9dPFdrRLcCc3x7u
y3P381vb36t2Dc5t8tUB7Ly8LOtLdSt8My2pism1Lz9Pvy+AXAk+m1Vt4+BA
fj7+oA/F9p6zfEIP45U+PC8aSBF7htZ72Of9+wvk5+Eb+1Dzb8Y/bz/HOMqH
57MCKamJ/8Gtc40fB/Lz7xe8aV2FXs2qHjHe5s1zPwedOnHvQHSmcc/nzv4d
/nzmPGDcy8HOv0d86k1Lo3wC2qe8fz/e/Hz8aAcVL11VX8ptzlPHpjoPP+6V
v9xz6/w9O/8+8blzZYe88Z3vmzzNwc/H77ZRpS4t8+4tbLzAxvMQ9/Pgvao3
TtczLp7Kz8/vSnUOliuWdQ4z3hfEzsu7Ur2oSfEr21VL40QvlqeeCaLgb0/e
iBtr7q/ynJ+nH5zqPNX6pt+GGsa/BvHz84+9aOSHK3PGu4zPefH8dBA7H+/q
/NxZv965r1/0MXlpyLvYqGLcsNZj1pm8mo3nHwfR4CoV2p+Yb52HX7pvyK2I
Rcbu5/f/PT9PS220fNCPoyf9afIBNn6+/qGD5PXpp+4fN4538PPyJ2yU9FH9
Fv5e5nz1LBvPVzpow6gRHZa9Nu+vnoOfj79tI0fb4eseRhmvtLE8obOD2g8p
WKxoEZM7HPw8fIqNduRoMqR4O+t+lkc6aEbYwCO7mhufDuTn3933r3p1N9fZ
cVl2Tbfx/E4gRXfZN6C1y3haIDvvrpJsNGDcyt9qbDd5OxvLn64OpNsb/SJS
Npq8SSA/377WRltEsVFeN99/PbxY7uoRSPrFilG7rpncHsjPs5d3fz5PPX/8
cLg5/3wbzsNHBtK4XwbomCjrPPXVy40arfXPcurOAHaePSKnFz/ffiGAfpKT
qnerazw4k59v/yrTWXR1Dfu5ysadA/h59uEBdJXWNXN8Yzwvg59nH53hPHo3
oEez7sav/Pn59ZAAUgWr/d10hXHiO35+fc07Z8V7TXs3mm08yJ+fV4/3d38+
fOwccM446h0/r/4w3anuHOrjdcT4IpxXvy3pcI0VtOV/zp9T7KO6zTONZ6Xz
8+rluF2ZdlryrjT9/T8euXmx96kocx68YDo7nx7R/y0/r77STon0d3rbwsZH
7fw8+aQ0fh59lp3+H8qObbk=
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
LueTjrFJ6ZifG4Rh1GsIvHVuxMZI2tYfQf+t2LmdeEYU89OTmjuH+9JRez+H
N9+POerJeB/mpj/tftQgl7Pr5HlyrmPIb4ow2bkLj5CD53EY8Q+l/3rRCaJP
CLdZhzmcLrwovMN8zxJ9XZjgftHR5Oq5echzaPvCzHTwr4lOJAbHMoHxnNz9
6LnWtnUv8+F5edQ1Yfx+bNrWG+mQ8fhjwivpoPZl3vIv+5xcqGOC0FXoJlwm
9BR6CX2EvkJ3xi33GDafEC6lvztj1rlCmJGOuJ8T/Ve0UH1Fwk7x+1jT3ZC3
3l3UZzSx2rZz8F4YxZp8TvQl4Xlq7ZrPEF51vZ2vsCAdMu+JzkuH7Jx09Fvu
g3To5vTeTMeedK1mp2Nfvgr1HOT2q30/je+naU9jvTiOudi13/vJ4z7m+z7a
Y1lvnrPpzI3r/7SPNc4tHfM6mnm0jHV9HJhL/j5WOGavkbdYO5OIdQrxTKN2
T7CevBe957zHvB+9pq+jPYzxD9NRv49F57tOzkV43etJmI3Ma9TwC+F98V+Z
0r/I68o5ofMG8/KW8KnnQ/RLZGZi27qWX+i8RN8W3hGWqv2u6Oeiy4XF4r8R
/do27FdYr/Y3oj+ng3ffj6KfpcOGdW3HeSyjb36xvJzTHGBfc+Fn034beevZ
pvs/cSzEmuNnkvt71O1DYaXjEF0j+q3wifhVjj8d4yugHxfEmPsXEOcH9Ht8
oW0LHwkPaZ/cJzwofCe5Zepbh/1F2LT8AnTmwrvve8+Z6Op02PL4p8JatVeK
bmD8K+o7lxosIJbPifMj9JYgZ956P3ieqH9ubKmwU+3fRHeI/iR8J35TOuS/
IK4l2LHOrx4Xfoc33YqdP0X3iK61P+En4W+1/xDdTb/7NlhH7V9E/2Lfz2At
un+97abDxirHQKxeWyuEjRpbJ/qba8u45Tar/SO6PxHDevot8yt0PWPeY95f
3mePp2Of+dxh/uaCOFc+lY7rFl+/5Pakz3tzOHbNF32hIPaI981qYvmBmL8k
7j8kt1l0u+uZjrX7UTrkLevaXMLx3cdbz/O36P4iuTXEv03Ywnxto/5/CQfU
3itakIn6bmJ+3O9j+j+iu4Tt4veL7hP2iPcf3/yOvNfBRqjb9rWROdrA3Lnf
1zz2vQuY30kcO2mvoA7Ob4v0fxb9Mx25OC8fE1aQ3yrmZGMxHz/R3kqOtrlX
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
TFl8HYQ/tysyniGnLP0VGDuEPo/5OPFhYRxvyiumo5xzJmC+UiZiqkL+Fem3
bEXiPQy7ppWEysLhQjVoJcaqUr/DqEdu3oqoaYYxy9TATiVsVEC/IrXI+SlP
rpXw5+N57rh+OHaqE3st56G4G7idibHayFbOBO98zddzLJmwWw6/uXwsX0Fj
dR1TJs4fNbF1GD4t9wF1zdXXx3EfjxfR59rX8HMhxyZaUzhJfB3Ro0WPFeoL
DeGPL4r+OrSPoc98U6GJ0Fw4R2gjnC2cAW2DjMdPEerKx8m2J9pK9DRkamM3
56MObcu3cF8mbNiX9c/DXwehMX0ec16OrbprKbQWf1zmv3wauUaZsO06mz8O
+fr4tlxttU91DKJNhI6OX7SxcK74k+Cd44miI0RvFUYKLck/l9tptK8Thgk3
Og7ptHdtRLsK14q/WPRZ0enCNGEq9DlhlMZeEb0XOlN4Xbhb7edFR2eivvbV
ilo3p10/EzEdS7wdqN2Z0HbwbWg3l1xn6zJHbRhvmIk8jvdaFtqKPyET/WdR
h0bMQ1PmpGWxOJrTdjynY+eoTMxfLXQbon888+r2BUIX4UJg/mLh1Ey0W4ie
z5q4iHzMu+90jfUQPcu5C5c7F9H+ooOEwUIvoY/Qtyhk3D4Hm7bne75WmeDt
q6VwqefUa5kYHEubTNwbtuY+0fJuu78bfk174rNZJubCa8n3k46tu3AZMt3w
ezE2r2PtjCD/y5Dpip/Lqc1ljL/I+vF6cr79yPlC2RrounotC1e5XpnAVfR3
yEQ9zhe9mnVr/+6/gvpcic3+1Pwc6u45bVYUe7wJc+i5rOZnsqJHonsF+t2J
3W37HyAMod99lu0knWuKYo+Ydx4XEdsQ4utCjS7NxLx6Tw1ljgfR7oKdzuRq
XdvoSE1ssyfroRe1uhp5y/SjJv67F//9i/+mx3vTNb6HvflyUezPXmrf5Ln0
GhRudj7w1zu/TMj4mNE7E233dxN9QPRh4RHhMeFB4VHnkAl+oOg4+ty+Tu3H
RW+yH+Ep8SNFbxQmuA4co7x+fJy6jLZju0f0duFu117te12vTPDu608etxVF
Do73TuEuMLoodIZS4+vJ07KXZMLXcOZlKOM3eK7xfWUm4ncuw0RvEZ4Wf4fo
RPJ/oiju5d7jHOb7ON/D+Vzn5xV+7vMQ7cWc93w+9nnE5y6fA31/5HuSBdhY
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
9vvCzsiPd4eNoc/xjmdOPA+jiMF19rvtDsuPd/n5/XG18+NdeHdj0zb8Puhj
8uO9cn4m8C/PlMYxrw+T7yPkPJVjifeVPyP0Z4X+7pufR+3ludYk4vGaGMf6
ecD1YB3ex1oYS138/rjG+fE+uIeok3Pye+KOz493VVv3AWo7lrVomz5Gee//
kY13gfn9U363lN871iE/3hf2WTb2n7+vVT31v68R5dWgf5Vr4D2djXt23y8v
F9Z7fkQrSO5QoYqwLhn36b5f/05YLawVymusMnKHp+Ln244Q3c/xzce5Zn72
of6TU2HT9qr62JuK44iPIXnw7jsgu/8kI7evpf+T+G+ycWz0cbFkKr6fU9Hy
JcLeocSxVP0/uK7Z+K7bj8nIx8ctfwfN34ErmTu+Eqe/5/OvaBnsOMbmxOzY
VxKDa1LXeuqvlwq7tv9LMuJci9+NyXg24mckK2n7ech31My1XE6cy0Tr269s
NqDOa6n15mycdzZmg/d1xJZs2M09dylJHmWgzst130hcjuMLarGMOSn//3Sc
c57qWMnnkhLBl6cmDT1f6mqEXGn0t2Zjrrz2GoseIZkmqXhnXK/8eMfcHubR
8+l3jfn9cX63mq+JPN/7mRvH6Xj9HbZ/k/E9N18Db0vG8xy/m+zi/Hh/2Tr6
f2LdbmBt+NmQr8F8rvb35YpS8Z03f0/p4FR8f8nx7Cam1dTRz46+YC/4vHaA
defzqm1uxa7X1Wr2y0rWv+fTdfiHeblSOp2VWh/Rn7Nx/beRectjbfsdc35H
m9/rZzsrsOV383XLj/evfc869dryfYCfme1Nxnf5Mqn4zpXt/00d/g9NOmQY

            "]], 
           PolygonBox[CompressedData["
1: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
z+wH1tZvrb2EbbP4vcK3I74h8/uU71EdvB7i+9JNSXx7auf10X5pxCriQ800
9vOw9eBS7H/y+4pvRXzD4vcS/vJYKfowJ4391DdLYQP2G99Jo+/z7R+k8ZUZ
tgf9o6/PerzYL6WvE4VpHj/G9jH7I7+/+ZbcsxjrZfYPsT17iuw/8puR3458
M+P3IW3QFmP6ou2NvMetL/3HFtiE72/MD+bSvfYP/AWOT04R/4wxL8We8ydp
7Dmz98wcWJ5GvBwp2WMcPz+2PRa7PPsnxK9lpdifor3FTn+exn7UevEfSrF/
w/uvv9oa7Hi0UlheCh0oz34lsYE22Y9hP3xBKWQim/iMLsQwYhn7Y8usD/vj
62mDusJPacSIfp4P7J/8mEYea5y1acRHdBnq+Mf+wq3ifRxfKU9sWuP22I/6
wWn2r4if1B3p9wnxnLUTfVrl/i1zf0h/5/6tsvzfkVEKnX9J4/cTvtCvGL+X
NpLPN1TsbCBUz6I88rHpH+J/C7+Uog3SvB/Qvb/XF5w/qKu6+zn+Yp81Hg/k
sV//h9v70+3927bwTxrnDxbb/pwnID7i+wvsH8R32q4lVMtij4+9vl9cn/hH
rBtuf+P3IH0b6PnI/ITfLdQW30z1V6qtT4WNs+gzfa/v8wOcJ4DX9XkKfh+y
V8KYsR+EDuiyl1AR34KYUS3a3CSLNml7hbCp+P6qM6QYawzWGlvp2c/K+17Y
MgvAaWPzLHREV+pQt34ee2fvCCfmsX9bropvRuwXX8n+bFV8U2L/kPMVbRXL
zvN5h6OF08VP834s5yHIa+n904bCWeUoQ9khwjzxFzmDIH6XMFN8rtNfCp0l
+yrhC/HPhQ7inZweKrxajjbuYe9SaFaOPWH2husJJ5XjWX3LZ6/4XOG4LPZ3
W7o85ytOFM4Xbyc0ZS8+i7I8OyGL7625bLVpMb4fnqxnFyvvApdHP3S9XPgs
i3zauhybsFdNvtOnW19s1dT6Ia9VOWyEfs2FK8ohg/rUoe5lPr/C/jW8rc+3
rBK6VsJmK20/bHW900vov/hpwrvii7LgTYW3xT9kvMTbCh+7/BniLYVl4sux
RyXaWOby51fi2QecVxDuEL9T+EX8I+FC8TbC+65PW+e5PM/IO8fnIdCnWSVk
oh/fB3eSrWsU4/vnJ9izEjLRj++j5O1VjO+T+BO+84r9AXvQ9+7C1+LfCTeL
3yR8y9zBfpXwKcbrK6FnJcpQdnUWZbu6PvKxDXVWuD5j3c5pyiPrVmFNFoDf
Znn4F77Syv7E+Z4z7J+cF6krNCqHzx7k+cDceF4YLD5ImFaOOfL/NHlPC3eK
DxSmlqMM6d7CQ+IPCLdlcb5qCHk+73MdcwhbCTeKd3F6pHA9fRdGiQ9zur8w
uRwyBlgesp9wup8wsRxlbnf60XLo0AdfoM1ynPm6SPxS4bZyPGuHLzBe4t2J
KfgW/ux86nL+YYz1u8H6ottdQmd8T5hUDh36YnuXH+/+Y4/xzu/j/qD7o9a3
kzC4HDagvV4uP8bnLfq6f+N9vgH7jHT+zVl8T2dtxxpvB/Gdhf3K8Y2dNOd1
GhKbynG+ooZQR7we3+DF9xEaEAtYI2ZxXqmO29vR5euWo81dsjivcYTrc/6i
ZhZ167o95FO3jstzXqOe05x/4vs+c6d2MfYj9rd++OABWZxnamZ/5HzVWULH
csSkFlnEM87SdRLOtL3xtVG2B+0dU44+7Wv/blyOZ7Rfx/6OzNrWv57tQ/+J
38TGxp4PxEPi31WWv4/739Dtcx7sJOvP+SnOh/SrxJz+XjzTO2uM+EihzNkW
zhCKjxYS8edUZjvxLTmjJv6MsAVnp5yeKmwinglTstjzYe9nsjA1ifLUpczT
4rMYc/FanBFjrjImlZAxLQt5tL2T07S/cSVk/r9+bfE6nGkTn5MFryfMzeJ8
XAvxU31ea4HQhHe38Kb4vCzKHiG8JD4/C95QeNnpBuL1nU/7dSuh82zri241
hBfcHmXrWj7nxZCNTGS/xniKnyS87nRj8WOEV8VfyUJ2o/+kyWtgfaYLu1fC
RsibyXyqhA1edBpbUmaG+JF5rFWWYgPxAmeMKnHmbfM81kurtdZZ6/XOyXr2
Pu8a4ZQ81mdfVosyrKe20rNHKnEmb8s89tjYa+MMJ7/XmurZu8pbTh/FG+Vx
dpFnx+fxjDxkIOu4PHTjjNtp4guzeNc2tn3WEb/ERwkV5f+g9F2VeLYhi/1k
vg3N9+/bg5M4u8GZsQOSsBdjs5ftwTuXd+8QYb14iTOQ4vcLRfG1WZyVQsbv
4n9lUZYyf2YxH8ZWwgYbc/Yxj7pjPT/+yEJXbFw9j/cl77a+nl9ts4jVXR2/
nxLSSvg082WM8KnyPhRGi/8qDFZef+GnLABnDcFagv3DbYuxBmB/kP6MUN49
1vdvYWgl2vjN7Q1yPmnsebf4QPeX/jDXR9ge7F9vUQwZ7E9iH8oSM362fWhr
kO1ZLY/Ygcx/stg/3orfusXY72Y8762EzA3W7x7Lozz74RsXQyb75dXcn9GO
R/gHc4c1EOsx9qtZayKD/Wn8c0IlYhbjs6kwvhIxLc8jvo12Pmn22NlrRyb7
74zffZXQseLzqKy9iCGcr30Em2ls1ggPO83ZyXXCBPomvFGONfcwj+cK8S9Z
Y2SxHmfttdD5o4Sl4u/wznZ98hYJw8VHZMHfcz7l4R8I92URU4mtjxZib/3+
LPJW2H8eFFaWw6eQTz6+tdT1n2DMKuGDT1oeurxh+eOEb8rRxlinV5fjzOh4
t0/fVjsfm2Ab6nCedKKwvhw2m2B/591Qtjzysd3vrDHEH8uC/yM8Lj5J2CD+
x3/S5KHzZOtPW5SZ7PqUXe/2OJ+cVcVvNM7Xsl7qprxrhdZZvK95V3YWzs4i
Xr1N7KnEeeuDhTnEXuEQ8cOFV4jtTnOe+CXxWZU4v91HuEOyBgl98zhvd7bG
prXPpyzTsy84+yosFx8g3OPyt1NXGCze3/X3F2ZUQocDxBsyByqhwxF5nA9/
3fpx3pnz5OjyQiXOWzd0Pn06RryxsKgSbZDmvPTLbp/zr8TvJS5PvOZ81oXo
XojzY/z+fVN5r1Xi/CjvCN4VtHmC7YVtZlrfw93+69aX86fUxWYNrA+ylrg+
58XR/ZlKnC/+UFgtW3xpe71PTBX/VvgA2bbnJ8JizrbSnvgS7migK3Wcfh1d
eB+Jvyu8Ir4gD77c+QvzKEudN8gTViBLWMS7NA9Z5L+FrDzy3nN56sMXWT7l
Pxb/3Pq96/rovCQPf6BvK5ymv/jGd8JH1M2Df+3+vu986i8V7yfcKT7E/oM9
kPWV87mf8ktVnLnm7PUKt/eT8Kn4Z3lwnn3i/LVVYfP/y8fWPzqf81b4Mj7B
eT3Ovz+msXq4EufnOS//HO+yStxf2NrxeJKwjXgvz4/ewq3itzFn4EIP8Zvz
4N2FG8VvoQ59+0956tJGT7dHHjboLX6DcKP4La7PfGQu9XF57DXI9SnflTrI
FrpZXm/Xv8n63GJ90a97HmV7OZ/z+R+pb8u8fuG8/3rxHypxn4Hz55wl4hnn
/1nvUHZxJdZj3d3+jZbP/YnPKtEm5/25H0Fbaypxn+QqYauq+MbEtybuk2xS
FTGO+xfcP6Hsqkrc/+E+EJw2uY/BefPtVHbLqrhfg72w9fUgj/s35NEm91N2
zGPsGM+d8jgvT6wgJnF/hPjEXJ8m7C1eQ5hKbHb5WvaHGc7nvgW+8mAl1p/4
x8RKvKM3szzqTrS/cB9miv2H+x+cD+O3GGdoOS/G+513+QTXf9vz/RPPV9a/
2JqYdaL1oz102l28Sx597yR0zgPwa3iWB+DXCde6fBePF/biPgSx6slK3Meh
DGXxqevyuL8yyfqxXub+DmWZM9wX4T7ODOtT0/bCllOtX1f7cxe3RzwjVn3s
+POF8HNVzFnmM3fQfvX8/py5SXviU4UJedyHmi0+vSruR00T5orPFJ5BN/QR
f054NI/7BqJcffj3/sHD2M/5tDdReNbtUf4Rp58RJonPEhaIz6+K+3IvCi8T
a4XZ4vOEhcRip7nvsbVk7eD1O/H6bZefm8f58j2Vtw9npMSfdX9o/zn3Z05V
yJiOru7PHPeP+3uUpQ73wWZYnzmuPycPWTybKf4SNq+KPsxy+flOk48O6LJv
Ie470D/6Mtfyd0virob+/Hs/hfsc2HKzQtxfYXywJTo+Id6R9X05vrFcncX3
Fr7dDHCa+2sj/f2Fb1Pthb7l+EZ0WRb31fh2dXs57ttxf7CH+A3CxVl8P+rq
9U5L/x7hW9Kt5fi+dG4Wa6OOXg+dk8W3i+tdnjZoizUU36c4L79rIcaE8/6U
7+zvD2davz7l6NOVWYwHvjbN/X3W40X/n7L/Tff4kOb3KrGCNTm/p7hPSN96
leM+JWcyOZvJmU/OfnLfkjz6zH1Jvp/Rtz62D2dAOQvKHQTO+2NvbNvX+nG/
iLHBB7lvdK7709XrxTn257fsj8wH5tZkYRyxV/hb/DfhG/GvPB//cpr5ytzk
2co87ovlklNJ4v7a90IpiTbWuj3qFpNIz7N/Mifm57HeYa2x0GnWM0ucz/qG
+0mbJiFjnfVBt58tn/tzyMZBud/HfT84d1q5n8UdM+6aJZx1I9YQw/Fhp1k/
sDb4xfEG/dGVMj+JjyZGKG+8MCqP+15bJaET96WKmgzbJ/Hsb7ePrJLrb8jj
7hV33v4S/9P92cpp7sNVd3vkPUC8JTYJ94uPFMY5PcppdBkj3Ct+Zx7r7xHC
oDzW36wPeNafPOF+8bHC0Dy+LxCb8Hnuh1B/aJXX7OJ3I6MqntHeYGF4VbRx
l/ORNVoYIj4sD11GOj3c+o62POSPtn7UHy88VRUx9qE8fj+w9kPGQMdj4skU
52N/+o5NxojfR4wm9ts+yKNvPBsBz8OXJ7r8YOt7j9tH/hS392Ae922nW59H
3B/0HWf73mf549w+44Psp1x/rMdriufPBvsHPkGg/B/D8igx
            "]]}]}, {}, {}, {}, {}}, {{}, {
         GrayLevel[0], 
         LineBox[CompressedData["
1:eJwNw1kzlQEAANDPk1+RKBJKQiqUJbJvtxLZxtVDmLk3M8qIsZNyLS0iFJGl
EuUXOmfmJIWjoUhcEAQxL8YHwQUvmeQVU8ww3RtmmmO2t82zwHwLvW+JpZb7
0CqrrbPeJkM+sdlWn9lhp2F77LXPqC995WvfOOK4E04741vnXTDmsit+8rNr
rrvpltvuuOdPDz3yj8ee+s8z/3viX3/7ywP33fWH3/3mhl/94qof/eCSi773
nXPOOuWkY4467JCDDhix3xc+t9su222zxac+9pGNNlhrjZVWWOYDiy3ynne9
4y1zvWmW171mmldNNdnLJpjoOROCPnQ=
          "], VertexColors -> None], 
         LineBox[{1894, 1888, 1895, 1893, 1901, 1900, 1907, 1906, 1912, 1917},
           VertexColors -> None], 
         LineBox[CompressedData["
1:eJwN0kdsDwAYxuF/JVa4cOFCIly42HuGAwkhau+9ae299x7hQEKCIPasFi0t
rVb31tJaNVqjNVqj9nN48vuO7+FrNDE0OCQoEAj8JKJ6IHCNSMKIJpxYoogn
hkTiSCaBVJJIJ4VM0sgmg1yyyCOHAh7ygnyKKaSUIsopoZIy/lFB1Rp2ai0N
UIdq1KM2DahLY+rTlIY0pwktaUZrWtCGVrSlHe3pQEc60ZkudKUb3elBT3rR
mz70pR/9GcBAghnEYIYwlGEMZwQjGcVoxjCWcYxnAhOZxGSmMJVpTGcGM5nF
bOYQQihzmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHejawkU1sZgtb2cZ2drCT
XexmD3vZx34OcJBDHOYIRznGCU5ymjOc5wKXuUIY17nBTSKJIpoYYonjAfEk
k0Q6aWSTRR4PKaSA5zzjFS8poZgPvOcTH6mgnB985ze/CNT0jxqkVfjr/sNP
KvnGV77wmTJKecdb3vCaIl7wlCc85hH55JJDJhmkkkIiCdznHne5QwS3ucYt
LhHOWa5yiosc5xz/AUtwoH4=
          "], VertexColors -> None], 
         LineBox[{1977, 1973, 1978, 1976, 1982, 1981, 1986, 1985, 1989, 1992},
           VertexColors -> None], 
         LineBox[{2117, 2113, 2118, 2116, 2122, 2121, 2125, 2128}, 
          VertexColors -> None], 
         LineBox[{2198, 2194, 2199, 2197, 2203, 2202, 2207, 2206, 2211, 2215},
           VertexColors -> None], 
         LineBox[{2309, 2307, 2310, 2308, 2312, 2311, 2314, 2313, 2315, 2316},
           VertexColors -> None], 
         LineBox[{2319, 2317, 2320, 2318, 2322, 2321, 2323, 2324}, 
          VertexColors -> None], 
         LineBox[CompressedData["
1:eJwNxUdsiAEAgNGfhMS4kKBGUbVao7Vq1R6t0Ul3ba1VbRHjQEJCiL333nvv
vQkHEhJC7L0lXLjwDu/7woYWpRaWCIKgpEwpEwSTGcsERlFMHgUMYiTZDGcI
gxlIDlmkk0YqKSTRh97E0ZNudKUTHWlPO9oSQyua04ymNCGSCOpTjzqEUZNQ
qlGVylQihCrUoDq1qUVdwmlIAxrTiGiiaEkL2tCaDsTShc70oDu9iCeBviSS
TD/6k0EmuQxgKMPIZwSjGUMhRYxjPBOZxFSmMZ0ZzGQWs5nDXOYxnwUsZBGL
WcJSlrGcFaxkFatZw1rWsZ4NbGQTm9nCVraxnR3sZBe72cNe9rGfAxzkEIc5
wlGOcZwTnOQUpznDWc5xngtc5BKXucJVrnGdG9zkFre5w13ucZ8HPOQRj3nC
U57xnBe85BWvecNb3vGej3ziC1/5xgd+8JlffOcPP/nHb0qVDYK/Xs4DKlCa
KpQnlIqEE0IENYmiLq2IpD3RdCGGOGJJoCtJxJNCIv1IJo1UMuhPFunkkMkA
shlMLnkMZBRDKCCfQkZTRDH/AQnegI4=
          "], VertexColors -> None], 
         LineBox[{2426, 2420, 2427, 2425, 2431, 2430, 2435, 2434, 2438, 2441},
           VertexColors -> None], 
         LineBox[{2509, 2505, 2510, 2508, 2514, 2513, 2518, 2517, 2521, 2524},
           VertexColors -> None], 
         LineBox[{2659, 2655, 2660, 2658, 2664, 2663, 2667, 2669}, 
          VertexColors -> None], 
         LineBox[{2732, 2726, 2733, 2731, 2739, 2738, 2745, 2744, 2750, 2755},
           VertexColors -> None], 
         LineBox[CompressedData["
1:eJwN0vcy0AEAAOAff/IUXskj9ACcjCKUkk1CRpKQM/4w7oy71KGzV7ZKGSkj
hYyQke+P7w2+iFvRkVEhQRBkERIeBFdhQXDNOf845oQD/vCL32yzw3c2+cY6
K3zlM59YZIFZZphikjFGGWKQfvp4Sw9ddNJGK0008po6XlHNCyopp4wSiink
CXnkkkUm6TziAfdJ5h53uUMcscRwm3gSSCSJFFJJ4yGPySCbHPIp4ClFPKOU
Cp5TxUtqqKWeBpppoZ0OunnDO3p5zwDDjDDOBB+YZo55lvjIMl9YZY0NfrDF
T3bZY59DjvjLKWdccMl/Ai9CuQG6wWdZ
          "], VertexColors -> None], 
         LineBox[{2014, 2009, 2010, 2015, 2016, 2021, 2022, 2027, 2028, 2033, 
          2034, 2039, 2040, 2045, 2046, 2051, 2052, 2057, 2058, 2063, 2064, 
          2069, 2070, 2075, 2076, 2081, 2082, 2087, 2088, 2094, 2093, 2091, 
          2092, 2085, 2086, 2079, 2080, 2073, 2074, 2067, 2068, 2061, 2062, 
          2055, 2056, 2049, 2050, 2043, 2044, 2037, 2038, 2031, 2032, 2025, 
          2026, 2019, 2020, 2013, 2014}, VertexColors -> None], 
         LineBox[{2550, 2545, 2546, 2551, 2552, 2557, 2558, 2563, 2564, 2569, 
          2570, 2575, 2576, 2581, 2582, 2587, 2588, 2593, 2594, 2599, 2600, 
          2605, 2606, 2611, 2612, 2617, 2618, 2623, 2624, 2629, 2630, 2636, 
          2635, 2633, 2634, 2627, 2628, 2621, 2622, 2615, 2616, 2609, 2610, 
          2603, 2604, 2597, 2598, 2591, 2592, 2585, 2586, 2579, 2580, 2573, 
          2574, 2567, 2568, 2561, 2562, 2555, 2556, 2549, 2550}, VertexColors -> 
          None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
Yxau387bYfflMgVPm0TcVkszIfiI1avwFBrUUpY1u1eTsKX4weVh9DW7I6ef
rhRkQ9lCj34jXwqYdd/CtsngXHgqXdfE/cd6l89a4H7LeYg2qWHAjp3OjwsW
ssHZYPyb6WkKGjdZfZL7TYCz7PqbfTxsOMJvuGqPMwWrndy3Rk8SkKgRHb8V
c+K+C/qlW7BuN9yN17tjTrSwmRVURP1JC+zvncf99r+vTVj/JeCGY0YN5130
d92YX+urSAi2FWy9h77/5eLte8fnaThrflzH/yAF8z+3Fk/Uou519wkoon6e
tVLsmUf9TNSIfSuN/r6C3nH38UsaPlPXjL82kVB77d+X1Zhfij+yLe7jfhnh
XXzLbCnITtisWNdGQIBGZAQzhoakt2k9Ex8wRxunrOpqZUB3XERzJfoIt4hJ
lRf6yPzYJneZTPTxb2mB1rM0GFUvCug1pcDO/93+lYUEyI3cSObAefTTPjB+
Beex67Phv2Gcxwwr4P6F+0fGBGsdzCmo1lzfX1eCXGcd/DUnggZOoTLJpnIS
7nLdeyb+nQHHjTO748Zo5LWYM5d3YP5V2cE9jn7qVqevKz5Fw8nkFV9NdlFQ
3+M60JpMQFV058TuGhqWc3hwrWpFTrPoT+64w4CFPHyf+nA/9fLG+z27Kbhu
c26uMpWAsEc2tTdCaCh62jebUUaCk2tukwXFgNhCCaH7v9Bnz2icXKpAgeRD
k0l5JwK4RS0+7cfznLDR0mNqUiBuHnPaNoQA+VdkbSTqfDWZrTKEOv/Des1F
zngG+OjxxR9CH/c1ilA8jZxwRvHrnWLkhH3D8+dc/Gk4UPO45Wop9pXQ5jeh
LAYoXKm7UYgcaHxk4A5DigJz5+XSjD0EuBZrqnYhh3T/5nivhhyy2aBx14wH
AeNhORsV0E+1xtc+mEPeZl+cXi+JufibVkbtZuSci5r8Kp6qFHTBdMfsBQI0
7j8Y33sJ+7lv/rd1CQnHLe0yizEv7NYLVX+LnMxVo1N7DDnZQGGHzbgs9rP2
icgXyIffdjje15WlYKBTXmWHLeaFVUqGLcgPqeQALYz8cJd7MkAX+eH3XkV+
Q6xbXqfjYU15Ctzq3z1beZqAuKknXrLnce563F4rYs5NnpKopv+iL1jpvQrG
PNIxdvuqFeaRijMzvxMwT91ZoSz2CuvQaM8aq8M63J+qe/sW67CmtOGWN/JS
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
mzntaVlcd56C/at9hfXzSFDl/X1WkaLBsrfbItcj/1n255+cpyoDfNevlXYM
Rh6im6WibkVBZWB1LP0NCQdrzW9fEyLA/kxcdtZ2JmTr/LPh0EW+99Xq1ZlT
9HnruYlUPvP4bE+B3Tafx4qZyBOGJaoNOZDnE3m1L0cp2KxSZqaiyYBtV0NV
pR7g7/I7eDrb4b6/UzZ6l0GCztlz4x0YT9I/CR1U0WeC2PiB/VcPkMArVbj8
nQl93vp1Og56Vsv3U+AeHP5M7iUJuts7bf1lCHjc9zgi5h8F1uf9kxcbMEBF
jbgSnU7Au6IfWf6umMff6n++gTpRZQ/7hMsMDc5IGV/gs2TC4f0VxZ6mJMgt
0dzSsYs+b72+T/qc0wOKmN9FY193x5Fw40bCx1JtAho/XfSSQp5/gTPtt80R
BpguXRqXVEHAlM3ZbA9vCuRaPJMO56D/8H/lFBqhwSuupvprzkywls5KII+i
biotcsjcSP9PfcKeufqEj+fqEzbejLz+mw/jf7uZdv8dEj62qXfQ0X++yVtk
nl3UAwcj6FPZtgzQb/wh/b6XgJzX634boj9EbXMIkkB/KIleMViF/pChIJTR
4seEC6ZLsnqQ39ZyWV2tXU6ftx4jW8GPkasMJtQd6/Z2uozjB7NsTiNvf9vh
z5jE8RIOiWdZvRkgt3XB35VL6GDR6XxCAvXp2m9LftR+IKFeeGH5C9Sn5xKN
+TWuMiH+50bveFsSpmnh31fy0+etP1m0a7WDy6xe3l/i+xHz8qJzvv2tyA9D
jZeccBDpAZUBuTTeGwxQsrcq3I/8f79P7I7aUDxfB5oHbxeSsEurpykMechL
Fx3ez3eY8FSmfxunEwkVraqUzcz89Tb3f7m2UMuWCZTFBSNTM/xdprLjrm10
qMqO7rHE8TZ/nW8P4PjmxJSjZ+7RQYz6anj9LgUBoQcP7CkmYSiVMzaoigbW
Q8dXRcchfy44Ob3RlYR2vi6vi/0EHJ2rL7p9rr7ov7n6op3CZjkXf3fD3zv5
zezIP52CSyg5Gh3q1vfusMHxPrwl1RdxPP/jEr/POH6P4NOjW2LQrwaLlEeQ
p7kf8Y2/gDxNtP1uaulLJngX9SxYfpqEcQn3dnP0n9dz9VTZ1/y/eqp35+qp
vj2lcueMThc4dwomxD1sg2OsH950p9eAuCx92Wyd1ahFwYs8cLzjQH7GbJ3V
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
1+Xoj9ZhasDifdLB2l7qfr6oVejKNuqaQ6BGH7EPW1zLkTJin3aVTxJ5xD7V
EZmjg10kfqOf+Bsy9lMp8RrP7y02UaXbDAST3UepZ3eenbxrQ/Lp4Ge1Up4W
Kuu2TB5+7yJorn9xI+p6k3EJ949NVDbv8n9qs8MUQ448lfuxl4ocbb8UOdBK
TWnwH5Ug88tXqhedpe+nNKTFk+nmofcWxkJInHIxfFvturyfUh3LE/6xopmS
WSXVzKlA4mil26XChD4qqJ7tVqFmM9UVfWl+jtTXDGJccvPjfdT8HTZOzaom
qpv+e+fnjBGqI2a7fMSGPspj7eTDW6uIHmuVcfAidbRU0UDB7n8kTitvN78k
9ddT+6cPTYl/LsZyv28n/pmnOM78gfjnuSX5EmZBY9SxlR9FzhBdKmRxqD2e
vNf0iztDV0l8KZ1roK8g9fW39BiXT6S+ZpZKyL28bJT65rhPvHA70Q/0WbUH
E1so/Xo+/mGyL8skVVbuJfsy1PjibjvZF6m4nFEpEo/lspnMl1n7KUpT4Ia2
QDNVyD7oCT2Q/DFzEXrA3TPUx4bogVunlI/PkPwlKk9Xdrqnj1Jb5lAokkrs
zHXhtpvWKCWjc3vkohHRS0llkb+PED0T9q3kyKcxyiBcns91to/6/jbmnOGX
JuqbXPpewcExasPjBL/DHP3UPZWozcelm6keFy73M4Q/mZW3nhUe6aMuZD6w
LSR1R6lM8TcLUucWRVV7jnf0URnfw0/Q3W+ivixunRlwGaU2VV7QZrPqow5d
C/r7WrKFulWR/uwr4aUnrI9HXk71UR3zdYHMLU0U48VbzNuHxiibqjcfw3j6
qV2PNDXNlAl/Lh7vbSf2mRZ0PS9O7DMaLtJ7ntjnWKL8zsQKkk8rXijfInrs
QMfJjEqix+qfTI/Eh45SFVZxn+KP91GcAfmvXpF6qnuv4GVnwsPeE+XDPD/6
qKNVS3hXk/rluQm33jnC87xOOWNihOfv7W8bkCQ8H7NPM/cm8bfO6bCr+4i/
lZ2an4gk/jYp3pb0O3eMGjzUcG5PXR/lEKCqcDeN+EnBlfPRWaPUk7kLDyXO
k/1Nq2y89oXkTWa2PgbihweL+WbCSN5ZteqxkWFZE+UuFuOO/0Hzv3VhSkKs
nworDZRlPdBM6Wr6bH9F+I3hnVqVDeE3HZkdB2cIv50pS7PZnTBG9S2XbX1D
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
FPp+a1bfOQI+9xturEXf7w772DzyZrL8jnr4yVDOZFYOmafYq+oOrY9K97UP
dva2LouA/T88YNyPOBV+EB6DOB2efjaFODWhP++JuuCkelAq6oK3lEYJ6oKq
+yIj4B+RJXMd4J/vlZ9eQffq3tu9EnWTFNNeE/Ch8ztvW/Dh2Z+mUvCfM+6z
y+AP/FnSA/Cf997WsfBzr87TtPtaxS72v9GH4TSN24B7ShrRc6HQM2xlR3Jw
T2mCP6IL6080jaOj+c+GSAWs/93SCt9L4MOio6WIR6m/9GkfyfgPJU0K0EVb
Q7f9wjz27avtoYv4ZI7R7s8wLTyl3Z8RV3hNuz+zdUkoJ+7NLheOjsG92fA6
ni1eiGvhtA/Qh2xqd+1o9+v4b0dgf52yvBNwT4lTZC09+KRx4/ezuKdUoCSr
Bh5uMAw9DR5OveHJjzzycNRmA/JFRtjkHPaxWUrwOu6hmWw8Uo17IKbh7GOw
W+NlNjPcA9n050M44jRAhyMcftv1NkEBcfpB8e018IYkg0g5eGMwRSQPvGEz
vuUKvqNJzp+jw/tGbKiLxvfIWu2CmsinOzJbK5FPj8t+P21M8PkHv4rRj800
ztgBf57hkS5Ef/W00enXWM/0L9UhrKd7w7gt1nPcfc9y6J+rb87tRlwkMJ0d
gP6pUDflwj00vXBJadjB5uC6AdxDs57oEIJO835/oQN2exJwlBF6numsQA3q
kSozjXboT2vdHV9wP+TOB6so1OnykcOa2JdHBhKWqNNjeh/uBn9mR1nuBb+Z
yclshE6Y3rdjGeJLSSC1HPGl9NdJCvH1yu9UIvLmYMqMLfIa1811FPLmxrNx
tO+yu19N077LLmK1pX2XfWWuMxXzmwpUnsX8yR9fZoOfK3lClYKht/NeVuH+
ydJRf9dC8l5vIzZkwW6UeZ0C7byA370adtMsLLLDuTD/7GIv1v9bWkMDeSTd
WYsV68kIVJPBenTSuMawnqvszM60umn2KwfsmbyXLhZ5cIeFcgzWs+JUwims
h7lxogzreb10PY0n1bW/0XhyVOkcjSdFRfqE0Vc8Lv/MC7raRbgsE+ePLoHX
/tL6V/SVPXjfk3u5kvG+7iOXKuKRd6pe3cf9wIjQTfTJ5L3WX9A7gnpZk7H0
MO278tF9y9AvFaYvn4f+j/bkKIT+//hQWhV9ns+jUXcx/1jHuSLMP+ubIgEd
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
ae/QYJOh8D3/Ab4IuIs=
       "]], 
     InsetBox[
      FormBox[
       StyleBox[
       "\"\\!\\(\\*FractionBox[\\(Cross - \\(\\(Kerr\\)\\(\\\\ \
\\)\\*SuperscriptBox[\\(x\\), \\(2\\)] \\*SuperscriptBox[\\(y\\), \\(2\\)]\\(\
\\\\ \\)\\)\\), \\(3  rd\\)]\\)<\\!\\(\\*FractionBox[\\(1\\), \
\\(100\\)]\\)\"", 12, Bold, StripOnInput -> False], TraditionalForm], {
      28, 4.5}]}, {
    DisplayFunction -> Identity, AspectRatio -> 0.6, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"n\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram\\nlg(Cross-Kerr \\!\\(\\*SuperscriptBox[\\(x\\), \\(2\
\\)]\\)\\!\\(\\*SuperscriptBox[\\(y\\), \\(2\\)]\\)/3rd)\"", Bold, 16, 
        RGBColor[1, 0.5, 0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-62.83185307179586, 62.61194158604457}, {1., 5.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -95.30254777070064}, 
                    Offset[{4., 0}, {7.5, -95.30254777070064}]}, {{
                    7.5, -59.47452229299364}, 
                    Offset[{4., 0}, {7.5, -59.47452229299364}]}, {{
                    7.5, -23.646496815286632`}, 
                    Offset[{4., 0}, {7.5, -23.646496815286632`}]}, {{7.5, 
                    12.181528662420375`}, 
                    Offset[{4., 0}, {7.5, 12.181528662420375`}]}, {{7.5, 
                    48.00955414012738}, 
                    Offset[{4., 0}, {7.5, 48.00955414012738}]}, {{7.5, 
                    83.8375796178344}, 
                    Offset[{4., 0}, {7.5, 83.8375796178344}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -109.63375796178345`}, 
                    Offset[{2.5, 0.}, {7.5, -109.63375796178345`}]}, {{
                    7.5, -102.46815286624204`}, 
                    Offset[{2.5, 0.}, {7.5, -102.46815286624204`}]}, {{
                    7.5, -88.13694267515923}, 
                    Offset[{2.5, 0.}, {7.5, -88.13694267515923}]}, {{
                    7.5, -80.97133757961784}, 
                    Offset[{2.5, 0.}, {7.5, -80.97133757961784}]}, {{
                    7.5, -73.80573248407643}, 
                    Offset[{2.5, 0.}, {7.5, -73.80573248407643}]}, {{
                    7.5, -66.64012738853503}, 
                    Offset[{2.5, 0.}, {7.5, -66.64012738853503}]}, {{
                    7.5, -52.30891719745224}, 
                    Offset[{2.5, 0.}, {7.5, -52.30891719745224}]}, {{
                    7.5, -45.14331210191084}, 
                    Offset[{2.5, 0.}, {7.5, -45.14331210191084}]}, {{
                    7.5, -37.977707006369435`}, 
                    Offset[{2.5, 0.}, {7.5, -37.977707006369435`}]}, {{
                    7.5, -30.812101910828034`}, 
                    Offset[{2.5, 0.}, {7.5, -30.812101910828034`}]}, {{
                    7.5, -16.48089171974523}, 
                    Offset[{2.5, 0.}, {7.5, -16.48089171974523}]}, {{
                    7.5, -9.315286624203829}, 
                    Offset[{2.5, 0.}, {7.5, -9.315286624203829}]}, {{
                    7.5, -2.149681528662428}, 
                    Offset[{2.5, 0.}, {7.5, -2.149681528662428}]}, {{7.5, 
                    5.015923566878974}, 
                    Offset[{2.5, 0.}, {7.5, 5.015923566878974}]}, {{7.5, 
                    19.347133757961775`}, 
                    Offset[{2.5, 0.}, {7.5, 19.347133757961775`}]}, {{7.5, 
                    26.512738853503176`}, 
                    Offset[{2.5, 0.}, {7.5, 26.512738853503176`}]}, {{7.5, 
                    33.67834394904458}, 
                    Offset[{2.5, 0.}, {7.5, 33.67834394904458}]}, {{7.5, 
                    40.84394904458598}, 
                    Offset[{2.5, 0.}, {7.5, 40.84394904458598}]}, {{7.5, 
                    55.17515923566878}, 
                    Offset[{2.5, 0.}, {7.5, 55.17515923566878}]}, {{7.5, 
                    62.34076433121018}, 
                    Offset[{2.5, 0.}, {7.5, 62.34076433121018}]}, {{7.5, 
                    69.50636942675159}, 
                    Offset[{2.5, 0.}, {7.5, 69.50636942675159}]}, {{7.5, 
                    76.671974522293}, 
                    Offset[{2.5, 0.}, {7.5, 76.671974522293}]}, {{7.5, 
                    91.0031847133758}, 
                    Offset[{2.5, 0.}, {7.5, 91.0031847133758}]}, {{7.5, 
                    98.1687898089172}, 
                    Offset[{2.5, 0.}, {7.5, 98.1687898089172}]}, {{7.5, 
                    105.33439490445859`}, 
                    Offset[{2.5, 0.}, {7.5, 105.33439490445859`}]}, {{7.5, 
                    112.5}, 
                    Offset[{2.5, 0.}, {7.5, 112.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "15"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -95.30254777070064}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "10"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -59.47452229299364}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "5"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -23.646496815286632`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 12.181528662420375`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 48.00955414012738}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 83.8375796178344}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "17.417139126598354`"}], ",", 
                   "14.008899161286505`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.738594944759*^9, {3.7385949834440002`*^9, 3.738595089922*^9}, {
   3.7386116396126003`*^9, 3.7386116543576*^9}},
 CellLabel->"Out[94]=",ExpressionUUID->"d5c20397-335c-4d75-a567-9e5a213535ad"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{"",FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
          "", Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], StripOnInput -> False, LineIndent -> 0], 
         StripOnInput -> False, FontFamily -> "Arial", Background -> 
         Automatic], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
       InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"0.42474489795918363`", ",", 
                    "0.45535714285714285`", ",", "0.47576530612244894`", ",", 
                    "0.5063775510204082`", ",", "0.5395408163265306`", ",", 
                    "0.5650510204081632`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], "]"}], ",", 
                    "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "17.417139126598354`"}], ",", 
                   "14.008899161286505`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.738591229149*^9, 
  3.7385912557209997`*^9}},ExpressionUUID->"d1f1938e-2bd9-4f26-a786-\
0277a9586a8c"]
}, Open  ]]
}, Open  ]]
},
Evaluator->"4n JJS Ana",
WindowSize->{1904, 998},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
CellContext->Notebook,
Magnification:>1.4 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 7398, 211, 587, "Input",ExpressionUUID->"9d8ae10d-0676-4aba-b090-a3acc0b0b11f"],
Cell[7981, 235, 2053, 51, 62, "Output",ExpressionUUID->"9f660488-ae4f-4c62-832c-90bac1e95c19"]
}, Open  ]],
Cell[10049, 289, 1835, 49, 69, "Input",ExpressionUUID->"b21e7b45-bba1-4d66-aabe-4a924ce36837"],
Cell[11887, 340, 5039, 110, 433, "Input",ExpressionUUID->"dcd015dc-ca9c-48a4-9e7d-6ac38df47900"],
Cell[CellGroupData[{
Cell[16951, 454, 536, 17, 75, "Subsection",ExpressionUUID->"7717b5bc-2774-498e-8805-c2753db5137d"],
Cell[CellGroupData[{
Cell[17512, 475, 2562, 61, 153, "Input",ExpressionUUID->"70c87146-6b57-4d78-8551-d86d6ede22c3"],
Cell[20077, 538, 66086, 1241, 363, "Output",ExpressionUUID->"391d114e-0d36-4a8a-8ae7-d7a073f66c3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86200, 1784, 5607, 126, 265, "Input",ExpressionUUID->"bdab8694-1671-4e67-b674-1af5c021c8bd"],
Cell[91810, 1912, 969, 18, 46, "Output",ExpressionUUID->"a2a29773-076e-4595-aa99-b5960084b4a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92816, 1935, 1385, 23, 125, "Input",ExpressionUUID->"b4fe6031-afb5-47a2-ad8f-d8a18509d688"],
Cell[94204, 1960, 2093, 51, 336, "Output",ExpressionUUID->"597ca45e-644e-4113-9f14-e1d72116c188"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96346, 2017, 168, 3, 75, "Subsection",ExpressionUUID->"fac482de-e280-4cd5-869f-6f0f4c4491aa"],
Cell[CellGroupData[{
Cell[96539, 2024, 184, 4, 62, "Subsubsection",ExpressionUUID->"ca57020b-4cdc-47de-8617-25c756067233"],
Cell[CellGroupData[{
Cell[96748, 2032, 2469, 50, 125, "Input",ExpressionUUID->"fd0346ed-094e-4bce-a406-14fa9fc15353"],
Cell[99220, 2084, 231, 3, 46, "Output",ExpressionUUID->"65cbeb96-a7ca-4cbd-a45b-79914e3b5173"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99500, 2093, 178, 3, 62, "Subsubsection",ExpressionUUID->"25c7858b-3ee4-45f6-86eb-8340a2938482"],
Cell[CellGroupData[{
Cell[99703, 2100, 8677, 231, 494, "Input",ExpressionUUID->"a60deca3-5800-488a-93ab-f0fbc2531eaf"],
Cell[108383, 2333, 45204, 830, 370, "Output",ExpressionUUID->"cefbbc4e-e416-4f60-90ce-72dc243cc3ba"],
Cell[153590, 3165, 53354, 965, 1867, "Output",ExpressionUUID->"f905edb1-3c3e-4227-87fa-076cc5e94fa3"],
Cell[206947, 4132, 45293, 831, 731, "Output",ExpressionUUID->"d3f6b4bd-3a42-439e-ba53-e70ba6019fe9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252277, 4968, 2536, 63, 197, "Input",ExpressionUUID->"a21d29c2-f526-4a50-a41e-d89e718ff310"],
Cell[254816, 5033, 154868, 2714, 693, "Output",ExpressionUUID->"f94dc58b-ab02-4635-a7d2-bc83f044774e"]
}, Open  ]],
Cell[409699, 7750, 2163, 59, 244, "Input",ExpressionUUID->"5a1e18f3-8eff-48a3-9f72-d477851ba685"],
Cell[CellGroupData[{
Cell[411887, 7813, 328, 5, 135, "Input",ExpressionUUID->"ce6595bd-dece-4f39-a38b-ac3a6ebe1662"],
Cell[412218, 7820, 16224, 329, 360, "Output",ExpressionUUID->"f12a3ae3-660b-4b94-bcf7-b05d43521b48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428479, 8154, 4160, 81, 652, "Input",ExpressionUUID->"ed381656-613f-4fcb-99ad-97aa9b963642"],
Cell[432642, 8237, 144437, 2436, 1660, "Output",ExpressionUUID->"d5c20397-335c-4d75-a567-9e5a213535ad"]
}, Open  ]],
Cell[577094, 10676, 16279, 307, 107, "Input",ExpressionUUID->"d1f1938e-2bd9-4f26-a786-0277a9586a8c"]
}, Open  ]]
}, Open  ]]
}
]
*)

