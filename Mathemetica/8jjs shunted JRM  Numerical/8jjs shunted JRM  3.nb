(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2260921,      40611]
NotebookOptionsPosition[   2253813,      40496]
NotebookOutlinePosition[   2254186,      40512]
CellTagsIndexPosition[   2254143,      40509]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ColorBar`\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7378873562790003`*^9, 3.7378873643710003`*^9}, {
   3.737997853458*^9, 3.737997853841*^9}, 3.737997909674*^9},
 FontSize->12,
 CellLabel->"In[9]:=",ExpressionUUID->"41b9eada-926d-4f9b-b6cf-5982c86c502e"],

Cell[CellGroupData[{

Cell["Precompute joint element", "Section",
 CellChangeTimes->{{3.7082743526810417`*^9, 3.708274359420642*^9}, {
  3.708952452776116*^9, 3.7089524569271927`*^9}},
 FontSize->12,ExpressionUUID->"6969e32b-6cd5-4880-8da6-9cc177d65628"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"precomputeElement", "[", 
     RowBox[{"EJ1_", ",", "EJ2_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t1", ",", "\[Phi]", ",", "\[Phi]1", ",", "int1", ",", "res"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t1", "=", 
        RowBox[{"Monitor", "[", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"res", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"FindMinimum", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "EJ1"}], " ", 
                    RowBox[{"Cos", "[", "\[Phi]1", "]"}]}], "-", 
                    RowBox[{"EJ2", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Phi]", "-", "\[Phi]1"}], "]"}]}]}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", " ", "s1"}], "}"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", 
                  RowBox[{"-", "\[Pi]"}], ",", "\[Pi]", ",", 
                  RowBox[{"\[Pi]", "/", "3."}]}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Phi]", ",", " ", 
               RowBox[{"Min", "[", "res", "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"\[Phi]", ",", 
              RowBox[{
               RowBox[{"-", "2"}], "\[Pi]"}], ",", 
              RowBox[{"2.", "\[Pi]"}], ",", 
              RowBox[{"\[Pi]", "/", "1000."}]}], "}"}]}], "]"}], ",", 
          "\[Phi]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Interpolation", "[", "t1", "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Return", "[", "t1", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergy", "[", 
    RowBox[{"int1_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"int1", "[", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{"\[Phi]", "+", 
            RowBox[{"2", "\[Pi]"}]}], ",", 
           RowBox[{"4", "\[Pi]"}]}], "]"}], "-", 
         RowBox[{"2", "\[Pi]"}]}], "]"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergyJJ", "[", 
    RowBox[{"EJ_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"-", "EJ"}], "*", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getEnergyLinInd", "[", 
    RowBox[{"EL_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{
        FractionBox["EL", "2"], 
        SuperscriptBox["\[Phi]", "2"]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7089524605567417`*^9, 3.708952687697946*^9}, 
   3.708952719907143*^9, {3.7089527648183813`*^9, 3.708952833352254*^9}, {
   3.708952977892933*^9, 3.708952979186363*^9}, {3.708955098041913*^9, 
   3.70895511812256*^9}, {3.708955195108472*^9, 3.708955195309194*^9}, {
   3.708957127322783*^9, 3.7089571283011417`*^9}, {3.708957773593704*^9, 
   3.708957773818112*^9}, {3.7090673829525194`*^9, 3.7090673863403287`*^9}, {
   3.70907199867183*^9, 3.7090720005438333`*^9}, {3.7120557773951874`*^9, 
   3.712055784469592*^9}, {3.737887962359*^9, 3.737888025382*^9}, {
   3.737889710583*^9, 3.737889763663*^9}, {3.73788983759*^9, 
   3.7378898624700003`*^9}, {3.737889920576*^9, 3.737889923333*^9}, {
   3.7378899818389997`*^9, 3.737890008269*^9}, 3.7378900503900003`*^9, 
   3.7378902795039997`*^9, {3.737890427167*^9, 3.737890497502*^9}, {
   3.737890568049*^9, 3.7378905984700003`*^9}, {3.737890801935*^9, 
   3.737890836358*^9}},
 FontSize->12,
 CellLabel->"In[1]:=",ExpressionUUID->"54b54782-c0ea-4eed-912c-f75c74c0e58a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set up", "Section",
 CellChangeTimes->{{3.7143455389010515`*^9, 
  3.7143455514051533`*^9}},ExpressionUUID->"8ea9f4e5-c859-46c2-b708-\
7d315745f382"],

Cell["In the unit of GHz", "Text",
 CellChangeTimes->{{3.7089783824622836`*^9, 
  3.7089783875985775`*^9}},ExpressionUUID->"0bfa07cf-22b2-4fc4-82c1-\
12fab99d6641"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sf", "=", 
   FractionBox[
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]], 
    RowBox[{"2", " ", "\[Pi]", " ", "1", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "34"}]]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ic1", "=", 
   RowBox[{"Quantity", "[", 
    RowBox[{
     RowBox[{"5", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ",", "\"\<Ampere\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EJ1", "=", 
   RowBox[{"sf", "*", 
    RowBox[{"UnitConvert", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"Quantity", "[", "\"\<FluxQuantum\>\"", "]"}], 
         RowBox[{"2", "\[Pi]"}]], ")"}], "Ic1", 
       FractionBox["1", 
        RowBox[{"Quantity", "[", "\"\<Joule\>\"", "]"}]]}], ",", 
      "\"\<SI\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"EJ2", "=", 
    RowBox[{"\[Alpha]", " ", "EJ1"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"EL", "=", 
    RowBox[{"\[Beta]", " ", "EJ1"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["H", "arm"], "[", "\[Alpha]_", "]"}], ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"precomputeElement", "[", 
     RowBox[{"EJ1", ",", 
      RowBox[{"\[Alpha]", " ", "EJ1"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.708953559345889*^9, 3.7089537340931396`*^9}, {
   3.708953765042852*^9, 3.708953765176115*^9}, {3.708954686754141*^9, 
   3.708954703143943*^9}, {3.708978357676866*^9, 3.708978372005686*^9}, 
   3.7090288410703506`*^9, {3.709032663436978*^9, 3.709032685485239*^9}, 
   3.70905493502884*^9, {3.7090674011789675`*^9, 3.7090674039243746`*^9}, {
   3.7090721757451935`*^9, 3.709072177730397*^9}, {3.7090726085814724`*^9, 
   3.709072612760689*^9}, {3.712056147979384*^9, 3.7120561485474167`*^9}, {
   3.7120570878381405`*^9, 3.712057091512351*^9}, {3.712057579255248*^9, 
   3.7120575798202806`*^9}, {3.7144872238709865`*^9, 3.714487245802241*^9}, {
   3.7144896701689067`*^9, 3.7144896729110637`*^9}, {3.7146602368715043`*^9, 
   3.7146602399006777`*^9}, {3.7146604599162617`*^9, 
   3.7146604705168686`*^9}, {3.7146607966885242`*^9, 3.714660806654094*^9}, {
   3.7146609895015526`*^9, 3.714660993859802*^9}, {3.7146611925411654`*^9, 
   3.714661193108198*^9}, {3.714661412152727*^9, 3.7146614131317825`*^9}, {
   3.7146616050377593`*^9, 3.714661631852293*^9}, {3.71466203147815*^9, 
   3.714662031988179*^9}, {3.714662812253808*^9, 3.714662927662409*^9}, {
   3.714663158663622*^9, 3.714663159898692*^9}, 3.714663281470646*^9, {
   3.7146634336473494`*^9, 3.7146634811950693`*^9}, {3.7146690509506407`*^9, 
   3.714669053277774*^9}, 3.714669892470773*^9, {3.71467021358314*^9, 
   3.71467021445319*^9}, {3.714733281299407*^9, 3.714733283295521*^9}, 
   3.714738379217991*^9, {3.7157099415351534`*^9, 3.7157100120181847`*^9}, {
   3.715710047404208*^9, 3.715710060611964*^9}, {3.7157116280386157`*^9, 
   3.7157116281406217`*^9}, {3.7160540686273885`*^9, 
   3.7160540718785744`*^9}, {3.7160562669861274`*^9, 
   3.7160563029681854`*^9}, {3.7160563628976135`*^9, 
   3.7160563682989225`*^9}, {3.7160565350644608`*^9, 3.716056636072238*^9}, 
   3.7160570607395277`*^9, 3.716057423341267*^9, {3.716057885867722*^9, 
   3.716057886146738*^9}, {3.7161135087831707`*^9, 3.7161135098932343`*^9}, {
   3.7161138013749065`*^9, 3.7161138032290125`*^9}, {3.7162051958513713`*^9, 
   3.716205261358118*^9}, {3.716386394117633*^9, 3.716386419841676*^9}, {
   3.716742421925771*^9, 3.716742447859255*^9}, {3.71674373841607*^9, 
   3.7167437386590843`*^9}, {3.7167446831311045`*^9, 3.716744745155652*^9}, {
   3.7167474407858334`*^9, 3.7167474726576567`*^9}, {3.7194073664429226`*^9, 
   3.719407379264656*^9}, {3.724498122979927*^9, 3.724498125050045*^9}, {
   3.724498162602193*^9, 3.724498169227572*^9}, {3.7244983017541523`*^9, 
   3.7244983358171005`*^9}, {3.7244990138978844`*^9, 3.7244990142519045`*^9}, 
   3.725031178368044*^9, 3.725031851617551*^9, {3.7252143742376585`*^9, 
   3.725214376066764*^9}, 3.7252788031067796`*^9, {3.7252790881020803`*^9, 
   3.7252791322876077`*^9}, 3.72528127284704*^9, {3.7252813265631127`*^9, 
   3.7252813266981206`*^9}, {3.7252829799536815`*^9, 
   3.7252829884381666`*^9}, {3.727350257419738*^9, 3.7273502899405975`*^9}, {
   3.727351197341498*^9, 3.7273512238440137`*^9}, 3.7273516801961155`*^9, {
   3.7273532635156765`*^9, 3.7273533080122213`*^9}, {3.727353881820041*^9, 
   3.727353885899275*^9}, {3.7378892738459997`*^9, 3.737889325215*^9}, 
   3.737890378873*^9, {3.737890878992*^9, 3.737890879207*^9}, {
   3.737891033751*^9, 3.7378910551029997`*^9}, {3.7378915706879997`*^9, 
   3.737891624571*^9}, {3.737901837448*^9, 3.737901837856*^9}, 
   3.7380044247539997`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"b02f79c5-1699-4357-a47d-01fc21ef7a5d"],

Cell[BoxData["2618.9421416573730182793`7.900542288395337"], "Output",
 CellChangeTimes->{
  3.737890016271*^9, 3.7378900558380003`*^9, 3.737890169891*^9, {
   3.7378902572349997`*^9, 3.7378902845810003`*^9}, 3.737890379785*^9, 
   3.737890510046*^9, 3.737890880506*^9, 3.737891056859*^9, 3.737891627883*^9,
    3.7378955928719997`*^9, 3.737899114969*^9, 3.737900421492*^9, 
   3.737900555006*^9, 3.737901839513*^9, 3.7379022409309998`*^9, 
   3.737902419591*^9, 3.7379034389*^9, 3.737903938624*^9, 3.73790409344*^9, 
   3.737905514968*^9, 3.737905684302*^9, 3.737913131973*^9, 3.737914478821*^9,
    3.737919438917*^9, 3.737974060652*^9, 3.737978418877*^9, 
   3.737996029316*^9, 3.738004426098*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"b9f16c2f-a829-4825-b88f-05062ff318c9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hamiltonian on the arms", "Section",
 CellChangeTimes->{{3.7379048416809998`*^9, 
  3.7379048674969997`*^9}},ExpressionUUID->"4905469d-de32-4058-bb2b-\
f92c640f70d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Alpha]list", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"0.1", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3", ",", "9"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]listname", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<\[Alpha]=\>\"", "<>", 
      RowBox[{"(", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[Alpha]list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7379228372320004`*^9, {3.737922961807*^9, 3.7379230152460003`*^9}, {
   3.7379233226400003`*^9, 3.737923336492*^9}, {3.737923421826*^9, 
   3.737923539709*^9}, {3.737923673401*^9, 3.737923744455*^9}, 
   3.737974179627*^9, {3.7379771493059998`*^9, 3.737977151297*^9}, {
   3.737990658086*^9, 3.737990665106*^9}, {3.73800445721*^9, 
   3.738004462369*^9}, {3.73800543317*^9, 3.738005440626*^9}, 
   3.7380068285620003`*^9, {3.7380072118900003`*^9, 3.73800723021*^9}, {
   3.73800876845*^9, 3.738008771865*^9}, {3.738009161723*^9, 
   3.7380091687530003`*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"1488c04b-ad32-4201-aa59-ca2c1baab2ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.30000000000000004`", ",", "0.4`", ",", "0.5`", ",", 
   "0.6000000000000001`", ",", "0.7000000000000001`", ",", "0.8`", ",", 
   "0.9`"}], "}"}]], "Output",
 CellChangeTimes->{{3.737922832381*^9, 3.737922838324*^9}, 
   3.737923017635*^9, {3.737923330915*^9, 3.737923337441*^9}, 
   3.737923430535*^9, 3.737923481142*^9, {3.737923517903*^9, 
   3.737923540244*^9}, 3.7379236794709997`*^9, {3.737923724148*^9, 
   3.737923744936*^9}, 3.7379740660439997`*^9, 3.737974180483*^9, 
   3.7379771551429996`*^9, 3.737978423199*^9, {3.7379906629849997`*^9, 
   3.737990665484*^9}, 3.737996035697*^9, 3.7380044629519997`*^9, 
   3.73800544563*^9, 3.738006830741*^9, 3.7380072306689997`*^9, 
   3.738008772729*^9, 3.738009196507*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"21826583-5ee5-4dd3-9cf1-f0247ebffdbd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["listH", "arm"], "=", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["H", "arm"], "[", 
        RowBox[{"\[Alpha]list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"\[Alpha]list", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7089527386422663`*^9, 3.708952773186026*^9}, {
   3.708952987117523*^9, 3.7089530002113132`*^9}, {3.7089544115672703`*^9, 
   3.708954455193282*^9}, {3.737891404477*^9, 3.7378914261*^9}, {
   3.737891479165*^9, 3.737891504428*^9}, {3.737891743242*^9, 
   3.7378917475629997`*^9}, {3.737891878068*^9, 3.737891920012*^9}, {
   3.73789202934*^9, 3.737892037276*^9}, {3.737892082935*^9, 
   3.737892097708*^9}, {3.7378922137320004`*^9, 3.737892228684*^9}, 
   3.737892301259*^9, {3.7378942274309998`*^9, 3.737894284741*^9}, 
   3.7378943424370003`*^9, {3.737894375132*^9, 3.737894537558*^9}, {
   3.737895007781*^9, 3.737895008844*^9}, {3.737895052966*^9, 
   3.737895079212*^9}, {3.737895166343*^9, 3.7378952169890003`*^9}, {
   3.7378953339709997`*^9, 3.737895334418*^9}, 3.737895403742*^9, {
   3.7378954354300003`*^9, 3.737895475836*^9}, {3.737895521462*^9, 
   3.737895524947*^9}, {3.737900619666*^9, 3.737900680979*^9}, {
   3.737900713559*^9, 3.737900816222*^9}, {3.737900920273*^9, 
   3.737900924973*^9}, {3.737901008663*^9, 3.737901038925*^9}, {
   3.737901285954*^9, 3.737901336276*^9}, {3.73790143023*^9, 
   3.7379014366280003`*^9}, {3.737901558828*^9, 3.737901602005*^9}, {
   3.7379016845179996`*^9, 3.7379017050290003`*^9}, {3.737901833133*^9, 
   3.737901835476*^9}, {3.737902202903*^9, 3.7379022066280003`*^9}, {
   3.737902525795*^9, 3.73790258254*^9}, {3.7379040564*^9, 
   3.737904104493*^9}, {3.737905211903*^9, 3.7379052126359997`*^9}, {
   3.737916348991*^9, 3.737916432533*^9}, {3.737916525575*^9, 
   3.737916582389*^9}, {3.737916612585*^9, 3.737916640101*^9}, {
   3.737916719592*^9, 3.737916720068*^9}, {3.7379167626140003`*^9, 
   3.73791676694*^9}, {3.7379227946470003`*^9, 3.73792284366*^9}, 
   3.738004490899*^9, 3.738005453418*^9},
 CellLabel->
  "In[244]:=",ExpressionUUID->"22cf45a3-2ca1-49ba-9eac-6d27afc99f6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["xH", "arm"], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["listH", "arm"], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], "-", 
      RowBox[{"getEnergy", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["listH", "arm"], "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    SubscriptBox["xH", "arm"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Pi]"}], ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.737901611691*^9, 3.737901629013*^9}, 
   3.7379022150109997`*^9, 3.737902591237*^9, {3.737902649369*^9, 
   3.7379026963570004`*^9}, {3.73790525208*^9, 3.737905254453*^9}, {
   3.73791604355*^9, 3.7379161039969997`*^9}, {3.7379165723459997`*^9, 
   3.737916578007*^9}, 3.737916714454*^9, {3.737916773943*^9, 
   3.737916827112*^9}, 3.737923366801*^9},
 CellLabel->
  "In[245]:=",ExpressionUUID->"f5b14626-761d-4254-a232-ba78fd801876"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw12nk0VV/0APBnfs+csSQkM18hRcjdCVFEhlJkKrPMkVDKmKGM791oEBIN
SETIu6aiZA6JDCGkkpBQfqff+v38wfqsfc6+9+59znnr3WW7s6+FCyOJREpF
v/79PWTMfWBt+xaC9L8/Ffu0K8LnyWL/LDd2+HQAprT9yy0hkX+2i//tnIZt
Sz5xWEron3PK95TkY9y/X62o8iFHRlJancuwjTN7CjDuf77ReqC6FpvvzLc0
ZUcmzgUwlTRhozr8DLas/+Y7mbDKtmFdhZeL3RmRJVRj0527sQaBedvgv5tR
POJTqX4/VhZpT4le/edRlvfPh7C8ubZnqcvIEhpVzE5jWIaN9pk7C8iRYmV3
iiewmKaiTY+/ITvSv9cYTGPBKpvp1bPIKUodx2XmMBvy0pa+8X/5buYwOS9g
xkGnX336iIxXBCYSi5jWaFfQj0HkUQvFjgO/MNGq4g7OHmSV3LyYqnWMS2pb
hEjHv/jq56WiDezv9UQFuTfIQZpJ3I4MMOrmHnOgEbm2x9DgMTN09fSpHaUj
937/7OrLCg2Ywah9DfLi0ProATLkC0tqX3iKvPJ9x4cdnOD26sN8aR6y0PU/
Uw58YLPr0O26O8g+h1lME/jB6E7V4bbsf89nF/bhhQAohGQWfE5HvrgW7gvC
8E3GzE4sGrmzP/D0U1EYSXtBUYpEpgYVrcuIQedfxcq94cgBP4Oe54lDWR+Z
zzoI+WN5vKnddgiObXiVeAZ572PZpftS4Lagcu6G47/67pEwjJUGG/s7kvft
kCdq56U9ZEBrT3hEg9W/+xE/n6IjB38md+/6rY+cyoGxiChBtEHRbVdp5DPd
A1HH1YBIvGAuvn0zESll4ZH4Sw3Wuw4zDogi56xjOlm7IND+m4uxAHJxij3+
WR2cQ3b9p8SE5is+d1HJ1QCs6EXNj1FhItIm9lsCdR9c+H7t7IMh5EwOv1VH
XXi221H89ADy4S42LmUMlBsYo3o7hAkiXX6Y0x1A9MPBQ5V1KG44ZzK+RQ9W
ObsHwm8KE6TzKx5htQawxzIvYTeOLL0gWLrHEAJuBOl8SxcmQGlLiFqZIcxI
C+c4JCKPGBiLPz4IA7p2bnoXkDGFzNQyY3jmN7XEZoPyn05IvbFmCv69q3zp
/ChuKFnJ3mAJVAuzkxk8wkQOx1iPEbcV1Hbm3c3kQNc7KC0sYGsFrG9NVHAm
YUIi/c+Fo8tWcLP5tumtn0JEZA0t8fSuY9DyTC/+fo8QMSqmH9TwygbEbiT8
qUkXInK2PGw1srEHfeER/RfXUdwFMx2usAePzF1JdYkoTtJ9+pvfAcpTh0Tq
o5Bpdz1auxzAOEFZ82WgEEHKts0dKXKEoLDugE5LIYLX8d6st6YzvD4lMj3B
L0SYRx8MU41zAbM7OtgqD7qfloS5XS9coHfUnsrDKUTMm1snBf10geHTefpa
zEIEMRf6pcTRFeY9lO5eXxQkeFu9FTl13UA4WPek1jtBopS+84geswecuebc
dp0qSPiFZ628f+ENf+oelGptESRIzpor3r4B0Da4k3NNQBDVv4n5fkYA3Fwu
d6vhRfks9yySqgNAR5kupkMWJObX80UFWALhwq2epH2/BAg5vw8L5TcDYTls
3R3eCRDAQzZ+0xUE85pHthumIs+Ru3CLEPhU9iP1KEWAWPFWOlRXGA577rL2
JnPwE23ln98XtkeBjmS3cuLKJqKz4XpLjU4CiIZxRyTN8hJJbvp7046nQOdN
VRvXYR5CTtciwmtXOpDyfanDvTxE2XzWohyWDioPH/datfEQunyzaiOH0iHl
ufzRAzU8RKSFwpPdzulg3rf9kMQNHkKJudgjPiUdOnn4dAateIi2FEOrsi/I
VxbEj7RxExMvqUFXsjOAlKBi39zITcROCxXuLMgAlVSfmzo13AQ3s+dSd2kG
pNyZ3az4gJsgiQvErjVngHnt+CZyPDexXhMg0v09AzqXupkaDnATOlzMHy/v
z4QO96efd9dwEWf2SotZDGVC98gvc92nXIQ415FnqxOZ0HdMp9rwIRcRoipq
gn/NhCH95qTj2VxETBqDQtnfTJiV6FcNDeMiphxK6+0lqMD8fjWsVpuLCFUv
4EpyogLZHJts2sVFpIvdNgz3oALHq6gjbxW5CDOPKRdHfyrwVXBu/7iVi/gz
+5aP+TIVxFPFXm6scRIOfhpGlXeooGWsx3uglpNw+21pVzdIBV0iNvRwOScx
dc2fMjlGhf0ab8YtH3ESvpW7U/5OU8FI2qrizE1OIvhs/AzlFxWsGVxPxoZz
EnWcv1kj+Wjg9/xqfqsOJyF9O4t1yJAGBfJdmuYvOIjlzxf/m86ngbvsk/rI
Cg7CO1h7UeUBDRSkUw89ecxB6B2XMPYqoUGxxFE7vtschBtXp2f5cxpUCndd
6r3IQdS/b1GlvaVBC0vXSxvgINJpIiYZCzRIYHpidlWTg4i3HdGbX6aBCUPq
wHMVDkKhLI193xoNutbNZ0W2cxA7JwrHCplwGPzZyTXMwEHkjm/EtfDj8GWs
08qpkZ04LqsyL6aKQ/FI6XBqDTthd81KOUodB7/hFNeGp+xE43HfnH4NHBYH
zM/vyGcnZoqV/5rr4rDe0Zk9Gc1OaLLnVUYfwqHubamUUAQ7UXPE6JGHKQ6R
b1IeG55jJwbLuTN0zXFgeWVOv+/CTgSJhYhXWePAXdc57mHITrhzFTnMOODQ
WVPqlaXLTlTt2Cdj6oxD2vOUxdd72Anj3IXCnDM4CFWYsyrJshOVHQavhTxw
GChTuW4nzk6sJXOf2uuFQ1Yp7+ZkYXZi/6RpxuGzOIg/6pT/xsZORD0zH9T1
x2G8qLRMjMROnHh87aN4IA7591O0zVYoRPA+zYD5IBzk8sxNS6cphAMDTd3x
PA6zOSp9o6MUgmV068mNUBwe3eZ12PSeQhjVPFpPDsNBJavTL6CVQmif8CkM
vYhDvEkw42+CQlhysKf+vITD6N+tGZeqKISBZPXyics4aD6pl2YtpRDEzk3v
Hl3B4fppt8qk+xTCqm5Ydi4KhylBLmP+OxRiq/h/X4RjcNBtKRu8QaUQd6qM
t6rE4vBN6e+fghgKQcnRL5eOx8FwJO/6fxEUYpvAnBDTVRxupxpvLw9C96P0
430b8vKB72Va3hRCaKh79UoCDqbLGfr1pymEsIBZiHQiev5Crb6DthRibsrR
tBx5/eSoW7sFhbDN3R+2MwkHK67Y31aHKMQWJ88NKvIjumLih/0UIvxm6sAs
MnNAl6jzXgoxc/8hi2IyDnZSIcXTKhSixOZrzHHk8j5R8JWjEM3kVhs/ZI6r
DV1L4hSCLfJbxDlkZ2330+HCFKLy+pElV+Tqr1xLjDwU4t1lYbo+Ml/O09ir
rBRCVbniAzeyp8WJzbx/yYTrbM/hZnT9BuaNIuoSmYhis+d1RxapzNfe9pVM
rB0MU/iFnifA49DbvAkU10vPDkBu3TpvrzBEJk4vH3YZRPWQaM+cL+0hE4z5
8VeVkc9Hal/ReEMm9mR7sfui+nWqjfHXNZCJ9Bnr2WxUb7nJ2Hv61WRi4Mak
YkUcWt80JY03T8jEi+nlrmrUnwHj7pajRWTiCce9kUeofyrrIScHcsjEp+GD
NonROMQVb5uzx8mEfGgQdgz1+6NjY8TkdTJRwb2Bc6H1sIffg8c7jkz0s6+4
P4lE6yGkXC00mEysjBZE1EWg9aBwsmnjLJl4OVjyRjYcB+rQhnWsC5k4+7E1
N+ICDgb7D4emW5GJziR/hu/BqL/s4/THamTiEIO15IwP6m9t3FF1BTKROMR5
otIb9df3v0/V28lETKSjcYAnDky951lbeFHc82JgsQvqzy0e0/FvbES6DtEA
tqg/ZhUf3afYCGLz2I1zNqg/jLZ+34fZiJzQWg8a2s8NrgXp621sBN9ld+Fc
Mxy2q+wbFHrIRnzSXyrt1cPBxGKGqpzHRlydqxp7hKF6B2VaGmazEda6vY1B
Oji0V31tO5fIRhidvlrXsxuHC/tv03u92IioBx/iOmRx6LXYyE9TQvGdzFUv
yThsBD10eiDFRtx/QLO5zYyDAu24WIMoG2E7U2/gSkL9+VBC+8HJRjzWeaz6
6hcN/jvjmGD+lZVYf78toX2SBrHn6n25i1mJsLP+4X/qaPCEdlZJpoCV0NN1
PDKCzt+h51tm9t1mJT7sllAsK6eB2l9/57PXWIlPj0Y1FdH5PRIrad3mw0p4
UvSEvDNooIlHaSXsZCUYd7I+V3elwWy1AQvrExZiOqqMMNigwsPUyteBhSwE
qbXUowN9fni7y6eM3WEhjv7kzjGep8JXQa6tL66xEE4zV1l40efPvF+vSpA3
CyGkgLZoPRWWZU7bjcuyEAHCN7Q6IqnAmB75tO42M3FErvPjtsVMaPRYOK9E
ZSbWlW4Xjc1mQjSc0c1KZiaefb9YiI9lAsu3g63nwpkJe7OrWaPtmUA25hlR
OslM7Pzv/vPBwkzg3rjFni3ITPB4XtRPPJkJW71qnEKSmIi010OSoRUZkNXS
YsgVzUSc75v0ID3MABGZPsW8MBRnaGC7mIM8Nr/U7slEMMY8y7ZLzIDNx2US
ZIyZCD2hqbNFjhkgcCC17B0LE9FXk72YTskAzq1uTOqXGAnev9I/dazT4e9r
vnvz/gzEmWwNTv2BVAjEOK08fv2lm0tOZQy/ToaqXW+JpYpVOueWWILFJA5K
Nr0sFX6xTB9qnjihEHUZArVuMOn6LtDJN+IGKXUhkJGxdeiY/QLdKN/BnDsz
BMq/3Sr3NV2gp3QfEtjpHQLLubkudxUX6ObRe342i4TAeY5Hr5inf9CnhfVJ
JqHBcHGoLvGN4w96fONYdKf2OYi/OMF/wmKeXsrkruTTHwCFA65z/vvn6YUl
Ks3KZQHQqjbTlKAyT1fZXdTHnRwA7J+/nqvlnqcPXFoh/jsQACJ3vpVg1O90
997SvTOl/iC9X0Dzbdw3OumXTIpnmh9oxTgYTXvO0SMFYjkdhryhdSXinv3h
OXqKaShLzG1vsPG+yfhOEcXJ74KnHL3hnOX72vq5L3SJF3IH7Ka8oHS7pWq2
zxd6Z1HvmtCiJ8jWGYocCZilE6/s1CZEPEDg139zT0On6X6Y/qUSqgvkeZoY
K5ycpo8eP/X4kqMLqH30LMjRmqZHPhehXFdwAfPm+47Ja5/p4Pq0wot+BhLT
t79zjfhML/UW7hSfOw2MKoJ1Wy5P0f3Oss1fPeoM393Xr1+Kn6ATvrutFLLs
obdYlfeI6wQdxBkGtPfYQ/Wia4qo/gSdFPJWeab7FERHdqU83/hEB2UDzc3c
p0AEL0j9GfyJ7kh1H3ibaAv6r8zT3VzG6ST0UC/zbUCeK5Z/z4FxOkEudio5
ZAPcljXpzNvH6aMjMmSNH8fh/UfpjLtDY3SS6N4SKTgOPsurGR8sx+iOv8jd
FyetAZe+RzXTG6VHLl6JsjliCRFeg0JiEqN0iZrk1kN/LaDZWVz5/doInaiy
0hwptoCTFxaV+QNH6MD4AL5vsoCYotsqcU4f6ZD5prp0xBwG2X7u8tUdohMn
3Dlrd5lCVFO2FrbSTydJJfF95jeA6fa96S5V/XRo3VBpy9eHI+/7vySe76dH
rm2y792jDyLf+G8NrPTRSe4D5UfsD0CpcNKG/+93dGLT6Ox89X4Y9gxvyl/t
oUfKe2QrHdsHeudEtr2pRv7KYhB3UwcKL1Wd+3EBOcaUR3lSG4IyFmV017rp
kTePOzhFaAF7nffV/rUueiTXXwn3Vg3wkay+KbDaQSd9st+m06kGezWWTZ0u
dNAjZRP+XNRWA2YTtY3Hq+10UkvFOF+RKmSfe+B0cO0tncSg1q6cqAItLVky
F9bf0EmNp3vD+5Qgfbiv/2U4clTMue3dimC/wHeV/89rOmnIead3twIsbU38
8uhPK50UXfB6aVQOJH3DSkf+vqKTFHerTO2Whq9RlU5Kl5BD+zVajklBFf6T
L3TjJZ105+B7y/AdYNbgdY6PhMy3O9Lj3XYIF7TTMmBoopNIeQxql7bBQQX8
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
          "]]}, Annotation[#, "Charting`Private`Tag$19113767#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$19113767#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
D/7/93r/A3GUNzQ=
          "]]}, Annotation[#, "Charting`Private`Tag$19113767#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
S9P2/LOt8K0nUcj//T4N/v/3af8D8oO8EA==
          "]]}, Annotation[#, "Charting`Private`Tag$19113767#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJw12nk0VG/4APCxjZlB2fekImuSfCnbfUJlSWQpSUJZokW2stWQLQohu6zZ
5sYkW7Z7k5JCtiQhKSUlshbK7/Y7v9/8Yc7nPM993+d93nvveY8zW5wvWrqw
kkgkJ+LPv28T4w0Gq1vEcNL/fp7oalcHz1Kk/ln15T03OqK85Vu2sPg/62w5
6ZaLbLp13FRG+J9vjCv5ViIbfrf92sX/z14r6m44sn5GowjZ8M9hwWp57chs
d6GVGe2f9VjIvr3ImI4AywkyYfr1/e83vUV6SkLL3VkJj8Xl87mNIS2Csyf8
/4riJPzAilvLJ6SS7kANXyEsHRr6M/crUvC9o+b2EmH4+w1lnUGSbbXP5MwR
JsW4dPjMIRGtpXz3fxCezXz2tngR8VcVxeqn/uVrYiGbfiO2lEWxgXHC7qLv
WlxJYOx7uu3j6L/x7frnr7OC1liP788hwiUxPD8es4NkXfkr7j7CY/N92rlU
4JHZFCL+ivCgrVAccMPf+FhF+Zf/6t2xXsSyEcbc3CMMnhDOpU8J+vBDT9+A
2hGMcPg9kXZ2QWhB9o85NBAW9eN8XyQEhSJbtQMfEqYXnVeRFAO3tnezzALC
aza0YhdpsN1tcrc5h7CFUSaL1xYwyqkz7cgkvGIoEBu2FRQv3yn6kkR4+MVt
BVwGfmw3t5cKJ0zOgpvZCvA+sYmqTCdc15Ng81URuv8q1e4NJhy3Rd9UVxkq
Byj8Nr6Ek/NP1P9RAf/IlrbYM4SfpQQf9lIDtzlVv3RHwnd2XXmvsRtsHXK2
FtsTrkqUiGBRBy2N4JAWa8JmoXSegv/gz8R/u38bEn6skcItshfC95fedZUV
xenSjYEHnQDw2ECLzVuIuLrVi6OzAGs9pqyDkkR8e0Jle+g+8HH44WIsSMSj
nt55y9AH58u7dyizEXG76MAsyf2AlDY1/BwTwekI71iYlwkEzsSdLxsWwUlt
WGWVrCnU/Oe4+fQgYY+vXw+MmIJKC+v1/ldE/pzu3VgrM5B8d9CktlkEhxch
3QdVLGCFu3cwOEsEx7U29cl6WYGGVUHMf2lE/of8Gw9HrMA73VfnRxKRHz95
+eIha/gqK5J7KpZw5teLl3bYwKCevZt+IJF/h/dz+p+jUOP1eZHTlvDOrZfs
B+zgUv8Kf5KACD6W+U3DqMoJUizN7ZI3iuDSl+fMv/5ygsbugrw7XIQlT//k
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
z0a7ZWPDkf/7/Rf8/++//gd9I2qc
          "]]}, Annotation[#, "Charting`Private`Tag$19113767#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
EI3+3/dv4P+/f/M/pzs8Cg==
          "]]}, Annotation[#, "Charting`Private`Tag$19113767#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Zajql5n76UL/LH5jszAO/b/7IeD/74f4HxcJILk=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$19113767#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{(-2) Pi, 2 Pi}, {0., 
        4714.0843604102765`}}, {{-6.283185307179586, 6.283185307179586}, {0., 
       4714.0843604102765`}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737901432389*^9, 3.737901799299*^9, 3.737902384782*^9, 
   3.7379025182939997`*^9, 3.73790262323*^9, {3.737902654625*^9, 
   3.737902697289*^9}, 3.737902747341*^9, 3.737902810151*^9, 
   3.737904127744*^9, {3.7379052434969997`*^9, 3.737905255141*^9}, 
   3.7379055467799997`*^9, 3.737913163778*^9, 3.737914512602*^9, 
   3.7379159769379997`*^9, {3.737916047557*^9, 3.7379160599110003`*^9}, 
   3.737916113807*^9, 3.737916598157*^9, 3.73791667529*^9, {3.737916747926*^9,
    3.737916750373*^9}, {3.737916798347*^9, 3.737916827825*^9}, 
   3.737919469317*^9, {3.737923348802*^9, 3.737923368332*^9}, {
   3.737923520972*^9, 3.7379235307860003`*^9}, 3.7379236848710003`*^9, 
   3.737923746264*^9, 3.737974158233*^9, 3.737974202106*^9, 3.737977249001*^9,
    3.7379785179049997`*^9, 3.737996151207*^9, 3.7380045168640003`*^9, 
   3.7380057752539997`*^9, {3.738006832774*^9, 3.738006849532*^9}, {
   3.7380072382019997`*^9, 3.73800726771*^9}, {3.738008775553*^9, 
   3.7380087893199997`*^9}, 3.738009199507*^9, 3.7380092778570004`*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"f58ee45b-d172-48f4-895a-4ba34f715362"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          SubscriptBox["xH", "arm"], "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "y"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", 
         SubscriptBox["listH", "arm"], "]"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708954806576679*^9, 3.708954829357175*^9}, {
   3.7089548954405537`*^9, 3.708954905734559*^9}, {3.737894629811*^9, 
   3.737894676638*^9}, {3.737894894981*^9, 3.737894998453*^9}, {
   3.737895241594*^9, 3.73789530906*^9}, {3.7378956619960003`*^9, 
   3.7378956914449997`*^9}, {3.7379014446070004`*^9, 3.737901475277*^9}, 
   3.737902218675*^9, {3.7379027109449997`*^9, 3.737902739461*^9}, {
   3.737902789921*^9, 3.737902800737*^9}, {3.737905260226*^9, 
   3.7379052623970003`*^9}, 3.73791683154*^9, 3.737923754217*^9},
 CellLabel->
  "In[247]:=",ExpressionUUID->"f65a3e19-1355-4f3a-a2c2-25d20524d50b"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Vjr/lYqhpgYunT4cvN3BvlX+kYq/DrHEr8Zw0IW68O3pKypa3hIP+ZvNwQL7
+8nv+6hY6Xcnfl8JB3+FRasOd1Nxx8DCDs8qDrKb/rhSnlBRtfq852AHB58P
Xf+t0ULFcN13X5JecZC6yIcwaqSiBe93meKvHLznN1C/9T4VnVFX58QcB4Wz
8j0O1FKRu0w80VOEQLd6j38RVVR8Z1HmWiVL4B/pZ7rZ16lYOKFuL6dNoLlp
ZuPlK1TsTwh6rbKCwDQv+/9qL1Hxg9vaJzVrCaTVPDjdn0dF05+euYV2BIa+
S1g+eJbUx/x/jDgS2CBs1jZ1morBaUMxL90J9PC8Na+cQcVOolT3oBeBJSlB
5/QJKi5RU6+T9CFwpGzpanMWFbu9RXw3BxIIfV+fbk4i68k581MzjMDMhSLf
3fFUfF/9Y+xkFIGvdPcIBMVQcfOSS9a5sQTquqpcOBJBxaAaU7b5EQIj416Y
Hg+hYma3dcxhJoEPi0/3XAigoo5wS7sLi0Dpp07BlT5UZK+rM25mE7hrQlzs
wQFyPPNd0AuCwGvU1uJne6n4tiWNxk4jcMKexfi4i4oP7qL083QCbcLh1YgH
FbvWhr5ryCDwVP5sBL87Fbc9irNzyCTwfdMdaXkXKq6fPD0RSWqDPxHXaFvI
+QMXFVuR+vCilbZr7KkoaFgxWUnaN1v+fm9rS8V7u1+WPiDnl/O/GrvNkqyf
pMO+SNL/3ixvhUPrqXg4PrOjnYyvvF6jMtqUillOqy60kvFPf33rQKyh4n8y
Ywm+ZH4bZXK/5KykYkLI78WVZP5nTLclXV1GRfr1tYvPk/X56CWrck+PihGF
9KUr4wg0zHha85hORZEuv78B0QQm1KQ5v9Yg+1MKVFzCCXz8bsPPn6pUPLqZ
d8u7IAKVRPjZs4up+DRhdKmCH4EHVnKpkopUFH/Z/9/4AQLnU9ZuWy5FxUie
cJd7OwjcVP5v2EKMil+C7m4r2EpgTl9FupMQ2S/VCxYrthB40NU5+cOsOh6V
klrlySCQp6S1lm9MHUuPyiSNkf2WNwG/tX6ro3/o3qVgSGBX/kqPg2/VcXj3
Y9mv6uT3xcHZb3vUMfKj0H6WIpnP9fIet3Z1nF+c3NksQeCJu3ou1vfVMfDX
Ocq6SQ4692k4UM+pY5Sjo9X4Yw4mvd1DnD2hjrPec3mPGzhY+fl8sxShjhVt
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
z6Q2ASehV/qruiAq0V4K9PkmIuXyildLswVwO6XmkIM9E6tHYsP/sQRw7Y+P
N0dimOjBaJaoCxfA+7kffoxeYWJB/y7GFhcBzNHZwBUUSMal4mnFwRIC6LDF
7oVLdTJ2bO9dbzLDjzJdOioP3yVjSDH1Bc8PfgzoHLmXJpKCt9fXip5q4ceM
M1nqdM8UtAr5HFSdzI/tm/6ZMsdS8EvdCpGEUH78kmX25LYyCwnRuIu2e/nx
++eY97YMFj4tovT0refH3WKNPaFsFnr2WphOTfLhNVrRUXHJVJzTSOt+8I0P
J3v2nVBaloqFQb3+aX185Lvewjdpcyp+FQ4oUKnmw/pOgya/o6kYbnaO3yKY
D+/NZlbfmknFrCyVN9v+48Mzv9cwTBXZWD10vjp4Cx8OFl2y1jFk43hRkfdF
fT5sX3lgv7kXG2PEy1oEvvOiBP+Kjv+4bDznvbxQ9QUvblHVq1ndy8Z73MoY
42ZevOHPehP9g40z4TV6PsW8WBz1bH6jHAePvGlIf7KXF2VVw+SW/cfBAmPL
A5+deJErXrU+JZiD3BON5nMWvFjPLaBtSSL5xbb193JVXtzLEWIyCjmoccGh
2U6CF92e3az0reCg1VR7wd4ZHpx9cpJfnOSjlPJnTqde8mDofxlnbr/kYLGw
m+71Vh6c37Tl5MOvHHy0r4/nUS0PTgjwrLL/x0Ehxdc3x87w4A2RgE9tYgRq
h+xOk0rlweBz7+43KRBo9/i9l04ED2Ye3MdlUAkkjnyW2+FKjv+3aODmKgJL
+w/+CrXkwa9p+PC6OYFtRoOP0gx5sGbrEm8dWwJ/ZPifv6TOg4r7jl+mkzwp
9u13ZJ0UD/7+2xJ4xY3AbckD+ddmFrgCPUsulu8k8Kzxly1vXi5w971pUDf1
IlD5wlAFI3uBy1qtd/ZTIIG7tv7bGxqxwA179myrAMm/54UnKZdcF7gLa5x+
l5N8/O7+7MMewwXuydIJ+EDyMzWEN0JIeoHbY9RpdCGRwH00IbrJ73nummbq
5e/JBBb1i/X5PpnnbqgvimpIJfBzhjQn7+o8t9PiAaFB8jzdUt6kgzPPpQrQ
a2VJ3j84tmhw3nueu55n+sOpdDL/q6q5hjbk95abBosyCBzcrbnJS3OeC4nK
JdaZBC6V1Zk9zTPP3XIt5d///28IaNYvb3o3x+WXqrhpRuryWMP/JurmuLze
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
          "]]}, Annotation[#, "Charting`Private`Tag$19114035#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
bXGsFCDX7/giPfN11jQ0We256hi5vrWbvn80N6eh4fu0M4/J9fc85y3va0xD
OepK84y1BJZU0O+Gb6ChdHl0rr4ugVOD722S19HwwJjUfL4Ogec3bI++sYKG
Bz8ebOmnE/jJS0apTJuGjV+0N5UqE6jLbip9xaShzLfD97aT+/XVB4tv35bS
8M0P2XhhSQLn4tZvXylFw9ZXd6VgkIu2Jb9HTcRpuLdAb1d/Nxcvdt1JcxCh
4a/H72Q1XnPRx9kxtn9GFT1b+o0v3+ZiS7beDp/3qtgkOhnkFkRenwWHM953
qOLtiV3fG/dwUfdWSYdLgyrONRql9m7hIvFU28msnMyfL5k2a3HRsYtuQ7uk
St6nr+3VeMvBFmkZo7cuqrhG8UPqYR0O8ik6RjjZqeJObbdeMTkO6qpwnrw0
U0VdmaQNdjPpSCwXX/d4tSoaT+QHd7xOR0drgZXnKKq4fsrqFb9vOrbEjqna
N6hgffJxqWgOG/lSdT1qXqigh8HZT4uD2ah7OjDbqFwFJZNT1Py3sZG4MrxI
56YK8ifmVugqsdHx2SeqWLIKVpzLzfO7moYt422CVWYqKHg6uUPleio2H3jw
ZV35UqxIymN8O5WMbR//Opo8WIr+2Vl3Z3YnY9d2ozKLW0tx8s+PJR83JmPv
5hq2a9ZSHLgjbrXobxIO097oHY9cSj5n3jb5HkxCoZ6pyGcbl6J864Ufb2wT
0dDalGL2TBkZNzLHnv2Iw0LtVgPHCiVclpXW9zLvBOpmthwJrl+MA+1nFlqk
eiBd1/itwi1FHNU3iRf/dwTsnIcyVl5VxB6rmGnhrUFwLPT8VossRSxWuXR9
sDgImp58bziapoi/f1903uYZDBGbcngdBxUxNqZqQXdNCHQ4zxecWa6IUpnB
V8dSwyDx6PPDUrcVkDKgk+n/LxLuXQhYrlGogHVLbd9/t4+C3qeLh4xzFPBd
ifUVs4IoWD0X5BXAUcC3fXFa++1PwMdEtW0NgQoocX293oHck2BwMc4wdZUC
XqsxvnPscjQMl5kLi9yTR4Vm+02v1OLg1unHr0KK5FFQV0hy35Y4OHRAm+i/
Io/hJXvnO8Lj4Lv8QqUKjjx+7XueY9oQB6NHOnRDD8kjbryzzyAkHiY09rl/
0pRHu+nmPq2nCSBwNvpBZY4c/l5Qs6+Zngwv/MaOLc+Qw/LdyyKuWyRDPOw3
yUyXwzQKv4f1wWQQ/mFZfzRKDp80Lvf6+iAZxKylPy53k8PEVVVL4k1TQGr+
sniWvByygiZ1HrqkgtLB8r3hbFlMe7dE77kVGzJfvrRYGC+LvMb6f9rebFii
0aVzNVIWj2xfw7GNIXP/6HiTvyxadn3d+egJGxa5aqRqWMvi/EpJcUVGOsiZ
nb7fKSyLq+XaErxG0uFcbs6Fg7MymDvtpSsgxAHZuVtR/OMy2Pk95529Egdk
ntZarPgsg8foF0e+WXGAsmrmbXyVDI5MjtcszSW/zyv5Cq49JYNW8ksnLhtz
gX0s9Gt9mAz+UCqbKHTggkRXTOOeQBnsu67QZr+XC+Knsy+k7ZZB0W1iauFx
XBATbdP5b6MM3twSuVDqBReS93+kHF8jg0fZAc9/tXJBtGpkXEpHBh9ax6od
6uOCyAlRNFwig5yMu2dpM1wQ/m3kcmaSiqUaE+fWKhIQ72izQWuUirtElQt+
KZNeuu2qUvmFiorSXYlH1cjsF/x1qIuKKyvuejYvJ4+vPdV4qomKbTaltAI9
AgQZ6ffla6m4OCTE0pj0nMDH61GbSqkoc16DVUb6PtaodO+bYiqKaF99lU36
nj+zyiKggIobvymv2GRBQPTfZh3BbCrmGeo9KyR9z7ftPeXSWSq+WZXb0mBH
fn5/eHxlGhX9BF88ve9AwLz05NvqWCpWZq1scHUm4GSAMLpFUDFgw5BLOenZ
uVcy10aDqKjqFpvTS3rX6aJGqaI/FdNKD/Rkkx4u8DasMfGi4r+VhKka6eW/
q+07vd2o2PRsveUh0tM2fF4DbGcqngz/YxNBevty49HxBzZUvDacVmpLenw0
M0X4nSkVr1j9HPlIZrMDl+UFNlLRaDPbQZ/0e8a6e0ztNVRMLVYzJZ+nMCRQ
s85Rh4rmautVNcls1NJtHq5O9vfd0grJ9tzLI9tylKiY1W0ot5jMn/z5fGpk
qeR97lefLtn/OgO5sBEJcj0URQREyfqShbUSZYWo2FwR0Jy5k4C3bRszDGco
SOzOu/LNlYAVuQ6Fe/9Q8NyGczi5jZy/gH2PkkcoGCmdmfR8KwFthuG1dz5T
0Fag1sSc9D5TLK2rq5eCG4L5DeJI7x/rzBmc7aDgr40fnkaQ3n+df3+C0UhB
uf/2UnSsCFA5UitiV0PBqIT9CWc3E1At/kMjs5SCFJmX3SlGBCh2869/XkJB
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
b+Dhi5IHoOdLOHhFtmjON7bcDwCaU7gE
          "]]}, Annotation[#, "Charting`Private`Tag$19114035#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$19114035#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$19114035#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8zkNL868+GcjyUX1NPFD+zpp+IOnQs1Ch4ufA874fm2m4Smr9+62rlzccrg6
4HYTDfO23av0C+Zixe7vJ8PqaVgQUbn3YDIXg4zdosSraPilwupbdzUXX+lw
4l/coKG5+rOCI0+4uE7lRTL3Gg2Fbujkjw1wMU9CIuNQKQ2J85KxfuNc5Ju3
yF1WTMPiloG90/Nc9Ph+hviVT8OyBuVliVIEtr2vLrzPpWHGSxNX/SUEpj3U
vrY1k4Z1QqpTz40InLzjdlMuleyfNf9rcBOBTpc51f1JNKRdtXisZE9gbe6L
+5fiaGh93uVy3B4C1RIlmryjaDjkX354xSECo05bPjY4S8OK/kUvlH0IHPI+
+/RvKA1T4Me2rUEE2rjWdD0MpmGRrJtmSxiB1+wmes+foOGazXdPZkYRSAGd
/p2+NLTT2MBflUBg4Er39yrHaMh8oxy94gKBfXTu0H+HabhavvWMWCaBJvI9
o+UHaVjPOa9nnUtgnqDkRKALDSfPBz4f5RDI+9tyap0zDYVFfu/4c5HAwyNn
Z/l30XBUQyQ1pIDA1tc1C0/tafi+W8DSo4hA3acTAllbaSh5a3L86SUCU+t0
xFysaSim0sNfXkzgzwp3aeYmGt4M4fYKlRDomM+VHzMjz9d6FPGRbK9N61l8
x4SGvV5DjA1kvCRKUj18DQ17XgYWaJD9RQRaMS1W0dCfHd6TUUjgp8PndCT0
aMi67hp1Pp/Mj+NdvR4dGhrhajNZcr7l1j8MCA1yvf3v8nXI9UitXbr2MI3M
368uyZ4cAgOWHjLTXULmv27rqByZjz4VYtPkIhpufqse/ZXM11rJXps6eXI/
BhstuCQRpLOsdtpK0LBTeC1DMYLMx4dzzvIiZL5CctvdThPY8vyu6wA/ef1o
PQu0J+t1oWqpp89fKvm8sJ1WOkqu//IhX8PfVAQHPtfpAwTuZhEBcz+p+Dzu
df0ZZwJVw6TOJI9SMdAmdijFhsBjxU+ULn6mks9fz3sVQGB1R9ytio9UHNvc
pR5vTOAO6sJw5xsq2uvGaXprERjX/N1B5ikV/R9826HIR+CL8fJvtBYqni0U
F6LNcJG6yDNh1UMqGoYn5377xsVar/f1O+9T8Xq/1b9nr7j4XbpbO6eciq7b
ZWu7y7loujbl4eUrVOy08k7nL+Bikvvm/TWXyP52NYz+y+Qis6qJfE2hYnvd
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
luhACPPbxTEOHf//9xTA4XH5/35PofH/AOaTZO8=
          "]]}, Annotation[#, "Charting`Private`Tag$19114035#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt3Hk0lP/3AHD7vq8hyyx2SZskcVOWJCFJIqUs2UMiFJK9smRn5iEkSkIk
4kqWRMmHaFdZkkhFCdXv+Z7z+8u5Z5733Pu+9/3MzMucMxRXf1s3NhYWFi4O
Fpb//bXYJbRjmaKOLKOrHt/K2mG09U7EHI+COjpXX7jN8p0CWpTpQilZday4
2BPU/20dCP3uWlwnpo7ltodv5XzbDs/Ko6s82dRxwtOQ5e+cDTjwLMg8/6CG
M71FsXdmj4JH16u56qtqWCP8/Fbp+EmINbnOcFdWw09D25rOtkXDycElsQxx
VbT8V028fJEGWbZ7Ha8Iq+IUsf3ylt9p0Nx/tSiTXxWNerM9L6xKB64+S50c
dlVULjKz+GifDgUdjD2FP1Qwaeuad7UD6dBdb5xw7T8VfDlVPZbQmQEKuUl/
mjJUUN8qWISLkQk7pd/tvH9ZBY3+tic038uEE5kbUlqSVZD10rjboeFMqEt7
Ldt2XgWrfGXu24hkwa4kbb3OIBXca7zp2eroLAgOHwjs36eCs/KUcf7D2dDj
LPtpTFwFt5jPGBtz5MJepoHRkrAKejb/cTKQz4XB0cNZwgIqSDlgSZPTzYU3
x67u1OdQwZi1byXiPHJh7oRW0eV5ZczRGtkk+CgXpEMMHfWHlNFfUYFojsuD
45dcey9nKWP88K8zftP5MPU0llaarowdK6V5lSwF4Cd67cy9S8qoV3y+q0uy
AE5fmVYbj1PGT758vgVGBZCUF3xB/7Qyxt6wHqpOK4DqsjjD8QPKmJ1x2cp2
bSH8aamo1pdRxqDbdyMLrBjQ+3KtwLKEMmredt9XeoQBBT/rPJpElJF/dGtT
RCADDLRbFQx4lPHulN66zEwGnCn8L2XbLzpSA4bznV8wwKLR4dOf73QMPSc/
83iKATJDb3a0zNIxS9TElmOJAXcFPi0ZTtBR3OtCU78ME36Gr3jCEB2ParZ1
PLRnQmd29EOWZ3RcUAqKCHBjQmYtl1JbLx3T2+7EjgYxYeO0yPD2h3RULP5G
40tlQpCjssmOWjq+Euex9+pggnFIBcF+i6ynbfSE4gATxNLXrrRX0LFg7831
aW+ZUPNoS+3OYjpW/LrsV/aTCXN6VhTTNDr+uexbck+UALT7L4LrIh23W03I
/ZIi4HKAw0hnAh1jeK27BFYToF3uetksio4f+Y6VozIBf9snP3NH0PG853Zd
Zw0CnrzzMe0+TUfl8dS6p9oE+Eqf/mPuT9bHGtO9fjMBBhtWHHi96Tg3NO9L
2UqAwN7oukfudKwRapT+YEjAay8ukSRXOj5YUq0LMibgRlyyt8VhOgacVJEf
MiEgoliki8+RjktbzOU5dxGwuyWT+ng/uV70zhk2SwI+LzBf7N5DR3cfr28u
NgTcE1XeJLCLjkc8Xxrc30dA4pqK1N6ddJRRqt/2YT8BDrvWfkkBOl4w9HXo
O0CAmlud2R4DOnbtoX+OOEjAYtSWq4J6dPwVSGh9dSSgq6Dlb98GOqo8PGFM
dSIg6+4Ox0tr6Si6mXunhDMB7oPdd6w0yXhWUq6djHXn9ogKq9JxbVpHhdZh
AjgF/vN5SqUje2LGdSsyHlR16L6sQMf1qnGVKmRcsuMNzVqWnJfz7c015Ppg
F9dzIlJ0tCqwYMyS+XaGT77sF6WjQ7UW94tDBEhk++imCdJRfdurRD+yvo81
39JseOloE8yxXOlAQAHXUowjJx136byTumNPgL0jW/AxVjo+lnLo8bYjQLiK
z83nDw0D/+5k6yP71c0qbn/qNw1NsKRgyIqAmP1yZmcXaMhtfNAyZjcBW6/T
9OK/0RAza4KfmhEwv6KpnjpDw92HpgMbdxBQZb1RNneKhvy/z24zMCLAo8SA
v3ichkuGGp379AlQWty5UvGeht2FSQnLGwl4uXvPTO0bGmomtixrryUgg7n/
bfMLGq6NyBSZUiPA8ofz044h8vE0yRo6lQAuM3d88oyGP+9pbnwtS0DobEjx
6CMaRpu9crrGR8A643MZUx00ZLmvsKWKlTwPmfGx39vI/IKdhPYcE0qmLp9a
vk9DKfX8nPpXTHDeluPOcY+Gp31Gn42R949UGnFAsJ6GX1p2ri2vYkL/WLm5
VA0NZQ6Uun7NJO+vlEYNtQoa9n7/3t7kwoTld21y68po6JZ9N13amAl1G3oE
9ItpuDjterqEygTVVy9nd+fRUM5ZJHz2DQNGtT++s8uiIVf274chdxmQFzPd
75xOQwHRXZ6dqQwQ0Fip8U+iYcYqyjsDfQZ0RHKUhMbR8FRBJC+FnwFnnwlk
RsfQ0FpkTeHOF4XwLVT+dMYZGjY/Wrx4w6cQKnqVPQtCaDjB+wby1xXCcSXt
g6WBNHzXyeov/6MAnncZbm3woqHqxZoGSe8CSJUz00J3GgbPFNOUKAWwy3+v
/CNXGq6zcNkwMZAPzVJH/r10pOHbLW9db6nlwykvz7mP9jRcHj9npt2bB9ot
Ae+/2JLn4Q1hesQrD4rcotv/WtDQtsY4sCEzFxwbE+u4zWionLdLF6i5ICGY
Xiqyg4bhtJVss/IciKsrjqdupWHjOiORaGY2AE9lqOZmGh6aTLTiE8mG34dq
T2zcQMOH6Rc3PAjNAh/2h7tNNWkY3yiWHrAuE5QP9BrsVSXra00u7om6Am8r
Btc40GjYVFPNKd+VATa248JecjSsr+sQqtucDnxlMyxB0jTcuZ1LOfdoGjz8
vfAtXJyG23rVsu5Fp4JuEdfgRX4aGg4pSWvuugj6T08+2s5Nw4g8qlgxLRkM
/7xuWWCj4TX+t15jkwlgerD2uvMSFePNP5aYrIuFA6JHzq2ZomJcihqGjQaB
k9Hj4PdjVLzExRYp9M8HjvjqemWOko/PxDg8l3cFz0cC+/8MUzFay6ewgmGI
odGNGn2dVOSziTzOyDiNEbfoStEPqJiwx+W/b30RGPXmsuSmFiqyDXfbn12I
woQt7iyFd6hosnrju6a3FzDF49mC9W0qMt6L+mjqJmBqpsE0x00qnj66VB0V
moQ538Se+5RQ8YCpw7HMe5ewQPHsYyWCrGesd2uNUyoSe6ZwMJ+KE6vy+jKs
07D8emulQQYVe77tlhOSysAbwxpFc5eouHXowei/yQys5szKKkmiouGOvD7p
W1ew8ahPtEAMFeuu9fwWUsjClsvDIRhJxdZZhdEbnVn44L6xT3AYFbc9JF5N
u2Vjj4zMgdcBVDxzLqD8R2IOPjGLtUz1oWJwykBKpnAuDpz6un2nJxV5KOxy
MRdz8eWzDq0bLlS8Wbzz+8ugPHz7T4d65BAVR/S//+R/k4cf1hRISxyg4n/I
eUoc8nHiELdgty2ZPz1t/+7CfPycGMgWYUXFD+LxE1wL+Tjb8ObXWgsqWnz4
cTfbrAC/j5vPfDSh4thU9hOLzAJc2q44snsbFW17n4zo0Arxr39S3z89Kv5p
dd04dawQ2RgLD2o3UlGe9xDXY6IQuXqP3PXQoWJR+eOzwi8LkW/p8U05LSqe
/KAi/0WYgUJqm68+VaXiuw8GxWnGDBSzL845T6Ni7J+PmmsDGShXE3p+WpaK
XRILB/52M1Bp9GMoU4qKkmuarp+dYyBdaK/fPjEqljr0tWdKMlHN4N4xbiEq
hnZdDjqux0QtL+WDTbxk//hFXPkOMlEnJ9XKn5OKDS4MhdLTTNzYubyDxkrF
+/3sSXuvMNGAOqCdvEhBvoFncVu6mUiI82/cN0/BezJON7a9YyI7584tcnMU
XFJLNb8/z0T3nxGGH6cpuNflBOHGQWDP5J0dlZMUtKt879YsSKD2i1nzoI8U
jBjScPWWIjCtR9Vq6zsK7u+lrjmjQKDDzVyHx88pmKQvrjWoRWAzY8A5Y4CC
U+Lj2VobCFRM5T926AkFj7ILxP/TIzAmeqcnrYeCAQ7PG20NCZwIjPSd7qDg
X7miQM0dBFocrw+sbaPg5qtiry+ZEXhz/9fT4fcp+MKtryh6N4EiZmqROxop
OLxdaC/PXgKD9Y7G8N+hYJSH/hpVWwJH1PPi/6um4IBKs+oHOwK3yv2Xkn+D
gmJNrWLbDhDIEBBIP1ZOwfTVvxK2HiSQ7e/ObM0SCrIdHH4x6kig+9fIgh9M
CgqemDDXcSLw0Wh9UVM+BRtn9Hu1nAnUGvhadj6bgm9C8s1fkHFqu9qN3RkU
rLU6GK53mMD5uqO3xS9T0PivwydLMj5Qllf/KomC735JccuQ8b3s/5quxlEw
a0FZi0muV0gUaPOOoaCh52TkezJfzBmTzg1nKcgu9Xn1h0MEjnuffbwcRsFj
6tTfxWR95s4N/e2nKChabfJbmaz/htXcUPJJCpra3Zv2IfcnAuqv9vlSUCG3
80zYfgKD1rmOyp2g4PgdaYs9+wh8Ts0f/3icgixu8ZNT1gTqSwx+rjxCwci8
tnZrK7I/nIJzQU4UvGrTZXme7DfrL5OFrQ4UrGnVehZjTmD3i4Z/j/dS8Obe
sI8z28l+PJ7juLKbghK01CeHyHleblbnczIj5+PiHJ6vT6A9M1/iiyEF77s/
tbyynsCx4+fUBbQpuPHPjoo4JXI/9ne1B9UpODJ76l2hHIGVZt82FChT0NFJ
RvUSed4CNY4ZaslTsPPYidcr/ASyzJnusxQg6896aGT5mYnH359zkOChYNya
Q7Hr3zKxa+Cu82t2Ck5UGx8fesbES3c0PH2WlfDej5mt++8ycXW4UGTKZyXs
9T+bfDCGiSdKeqQLJ5TwrnyE36ZTTKzvi6u5+UEJL2ccs3/jwUQbpX+TT14q
4djGy/0ZlkyM6/hqK/pYCTXOpI3cEGfiV+FnalmVSjj5fSGKP5eBBlsutpdd
U8KD/3I2zSQwMMl11+GGq0rozXUi+mooeb/facsYyVfChKin0ZcPMNDBseav
bIoS3jG7uDlAnIEPSjIGmT5KKOd4elPp+UIUfrLXv9pTCfe/ipT7E1CITr/4
+dqOK+H9Ac8Naw8X4q9dsUYfnJRw2v6fLE2vELW+BlfQ95D1TrPH2XwuwMwt
9lHX1yghm1pYMJt5AfYXrHNwf6OIHyPa/1l+zkOWEv+sN4OKmNN7uCjoWR7q
VN4ctOtVRBx2Mwu5m4epjeo2O5oUsUPwRLJIXB5aP6dYKOUqoiLbH3WmYh72
C4sZvLRTxBom+1M7y1zsj/muaNWrgNKsycPJF7PxqWft5KYmeTRKFqXlNmbg
wLtf1oa18hjx8tj+4PwMfG5vcM+0Uh5bMv4r14/MwNc7O1IO5Mvj1dHBHYmQ
gZ+VhteFhcvjyXyG1vrOdOR4sRTevFUeSz66/HjWl4b6u4xFdjSvxv12I+mx
jMtYpv5Mz/q+HI6nm3O6m8SjTl5/QOAjGaTHtAcfeeiBFJ1tL6UqpbF9x2mN
B2fOwOd7JpxctyXxrG69pY7lJahMa+gJKpfEFNH96qXpl8DHUz31PVMSr17+
y7EwcglmJAXl7l+SxJyRGTu622WYCxjUCfaRRINFo4FX21Lhp8oxpw+qknhB
51HVbes0YMuIqm1hSGDf36VL69wzoP3E91CtLAms+svL2RmXAbFw3DDvogSe
josNML6WAZyzZo9ORUjgynGJ4O+TGcCzS/idlqMErv4BNhqeV0DoXyFfvqQE
Nnw5aD5wLBPkvJuOnk4Rxy/qX/52mmZDXne3qWCsOApuZtqcOZYNsirPNa+G
i6O1kfU/kSgyfj+38MRLHGeGouon72bDqgMqSSq7xHH009DVTeo5ILEjrWaI
Uxw/zRjqapL+F5DzYN94Tgw1oyz+aRXnQUpo8KdHIWIo7fdUce5eHvA/j+5z
8RPDc11FYan/5QFfWkF2srMYvpmI/enBkQ883AOaH7eKocno6gHv4/nA+cPA
Ln1RFBtCz5xLly+Avz1ipXMnRTHMPIItLrAQbHJU7kh7ieJMcu9a+QuFUOKm
32HoKopbiw4GX8ouBAsW1/EUW1E84KIm8bepELI23VZW3yCKuyfvjvOwM2AN
sbfs6LwITgi9c4hKZECU77H6hC8iqNCqopWWy4AB/dOdt8ZE8KWCy7GQ6wwI
HWJM/BkUwaQulu3N3Qx4yDerkndHBKMCYm+qcTLB6VTKtYEQEXxy/aKsyCkm
3DImGn77iWD7gZfSmjFMYBOp61LyEMHbXit3RC8zobzi1aTfARF88FKa26ic
CfPvNNT49USQIs55k2OECWY3DfXW64jgJYGiIo+PTMg7Y2t+UE0ER59tGL08
ywSQPON5bZUIbja105NiI0AqM90m/rswDnR2vjIg/d689t7JoQ/CmPKWP2SB
9JJrz/s02n9kXCwbkqJIwM1/OgOttcIYx/lSfR/pLds8h++CJcLo1maQFK1F
+ndjlJjTFWE8YvC2PFmH9KfXU9vFYGEsXGO7UUeP9BXHr0BTN2Fc7/RF+BHp
+VSmQsaV/cK4rDaaqk/67/Wg7386usJozxX8+yrp9xj/zB9nVYRRTbCTN8+c
9DbfffE+KWHUyzki4kb6MshIwO7ELyH0MQt+fMqazLej9cKxCSH8LtW08ZMt
uT+zwAbnISEcYHTWUEm/T1ooTx14KIRD/pK3aKTf71qNyNrWCmG2glLKFOnf
RNtkS8tiIfQwe5AYSPrY0d7wrGmaEM652PY3k37WdPx2C6KE0Ll+6mwn6esV
55L3+v5CaOYYmHyR9Hff0QPimw4LYf57t35h0ucMNz6TtXuEMGp0QG43Gfuf
uB+ibiCEcVn8nNvIGHwDymmaQvi68onsR3K96EnaS3lZIdRvz2vQJ+MPwc/5
V/EKYWvFR4HtZL7a0MRtYouCqBDdsfUHWV9shIG/wKQg/qvXUrY6SMD+qK8E
13NBfLUqIMyK3J9KbPEAS4cgPtO9PDhH+v1X/H6O5VpB/MHFEbuO7E93Mo/u
QrEg8ry+lC+wl4Dcy00eX9MEcVP8pMRZsr9eGX65U1GCGL5DICma9LtBNuXx
R39BjPZRtxYj/S6YP7jy5rAgGjg45GkaEvCWEa89skcQPRadVLvJeVcX6x8Z
MBDEMyeqj31YT0B02Uxar6YgHnQ4eSmYPC+2FUR7p6wgnqiQtAhVJoBWtW8B
eQUxbKeF5KQ8AfO3uVSbFgVwzenj/zVKEpDV6JN067kAvg+mxPiwE+BxX7H5
eocA+u3x4w79zgS9toGZq3UCWFfrGlHwmgm8HRcUGVcF8PV4mfcG0usvu/Vs
ctLJ5zvusaJ6gwmVvdMx6dECyLaRZfJYGhMi+hl1KQECuMI1QesPZoLCCMeq
aCsBhNZXpwY2MeHrq4Zd4dsE0DdwyXedOBPwnVf4KS0BbE9kHLWZZUDaR/mb
/nICqGUd6yLaxQDXyf63J/gEsMznge7eQgZsmD4vcvw3P7oR9KmxAAZwfNU1
PvyJHw/nOURWbmfAtZ8Fpbad/PhDYkxG/mUhhC7tHba8w49pRm3zXkXk69Nf
Nl6zEn60Wdf0YI1bIcix1etvz+DH7Bx9Vm3lQvjCecJnaww/jr01ilz/vgDu
865mbDrJjwuHmBdWcgrgkuDTp2uP8KOisXToLssC0JHctIFuyI+nmmzE7Ery
gVXm03GFNWT+6kb9UPN8GFidn7VqNT/e3s7ePzeRB1eVrLrF+PmxbnDqqdu5
PAimsy4JLPHhdDNry1nRPDBRq9PknuLD8K7l6dcFuSCl5eHMOsKH36/1P5en
5MLdDX24cIcPx6gLJxrFckBH+qK5WBkfXhByvuaYmA3lS5b92ll82M18l+61
mAU5bb3vPEL48NC527uiWzJBpDTFI9adDw1TMgTGJTIhIcHyK2HPh8ekua8H
uV6B03t7/77Q5UP58kvX/7xPh9n1KXE/VfiwpSNSOEE8HdylLIXEpfnw2tjd
hkNb08D+zWN5y1+8aH8sebXkq0ug6/3YoKWBF5dCQrTbmuKgyir54ctrvOgj
y6w9FRcLKut3W/7K5sVPG1Z+PoUYkPrdc0gnlBdvO+87cVE8HBbies4U6/Hi
U/74CGLWCeqKH92Na+RBXz0P+3yTKNSKS4Sr13nQSHPTYe2cGCw5sau7NZcH
LQ/zBkS+isUrOo+GF8N4MKVR2d1vbSIKSCS6SHrxYMWuJ1qbDZMx9pf55DpH
HpQRj1ti0b+IQS3dP730efC+KJpfDk/Fz0UJZ+M1ePD3yl9fSac0dL1gzlUi
y4N9noKXnqxPR1vLbsk3S9xYyBidsW/PwJ61CYW/P3Pj82uaLRcir6CxuLmy
1CtuHLC4FnBVOxPXv+zauLeJG09TLlg/CsnCivvxzd6V3Phz8nORn1A2UovM
dibkc+N7U/4kfUY2inp27WsL58ZxuX2/r1zLwYTd8a/eeHOjr6CicR8lF1nW
mh1bOsSNt8NaxiIzc3FuoTNwgwE3cip8i07wykPPF3FLe7W48d4X+t1zvXk4
2mwa47OaGxunHQOV1fOx/3xnWukKF1713qGc+18+mnvEyTz4woXKNCf2L5QC
RAvTorevufBwu/eOX94FeEu0s1r6PhdyvtqdT5kvQNvDohajlVxo7re2pGVz
If6scPpYnseF9y0sqh1OF2Lur2sRJxO58Nbu8JuatYVosPOHpH4oFyp9UXvh
P12I71INb7F5cGF8b2mggxIDY94kmj/ez4UuUV7jUrYM7A5RCnfawIUaHJsd
e24w0LvdW0KZyoVHX8hyiz0nPS/ScHNGhAu96fQ1z1cYeNuJzaz+HycOiHVu
1qcw0e76ntGzs5xYVKoRfHgHE38t5ISZveHEqo/8XK7HmJhnPCYm0suJKZIT
349GM3H01RmTouucqBEi09LawMTzap1vT+RwYp72wW9W/UxUOSUauj6eE213
Vi9vnWTiozYn0eVTnChTc/S//BUm+giVV7Qf58SLWfe5tvMQKHzox46UfZzY
+umCcZQogTXXDN/YGZPrh4ONJGQJXIQh4QlFTpyXGV7lqE5g/kWl61VCnPif
8eZQWR0CDV96G5/+w4E7usTfW+oS+F6l4ZXRFw702rox4NdWAmOD2E7xvOJA
QeMPYkqk71Rxj9CzRxyYuUbAsdeEwB6B3Gu5d8n1NW1OrBYE+h0cA9drHLh+
UVLg4R4CRcvWvtTI4kCY9BeSsSGw7vuZoB+xHJg1+LaUg/S4g1GnQHMQBw7u
/bCQZE/gcrJoWawrBypp+Y/fciD9OeJktMeGA0Nsr/KcJr27Xbl8RBI40Nzk
5cuPpIfHTv44+VabA01CNpT9Jr0c32LIf02eAz8/0gtoIj2twZ9U4i/Age2E
gYYW6e2+A0Pb9JbZMdzfvdCKjANKlIZZPrPj5s7pg8pkLP7NO+DRCDv+TTv0
roZcX7+tgTe9ix3bVY+n/O/5DyaxXXWsZ8eCql2py2T+led7DGil7FjzO1Sg
iayPScsdms5gx0F3Q3Z90uPGAWN+dTHk9dqDLmdIj483r+WJPMmO2eoiU5Gk
xxN4w4tMjrBjekuckynpcU37Tn2hvewoO1N+ZIj0+JNi0cHn29hRTuxNhBbp
8ZNfnXyZWuwoWrtz3R7S4xIG5Vyecuxo/bv1sx7pccchwy2/F9kwSy+iOoSc
1x9K0kDbJBuWnxw2ebyNQMJvyDvpORuy53u//7qFwAluH4ZcHRveXX+x+OY6
AoP0c9kN/dnQMfW/JGlFAq9ckXttf5gNz5tZsFPI81Q3W1jnv4cNTXxGytgl
CfxZXOxWpMmGw6utHA7wERjKf6OL4xMrpotac2ZPMDHXTZuQH2bFGucW8WMv
mXivtTpUt5MVxebevpruY+Jy0B11zxJWHC9PG95cx8Szr1uSHx9hxQJa0qWh
SCYydLcfH9vLihVfnbOv+jOxNbXd4I8hK+ZmfmDVPcpEFpPuGW15Viwyi9So
JO+/8zef7U1/wYIH988tTXMyMeHsmPhBWxZUZBYFOEcxsHzE/cvJ7Syo/LSx
scOPgY/WTz1M0mHBJd2yhhUnBvJNzpxqFmJBV/ba9hE9BsoyZ28ZZf1rbY70
2mY/W4jK2yX0+uL/tqq8LZ7ssC5E/Qsu5p+8VloP9Gd4rCzk46PFyNLDu1da
c5vKBJJH89HBp4BtSHOlNVk+rGixJx9P7XvR3PZluTVW38z7JDMfqyn71uX7
LbfyD5gpvzPNR9UWU1mrwKVW6ZhPu55fzkOJX2u+1IYttm56oCMTyJ+LXz1X
Lp9LmG81UrAv3lGTiYNV60Ss3OdbKV+/bz6fkYn35t1TV++cb/2c2sxWHpyJ
sVHPUhv//WgdKVCZKtLNRNmcsrQfIT9av7548OFQ4xXc2WWd4eH2vXV9mfxp
4XsZmKNcmrXXeK51z3mHmIrraXj+Yb6+0eJka8f3ZW9GVhI+bzJ4WMHe3zrr
9AtDVAPRRcv0j13aEyO+5GWVFLuT8N7cYb8f45MRz4sy1SiTZDAcjzja9+aT
0dWwdfV/4pMhL7rIV0t+ymg0Wvvz4Z5ksL33+cLn/Ckj9u2zmo+tUuCBZmS9
e+5no+bvVs477C9CsVCxtMuVL0aWZ+5OBLtchvWfF76omswZxZrPt4XeSIMj
ejxBw8fnjNjj17y9+TgNLsXJ/o6LnTP66zfn1f85DT5TjTgn2ueMxG/IWr5R
S4fiQwnyJcbfjJI8SxzEStJBvE/WSgm+G7XyX2d5nJUB87eMbq3aOm+0vKn1
S5RPJvRqbhULcJ43OtP21e5CciZcvaZ7quvcvFE2rbTNryITbJlrtoY8nDd6
rpE4/3UyE25fkuv6b8+CER/bYmPZ0Szw8/319tKRn0ZFIknO9/dmw6TGLSHO
uEUj409XO3ZI5kJLWcVJp/JFo1DDpoWLOrmQRS0brO1ZNLpQJb2mYXcumMoW
5rkK/zbyc/s6WhqdCyW8ySqY89vIVTshd3Y6F458cjcMr1wyGi09Xf6nMQ9e
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
BFr/D9Gfj2A=
          "]]}, Annotation[#, "Charting`Private`Tag$19114035#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RX6uUDmihP///8DgfHkrv9dbk+b/A8qfgUg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$19114035#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> 
     NCache[{{(-4) Pi, 4 Pi}, {-2357.0478386633936`, 
        2357.0435105993843`}}, {{-12.566370614359172`, 
       12.566370614359172`}, {-2357.0478386633936`, 2357.0435105993843`}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737895260332*^9, 3.737895302533*^9, 3.7378953494*^9, 
   3.7378957015880003`*^9, 3.7378991664560003`*^9, 3.737899313914*^9, 
   3.737901507684*^9, {3.7379027120959997`*^9, 3.737902811653*^9}, 
   3.737904133851*^9, {3.737905246693*^9, 3.7379052629379997`*^9}, 
   3.737905548579*^9, 3.737913165815*^9, 3.7379145146359997`*^9, 
   3.737915979492*^9, 3.7379168325*^9, 3.737919471631*^9, 3.737923756212*^9, 
   3.737974161653*^9, 3.737974204962*^9, 3.737977251992*^9, 3.737978520201*^9,
    3.737996153855*^9, 3.738004518117*^9, 3.738005785314*^9, 
   3.738006851082*^9, 3.738007269351*^9, {3.738008777461*^9, 
   3.738008790731*^9}, 3.738009279922*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"4eb20307-327e-4d8d-b39d-e9212cbeea58"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Total Hamiltonian", "Section",
 CellChangeTimes->{{3.737904913843*^9, 
  3.737904954499*^9}},ExpressionUUID->"5a99d994-908d-4150-81e1-531ce0275825"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"H", "[", 
    RowBox[{
    "\[Phi]1_", ",", "\[Phi]2_", ",", "\[Phi]3_", ",", "\[Phi]4_", ",", 
     "\[Phi]5_", ",", "\[Phi]ext_", ",", "Harm_", ",", "\[Beta]_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]2", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]3", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", " ", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]4", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]1", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "-", 
      RowBox[{"4", 
       RowBox[{"getEnergy", "[", 
        RowBox[{"Harm", ",", "0"}], "]"}]}]}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]5"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn", "[", 
    RowBox[{
     RowBox[{"\[Phi]1_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]2_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]3_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]4_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]5_", "?", "NumericQ"}], ",", 
     RowBox[{"\[Phi]ext_", "?", "NumericQ"}], ",", "Harm_", ",", 
     RowBox[{"\[Beta]_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]2", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]3", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", " ", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]4", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "+", 
      RowBox[{"getEnergy", "[", 
       RowBox[{"Harm", ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]1", "-", 
         RowBox[{"\[Phi]ext", "/", "4"}]}]}], "]"}], "-", 
      RowBox[{"4", 
       RowBox[{"getEnergy", "[", 
        RowBox[{"Harm", ",", "0"}], "]"}]}]}], ")"}], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]1", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]2", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]3", "-", "\[Phi]5"}]}], "]"}], "+", 
      RowBox[{"getEnergyLinInd", "[", 
       RowBox[{
        RowBox[{"\[Beta]", " ", "EJ1"}], ",", 
        RowBox[{"\[Phi]4", "-", "\[Phi]5"}]}], "]"}]}], ")"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7378179385014*^9, 3.7378179492293997`*^9}, {
   3.7378184952874002`*^9, 3.7378185573414*^9}, {3.7378995866219997`*^9, 
   3.737899598349*^9}, {3.737899688446*^9, 3.73789971227*^9}, {
   3.7379000170620003`*^9, 3.73790002276*^9}, {3.737900066966*^9, 
   3.737900136755*^9}, {3.737900167718*^9, 3.737900182398*^9}, {
   3.737900274271*^9, 3.73790031558*^9}, {3.737901767541*^9, 
   3.737901783579*^9}, {3.737901898888*^9, 3.7379019159189997`*^9}, {
   3.737901950145*^9, 3.737902013043*^9}, {3.7379030951219997`*^9, 
   3.737903095389*^9}, {3.737904236712*^9, 3.737904277109*^9}, 
   3.737904665656*^9, {3.737918372722*^9, 3.737918392887*^9}, 
   3.7379741685950003`*^9},
 FontSize->12,
 CellLabel->
  "In[248]:=",ExpressionUUID->"c152647a-67b7-4d47-ba23-8bcce28fd3a9"],

Cell[CellGroupData[{

Cell["Fix \[Beta], Varying \[Alpha]", "Subsection",
 CellChangeTimes->{{3.737914895508*^9, 
  3.737914964284*^9}},ExpressionUUID->"e90ec7eb-29c1-426f-ba17-d648abb9c5b0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ip", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "4"}], "]"}], ",", "20"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7379020934379997`*^9, 3.737902159835*^9, {3.737902287484*^9, 
   3.737902355144*^9}, 3.737903396604*^9, {3.737904363743*^9, 
   3.737904386573*^9}, 3.737904461568*^9, {3.737904508034*^9, 
   3.737904553243*^9}, 3.7379046842390003`*^9, 3.73790498071*^9, {
   3.737907121486*^9, 3.7379071223970003`*^9}, {3.737914523454*^9, 
   3.7379145238199997`*^9}, {3.737914773718*^9, 3.7379147827799997`*^9}, {
   3.737915898439*^9, 3.737915898908*^9}, {3.7379752084849997`*^9, 
   3.737975213281*^9}, {3.737996004218*^9, 3.737996004409*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"f4546922-6b78-442b-9994-811c33321bf4"],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt1", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t1", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"zt", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"res", "=", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    RowBox[{"Hn", "[", 
                    RowBox[{
                    "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4",
                     ",", "0", ",", "\[Phi]ext", ",", 
                    RowBox[{
                    SubscriptBox["listH", "arm"], "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "\[Beta]"}], "]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]2", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]3", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]4", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\[Phi]1", ",", 
                    "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "}"}], "/.", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "ip", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"zt1", "=", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\[Phi]ext", ",", " ", 
                 RowBox[{"zt", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "}"}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]ext", ",", 
             RowBox[{
              RowBox[{"-", "4"}], "\[Pi]"}], ",", 
             RowBox[{"4", "\[Pi]"}], ",", 
             RowBox[{"\[Pi]", "/", "5"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", "\[Phi]ext"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"listt1", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt1", ",", "t1", ",", "j"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\[Alpha]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737907081333*^9, 3.7379070989639997`*^9}, {
   3.737907134652*^9, 3.737907195244*^9}, {3.7379072447*^9, 
   3.7379072546289997`*^9}, {3.737907292842*^9, 3.737907295564*^9}, {
   3.7379073292279997`*^9, 3.737907337475*^9}, {3.7379075008120003`*^9, 
   3.737907502916*^9}, 3.737913191933*^9, {3.737913581718*^9, 
   3.73791363679*^9}, {3.7379136824379997`*^9, 3.737913741782*^9}, {
   3.737913862362*^9, 3.73791386276*^9}, {3.7379143833859997`*^9, 
   3.73791439188*^9}, 3.7379147871879997`*^9, {3.73791504117*^9, 
   3.737915054889*^9}, {3.737915363762*^9, 3.737915369966*^9}, {
   3.737915918145*^9, 3.737915937817*^9}, {3.737916001534*^9, 
   3.737916002047*^9}, {3.7379170469969997`*^9, 3.737917053241*^9}, 
   3.737917108684*^9, {3.737917213142*^9, 3.7379172430220003`*^9}, 
   3.737917455209*^9},
 CellLabel->
  "In[252]:=",ExpressionUUID->"66fc426c-75a0-4d9e-b7cd-d9c4bfbaa955"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt1.txt\>\"", ",", "listt1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738059128291*^9, 3.738059149777*^9}},
 CellLabel->
  "In[352]:=",ExpressionUUID->"c6a1c4d7-c240-46b6-afe2-46ca0f9488df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"listt1", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "All", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "listt1", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Total Flux\>\"", ",", "\"\<Energy\>\""}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.737914320328*^9, 3.737914363591*^9}, {3.737914619841*^9,
    3.7379146200629997`*^9}, 3.737923799209*^9},
 CellLabel->
  "In[253]:=",ExpressionUUID->"e98a9a52-b65c-4c99-9a6a-9ba6c61c4ef2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxVUlsog3EUH5OyQoqNlEzumeXyQrHjFt7ceZjLhCiMlCfyIERZo5BLq9VI
WrnMUOg7D0pIIh54QPIgcpspIVn5fQ++Og9f53/O+d2UtfqieqlEIolxlZur
3F0VqMou+VLGsFya4905vEGyqgtt3nUUf2dKF+vKNujb0FY/ZopkRXiN8LC6
Tk+CZ+uNNoJXZt0b221rdP0y06kODufPLMHuqbPTiTKpp+s8jDP8nC+yIxvt
FO0N7E0o+d3g0Mf7rtBab7VRXhbKj8U/QxGJS1TQ9JCwGx3CJe2j224GKyUf
KLJ0s8Hc3HFperXP0x++IE603A6+OSzAI+fjodPUqQoz7vvzyGRfTtTzNO75
8f2VbNVrawz7fdiqylcsq43Y58UnTRnNH5v9mPdgS6Eq4Ezbjfc/QmOKOlZv
bkPfKUzbzC1WeyX+b4XBsAXr1kEaSfCVx+2Pvxpz09DXpKOPeY0J89ivafi3
34PmcB/4SMQH/DQP/OBHd+AH/iTyhz50CH2gH4n6QV/SQ1/oT6XQH/6QA/7A
P3LCP/hL2fAX/pPoP/JBYj6QHxLzg3yRmC/kj8T8/QI2PDMR
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxVUlkoRGEUvpZkKaVkyZLLGDPWLC9omhMSGaWhicmSKUnZSR5sIUqSNJIl
olA8WBokcQ+JJp48DaWYvFgSUgrJlO8+uHUebuc/53ybaGrQV7kIgqB2lJOj
nB0VEJdV9CWqudA2mVRcwuRZflWacxPFOt3TbV0y0/dIY9X4rJI7J00Jcw0S
PUtu9fbSSJ5uDZlaftqnm5eZtoQgBdtrI07bv/foQkzu7rgMZ3dllFfowS4d
662D1gmR9ffVMev5O7TdVzHqZwjjdEsNfR5ZqKDmMfFUFcqdRSrLUOImpZz5
Z1YuBnG8UjhZ0K/RH75A5ivV/XL9CvD48cC8zs18voj7vmyz5y7Fds3jng+L
o2JZj2Ia+73ZuDE1kRdtxj4PbjJ9XJdnDWPelcfSXtOtqb14/yOpFQbNz2wr
+u+S7S03pbLahP87yXfVM3irOYMEfNlqc6/xwaBBX9uMPua155jHfm34v/2u
JN8HPmoBPuCnYuAHPwoEP/CnS/CHPtQPfaAfHUI/6EuyvtCfuqA//CEN/IF/
VAj/4C95wF/4T3fwH/mgGeQD+SE5P8gXyflC/kjO3y83qip1
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDiamond]\"", FontSize -> 10.88, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHPh06v6ys77ADV9ytGI8H6gc+
RPrfzGk87PCnryB16jy1AzXLC2+e8T7s8G4/W96jGNUDT69LcdTlHXJ48GFO
mb60ygGrbE+jdqmDDpcUjetrbiodSDygvu+H1X6HI0En209OVzwgLbh10xWR
PQ7bmuMniIUpHPi/54u07f0dDgGZrw2Pa8gduDK5rXPr+q0OJqfFnROXSh/I
OHa74uC0TQ4Q90keOCXzMOuY03qoe8QOlO6+vsh0y0qo/SIHHq7dIis+eQnU
PsEDkv6qp2feng81n+/ADecVvHsWTIeax3lgVsJq2fmdE6D6WQ4wStu6Vfq2
QtX/2+/YzuqvLFoBlf+yn/t19VWx6lQo/8n+WP3IgsI2VwcGKChdlXvBTsLa
FipvrwSVh+q3l4Dqh5pv745iPosDzH6o+xxmQt0Hdb8DzP1Q/zlIQf0H9b/D
A6j/oeHjAAsfaPg5nISGHzR8HbKh4QsNf4fr0PCHxo8D015I/EDjzwEWf9D4
dUiCxi80/h1soPEPTR8OsPQBTT8OtdD0A01fDp+h6Qua/hw+Q9MfAOJNMWo=

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledUpTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoH4oo5V/HeOerAFXcrxuOB+gH/
CfVqT4D8P30FqVPnqR04MuVnkMWtow7v9rPlPYpRPfD24N/PwluOOjz4MKdM
X1rlgEvhnlv/fxx2uKRoXF9zU+mAhITtnPlShxyOBJ1sPzld8cBn44UGM/QO
OGxrjp8gFqZwINNE7vjBtj0OAZmvDY9ryB3Iun++3+vYDgeT0+LOiUulD7x5
nr3zjdZWB4j7JA+sU1hnXXtgI9Q9Ygceyjhs1VdcC7Vf5ICkT5drtdtyqH2C
B1KFZ+cl/1sINZ/vAEeznNGhFbOg5nEe4NQ53OWyZBJUP8uBkomGT0/8a4eq
/7d/yb+/d3tlqqHyX/bLtV8+F6GTAeU/2e+mf+HmNnMPBwYoeLDkmJp9lZot
VN5eESoP1W/PD9UPNd9+GYr5LA4w+6Huc4C5D+p+B5j7of5zgPkP6n8HGaj/
oeHj8AQaPtDwc4CFHzR8HWDhCw1/hxxo+EPjxyEHGj/Q+HP4Ao0/aPw6SEPj
Fxr/Dm7Q+IemD4dP0PQBTT8OR6HpB5q+HIKg6Qua/hwSoOkPAO9XN64=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDownTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHVu1sYbGfedyBK+5WjMcD9QOv
VeY5hi467vCnryB16jy1A6/L+Mpbdx93eLefLe9RjOqBS/Knd4bcOe7w4MOc
Mn1plQORO38VqPYec7ikaFxfc1PpQIP/FpbKgCMOR4JOtp+crnhg1S51Rh+h
Qw7bmuMniIUpHBDtlJ4zde9+h4DM14bHNeQOVAp0Cmyu2e1gclrcOXGp9IGw
JW4Ws/O2O0DcJ3nggurp6Ia5m6HuETvwo7bS5b3gBqj9IgeMXIWTqpethNon
eIDRuORg9/nFUPP5DlRYvVwgEzIXah7ngSSPfR/u1U2B6mc5cPnuu7LCuC6o
+n/7Uzc/vJh8ohYq/2W/0MPWJ/E9WVD+k/1WHrP+357u5cAABS0/Px2p++du
C5W3F/GEyEP12/tD9UPNt09GMZ/F4RDUfqj7HDKg7oO63wHmfqj/HFig/oP6
38EE6n9o+Dj8hIYPNPwcYOEHDV+HSGj4QsPfARb+0PhxEIHGDzT+HGDxB41f
B1j8QuPfIRoa/9D04QBLH9D04/AGmn6g6cvhFTR9QdOfwxpo+gMAeL01sA==

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyCircle]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHmqIdp937esKBK+5WjMcD9QMd
j3W+sbOcdPjTV5A6dZ7agf/+p44v0z3p8G4/W96jGNUDc+In/5qTf9LhwYc5
ZfrSKgea2915Rc6ecLikaFxfc1PpwLFi2Y/zbY45HAk62X5yuuKBSSu+nfHa
fthhW3P8BLEwhQNXzKuslrsedAjIfG14XEPuwEquf7NY7ux1MDkt7py4VPpA
+i9emU9ZOx0g7pM8oGbxb8Yth61Q94gd6N6j7l+auhFqv8gBWy3jVLv9q6H2
CR4QfLHK6GnWUqj5fAeUxEW+uG2cDzWP80Dyuvn/VypPg+pnOXBRhV95W2UP
VP2//YYb06VvCjdA5b/s73/y7NGCFTlQ/pP9vutOCSVu8XFggIJ3pwyfvXoR
ZQuVt58ElYfqtz8K1Q81394ExXwWhxNQ+6Huc0iEug/qfgdNqPuh/nMQhfoP
6n8HmP+h4eMACx9o+DnAwg8avg450PCFhr/DKmj4Q+PH4TI0fqDx5wCLP2j8
OhyHxi80/h1aoPEPTR8OsPQBTT8OsPQDTV8OsPQFTX8OsPQHAIhhN1M=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptySquare]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoH9Njv9HXwnXLgirsV4/FA/QBD
TfjWO/KnHP70FaROnad2gGNpDX9e8CmHd/vZ8h7FqB7oWXfz/NPlpxwefJhT
pi+tcoBVTmRRRfgph0uKxvU1N5UO9B11XP/swXGHI0En209OVzxQ7uj85ari
UYdtzfETxMIUDlzkWPfnQ80hh4DM14bHNeQOuNRLtfG82+9gclrcOXGp9AGm
kM3PbmrsdoC4T/LAqrnRvo6btkHdI3ZAL4xZbdrETVD7RQ44bNiXIjl7LdQ+
wQOa77c3FtxYBjWf78ANp3Bf3mcLoOZxHvjjkffh1azpUP0sBxL5hXjNovug
6v/tf/dVIsVSuREq/2X/BqfA2Ue686D8J/u9+HLffZju58AABY80g6zLn7vY
QuXtY/kh8lD99seg+qHm239BMZ/FoQRqP9R9Dp+g7oO63+EW1P1Q/znoQv0H
9b+DDdT/0PBxgIUPNPwcVkDDDxq+DhzQ8IWGv4MbNPyh8eNwCRo/0PhzqIDG
HzR+Hfqh8QuNfwc2aPxD04dDHzR9QNOPAyc0/UDTl8P/akj6gqY/B1j6AwDc
ODCz
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 13647.795405588371`}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Energy\"", TraditionalForm], None}, {
        FormBox["\"Total Flux\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-7) Pi, -21.991148575128552`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "7"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-5) Pi, -15.707963267948966`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "5"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[5 Pi, 15.707963267948966`], 
          FormBox[
           RowBox[{"5", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[7 Pi, 21.991148575128552`], 
          FormBox[
           RowBox[{"7", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 13647.795405588371`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], FontSize -> 10.88, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDownTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2426470588235294], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10.88, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledUpTriangle]\"", ",", "10.24`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDownTriangle]\"", ",", "10.24`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "10.24`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "10.24`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.737904708442*^9, 3.737904986757*^9, 3.737905737642*^9, 3.737914368734*^9, 
   3.737914451465*^9, {3.737914599884*^9, 3.73791462074*^9}, 
   3.737914862499*^9, {3.737917159776*^9, 3.737917164525*^9}, 
   3.73791728127*^9, 3.7379184403859997`*^9, 3.7379195200620003`*^9, 
   3.737923927141*^9, 3.7379742368599997`*^9, 3.737977369332*^9, 
   3.737978657507*^9, 3.7379964852209997`*^9, 3.738006047366*^9, 
   3.7380068708120003`*^9, 3.738007309177*^9, 3.738008807102*^9, 
   3.73800935921*^9},
 CellLabel->
  "Out[253]=",ExpressionUUID->"5e126f80-dab1-4393-aa65-8e7727e71f9c"]
}, Open  ]],

Cell[TextData[StyleBox["Find Derivatives",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.737974639395*^9, 
  3.737974721185*^9}},ExpressionUUID->"7c32633e-ac44-4f33-9e6f-bac726fb1023"],

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt2", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t2", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Phi]ext", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", 
               ",", "\[Phi]4"}], "}"}], "=", 
             RowBox[{"listt1", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "1", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                 "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"\[Phi]f", "=", "0"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"h0", "=", 
             RowBox[{"H", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"a", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]1"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]2"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]3"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]4"}], 
               ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "a"}], " ", "\[Phi]w"}], "+", "\[Phi]f"}], ",", 
               " ", "\[Phi]ext", ",", 
               RowBox[{
                SubscriptBox["listH", "arm"], "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", "\[Beta]"}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\[Phi]ext", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "2"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{"ND", "[", 
                RowBox[{
                 RowBox[{"ND", "[", 
                  RowBox[{
                   RowBox[{"ND", "[", 
                    RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]y", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Phi]z", ",", "1"}], "}"}], ",", "0"}], "]"}], 
               ")"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"xyzvalue", ","}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"ND", "[", 
                   RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]y", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "4"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "4"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "24"}]}], "\[IndentingNewLine]", "}"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"listt1", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"listt1", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"listt2", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt2", ",", "t2", ",", "j"}], "]"}]}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\[Alpha]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73790578819*^9, 3.737905817094*^9}, {3.737905928505*^9, 
   3.737905930734*^9}, {3.7379060343719997`*^9, 3.73790605558*^9}, {
   3.737915080697*^9, 3.7379151033570004`*^9}, {3.737915136238*^9, 
   3.737915163516*^9}, {3.7379152018859997`*^9, 3.737915204744*^9}, {
   3.737915262869*^9, 3.737915265118*^9}, {3.737917350358*^9, 
   3.7379173675039997`*^9}, {3.7379173983310003`*^9, 3.73791744863*^9}, {
   3.7379175632139997`*^9, 3.737917573197*^9}, {3.737917777321*^9, 
   3.737917812045*^9}, 3.737917948777*^9, {3.737917993009*^9, 
   3.737917995005*^9}, {3.7379212371359997`*^9, 3.737921270576*^9}, {
   3.7379213273640003`*^9, 3.737921437196*^9}, {3.737921468924*^9, 
   3.7379215051*^9}, {3.737977046237*^9, 3.7379770828190002`*^9}, {
   3.738004914422*^9, 3.738004937666*^9}, {3.738006245283*^9, 
   3.738006273587*^9}, {3.738006884381*^9, 3.7380068941870003`*^9}, {
   3.738009248573*^9, 3.738009256731*^9}, {3.73800976548*^9, 
   3.7380097714119997`*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"7a5beacc-ffae-4c9a-96de-1baaa80a76e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt2.txt\>\"", ",", "listt2"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738059086571*^9, 3.7380591067460003`*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"10e7b32b-c15e-44f7-a91e-0d990b781413"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x2\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyz\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x2y2\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x4\[Alpha]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt2", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.715555019587125*^9, 3.7155550757633376`*^9}, {
   3.7155551108593454`*^9, 3.715555139947009*^9}, {3.727351599610506*^9, 
   3.7273516022006545`*^9}, {3.7273542435197296`*^9, 3.727354244807803*^9}, {
   3.7281387925755587`*^9, 3.728138820592161*^9}, {3.728139436319379*^9, 
   3.728139440495618*^9}, {3.7281406529759674`*^9, 3.7281406795034847`*^9}, {
   3.737918101132*^9, 3.737918114972*^9}, {3.737918232457*^9, 
   3.737918290958*^9}, {3.7379184810559998`*^9, 3.737918525321*^9}, {
   3.737919099275*^9, 3.737919170507*^9}, {3.7379193986099997`*^9, 
   3.737919402597*^9}, {3.7379195434849997`*^9, 3.737919563053*^9}, 
   3.737920967723*^9, {3.737921222774*^9, 3.737921224389*^9}, {
   3.737977128842*^9, 3.737977133697*^9}, {3.737990190083*^9, 
   3.737990194211*^9}, {3.738006906724*^9, 3.738006908578*^9}, {
   3.738009263699*^9, 3.7380092662980003`*^9}, {3.738009776106*^9, 
   3.738009778466*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"ed235432-2ae6-451c-982c-f86a0d1a39dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<2rd\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xyz\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<3rd\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2y2\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Cross-Kerr\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x4\[Alpha]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], "}"}]}], "]"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Self-Kerr\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Alpha]listname"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.737918530818*^9, 3.7379186407720003`*^9}, {
   3.737918694449*^9, 3.737918699797*^9}, {3.737919345267*^9, 
   3.737919351876*^9}, {3.737919555417*^9, 3.73791959533*^9}, {
   3.737919630546*^9, 3.7379197487799997`*^9}, {3.737919789435*^9, 
   3.7379197912799997`*^9}, {3.73791983059*^9, 3.7379199810950003`*^9}, {
   3.737920025667*^9, 3.737920083672*^9}, {3.737922266773*^9, 
   3.7379223096429996`*^9}, {3.737922366888*^9, 3.737922468296*^9}, {
   3.7379743415880003`*^9, 3.7379743703310003`*^9}, {3.737974914842*^9, 
   3.737974928793*^9}, {3.737977437043*^9, 3.737977465868*^9}, {
   3.737990212413*^9, 3.7379902157539997`*^9}, 3.738006350171*^9, {
   3.738006393299*^9, 3.7380064890699997`*^9}, {3.738006531491*^9, 
   3.73800654641*^9}, {3.738006919731*^9, 3.7380069443380003`*^9}, {
   3.7380085316870003`*^9, 3.738008534163*^9}, {3.738009269716*^9, 
   3.738009271826*^9}, {3.738009780804*^9, 3.738009782418*^9}, {
   3.738061838877*^9, 3.73806190294*^9}, {3.7380620234449997`*^9, 
   3.738062041163*^9}, {3.738062406172*^9, 3.738062435099*^9}, {
   3.738062528076*^9, 3.738062622811*^9}, {3.7380627235810003`*^9, 
   3.738062783013*^9}, {3.738062875197*^9, 3.7380628983310003`*^9}},
 CellLabel->
  "In[633]:=",ExpressionUUID->"13fdade2-56ae-4899-9bdc-483635922e11"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
13XLv/uL/78Pgb6m6v+7D/kf+zAUcA==
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
BXX/4rs17UpwFRGr9BIHqpHtohWec88WE0tbnkeXI19iWi5vGCslGjzb8gv/
5SfsQbF1ewWhptllno3cef2D4NpGirghXlOfjhwA3AXfP9PEloDk8rh/8W/T
5C5srSYGds1wBCOrG5jlS7x9QeR4XLLyRa7Uc7Lzq39JaMR+XH36X322RD0g
KmsIUZst3AeQPXTu2mSW1BJqT1WUTZAXtcs5eJ7WERHMqeqt/+qrOWLdkNNA
MDb9sZb6V381kwXrm28IuadJk5/Q98UgKTvq5+23ROKS2u0NyELXuFbssXtH
mB0Q/VaE/PWbc8Y3t2ZCO37WNgo589X6lxrhLYTY3cSrm5Fj/rQylyxvJcxk
7fKlka9uCj34X0IrcapGUo8H+VD6wOCF7DbCRIPt8h/qB2I+2UuLX3UQViFb
hVyQOe/b/Bdu0Uk0XXwmuQt5ooc31a6tk+ivWh2ugty0x01trv89QY0zz39D
/ShsPb5vG/cnQrTiVdxp5Pmv1g3H5HuIG88jV5qhfjfF/VB9t0sPgZGzXfLI
I7I8sZp5PQTFuZZ3DvXTzoOFh7g29RJVYW4nc5ELq1Z9y4IvxO/RN/4LqP96
JLcvH3bsJzwtJociUL92eabu/e5OP2F/+UmELfLht2GdJUP9hIBhb4gisjnP
loxIzwHCNNIpmkL9Hz+fqKkaOEh8GKVGR9F86N1ld9CDNUyk874rUUTzxHAg
4FhT1zCRn2S6bNwJ9ZvgjLNq0l+JgqpPzYXIVmUjoSOpX4nSR9vu70CuVr1S
5Jo8QmzqHkm3c0T5F86UcIwbI1wTL/u7ofm1eK9mXWXLGLH9XX2TErKD6ehG
adFvxLv5/OiBw6i/BGnv+njzG2HAL378GPL1HzWXbKPHiYwGN7BC81BzZGYM
M54gTFZkfFyN5qfTVv4LHScmCJlyYt1bOzZEha39HRYyQZwpGXkfgjyiQPAM
vpggMi7viBu3Res5FCGdZfSDqOBYafAczWvRprV75WCScNe+Y6mL5vv0I+LR
av1pIuJIn2cd2j+8VtUXOXdkmpCV3DJ+AvlOjo5PbeA0cWbnFM2BbMXeoO/7
cpo4wmnjrIP2I4+jJGtbLGaI2Z3pycnmqD5nf3VHOf0kBAumyohdbBhSeSTM
EzZLMHxqTATQfqgy+975w7mzxG6FX6o3gQ0JCtmtTxtmif0Ba5wlkE3Wpqcc
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
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
GuqZn1oWTIeVtm9Dvc5RESswdYteEB2SOX8/Mk5R0SnnOvE3gXRQ+aS4NcuB
iko+PQj9hJ2tuiuywhbnwza9zBa313By/NxyHMdHuxkXiMcryg7SHzxCRakR
K6+nx9Jh45cc9ow5Fb0yqu5el0WHCvUXI+IHqahFHpZqP8D5zxdP3GZIRXr8
GeFurTi/xXG/GVuoaHtl8d0pcQYcn6gwydKlIi05ZkKnEgM+bHyXVbGOikTC
Na7JbmDAcLmyxSBBRfTUq6FVlgz4W5lXtE2WirbcVu46n8aAph5tsVlpnM/N
e858LcX7aerhqcfLqOi3ZZtwYxMD9LS4CnrCeD81ExuL/zDAK7k9fMdvCrov
Y2s4rhEJU95zp+E1Bc2cC/7IGx0JY1tMlP+LoiBkb1Fv6xEFyKLdRzCCgvrt
xK5cCIwCxkWrrtrbFPTY9Gd+JCsKtHLsGXv9KSh1Cgr5H0TBeZmrfw0vUJCp
xpg0YywKhidTu/cb4/HAIsnifDRUSFA3iu2joMPwJJbXNxpC1uZFNu2hoL1L
jLMLw6OBcHq411iPgmiCX96J5EeDc0d9iYkGBU1snHvHGY6G/uKfUYcWU9Cv
42YnZy2ZkCQ4c+PYIgpa4Zi8NdmOCYeP8bk58OLx/LqdN51jQj2v1GH3P6po
n/nlFhN/Jtw7qLsq/qsq0pbds2dlHhOu/fBI/9CgipxDLZdLzDFBbM1c8YVQ
VaR0OFGuJJ4Fz30FMq8FqaKgrbfmDDNYcL1NjB1wQxUlkw13O/JZ8POa/FWm
lyp6vrwkuJ3Lgs46/e1lZ1WRZex6zoVBFqQ5BVTPG6mi/qN38ynabNiUJtgR
IaqKPNYtmU3C9dq2lksNO4VUkdGihsav+P7T/9tbOcmnipoP7g5f28KG/44+
yD0xo4I4e77/jsf37REJO7+1X1VQpYvLjKBgDFwLeLSmuVYFyUYrrVtkHAOP
TroEiN1QQdRy8+KNHTFQyXjjgXxV0COBG8Ene3G98nSXi5unCsr6JaYZOBAD
jbKyR3ovqqCHmkL8DydioKftuWa+rQpS2rqhrkg6FmZ2Knbt36GCXtLCk9ea
x4KeyiutsGll5FicoOHSGAscKVFd8wllVON5qNKvLRb4F+3ZunpMGX2CfSfD
u2Kh8XPJ7ruflVFrl/RU5FAsWBXEW73oVEYz116sNeSLA7ctJ2+IligjRu26
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
+P/v+0Blalzh3+/7/gfVh/tJ
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/+8FoZj7efi/3wv+DwwRgps=
          "]]}, Annotation[#, "Charting`Private`Tag$53172177#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53172177#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt2nk4VN8bAPDsWbKXkGVmzCK+EqUS5q2knaIkqaRQWqikIkrKWiiUZeaO
ka1SJEuF7lGWkBAhCi2WKCT7+js9z++fmefzzJ1z3/Oee857zvNcipO7tbPg
vHnzLuGPf99bt0hvmKJoI/2ZX1cL5HmwNvfy4Hx1baRUru6fg61L6eMuUtFG
adz4qQxstVv7tmkt0kb806sGkrGlJ8rHl8trozLmO3sO9txRo1S2tDZqzltm
GoU9WJtss0NCG8WJr4kJwa5L939yTFAb6TyN5Xtiv1Yc3O81y0JXv3JsjmNn
Xz0ofn2ShYJvJnkdwI62W3uUN8RCBeLSkubYdvNHlBu/sVANv3u7BPYWzyPl
39tYqC/9ksukHA+MO+o8/7SwUHlsSfdP7CXPn9RI1bPQm58dS8qxF2ip+arU
sJALw/F9DvZsRNhSVhULVQsOf+Njd7geu7HhDQsN7crV98auq2802EWykEFi
pKsz9mv2xo6DBSxksvHztBV2shJ1rfczFsrfqmlGw3Ytbx3Mus9Cp8y/TBbL
4ngNtxKveCyks7VIOB17M+/5tncJLPRKsfTILeylF2JSu6NYyD0zbYktdj/D
ykH9OgspTRvva5fhQfudInHdqyz0RLu1j8SundXJX3OZhZih9pU87OzG+fJ7
PFnodby1ywFsr8DX5WFHWahy6sFEjTSOZ0j/fJwjC8UUl1Y+xLY7yKOmObDQ
DtbFtuvYxkaXfV/vZqHQiOm3RtgznSsNJ8xZ6ECZSOjtBTy4vvEB4UJnofQ2
7ecUKR6gMO+dGhQW6hV7MNQnyYPpum2CzUtYKOtB/Opc7HMH+523KLJQsnlf
hzm20wXD/3SFWIixr/WSnQQPiCLh9h+zTHS9PKhLBfuTUGMkd5KJloR+sP4s
zoOdkReHpYeY6MOEnZYDNvtBUcGfDibaLvzG32o+D7wHwk89/MxEp2KmisWx
81Y6ahxpZiIf29mR12I80HstGNBQw0RrbS8aGmAvad20Nf8VE62vbmoREuXB
pNSH5sscJlrGl408K8QDI5v7oStjmahY1m+/KvbZOE+T/igmeuS6QOiNIA9+
0pUSD4Ux0YEXaR3S2M1mDq7rvZlo1amjGbHz8P09ukbE7Jjomnql8bkZAoby
8tOQDROpfO9eJI6tNxO875IVE521uJLPnSYgJUSnqNeCiUya9OHNFAHRSR7X
q1cykVHSaou5CQLONEzKRykw0aXO1E9rRgm4a21lHy3DRLkF+1+8GSGgsPY+
P0aSichnp89sxxat3q4fK8REqV5tzvbDBHBKiR3cvwyUsnG52bEhAt7mrQ9O
q2egO2NCvK39BKjHhc4URDEQrLe1/tRJgLlSu3lRBAMt//B14xXs4zGGN1+F
MdCmouxMGnbO7c8qxQEMdPm7Pt/1BwFbQvVWl51joC2M4cUt3wg4PT/gSrk7
AxEb530+gx0d2FT29gQDWZq6hYlht127uqfqCAPtGz7ipvuVAE+fD2drbRjI
YZW5hX07AfETjJd1VgxUVhMd0t5GAHnBR6B+GwOhov3LnLAlPLUiP25gIKFP
dgcOfSGAd9LrcYshA829dnZc1UpA5QGVnh8KDPR80cXflo0EWPFM2JMy+P78
vMyUjwQ0dBy8KyPFQAtlH3SONxDw5ch9c2NhBtJzzDoRXU/A4HFdfsQwHe1e
cVGZqCXg/CPL8eRBOjLeeiO7sYaAyV8eVi9/0dH6WhtTSWxhj9yZHz/o6PHQ
2m7XagKUvMzsjT/SETnpWvq7Auc/3/GpVR0dXZrKpAtja05cm+9cTUcbx8tG
Fr4lYOnl8ryIUjqSzDiWrFNGgNm1nQqduXS02OWhp9prAo6GO72LuEtH/meT
Hkq9IOBnzXVayh068nBNcfuQj/Mtl+b9MpyOrD3u3L2TR8CF6D5WZyAddQYs
/yOQQ0BovOcN4wt0pLLkWW/8EwJkPt/9bHWOjo6rGG0weIzHR+2FobM7HSU8
z7rx5hEB3MSZrxGudJQUHxVUn04A9ZvGmpQjdHR23RWGdRoBqbT1kS8P0ZG6
5fHTlSkE6Dgf7a7ZT0cVR68GSycTkJUaaNa5l442vJV5/4FPwMqe9JhJGzrq
O3moMJJHwEvtql8yO+nIL3/d8c1cAt5kyCQYb6ajHXVitimxBDRmx45FrKaj
CVVum1IEATOvHmYZK9PRD33hkiFvAt61LJOaUqSj+tE7c2oXcX5Hc1wLZOmo
fHWxz4bzBJjokeom8+kovcYlxdedAG9u/U3TMS3UyUcVT48QMOozfQw+aqFG
jkDe8m14vFdbUixua6FKWSslGyUCvmf/ub1LXAt9MKQyB9K4wBGdvGYvooX8
5Cb2QTIXbO0FPY8IaKHj4s4QlciFtwIKtucnaKjkuuGUWRwXnuxcoRL3k4bE
bP4beBbKhYv9XkkdFTR0Je6B8PrTXFi+/krUz1IaCjPetrzcjQu9MUHXh4pp
aKzn4MFdrlw4YBrrIvyShvIeKtw678iF9TdfLGU9pCH2iZVCQjZckFo6ne0e
SkOWuu6Bjmu4UOornHwxkIbI1w+9LY244FcnFeN/jYae7FtZaG7IhT8X1S5E
edPQx9LTk1v/40JjudnafDcayoIR7RIKFyJVN+kiFxqKvq5jNanOhS3uVmoV
TjQUuF7jmPESLhQucpxrsachp+Nemz8t4gLf2f/N7FYacpNyCbknxQX7FyE5
YptoaF2lhAJNgguKC+6kyG6goXyfVqOXYlwIzEkKoq6loa2jqzSlhLhwUqhk
m4UODfn/PQTmkxyg731nYsWkoaqxrsMG4xxoe9jwnx2NhjYen1/y3ygHdll3
yrip0lBk7S61HUMcMOKLNtySpKGJff69hn0cMK45U7FOjIZ8lugEuP/kgNnM
51cjgjR0aTCeX9jNAYt9zx4cmKQitUf8yzd/cGBrkDpPbpSKvsy7T8p854Bl
bkh06R8qsrRgx6R85cBeOccr//2kIi8/NRGJdg44sKs8v/6goi0dFfRPXzjg
eMrILaaDiubJdnUWfObA0QT+oS2fqUhnY1pwdisHjlVI7ZlpoqL+6XtfPbBP
jl3Y+rSeiuJOhB+Owtd70L+znWuo6HzntpoK3N5F/xdLq8uoSOpH3bYzHRy4
nKml6f+aik4eOF/2Fcdz9UvEwpWvqGhTVYyoM443eI3LPG4uFRWcEspM6uLA
Tde6kZ1PqWjirk6AQw8HImNM+oQfU9EMN3CY2cuB2D/yjSeTqShRLyxw6DcH
OBp+VZqJVNSVIaPwZ4ADiTt+ooYEKlo7dFlxHs5v+gPykUkUFTkVlO+wxPl/
cfikv9Q1KkpNV7p6f44DryKavJAvFV1ArXFqglx4XbT+pOclKvp9ZrgpRZgL
lcrKez97UJFC2KfYdnEutNSV6mYcoiKrsRMKg4pcmFyn0bzNlIqqycuq5vh5
nHUPrZ5bTUXpb1uLffW5IEiMvH62goqsZV37EH5+JSarHqvqUtH+jc95TsZc
UM2+GNCnQkU708zOSW7mggn1g17YOAWJ26SOPD3KhUQFyRU2wxRkuMa7yeoY
F4REzNeoDlLQ3ooz7kMncHzduRsedVPQmssnH5if44Ld4zi7qkYK0jMdjl94
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172177#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 835.7699159934142}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 835.7699159934142}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"2rd\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.738064593807*^9},
 CellLabel->
  "Out[633]=",ExpressionUUID->"2d845973-d686-422f-91b3-397b0a58b991"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Cuqgd3eId0sahf///wLyO6ICr+Un1PwfEPXq3Q==
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3fc+sZr/A3EfmNY=
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VUjT/wA4eQgF
          "]]}, Annotation[#, "Charting`Private`Tag$53172292#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53172292#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
dI7o/v//LcwILvcf89zf9D/i+h1r
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172292#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"3rd\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.738064593954*^9},
 CellLabel->
  "Out[634]=",ExpressionUUID->"bf0d4dac-10d9-4840-92b0-f4e5e789202c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
//8/PTqQOJRsg13//wDybKYy
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
zQl6VA3l6L8DZMgOeuhs8OcDXZ7lRfoneTJ0d2fJhG69p6+EKYe2yZEh5cPI
aGf4e3r1nRQ2XYypq/xxAn/f0VvV/BnbZMnwUzxh8fHft3TmM5e1+0hkwPmG
VX3cHqWb8l2DPzJkWLr21Fn+yih9tO7Ww5sYP8v4wX/p3widW6XhrxTGZq1e
QfwMI/QnP9U+WBDIEL7bQV1/xzBdyDfVvx9PBgO5jMXbUa/ppsw6aYEY81OG
cyZ2vKYntz6UEMe4zN3k30XGIfqZyWh7fxwZRp5rtj9kGqAHPv5LU5ciw55L
LhOrXP/Rd0Yc4V+TJENi6HHFZP5+emP/no1KjL0uS0z2SvTRcZd25Chg/C6C
Vdkd/5JenfHD9vs+MhhHLiewyPbSd7XFO9RjLHetRQUpdtPH2+4qGWCcFf3w
5ge1LjrJiYVDAGOOmJTpUEonffUOG/7TXjIsxLom1Rm306sMGiSjMbaPN52x
NG+jX05yYrbDuDdBRWPlVCs95HeC3CGMy27tnJNzBvpjOlVzRgKrd8mZS8mv
mulNn/7KtGHMj39KeDn2gl5RzWtZgPEqIW6Q5XMj3YtfoOk6xoOk05fR8jP6
5GzkeU+Mq/YfkA3brKf/5hsxt8A4WeHfcB1LHb0g+FaIOsZ+hwcjV3hr6L2/
CBMEjM0VC+T376mm24WIRAlgfMZnoeqlaQVd+/0nJyaM99Juseu4PqS7Mm2H
/9xDholLR5zqw4rpDa/nh79gfO/KyNP9d/LppIN73Scxfsbxc6+uxT16zoao
8luMVYS0+uUj0ujMArbawxh76XH8UbBOoBs5W0UOYjxQq1jD7nSRbt8Z/2cA
42HaY+0j1WcoB+6kx/1v/d5F/S/mOdco5wtwS/9bN6+y79DKu03pXC6OG8J4
sJBf6CQtkyIsUHJmBOMyE1dybcEDinxZse84xgvHWt5r3yykDJ2QbfyMsZyO
RHRPcCnlbc4TyvL/9NG4JG/l9JjCf6STYQvjkSxPz2XpKopx2dxfDsz+9bsZ
zbWiTygW97NU9mAslNbJH8pdS1l/7FJxEGOVO2tuFKZ6yk7/Nhd9jG2TcM+Z
N55S7GLQKUeMQxLNeXq/NlDqYx1jLmL8LObxU6uRJspg2/XiJxiPXXvHKfaS
TlFQzEh/jXE4Yq5a/giUYQa7rnWM72kdYa4bbqWo7137qofli4KmUYXwf22U
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
4NYAvQ==
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
go9drsehZJ0u67aXSbAYSfKfBhy6lSa1bkROhqeqbt8/PMXm3wgOo4bJULRe
6f6+D4eYPsnvzJ1PBhNfmfMjgzj0PmgP863sZKg/L2fVM4VDrE/uttItJEOK
uM/g4y84xKLPKZW6nQznJuuMqHPY+LIqhEtcKcBtc/ho6zIOcarKSL9QSYFg
AwWlKho8elj0Ms4wKgV+6JYXZzPgEb+jwPSbKyngqinIHsGER1PqXdefFqXA
6UM0c4YceHQ2PmbhaWsKjEgHWCnw4JE7X6/7UHcKmEh9BWF+PMrk6OVVeZ0C
iPfltW9ieNQfY/50z3wKPGSnMI5K4ZG2GEudz68UIO954N9JxKMwv4kC/L8U
qKbDfyyTwSMpljO/SIypQNgqMMw4iEffonFKIWypcGuNuTWEjEfR55+P7OVN
Bf4fF3EOynh0Sf+r7oJwKmTPLWceV8ej2m72jT1SqcAyff7fIQoe3fH44ORO
SoWE96NuArp4xDIwT7vnQCpsj+iP0h7Do8L4Z+jzoVQIedWhs2CARxvC+wrW
yamw3Huw7rUJHg3KXQhDSqng3lUs1G6BR6+MTOw6lVPh88N9ySUn8Ogms0ej
l0oq2DUmr14+hUeLf83XDTGP1vx1CLTHo2mD7dvTMqlgWu7db3cOW78+2+mr
e1Oh7/Yn1aPOeFQVZ+cR9T0F2nN6uXi98WjoXKDqYk0K3A7LedpyEY+Et0eV
mqRSQCCA8fDtWDw6tylicnonGbI9w24kX8IjXBWO0/xdMlw6ezb45BU8Mps6
fFQ9PRncj8qQ/hbhEV1/Jkfo9yRQ4HxyWasD628kJZ0mNxGeVaxYdG9i6926
v9GSHg8bvXTtdDt4pCHfvafAJh4Is1gwoScgeDEeqiYeD3F48q+HLARUWIkL
mK6PA43igJx6YQLiSDg2qzMYC/WFq8OFWgS0ZHbxaBlLDHx4yKDxVoeAjEjR
3/TKomHvO55S3mMENOIqLuKuGA3u/IqBWaYExLCPZs7CKgpweUE8SQ4EdJMG
b9CTFwlX09et/OMI6PWZtINrB8Ogp4bxUV0iAT0Vlvsi2xMKay958d9SCeh6
ElPIgTOhgFsiXNmfQUApZw7M06yFYPWP8ppLDgH1nKlVv38lBGL2Hztzt4CA
rI7d8DlODIE6fZvu6UICUnvLkjjYFQwfXF0OiN8moEXuwTvgHQysySF5Z0oJ
qDeueFJWPRjUypP+Xa8goHc65pn5TMHg1lPgNF5NQJNv7Fc2R4Ogh6FV0bKJ
gFYibpdVBAdBTOzGm+M9BFT2h35bvysQam8zaSU+J6C98T9OqucHwiSVv+zJ
KwJK/mYszekZCGrbKsFaYwS06unFcFYwEFbDw3gV5rD+9C6+U4wNAMnrKVF+
SwT0mFmP5p9dAJi3Xftau0xAzx7lnclWDYDa323N0n8IqGFj+Lbwmj+4Bm6e
EGMmIv1fnKGOQf5QczpJmoeNiLQa7Tv1T/rDig7PFhMXEWme2XR4rekPEZxy
d1YEiEjDu/dBO5M/pNc6LnZLE9HfdhuTurt+MJz3/dHDA0R04NtDjdPpfsB/
MSKz7jARCfJQg/NC/KDYME/xmioRbelbdt8z9IOmub5oT30ien7JIFt80xc2
B6wtHI2JqCXXqmTnqy9otUzjTpgTEU+5+Y9TI77Qd2nrGeUkEb2b6D94sd4X
JiQP8XC7EVF5hxf/YW9fkGB+9HW3FxH189b1PLD3Beef+m1bvkS0N07x1k1T
X/hBPW//NZSImrIf9tyT9wW6MwUVbcnYfK6muLdt+sCxI7iI2jQiaugsXJ/6
5ANpMveNSzKJ6J/ERFPrMx/Yt/l8Je0qEW3Xqj5yLvQBUsG2hkMFEbnplIVr
6fmAV9RldutqIrrU6CrjJu8DD5z4p/XriSg7+t83MTEfUFeQTyK3EpGq3HKB
2KY3mAw5DTH2EZGLsQrzfJM35LSulPx9QUTTX1+MrN31hvFb0cHLA0RUt/om
wz3fGxy9rwm9GyOiH+G3esJCvSGQpd+pZpaIXmTpPa5H3lB4VGHTcjcJnZsd
M7wy6QVVNTYFnSwklPz2/avSQS9o3RehIM1BQtcieHCfn3jB6EyX9zY/CemQ
NqXaq7yAI9H0c8V+EoKsgCxSmBeIffeP4T5IQqx+fx71eHqB3Il8kSgyCS3f
dwg/6eAFhoRJG0sNErK/Xxmre8wLEnvcX/4zJqFKHrrpMG4vyJNLd3O1IKFS
b5+7rIxeUJp/n3H4BAnNvXdvdtzwhC7nDVRxloRI+tO3VCc8YYsxscnCj4Sc
Juoqlm95AotPpcWjIBIq0HJfnsnwBMGxlz+I4ST0xOmsrke0JyiXc+//F4f1
d3pwnvWMJ/gfu3OzPJeEVKwrzbY4PSG27qk61zUS2m/My/z4nwdk8s2NR94g
od5297SZOQ+omZXjtigjoSnr289lH3lAh6lFfUcVCXXXLK3plnnA85YgY2Id
Ccm/We+7le4Bc0kdSVstJOS6KHiU9YwH/P7xEefSQUJ3GG+f4dD1AEZb+sdD
QELKBm1bFJIHSJEMtsqekZBNSVQN07I72PeN+Zq/x9pZDv/MCHQHr0N/93Z8
JCE0Rj6BLN0h8qroPcIX7PqLITvzh9zhmqvTzN8lEsqoL/jHPu8GI0y/TpZt
k9C8OD+sG7rBZ1/e3xz00shIZtu+S8INVsZVcyN2SyOvrqEdi3VXYK+MeWXG
IY365/kIDwpdQZSz1KOdRxr5VKwJBni6gmxYLxNBQBo1GhYsf1J3BfVPC3cz
RaTRQ7cH9ht7XOH//2+Inl7dEq4fdYH/AQjIrrQ=
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9zPCWsD/jsa+
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172407#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172407#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Cross-Kerr\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.738064594111*^9},
 CellLabel->
  "Out[635]=",ExpressionUUID->"6ebc1aad-5084-48ce-bf2e-c92229ea2b83"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtmnk01N//x+3GvpNlZt5jHUuyZc9cKdlCSCpEZalsRRTJUh9UiqJCaUGK
VJQtYl4l+76rKGVX9iVZf+/vOb9/Zs7jvM/c+3w9X8u9c2Yox/3tPJgYGBiW
8Zf/vVuY85qsURTh/R3J6CPdCBkUXZolkBQh0ENkZRJnFcrvdFEJRYA48yDL
HoSINw9byooqQtxFc51LOPP+q11RF1SEt4XZUeE4b53UzqbxKoJcyXySDc6z
bVn2+zkVoW6j8vU8vt6goRDjUTZFuMKaLuiFc/uLqNfeTIpgZElieNWF0Cfh
2aPBm1T4YdlV8rkTobeRrhxXV6mw/6pt6OsOhDL/NBXfXqbCubOycafbEUp2
Mjj5eJ4KGok/Kf9aEfrvc47Aq2kqhLiIxx1pQShYbRu9bJIKVEeXtVtNCHk9
jPGpG6WC0l+jD/caEHIiLIn3/KKCd4UN17k6hMyDTtQOfadCjRxFkVKDkP5g
e9DcVypsf7XHMasKIanS163cnVQo5K4bVKhEiEeWGC7RSoWn3y3o1HKENhNu
KFEbqbCzyuPNZgker5f3fyZVVJgqyalRKsDj7ezROECnwuDHJb+oV3i8tL2D
ruVUEO0gK7/OQShLTNog9B0VJlfsf15/iuut/Tabn0mFaA75g04JuF5Ni0eV
j3F/pi3zPK8jZPa41LLpARXef/wmuf8/hJRC7maPJVHhukyEaWYoQtPyNs6k
q1T4Fln5JewEQj/uVHCoRFIhNIzIYueCUNumconeJSp0WJyzZDqE+91DEDwY
RAWroyaa8+a4fzGfam+cpELBH58QUVVcz7za+VQ33C/tk6mf5XE9ro+lnztT
QchwoN+ajPulfSn8kwMVhvzSGlb4ENoY2an5bw8VfHQcM+x+0NDVvTmPPOWo
QHs/InTmAA3BjVBbMoUKsoVx56cNaWi93ZKpT4oKzj6/+BSoNBToOu1hLkyF
h57DkWUbRuh4iOZ2FWYqZNIt7C89M0K0nIryuUEFWPjz6+3a2C60yt3Rd+mh
AhRdtlU4tcsQadtnXt+ZogC/mix8OjBDdC41yHA6SQFOeVmHsbIYogk5sSfH
bijAic4H1xrrDVCfkbPX7lAF2P85xHPCzgAVB4wusTspAGXhvMT6UX10tmtV
MElIASpb0nZu7NdF9+xsjiTzKYBK0Z1T0qq66ENb5tO7XApQXcNHU+LVRWzN
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
+Hr//3969ES/vvp//6f/P5tvQJo=
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mCCliIrSz1ItexD6/+8BUQl7ZEyqK0L/B3A+b8Y=
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
u1ThcX7FBP7//5vI5llqysMEE/gfzHT1YA==
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RUIebcwGpWieQ/D/v59DLkM2Y2LuCP4HDvCaNg==
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
zshaiPKKMcBUHqlm
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
QP9lLNrxOR7ASkkOQ/shKUCZBMmsPwgewKR4sME=
          "]]}, Annotation[#, "Charting`Private`Tag$53172522#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172522#7"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Self-Kerr\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Alpha]=0.3\"", "\"\[Alpha]=0.4\"", "\"\[Alpha]=0.5\"", 
       "\"\[Alpha]=0.6\"", "\"\[Alpha]=0.7\"", "\"\[Alpha]=0.8\"", 
       "\"\[Alpha]=0.9\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.738062538551*^9, 3.738062583255*^9}, 
   3.738062623961*^9, {3.738062738318*^9, 3.7380627667349997`*^9}, {
   3.7380628789630003`*^9, 3.738062913385*^9}, 3.73806459429*^9},
 CellLabel->
  "Out[636]=",ExpressionUUID->"3cad1df9-7fba-4b2f-a87c-88dfdd6ab212"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.737918246744*^9},ExpressionUUID->"37217412-a6fa-43a5-8f5c-c38761a96037"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase Diagram \[Alpha]", "Subsection",
 CellChangeTimes->{{3.737974971333*^9, 3.737974998705*^9}, {3.737975404993*^9,
   3.737975423785*^9}},ExpressionUUID->"5ddef5c8-b972-4641-9cf9-e24edaa3b92e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"len\[Phi]", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"-", "4"}], "Pi"}], ",", 
        RowBox[{"4", "Pi"}], ",", 
        RowBox[{"Pi", "/", "5"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len\[Alpha]", "=", 
   RowBox[{"Length", "[", "\[Alpha]list", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.73797620533*^9, 3.7379762473129997`*^9}, {
  3.737976284322*^9, 3.7379762957609997`*^9}, {3.7379763382980003`*^9, 
  3.7379763511689997`*^9}, {3.73800819205*^9, 3.7380081957860003`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"0f92135d-211e-481a-81ff-046ef142ffe3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"table\[Alpha]crossvs3rd", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"listt2", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"\[Alpha]list", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"listt2", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i", ",", "4"}], "]"}], "]"}], "/", 
            RowBox[{"listt2", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "len\[Alpha]"}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"table\[Alpha]selfvs3rd", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"listt2", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"\[Alpha]list", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{"Log10", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"listt2", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "5"}], "]"}], "]"}], "/", 
             RowBox[{"listt2", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "len\[Alpha]"}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
   RowBox[{"table\[Alpha]crossvs3rd", ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
       "\"\<\[Alpha]\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"1", "/", "2"}], "\[Pi]", " ", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "6", "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Phase Diagram lg(Cross-Kerr/3rd)\>\"", ",", "14"}], 
      "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Mesh", "\[Rule]", "1"}], ",", 
    RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"MeshFunctions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Boole", "[", 
        RowBox[{"Greater", "[", 
         RowBox[{"#3", ",", 
          RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"ColorData", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<TemperatureMap\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}], "]"}], ")"}]}], 
    ",", 
    RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"table\[Alpha]selfvs3rd", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
      "\"\<\[Alpha]\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], "\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "6", "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Phase Diagram lg(Self-Kerr/3rd)\>\"", ",", "14"}], "]"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "1"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"Greater", "[", 
        RowBox[{"#3", ",", 
         RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"ColorData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<TemperatureMap\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}], "]"}], ")"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.73797580141*^9, 3.737975818946*^9}, {3.737976069203*^9, 
   3.7379761658900003`*^9}, {3.737976198626*^9, 3.7379762012019997`*^9}, {
   3.737976278546*^9, 3.7379763261540003`*^9}, {3.737976358067*^9, 
   3.737976381625*^9}, {3.7379764999*^9, 3.73797650185*^9}, {
   3.737976617804*^9, 3.737976625043*^9}, {3.737976692995*^9, 
   3.737976739178*^9}, {3.7379767719300003`*^9, 3.7379767929779997`*^9}, {
   3.737976850282*^9, 3.737976872026*^9}, {3.737976912866*^9, 
   3.73797691445*^9}, {3.737976956859*^9, 3.7379769579779997`*^9}, {
   3.737977316083*^9, 3.737977323498*^9}, 3.737977556731*^9, {
   3.737977657102*^9, 3.7379776587869997`*^9}, {3.737977798851*^9, 
   3.737977816033*^9}, {3.7379778634449997`*^9, 3.737977864707*^9}, 
   3.737978381763*^9, {3.737978732571*^9, 3.73797873529*^9}, {
   3.737978786091*^9, 3.737978818499*^9}, {3.737978870899*^9, 
   3.737978908058*^9}, {3.737978963587*^9, 3.7379789717139997`*^9}, {
   3.737979024594*^9, 3.73797911101*^9}, {3.737979141788*^9, 
   3.7379791501619997`*^9}, {3.737979267949*^9, 3.7379792693780003`*^9}, {
   3.737990362604*^9, 3.7379903697460003`*^9}, {3.738001643547*^9, 
   3.73800164677*^9}, {3.738001683811*^9, 3.738001741262*^9}, {
   3.7380067942679996`*^9, 3.7380068005950003`*^9}, {3.738006953028*^9, 
   3.738006957139*^9}, {3.738006990523*^9, 3.738007018116*^9}, {
   3.738007056459*^9, 3.738007110858*^9}, {3.7380071783389997`*^9, 
   3.738007179627*^9}, {3.738007507723*^9, 3.738007516034*^9}, {
   3.738007569483*^9, 3.738007663098*^9}, {3.738008044365*^9, 
   3.738008113875*^9}, {3.7380082310360003`*^9, 3.7380082685550003`*^9}, 
   3.738008501932*^9, {3.738008560028*^9, 3.7380086016289997`*^9}, {
   3.738008652093*^9, 3.738008657075*^9}, {3.738010081998*^9, 
   3.738010109508*^9}, {3.7380584103710003`*^9, 3.73805841217*^9}, {
   3.7380596222279997`*^9, 3.738059662611*^9}, {3.7380600764849997`*^9, 
   3.738060126212*^9}, {3.73806033527*^9, 3.738060346343*^9}, {
   3.738060416994*^9, 3.738060466634*^9}, {3.738060502084*^9, 
   3.7380605030179996`*^9}, {3.738060577884*^9, 3.738060633924*^9}, 
   3.738060671293*^9, {3.7380615645959997`*^9, 3.738061568435*^9}, {
   3.7380615995810003`*^9, 3.738061602692*^9}, {3.7380616397*^9, 
   3.7380616404110003`*^9}, {3.738062937132*^9, 3.738062942363*^9}, 
   3.7380633409309998`*^9},
 CellLabel->
  "In[589]:=",ExpressionUUID->"b378d9d1-f660-4e5b-bd70-2b26059dc113"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxlmG2oZVMYx8/oeDlMpw67c21TJ9uc2eYoSXOLGlorL/FRk4SZjJc7jJrw
hQhN8YEvjEgi+TCIiS+aUij7flBmGhQajOvmXvugjby1Q8Zc2tf5P7fnd/eX
6d991vnN2uv/f9ZaO7v5zi07jmu1WpvXtFrNv6efe9nVR7PR7PSm5vk0SD/3
bPMcMd1afhaCry9N33Zr83yH8ZXpDz9onp/CyTd8ue3KhbONJy2etHi+vjQt
nh9fmRbvn8fv2vH0C7nxpMWTFs/Xl6bF8+Mr0+L9XJxwxzfbNhhPWjxp8Xx9
aVo8P74yLd7Cr8/fc966ofGkxZMWz9eXpsXz4yvT4n2Sbdr9wJGzjCctnrR4
vr40LZ4fX5kW770tBx85+ExmPGnxpMXz9aVp8fz4yrR4bz68/Yn+NWcaT1o8
afF8fWlaPD++Mi3eVbf/eP77GwfGkxZPWjxfX5oWz4+vTIs3fWjq0pteXmc8
afGkxfP1pWnx/PjKtHj/5z9Ff0nRX1L0lxT9JUV/SdFfUuS9j7z3kfc+8t5H
3vvIex957yN/CfKXIH8J8pcgfwnylyB/CfLQQx56yEMPeeghDz3koYc89ODP
LvzZhT+78GcX/uzCn134swu/dOCXDvzSgV868EsHfunALx2sXxvr18b6tbF+
baxfG+vXxvq18T6XCv8+lwr/PpcK/z5VX5r271PjK9N+fnXh51cXfn514edX
F35+deHnVxd+fjV4Y/DG4I3BG4M3Bm8M3th4rckjnrR4LfcsoL40LZ4fX5nG
/ALmFzC/gPkFzC9gfgHzC1g/8GrwavBq8GrwavDqAH8G+DPAn8bz9ebPAH8G
+BPza0fkLyJ/EfmLyF9E/iLyF9FfIvpLRH8xnq+3/hLRXyL6S0T/jOifEf0z
+vfZjeifEf0zon9G7A8R+0PE/mA8X2/7Q8T+ELE/ROx/WL8E65dg/RKsX4L1
S7B+ScT+bjxp7O/G8/W2v0fs78aTxvkFfknhlxR+SeGXFH5J4Zc04nxmPGmc
z4zn6+18FnE+M540zp/w5wD+HMCfA/hzAH8O4M9BxPnaeNI4XxvP19v5OuJ8
bTxp3B+Qhwx5yJCHDHnIkIcMecgi7kfGk8b9yHi+3u5HEfcj40nj/of8DZG/
IfI3RP6GyN8Q+Rsab3L/NJ407rfG8/V2vzWeH2/3W+Q9R95z5D1H3nPkPUfe
c+Q9N97k+4HxpPF9wni+3r5PGM+Pt+8T6C8j9JcR+ssI/WWE/jJCfxmhv4yM
99XW4vhf/s1n9Xu3vPLH0hvH8tnln/t9Iby6+9Cfd+9b+V6h7xtrmvJd8+Gk
o/ddfOLalfH6+/L47mL4dnTd3A/1yvcHfa9YHv/6517PzIW/v3/wqVMfWv39
otH7Zw6HGy+Yeee3R9fb31/8+IrPLn93fdzZTHftYfHsfU3q7X3u2XP/ObG3
IX7UTP+MOef/5vcn87XxL+18bGrj3on/LvxC/79Vftd8vp7fN3z7r9V+1/z2
X3Rs1yVTE79duxiuH9x74K3TJv54bT5M731y0O6t+Mn585R579/Ni+E/vNe4
Vg==
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
           "]], 
          PolygonBox[CompressedData["
1:eJwtkVkKwkAQRCcSFEwQN4wIivseTdS43sIjeAC9vf6pr0l9PKie1FQXk8Hj
dX8WnHMd8OHsOdeAJlxgBWPOe7A0DW10HSboKUTorr7bbF7zzNEDCNBl6KOH
8tdg5OUZlmUe8ybwRX9gjd7Cz+VnMXoPvjyJ+lhWpH0LL+9i80z7quiWZutg
XaraHyvLMg9whKJ22u5McwhXL+9k3d6w0R27G8AOUnmLyrpBBUpwkieQJ1Vm
qDc/y1PS/Uz/oKkMy/oDVwAW4w==
           "]]}]}, {}, {}, {}, {}}, {{}, {
        GrayLevel[0], 
        LineBox[{297, 295, 290, 291, 288, 289, 293, 292, 296, 294, 298, 299}, 
         VertexColors -> None], 
        LineBox[{302, 300, 304, 307}, VertexColors -> None], 
        LineBox[{308, 301, 303, 310, 305, 306, 308}, VertexColors -> None], 
        LineBox[{309, 314, 312, 313, 315, 311, 309}, VertexColors -> 
         None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
R3U+4v8DvngP2A==
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Alpha]\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-7, 2] Pi, -10.995574287564276`], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"7", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-5, 2] Pi, -7.853981633974483], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-3, 2] Pi, -4.71238898038469], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
          FormBox[
           RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
          FormBox[
           FractionBox["\[Pi]", "2"], TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[Rational[3, 2] Pi, 4.71238898038469], 
          FormBox[
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[5, 2] Pi, 7.853981633974483], 
          FormBox[
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[7, 2] Pi, 10.995574287564276`], 
          FormBox[
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     FrameTicksStyle -> Directive[6], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram lg(Cross-Kerr/3rd)\"", 14, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
      0.30000000000000004`, 0.9}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJzt1Ps31HkYB3CKSoNKd7cWncoal1WbVNu7sRXadlMuKRVFJJdIahGaELUq
ku1GFAqJSpdBMkouGZNRk7vcjZnvfD+1SnaFnf0f9sf54TnnOa/zOed5zvN8
Ph+9/Ye3H5isoKBQIwtFWfyX5wV3H3lm1Q9O0BRJprsIypxDovuqBPa7HYf3
6A0gt2d+QcKsQbBZC8O79AlGrapDJiYGkGpvGHSibBBjr6tmaVgSZBquGUvv
ECHh5WqLg35ihDgcu221lWDzzPyTVqWDOLV8y6i9lgRf2hevCTpAkLdT9SUV
KsbsYW8q/L4EPRw9hfm/EzgoliZ+YUhwvcvSz2AxhRoHzX1UjKxutp/beIoE
+nUqdPVlCgUfNV6UJ8nq2umaTjWhkMtp9vdnSJEczzC4fJNgywh/bEYZBfPM
HDI7UoqwZUrRvgUEQ2mRvAV2UhRdCAko+kuKfRXfelmlBCnWZtf1uqRghdl+
2utJw9rty8b5tQScyVTTxqU00q68CIy6TsM+u/U1M5DAQ/9MtJoHjVVtZg2N
1TT6s+CweTrBTNYSM2E6jYZFaebMYRrHMzLavTJoPHN92ZrSTsPHXS3ppAHB
tJtTvWLW0vCKcIv10CRQuhM29M6O4PoNn4+3hFLMTh0zZ+4guCEetDeMIGCm
vAnh+kvRZmaw6GAUwX1GpntMKgGlleDT2UJh6qYr7N8SCWqtvD9syCDYcXZr
VfRnCcxd1HpXpBH0h5i4KOUQcEfUDQzVJdgTcGqT1j0CxQdD71/mExh58SPq
looRF/M1W7GEQFvE2R71iCBZeK4lkDWIwmu+DFE1gcWiCL5VMYHChl9XznMR
oaOgy4//nmC708+bJ3EJvB+qXiw+OoA4dbYBW+YnGQ8P/C0772ur3iSc04/l
ZSNHld8STH6iZXK6kCCwb1vN06u9aD8cUHnmDUGMW8ywRh5BEDu5+KpuD+K+
E81X58nmxSDP0zIJjus03w3L6IK5wNX7oqyfs4+dY5myOZwo0k7ds6wT7ezG
4nmvCNTcXmwtSiaYyOVqR+5qR6pzcMKTxwSFrtWKQx4EhoZU3i5hC3baLjcV
xxIYPMuSBL+m4ZTQdzc6sBlzV3+q09lFkLQgSjhiSuPU147cfLUm1H9f4LuN
STAp2K0sLFmKe3ubcppy3iNey48RM07jiOCnnPF/KLS8EmRP2iSEjapRLqee
RpexVhLbTbYn49o7zO63UBoT2VC3aNidHTmhVCnb06WK204RDeiLihfTsvtX
lHaIOfeDGM3+rUu7hQJc6G/Ln7eExj2/zqrx9kHwdn+zjvMTwNLWOGhdnxTp
a5zcRW0iPN+sc9BEWYCeu+EWnplSXFLhjQtaB/Bg1bq4dyn1OKfOHz3nLkVs
I+taSUs/Mpa4ZoeuqIdFoC73sb4UoVlPf8xq7oORoUIi68obDPUaex7qoeBk
vr+qurEXJRsCb2jX8mEhaCwfzaEw8wel6ImGHkxXKc3wYfBxopStcy6AQq3p
7fUr+d1wrpuWU/xLHbg5RiG6FhRiTGzGfGu6cCfRIV8lngflP4XvCsYkWG8s
Lsqo6MSwY3qhM68WtqcizVgVsv9ixwLpo8gP2KBJce6o1uK8v2F8w1kJvB13
e+ofa0dSh8Xz4S2vUbKXO7jfUYLBvItpZU9aEG3Tfz72TA3+CHft7tGToHzh
53jNtEYsE6RYWldUwyVlvMWDFuPqacfQ4Nh34O20750yUQWjktS3fcViBAw9
8ao/LEBAt8qFSssqjDav5XnGipHINct1us/DHB+u5emjlagdaa0YsBdj/bWh
aFV2JThDx3o3FrzC3GqKGSp7T3NcWG81jMrBmvHYb4Gy3OUud7nLXe5yl7vc
5S53ucv9//Z/AcC97zo=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.500000000000001, -112.50000000000001`}, {
                7.500000000000001, 112.50000000000001`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -92.64705882352942}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -92.64705882352942}]}, {{
                    7.500000000000001, -48.52941176470589}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -48.52941176470589}]}, {{
                    7.500000000000001, -4.411764705882353}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -4.411764705882353}]}, {{
                    7.500000000000001, 39.70588235294118}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    39.70588235294118}]}, {{7.500000000000001, 
                    83.82352941176471}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    83.82352941176471}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.500000000000001, -103.6764705882353}, 
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -103.6764705882353}]}, {{
                    7.500000000000001, -81.61764705882354}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -81.61764705882354}]}, {{
                    7.500000000000001, -70.58823529411765}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -70.58823529411765}]}, {{
                    7.500000000000001, -59.558823529411775`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -59.558823529411775`}]}, {{
                    7.500000000000001, -37.50000000000001}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -37.50000000000001}]}, {{
                    7.500000000000001, -26.47058823529412}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -26.47058823529412}]}, {{
                    7.500000000000001, -15.441176470588237`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.500000000000001, -15.441176470588237`}]}, {{
                    7.500000000000001, 6.61764705882353}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    6.61764705882353}]}, {{7.500000000000001, 
                    17.647058823529413`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    17.647058823529413`}]}, {{7.500000000000001, 
                    28.676470588235297`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    28.676470588235297`}]}, {{7.500000000000001, 
                    50.735294117647065`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    50.735294117647065`}]}, {{7.500000000000001, 
                    61.76470588235295}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    61.76470588235295}]}, {{7.500000000000001, 
                    72.79411764705883}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    72.79411764705883}]}, {{7.500000000000001, 
                    94.8529411764706}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    94.8529411764706}]}, {{7.500000000000001, 
                    105.88235294117648`}, 
                    
                    Offset[{2.5, 0.}, {7.500000000000001, 
                    105.88235294117648`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -92.64705882352942}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -48.52941176470589}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -4.411764705882353}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    39.70588235294118}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    83.82352941176471}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.6666666666666665`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.308746, 0.441842, 0.940894], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2058306666666667, 0.29456133333333334`, 
                    0.6272626666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.308746`", ",", "0.441842`", ",", "0.940894`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.308746, 0.441842, 0.940894]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.308746, 0.441842, 0.940894], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.935699, 0.951565, 0.993729], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6237993333333334, 0.6343766666666667, 0.662486], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.935699`", ",", "0.951565`", ",", "0.993729`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.935699, 0.951565, 0.993729]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.935699, 0.951565, 0.993729], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.995282, 0.992317, 0.727853], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6635213333333334, 0.6615446666666667, 
                    0.48523533333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.995282`", ",", "0.992317`", ",", "0.727853`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.995282, 0.992317, 0.727853]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.995282, 0.992317, 0.727853], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.955963, 0.863115, 0.283425], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6373086666666667, 0.57541, 0.18895], FrameTicks -> None,
                     PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.955963, 0.863115, 0.283425]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.955963, 0.863115, 0.283425], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6028180000000001, 0.438666, 0.161198], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.858405, 0.449932, 0.203562], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5722700000000001, 0.2999546666666667, 0.135708], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.858405`", ",", "0.449932`", ",", "0.203562`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.858405, 0.449932, 0.203562]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.858405, 0.449932, 0.203562], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.8800672823808062`"}], ",", 
                   "7.250037030925988`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.738012068666*^9, 3.738058412704*^9, {3.738059624211*^9, 
   3.738059663867*^9}, {3.738060082033*^9, 3.7380600947790003`*^9}, 
   3.738060127388*^9, 3.7380603366*^9, {3.738060418663*^9, 
   3.7380604675620003`*^9}, 3.738060504355*^9, {3.7380605860039997`*^9, 
   3.73806063474*^9}, 3.738060673535*^9, 3.738061569402*^9, 3.738061603573*^9,
    3.738061641546*^9, {3.738062926834*^9, 3.7380629431610003`*^9}, 
   3.738063341958*^9},
 CellLabel->
  "Out[591]=",ExpressionUUID->"8cd47702-15ab-436e-82a4-e67361eadfc6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxtmG1sU1UYxwtpMCVS1nktXDYrl5VCE9Ag44MQOScBcVEgvCuCe2FBRiJK
MBkZvqDh7QOmAZGgCIgRwhSRBAaKwroPiEMHIjSFAcKy2zHuSsSQqwLqYnt7
n6c5/3q/LP/0Ofe3c87zf557jrHotVmL+3o8noY+Hk/27+DRk+f8bURbysdm
nwuC9PaPsk87a4/zdAg13mS95OXscwPGW6zPtGWfW6J/5eWFFR0jmEeaeKSJ
p8abrImnjrdYE++f2PLFW3dFmEeaeKSJp8abrImnjrdYE++3eL9XOxcOZx5p
4pEmnhpvsiaeOt5iTbyO33fUP14SZh5p4pEmnhpvsiaeOt5iTbzzxtjVb7YP
Yx5p4pEmnhpvsiaeOt5iTbyTs05vOL3NYB5p4pEmnhpvsiaeOt5iTbyja6o2
BecNZR5p4pEmnhpvsiaeOt5iTbwZS9NjfhgZYh5p4pEmnhpvsiaeOt5iTbzy
nwZNqtlbwjzSxCNNPDXeZE08dbzFmng5/+tQX3SoLzrUFx3qiw71RYf6ooPf
g+D3IPg9CH4Pgt+D4Pcg+D0I/tPAfxr4TwP/aeA/Dfyngf808EMA/BAAPwTA
DwHwQwD8EAA/BCA//ZCffshPP+SnH/LTD/nph/z0Q774IF98kC8+yBcf5IsP
8sUH+eKD/fPC/nlh/7ywf17YPy/snxf2zwvr2RtX17M3rq5nb1xdT4o3Wavr
SeMt1ur87Lg6Pzuuzs+Oq/Oz4+r87Lg6Pzuuzs8GXgp4KeClgJcCXgp4KeCl
mOdxH+KRJp5HeTog3mRNPHW8xRrmJ2B+AuYnYH4C5idgfgLmJ2D/gGcDzwae
DTwbeDbwbAH5KSA/BeQn89R4zk8B+SkgP2F+Xgn+k+A/Cf6T4D8J/pPgPwn1
RUJ9kVBfmKfGc32RUF8k1BcJ9VNC/ZRQP6W6nn4J9VNC/ZRQPyX0Bwn9QUJ/
YJ4az/1BQn+Q0B8k9D/YPw32T4P902D/NNg/DfZPk9DfmUca+jvz1Hju7xL6
O/NIw/cL5IsO+aJDvuiQLzrkiw75okv4PmMeafg+Y54az99nEr7PmEcavj8h
P0OQnyHIzxDkZwjyMwT5GZLwfc080vB9zTw1nr+vJXxfM480nB/ADwb4wQA/
GOAHA/xggB8MCecj5pGG8xHz1Hg+H0k4HzGPNJz/wH9h8F8Y/BcG/4XBf2Hw
X5h57vmTeaThfMs8NZ7Pt8xTx/P5FvweAb9HwO8R8HsE/B4Bv0fA7xHmufcH
zCMN9xPMU+P5foJ56ni+n4D6EoX6EoX6EoX6EoX6EoX6EoX6EmXeuQ1pa/zr
+fuV889+81n7Mve+ZGCnGLVi4yvDluTvRzrePlUf2ureP8xM8H3Hx1m97LJ4
onl82eza/H0G/Z69W3rnmU5x4P78FR3v5u9Dmio+GPK87sY3XlPvO365Llqn
VdW2Ti0ruL9wfj96Rayqvbl57XL3fmHNRfW+YMclUfzYzOo3vnTP4+mEeh+w
MSmurnvu2MoLRsH9gqOrb4npMuC7Ny7Ucjar5+TP/32yvLaEaJpktlRPNlqc
5b6b5t/rstrsUc/j8zL1ZtLnuwZF3fP79vx5nHQyubN7ZfIRXp+K4q0VL43I
n9+V83ayW0yfv2Xvtul6ixP+Sf487Pw/sRtiU+mRg7Njg////NrQJSprW4v7
n3k4pxd08fnSed+aLtFdGnt6XewhZ/5TD3eJ+z/L+paTxfy+O5cPjht9L5Cb
byecHxu6xfHyylBde1FuPvtuivK6mlF9Y0U8nz9fbEx8WFrk5Ienp0esqvq0
+dL7A/P3E7l4zt+mmuDXf4wpyuV7TZriC753iO/+vwXfEzS/PY2+7l8Pa9LZ
zz1dav/PrM8LC/b7S/RBufE/dtF68vtGHts37SuP26835fs5rX9Tc9IO6G5/
XHBBHN/SO3PCt0Ny8Zu71f6c2c/m+L+3H+w7VI7Lxl9PUD4U9GPKp359Tg2o
W12aqwdrb1K+8HpdjY3+vp76dT7fWFcOuF1y7C+3fy5Kcr+k/P5i9YmR9xOP
5t63v4d/d/Ihk9+H4omJS3sM6Sy/fVHtlxl/TdltlD6ZcPvxxjT5uaDfkt/O
H7qYfi89TDr15Kl2kVgyo8x7oiz3voYrar/L+HveWwcOTTns8tffIj9zPjRP
NO/cnRuWDi5xTe1vmfrh1jf+f4IN322rmhZx5td2LkH1rKB/UX3qaTs7oXX3
cIc/dT3XN96vB+Y2l8ytd/vBkStUbwv6E9VP0lQv/wPMAJLH
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
d75JzIaM0zX+D+zBfGM=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlMdzDVAUxu818cyIQchghUSitwieRElEgogSiRo1T3tREiXa/8YGC1bY
YJiJMqMtlAViRv19c77Fb9533zvtnnvOqykN9QyOSSntgwo4lFN6w+cLfYcu
wzf0LziPboNj6OOwCX0ORtFf4ST6MLxFv4Mj6BPwKUWM0+hTOWw/Kga6P4dW
zoOKncNXPiX0Viih+2ELeic8QN+FHbZ/j34FRx3/C/qH61H+zylsSs73IYWN
8stHvi9dr+6suz+HPvSBHL89g/3oeqhCT4cF/n0kxZ1192EYBwW4DBdhgs9X
YAnUYbsIFqMvwViogKvu9/cUNatfeo/XKWpWf5bl8F0BS9GzYTx6MtShF6pG
9CzlQDfDBnQ7rHX9M9BTYC56FRRT2BR9XoNugJXoBliewkbnJmhFN8PqHDmU
SzHn5+iJejPT51qfq1zfnBy1ToJ5qg160NthvXJDS4oaiu5hwT28kaNm1V4J
NY43ze9R6/srt3qsXstGtuqRenUTJvqNhh1TsafCNb9Hpb/T2/XAE3yfQi96
F9xHP4RudFeOWbynO6DboU9v5f3YqBlJsTNttr+NvgXbciB9x/Os+ZZWDuXq
yLFrZ2Azejc8SrED3a5ZtVfDdedTbvW01ftTRg9Ap+Npl1Sjam0UmkXPk3Io
V9n7pt81a02aOc2CepxiJhpcj3qhHqlX+o/Qf8VvuIAegD/ov7oDegj+oX/C
Wc+zctd7H/R/ot2Vz4B3pmCfQfsrlnZGZ8VQrFHH35vjrUa8r3vgcYqe9Xof
OpJnTLOmO6R4o1b7a9flI1/NuGa90ffXjGpWFWNdjp3SbnX5rHmWVswWv0m1
Z06z9x8Tkogg
           "]]}]}, {}, {}, {}, {}}, {{}, {
        GrayLevel[0], 
        LineBox[{295, 291, 290, 292, 288, 289, 294, 293, 297, 296, 299, 298, 
         301, 300, 303, 302, 307, 306, 310, 313}, VertexColors -> None], 
        LineBox[{304, 305, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 
         320, 321, 322, 323, 324, 325, 326, 327, 328, 329}, VertexColors -> 
         None], 
        LineBox[{332, 331, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 
         343, 344, 348, 349, 350, 351, 354, 355, 358, 360, 364, 365}, 
         VertexColors -> None], 
        LineBox[{346, 342, 347, 345, 353, 352, 357, 356, 363, 361, 359, 362, 
         367, 366, 371, 368, 369, 373}, VertexColors -> None], 
        LineBox[{370, 376, 374, 375, 377, 372, 370}, VertexColors -> 
         None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
n9X7UnYgf3LkXN+A/OlOrMKRP/ezrj+G/CmRUX/bC/hz9dy+3diPdmmUGWE/
YovXvcsG/Whixdty7EfLAi7rYz/SnDbUvAb96O3cwtLV0I8+LGm+gv3onZOw
vCH0o6g3L/ZhP3p88G4l9qO2OfZXz6AfaSyWaGE/clto+NePZI2mzmA/krYe
p8agH2mHtG4Ygb/LLGDh2An96EqI/XHsR8HP3FmxH3mVjFR6Qz/yil3thv29
LbmnH/v7pV9mTH3Q34kt/1Ps7yE6cZLY3+PqTfQnob/nUS+ksb/PtG1Ix/7O
y38qsgb6+7kPZdyfoL+fPb9VDfu7YVIy1xPo7199TZfOQX8v9g/vwv5eZ2Ek
hf2do9GfbxL6+yEtV3vs7x3R1dVR0N+pq2IS2N/PhjBxY39/1vlqmSb097E3
sTukYf6xsho7ifPShZXJMWIwL73kczyI89KSQU4HnJdO+3CttIZ5yVf9VQnO
S0anldfhvKRc/n7oPMxLd76u/4vzUmks0yOcl3g7rs79B/OSyMoUSZyX2KUZ
DjgvTdqsK30J89LN2ZvyN2FeWtNdtCsG5iWpe/q1FjAvmdbkXcZ5qXd4wgbn
JZke3avFMC/d/M5+HufPofbrPDh/fj3w63E9zJ+7v9nn4fwpdU2jBeuudE7E
H+fP11PKqTh/1gse/o7z5/BsVagAzJ/72UfKcf7srvyjjfPn6ahV2WIwfz42
uxO5CubPAM3tUpVwD1m3jcvOw/xp/EZbNBvmz+1OjMwqmD8LE2Sz6TB/pq19
zSMG82f8jcnm1cCXT/iGXhGYP3PExaJwnmcxkWzA99eYvNhwAub5NXqTzjjP
S3b5v8N5Pme5iYYlzPPis2/NcZ6Xu/NSDed598iWAWGY5+mSK1Rxnt/bIKSM
8/zVz2p7jWGeP+GRt1UJ5vnB7zuDReA7ve3sG6Jhns827C7AeX7gnUoXzvOX
RatHcJ535w6weArz/MhAjbMOzPPs0rx5jTDPH/z6bAr3I7sbD47gfvQiX43r
M+xHS/fd+g/3I78bvHK4H222PZUfDvtRlu9PH9yPTAYenMT9yM0mrssU9iPm
J0YLCrAf6UT1+uB+ZLw4unw17EeJx7xkcT9irmM1wP3Iq8qprQv2I0eOxRpX
OIdgL2sM7kc1lf9dZsB+RAWtoonBfrSgVTfYB/tR5VEt5m7Yjy7R2gjum+q3
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
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Alpha]\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-7, 2] Pi, -10.995574287564276`], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"7", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-5, 2] Pi, -7.853981633974483], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"5", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-3, 2] Pi, -4.71238898038469], 
          FormBox[
           RowBox[{"-", 
             FractionBox[
              RowBox[{"3", " ", "\[Pi]"}], "2"]}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[-1, 2] Pi, -1.5707963267948966`], 
          FormBox[
           RowBox[{"-", 
             FractionBox["\[Pi]", "2"]}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Rational[1, 2] Pi, 1.5707963267948966`], 
          FormBox[
           FractionBox["\[Pi]", "2"], TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[Rational[3, 2] Pi, 4.71238898038469], 
          FormBox[
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[5, 2] Pi, 7.853981633974483], 
          FormBox[
           FractionBox[
            RowBox[{"5", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[Rational[7, 2] Pi, 10.995574287564276`], 
          FormBox[
           FractionBox[
            RowBox[{"7", " ", "\[Pi]"}], "2"], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     FrameTicksStyle -> Directive[6], GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram lg(Self-Kerr/3rd)\"", 14, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
      0.30000000000000004`, 0.9}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJzt0/k/1fkeB3BJmihkzS6TaGibeRw1XL2ozCju4SRTTcmokLEcW26WEaV4
6BpbtpIliaaIUKdFplxbdscuW4c42/djmbGMjHvu33HPD5/H4/N4fj6P9+Pz
fr8en63nmMfc1kpISDSK1hrR+t++bKTR2SyrG79tWCkMHhvC/J+9Nya+opDg
XVWrvLYXzr6HWTZbRtDtGH/quCkFn6XSncSzD7Fc6wvxhqOoKDtoUmNFwfbG
/dTG9n6M3fH0nn83ihT5xb/3/pPCDqWMlfx9gzCjxwe5nB1DgE9xR+5JCtK5
N90isj8gRaIsvGFpDIymc/flL1BQOiOjUXN8GFLSmh5eJR9hmeKd9GsQhZ7Q
Ta6ryqPwebZkN+7NwVFjakA6hkJ+vQrt7uooetz7vnY2HsfxGua2K5kU/JR1
NpjzxgC151t6uONwPj3js/CIgoXr9qG+ro8oqk/9m140AY+5gOfMNxRkSnaV
BVdzoHA5aLze/RP8b/4hMdVOYZP9k1tuReNokiuIUvlyEpr7T3e854j6lU13
6ouegILH+xq7tkm4T41X1CxRiK2PULV1/QTHarIuOmwKZRm+Ga/lCf5zzb23
ymISaWoqNq8MufhssxhWaUCwxpKesUdjCv1Ms7hZNhc2S1EuJeYEBz7TTuXP
T0GrwaV5RyQPKQ9lDxUyCEJZ2hqqonsuetflXE34GD6Vuj3Xg8BE+0g3K4aH
XHq4ydOXfJDNeSH2IQR+UnN5Tmp8MPYc9aHtFIClwtSXjCGo5Gf5zj7gQ1Jx
SwkrR4BIdYumilsES53fmSeYCvB0boIyVxTCRls2yOOe6D0vp9eb1Alwvrt8
d3W0EApb+7U0Sgmu5t3uanASQvl5lN/BBSH6txXWNlcR1MUeznObEKI2w76s
1pNCntEl3ytNBN03nKeDjShEG+9ads+iEDqg/qMRk2CWY6XwQJT/o4JPaUca
KSy+Gda02UCgYLV9T3cuhU7dnK9N5in8Kz9/yCOfws5sGQepIQpLmSda5b4k
mI+5mBNjIcplmWJ+o06gp6zw84w9QZD3TtfCXiEunmQnnHMi+O7XhnVd4QRz
DrP69f5CKJpVp3y4SmDbov7E9i7BjofpX3A5AsQxTivlJhI0B72u+izqn/NX
xs22VdG8PBeSz2cT0LVcmouLCLLsbss90+QjLDJF0fAxQXvNmsGzJQQ/ZN9J
ytrHw1z67mTeCwKG132ufAWB/HSW8jVHLryeNG0uqSdgK36/+LvovNEqO92T
OYXxOo8k/24Cp5dc6YBq0XxTcjQcbk5CS4tnN9ZDEN7Xp1T/iuA2y/ISy+IT
2ErHz/iyCeL2SyS4i+qrso25jLpx3JR947XcRpCRYSgjXUyQLFR15tM5OLTW
KCy2meDBIv16QQGB3BeSHdG9Y1j+KylOpZGg/GSwhLWovzh94WGdn0ZRPruc
ea+W4C3rbth4GoFMaKk/s2MI7HWPck+KcrZtv3z9aQRB3kEfyYcKg6iWoO9d
TSDQWWg0fjFBieb8i4pDaT8eLU+/LThHMKOt2VltR+GwS7zRgn0f0udTjtnR
RP/jsPflunIh0nzummeTHkTPmHJm1xOke1XptGgIMRlWTLdO6IafoD8wc4DC
z8lytewoAfbHVbkKdnXhzGS4lGUxhX+8cPEamOIjLqMlKKW1E4OZIQN7gikY
MFjcZFFOgS0ztUyqAxqxOmeXaRSMytzfrdHm4cRqUbNmTAdOBdeM1f4phPFm
lTt+OlyY7f2JXa/bgYwLF90SK4XY5V8TOKI7BZ3zagOBrHb0HtvE/fGSEHs6
/O3oWyexJrV1VJfRDlWrp94GNCG+2atnUKX/Ce/jZdvS2W1w2n1imvwhgGlS
64rxtgkkzoR8IFJtCFSSpfm9EiDCXL3CSn8cU12LS8XWrbiSFlSZdFWA446e
89J6HGjxOjWGY1rwb/VhWvkRAYy9Xuxv1v4Ixupjc7n3zcjM+v5Zl4IAktc2
hCVpjuGGcsyZAxubUaBbZjrfy0ff7VNVP6iP4tUO11986U14ek/juVoOH2fd
HFf37RrG9AHz7OzE9+jXWV1RuMgH/6oW4XYPgu6/dlC5oxF6UUyaEo0PuszG
1+vr+vBCNSe1ZlMj3Dkj3iqSfJQmLccaPOvGttdmDgFHG/DY2uG+WhsPiup8
p0MPOpHo2iOzNaYec4W/D6pn8TBlWWn9zqQNy9IBtW01dfhWZq+SlicPj+1v
jaxsFNV9vCkyQqIOkd55R3VMeQg4GxjyrfAdOhgPzXZa1EKlQWASasiD8mkr
tqLxW1jJV/psWSd2sYtd7GIXu9jFLnaxi/3/yf8LNJsL9g==
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -76.85643564356435}, 
                    Offset[{4., 0}, {7.5, -76.85643564356435}]}, {{
                    7.5, -32.301980198019805`}, 
                    Offset[{4., 0}, {7.5, -32.301980198019805`}]}, {{7.5, 
                    12.252475247524753`}, 
                    Offset[{4., 0}, {7.5, 12.252475247524753`}]}, {{7.5, 
                    56.80693069306931}, 
                    Offset[{4., 0}, {7.5, 56.80693069306931}]}, {{7.5, 
                    101.36138613861387`}, 
                    Offset[{4., 0}, {7.5, 101.36138613861387`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -110.27227722772278`}, 
                    Offset[{2.5, 0.}, {7.5, -110.27227722772278`}]}, {{
                    7.5, -99.13366336633663}, 
                    Offset[{2.5, 0.}, {7.5, -99.13366336633663}]}, {{
                    7.5, -87.9950495049505}, 
                    Offset[{2.5, 0.}, {7.5, -87.9950495049505}]}, {{
                    7.5, -65.71782178217822}, 
                    Offset[{2.5, 0.}, {7.5, -65.71782178217822}]}, {{
                    7.5, -54.57920792079208}, 
                    Offset[{2.5, 0.}, {7.5, -54.57920792079208}]}, {{
                    7.5, -43.440594059405946`}, 
                    Offset[{2.5, 0.}, {7.5, -43.440594059405946`}]}, {{
                    7.5, -21.163366336633665`}, 
                    Offset[{2.5, 0.}, {7.5, -21.163366336633665`}]}, {{
                    7.5, -10.024752475247526`}, 
                    Offset[{2.5, 0.}, {7.5, -10.024752475247526`}]}, {{7.5, 
                    1.113861386138614}, 
                    Offset[{2.5, 0.}, {7.5, 1.113861386138614}]}, {{7.5, 
                    23.391089108910894`}, 
                    Offset[{2.5, 0.}, {7.5, 23.391089108910894`}]}, {{7.5, 
                    34.52970297029703}, 
                    Offset[{2.5, 0.}, {7.5, 34.52970297029703}]}, {{7.5, 
                    45.66831683168317}, 
                    Offset[{2.5, 0.}, {7.5, 45.66831683168317}]}, {{7.5, 
                    67.94554455445545}, 
                    Offset[{2.5, 0.}, {7.5, 67.94554455445545}]}, {{7.5, 
                    79.08415841584159}, 
                    Offset[{2.5, 0.}, {7.5, 79.08415841584159}]}, {{7.5, 
                    90.22277227722773}, 
                    Offset[{2.5, 0.}, {7.5, 90.22277227722773}]}, {{7.5, 
                    112.5}, 
                    Offset[{2.5, 0.}, {7.5, 112.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -76.85643564356435}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -32.301980198019805`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 12.252475247524753`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.80693069306931}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 101.36138613861387`}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.6666666666666665`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.308746, 0.441842, 0.940894], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2058306666666667, 0.29456133333333334`, 
                    0.6272626666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.308746`", ",", "0.441842`", ",", "0.940894`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.308746, 0.441842, 0.940894]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.308746, 0.441842, 0.940894], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.935699, 0.951565, 0.993729], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6237993333333334, 0.6343766666666667, 0.662486], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.935699`", ",", "0.951565`", ",", "0.993729`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.935699, 0.951565, 0.993729]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.935699, 0.951565, 0.993729], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.995282, 0.992317, 0.727853], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6635213333333334, 0.6615446666666667, 
                    0.48523533333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.995282`", ",", "0.992317`", ",", "0.727853`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.995282, 0.992317, 0.727853]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.995282, 0.992317, 0.727853], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.955963, 0.863115, 0.283425], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6373086666666667, 0.57541, 0.18895], FrameTicks -> None,
                     PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.955963, 0.863115, 0.283425]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.955963, 0.863115, 0.283425], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6028180000000001, 0.438666, 0.161198], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.858405, 0.449932, 0.203562], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5722700000000001, 0.2999546666666667, 0.135708], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.858405`", ",", "0.449932`", ",", "0.203562`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.858405, 0.449932, 0.203562]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.858405, 0.449932, 0.203562], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "3.5645984789187724`"}], ",", 
                   "6.455556700025439`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.738012068666*^9, 3.738058412704*^9, {3.738059624211*^9, 
   3.738059663867*^9}, {3.738060082033*^9, 3.7380600947790003`*^9}, 
   3.738060127388*^9, 3.7380603366*^9, {3.738060418663*^9, 
   3.7380604675620003`*^9}, 3.738060504355*^9, {3.7380605860039997`*^9, 
   3.73806063474*^9}, 3.738060673535*^9, 3.738061569402*^9, 3.738061603573*^9,
    3.738061641546*^9, {3.738062926834*^9, 3.7380629431610003`*^9}, 
   3.738063342117*^9},
 CellLabel->
  "Out[592]=",ExpressionUUID->"fa0fad37-ffc7-448a-9ade-92a85639de36"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fix \[Alpha], Varying \[Beta]", "Subsection",
 CellChangeTimes->{{3.737979305699*^9, 
  3.73797934009*^9}},ExpressionUUID->"61b5a43c-801a-44c4-88eb-eaecfbb476f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["hereH", "arm"], "=", 
   RowBox[{
    SubscriptBox["listH", "arm"], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]list", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"0.2", "i"}], "+", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "10"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]listname", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\"\<\[Beta]=\>\"", "<>", 
      RowBox[{"(", 
       RowBox[{"ToString", "[", 
        RowBox[{"\[Beta]list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ip", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "4"}], "]"}], ",", "20"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7379793500699997`*^9, 3.737979373448*^9}, {
   3.737979404736*^9, 3.737979604362*^9}, {3.737979685738*^9, 
   3.7379797449849997`*^9}, {3.737979776826*^9, 3.737979780689*^9}, {
   3.737980744642*^9, 3.7379807663450003`*^9}, {3.7379808270030003`*^9, 
   3.737980907818*^9}, 3.737981021866*^9, {3.73798113865*^9, 
   3.737981150241*^9}, {3.737989040266*^9, 3.737989067513*^9}, 
   3.7379893476029997`*^9, {3.737989655491*^9, 3.737989664617*^9}, {
   3.737990602637*^9, 3.7379906235299997`*^9}, 3.7380095625220003`*^9, {
   3.738010320074*^9, 3.738010332203*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"d29eadb8-faca-4e3d-bbcd-3fd41aa0c9c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "1.2`", ",", "1.4`", ",", "1.6`", ",", "1.8`", ",", "2.`", ",", 
   "2.2`", ",", "2.4000000000000004`", ",", "2.6`", ",", "2.8`", ",", "3.`"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.737979590182*^9, 3.737979605093*^9}, 
   3.7379799376470003`*^9, 3.737980769958*^9, {3.7379808334119997`*^9, 
   3.7379809129960003`*^9}, 3.737981151782*^9, {3.737989053148*^9, 
   3.737989068164*^9}, 3.737989666468*^9, {3.737990610238*^9, 
   3.7379906242539997`*^9}, 3.737996617967*^9, 3.738009571535*^9, {
   3.73801032406*^9, 3.738010333778*^9}, 3.738012068856*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"499a7080-4386-4919-9664-60b1b5932cd4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt3", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Beta]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t3", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"zt", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"res", "=", 
                  RowBox[{"Quiet", "[", 
                   RowBox[{"FindMinimum", "[", 
                    RowBox[{
                    RowBox[{"Hn", "[", 
                    RowBox[{
                    "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4",
                     ",", "0", ",", "\[Phi]ext", ",", 
                    SubscriptBox["hereH", "arm"], ",", 
                    RowBox[{"\[Beta]list", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]1", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]2", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]3", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]4", ",", 
                    RowBox[{"ip", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "\[Phi]1", ",", 
                    "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4"}], "}"}], "/.", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "ip", "]"}]}], "}"}]}], "]"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"zt1", "=", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\[Phi]ext", ",", " ", 
                 RowBox[{"zt", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "}"}]}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]ext", ",", 
             RowBox[{
              RowBox[{"-", "4"}], "\[Pi]"}], ",", 
             RowBox[{"4", "\[Pi]"}], ",", 
             RowBox[{"\[Pi]", "/", "5"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", "\[Phi]ext"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"listt3", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt3", ",", "t3", ",", "j"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\[Beta]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.737979789572*^9, 3.73797985813*^9}, {
  3.7379798947539997`*^9, 3.7379799328900003`*^9}},
 CellLabel->
  "In[320]:=",ExpressionUUID->"4efba044-d2a3-4eb6-8c4e-07628b6b508e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt3.txt\>\"", ",", "listt3"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738059162538*^9, 3.7380591645769997`*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"b51afc67-3eca-4b5e-8af5-847cf48d8bff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"listt3", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "All", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "listt3", "]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Total Flux\>\"", ",", "\"\<Energy\>\""}], "}"}]}], ",", " ", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "8"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.73797996865*^9, 3.73797998721*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"341762ae-b1e9-44e3-a221-be614060e88e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHnnMLV9yU2ePAFXcrxuOB+oHD
c4LC3Mz3OPzpK0idOk/tQNmfdz8ftOxxeLefLe9RjOoBhmtP2CUY9jo8+DCn
TF9a5UDPBnFGpbl7HS4pGtfX3FQ68OSWhGdo3V6HI0En209OVzwgJ7h10xWR
PQ7bmuMniIUpHGDY+0Xa9v4Oh4DM14bHNeQOXJnc1rl1/VYHk9PizolLpQ9k
HLtdcXDaJgeI+yQPnJF5mHXMaT3UPWIHSnZfX2S6ZSXUfpEDD9ZukRWfvARq
n+ABSX/V0zNvz4eaz3fgpvMK3j0LpkPN4zwwM2G17PzOCVD9LAcYpW3dKn1b
oer/7XdsZ/VXFq2Ayn/Zz/a6+qpYdSqU/2Q/j35kQWGbqwMDFPQd1NX4o61m
C5W3l4LKQ/Xb80H1Q823d0Ixn8UBZj/UfQ4zoO6Dut/hBtT9UP85wPwH9b8D
zP/Q8HGAhQ80/Bxg4QcNX4csaPhCw9/hGjT8ofHjwASNH2j8OUhD4w8avw6w
+IXGv0MfNP6h6cOBCZo+oOnHAZZ+oOnLAZa+oOnPAZb+AEHGKz4=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHlrRGLzI9sM+BK+5WjMcD9QNv
z1y/2H91n8OfvoLUqfPUDki++59gKrzf4d1+trxHMaoHvj7Yz3K6YL/Dgw9z
yvSlVQ6EbgoJXnJrv8MlReP6mptKByTrnz19/nefw5Ggk+0npysekBbcuumK
yB6Hbc3xE8TCFA783fNF2vb+DoeAzNeGxzXkDlyZ3Na5df1WB5PT4s6JS6UP
ZBy7XXFw2iYHiPskD5yUeZh1zGk91D1iBwp2X19kumUl1H6RAw/WbpEVn7wE
ap/gAQl/1dMzb8+Hms934KbzCt49C6ZDzeM8MDNhtez8zglQ/SwHGKRt3Sp9
W6Hq/+13amf1VxatgMp/2c/5uvqqWHUqlP9kv6h+ZEFhm6sDAxSsuHPs1um/
9rZQeXt7qDxUvz0LVD/UfHtvFPNZHBih9kPd5wBzH9T9Djeg7of6zwHmP6j/
HR5C/Q8NH4cSaPhAw8/hDDT8oOHrkAMNX2j4O1yDhj80fhwY90LiBxp/DrD4
g8avgww0fqHx7xAGjX9o+nCApQ9o+nGQgqYfaPpygKUvaPpzgKU/AMBoOTo=

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDiamond]\"", FontSize -> 10.88, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], CompressedData["
1:eJxVUlsog3EUH0ZRRDGXIcOMB0l4UWsnM7yIkFILwxSKKWmiJLeWQi23EhJF
biUzZXxHaVryIhIeXPKglDx4UISV3//BV+fh6/zPOb+bqq6tzOwnk8nSvOXj
LV9vRaXnV3yq0ri+1rk8bWEKqr4xFt1r+Lm8gQesTF+jFvPEXApXmYxO2yjT
qxTQ+mhUc4LNf9OwznT/NtuZoUzmNftIXxAznauyenuuE7mONYcfuRIdl3mG
PVMqjg1zbF+Eu2i3v2ZcUZnAP653pfZuj0qbXjJPUuP5wj5kc2w5KPs0Um9a
VnKz+9Z6NLlNf/ii2RP70OzO2wIeBXfsXy3m7Kzifjg/bOzERdqXcC+Mo0vU
pzO389gfwtf6lWDXwhT2BfJ07VrcvG0c83L2U2oLuooH8f5bMgz7lyRFWNF/
l0Jfui8V3Wb8P0mpGVWW9iEDyfDNOscar9SFWvR16ehjXifHPPbr9P/2y0mO
+8BHAh/wk8APfiT4gT8J/tCHhD7Qj86gH/SlFugL/ekS+sMf8j348wf+UQz8
g78k/IX/tA7/kQ8S+UB+SOQH+SKRL+SPGpC/XykkMBI=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledUpTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxVUlsog3EU3xiiyMJchszdg5bbC1s7rvEgWpqU3GrJJZdCRFFieZGSWwkJ
TZLSJmV85yvR4kku4cHIm5JEKcLK73vw1Xn4Ov9zzu+maWg3mj1lMlmKu+Tu
8nBXWGpBxacmhV+tIaaSUpH8am6qi11JbK00DWUaRfoa7zBPLSSyLla51lwj
0rPg3fZQncBrr7bu90aRXC/zPVp1POe0lKRbIkQ602QMDlzHcgMnHXxkC3Ro
dFqcMxqOUNq3z4MdtDNcO6EyxfCP402tv9ul8qantOPkaL6YHB2zb9kp8yQ0
v35VzU1Ht73i9Db94QtnZ+R981HeFvCouHvvajnLto77wezatEWFTq7gnpLD
yxJO5m4XsT+Ar/Ot/o6lGezz5bm6jajFsQnMK9hDrS/qKx3B+28h1+JVFhfS
i/6boHjqv1D1m/H/KCRrqzo6RwtJhu9Dlxao9dHq0TcEoY95gyfmsd/wf7+C
5LgPfDQLfMBPEn7wI4kf+JPEH/pQF/SBfnQK/aAvtUJf6E+X0B/+kHz/zx/4
R5HwD/6S5C/8Jx38Rz5IygfyQ1J+kC9aR76QP5Ly9wuMuyoQ
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledDownTriangle]\"", FontSize -> 10.24, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoH7vrtaIlnOOTAFXcrxuOB+oE3
Bufb/zEecvjTV5A6dZ7agfSbnTUqzIcc3u1ny3sUo3qALeFv48HPBx0efJhT
pi+tcsAy29OoXeqgwyVF4/qam0oHkg6o7/thtd/hSNDJ9pPTFQ9IC27ddEVk
j8O25vgJYmEKBxj2fpG2vb/DISDzteFxDbkDVye3dW5dv9XB5LS4c+JS6QOZ
x25XHJy2yQHiPskDJ2QeZh1zWg91j9iBkt3XF5luWQm1X+TAg7VbZMUnL4Ha
J3hA0l/19Mzb86Hm8x245byCd8+C6VDzOA/MTFgtO79zAlQ/ywFmaVu3St9W
qPp/+13bWf2VRSug8l/2s7yuvipWnQrlP9nvox9ZUNjm6sAABbtmMq+8Xe9u
C5W3D4DKQ/Xb80L1Q823d0Qxn8WBCWo/1H0Os6Dug7rf4SbU/VD/OcD8B/W/
w0Oo/6Hh41AKDR9o+DmcgYYfNHwdsqHhCw1/B1j4Q+PHgQkaP9D4c4DFHzR+
HWDxC41/Bxto/EPThwMsfUDTj0MGNP1A05cDLH1B05/DPWj6AwCVqi3m
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyCircle]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHPBdmmmyfeMiBK+5WjMcD9QPl
r1S6NvYfcvjTV5A6dZ7aAcddNUwGLYcc3u1ny3sUo3rgg79MX1/wIYcHH+aU
6UurHLDK9jRqlzrocEnRuL7mptKBpAPq+35Y7Xc4EnSy/eR0xQNSgls3XRHZ
47CtOX6CWJjCgf97vkjb3t/hEJD52vC4htyBK5PbOreu3+pgclrcOXGp9IGs
Y7crDk7b5ABxn+SBkzIPs445rYe6R+xA4e7ri0y3rITaL3Lg4dotsuKTl0Dt
Ezwg5a96eubt+VDz+Q7ccF7Bu2fBdKh5nAdmJayWnd85Aaqf5QCLtK1bpW8r
VP2//Y7trP7KohVQ+S/7mV5XXxWrToXyn+zP0I8sKGxzdWCAgieTJq203+hs
C5W3lzSAyEP12wtC9UPNt3dGMZ/FgRFqP9R9DjOh7oO63+Em1P1Q/zlIQv0H
9b8DzP/Q8HEogYYPNPwcYOEHDV8HWPhCw9/hKjT8ofHjwLgXEj/Q+HOQgcYf
NH4dYPELjX8HG2j8Q9OHw0do+oCmHwcnaPqBpi+HMmj6gqY/By9o+gMA78As
vQ==
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptySquare]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHIhVua+SzH3bgirsV4/FA/YAZ
x4mMWMbDDn/6ClKnzlM7cMpk7SqN54cc3u1ny3sUo3rg6XUpjrq8Qw4PPswp
05dWOWCV7WnULnXQ4ZKicX3NTaUDSQfU9/2w2u9wJOhk+8npigekBbduuiKy
x2Fbc/wEsTCFA//3fJG2vb/DISDzteFxDbkDVye3dW5dv9XB5LS4c+JS6QOZ
x25XHJy2yQHiPskDZ2UeZh1zWg91j9iBgt3XF5luWQm1X+TAg7VbZMUnL4Ha
J3hA0l/19Mzb86Hm8x246byCd8+C6VDzOA/MTFgtO79zAlQ/ywFGaVu3St9W
qPp/+53bWf2VRSug8l/2s72uvipWnQrlP9kvpB9ZUNjm6sAABefLmzSz5Dxt
ofL2+lB5qH57mH6o+fZuKOazODBB7Ye6zwHmPqj7HWDuh/rPQQrqP6j/HWD+
h4aPQyk0fKDh53AGGn7Q8HXIgoYvNPwdrkHDHxo/Dkx7IfEDjT8HGWj8QePX
ARa/0Ph3sIHGPzR9OMDSBzT9OJyBph9o+nKwgKYvaPpziIamPwA/eSkU
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyDiamond]\"", FontSize -> 10.24, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHml+6y4WnHXbgirsV4/FA/YBh
c/XUg9GHHf70FaROnad2oGjGRQU1g8MO7/az5T2KUT3w9LoUR13eIYcHH+aU
6UurHLDK9jRqlzrocEnRuL7mptKBpAPq+35Y7Xc4EnSy/eR0xQPSgls3XRHZ
47CtOX6CWJjCAYa9X6Rt7+9wCMh8bXhcQ+7AlcltnVvXb3UwOS3unLhU+kDm
sdsVB6dtcoC4T/LAGZmHWcec1kPdI3agdPf1RaZbVkLtFznwaO0WWfHJS6D2
CR6Q8lc9PfP2fKj5fAduOa/g3bNgOtQ8zgMzE1bLzu+cANXPcoBJ2tat0rcV
qv7ffp92Vn9l0Qqo/Jf9TK+rr4pVp0L5T/bz6kcWFLa5OjBAwcanZ6o6L+vb
QuXtXaDyUP32HFD9UPPtvVDMZ3GA2Q91n8MsqPug7ne4CXU/1H8OMP9B/e/w
AOp/aPg4lEDDBxp+Dqeg4QcNX4csaPhCw9/hGjT8ofHjwASNH2j8OchA4w8a
vw6w+IXGv4MNNP6h6cMBlj6g6ccBln6g6cvBCJq+oOnPAZb+AAOuKxM=
         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyUpTriangle]\"", FontSize -> 11.136, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHJJ3adR02HXbgirsV4/FA/cCp
TyuS5y467PCnryB16jy1A9ob9vLcSDzs8G4/W96jGNUDT69LcdTlHXJ48GFO
mb60ygHLbE+jdqmDDpcUjetrbiodSDqgvu+H1X6HI0En209OVzwgJbh10xWR
PQ7bmuMniIUpHGDY+0Xa9v4Oh4DM14bHNeQOXJnc1rl1/VYHk9PizolLpQ9k
HLtdcXDaJgeI+yQPnJR5mHXMaT3UPWIHSnZfX2S6ZSXUfpEDD9ZukRWfvARq
n+ABKX/V0zNvz4eaz3fgpvMK3j0LpkPN4zwwM2G17PzOCVD9LAeYpG3dKn1b
oer/7XdpZ/VXFq2Ayn/Zz/u6+qpYdSqU/2S/lH5kQWGbqwMDFNhzHahVvONh
C5W3t4DKQ/Xbs0P1Q823d0Ixn8UBZj/UfQ4w90Hd73AD6n6o/xykof6D+t/h
IdT/0PBxKIWGDzT8HM5Cww8avg5Z0PCFhr/DNWj4Q+PHgREaP9D4c5CBxh80
fh1g8QuNfwcbaPxD04fDE2j6gKYfBx1o+oGmLwdY+oKmPwdY+gMAxHMrtA==

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyDownTriangle]\"", FontSize -> 11.136, StripOnInput -> 
             False], TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHWJfOkLN4d9iBK+5WjMcD9QPF
T3sFXt847PCnryB16jy1A4GXWVi4ag87vNvPlvcoRvXA0+tSHHV5hxwefJhT
pi+tcsAq29OoXeqgwyVF4/qam0oHkg6o7/thtd/hSNDJ9pPTFQ/ICG7ddEVk
j8O25vgJYmEKB/7v+SJte3+HQ0Dma8PjGnIHrk5u69y6fquDyWlx58Sl0gcy
j92uODhtkwPEfZIHzso8zDrmtB7qHrEDpbuvLzLdshJqv8iBh2u3yIpPXgK1
T/CAlL/q6Zm350PN5ztww3kF754F06HmcR6YmbBadn7nBKh+lgOM0rZulb6t
UPX/9nu3s/ori1ZA5b/sZ39dfVWsOhXKf7J/sn5kQWGbqwMDFAidqWMrNHS3
hcrbJ0PlofrtmaD6oebbe6CYz+IAsx/qPodZUPdB3e9wE+p+qP8cJKH+g/rf
4QHU/9DwcSiBhg80/BzOQMMPGr4OOdDwhYa/wzVo+EPjx4FpLyR+oPHnIA2N
P2j8OsDiFxr/DjbQ+IemDwdY+oCmHwdY+oGmLwdY+oKmPwd2aPoDALbKKvs=

         "]]}, {
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 8.96, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGDQBGJGIGYCYgldl5DfipoHwps7526VOeLAFXcrxuOB+oHb
H64WcDMecfjTV5A6dZ7agVAVtlU/Gw47vNvPlvcoRvXA0+tSHHV5hxwefJhT
pi+tcsAq29OoXeqgwyVF4/qam0oHkg+o7/thtd/hSNDJ9pPTFQ9ICW7ddEVk
j8O25vgJYmEKBxj2fpG2vb/DISDzteFxDbkDVye3dW5dv9XB5LS4c+JS6QOZ
x25XHJy2yQHiPskDZ2UeZh1zWg91j9iBkt3XF5luWQm1X+TAw7VbZMUnL4Ha
J3hAwV/19Mzb86Hm8x245byCd8+C6VDzOA/MTVgtO79zAlQ/ywEmaVu3St9W
qPp/+73aWf2VRSug8l/2M7+uvipWnQrlP9nPqB9ZUNjm6sAABRus2qJzU/1t
ofL2a6DyUP32AlD9UPPtPVDMZ3GA2Q91n8MsqPug7ne4CXU/1H8OklD/Qf3v
APM/NHwcSqHhAw0/B1j4QcPXIQsavtDwd7gGDX9o/DgwQ+MHGn8OMtD4g8av
QxI0fqHx72ADjX9o+nCApQ9o+nGApR9o+nK4A01f0PTnAEt/AL+GK6w=
         "]]}, {}}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 10297.418870152598`}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Energy\"", TraditionalForm], None}, {
        FormBox["\"Total Flux\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-8) Pi, -25.132741228718345`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "8"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-7) Pi, -21.991148575128552`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "7"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-6) Pi, -18.84955592153876], 
          FormBox[
           RowBox[{
             RowBox[{"-", "6"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-5) Pi, -15.707963267948966`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "5"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[5 Pi, 15.707963267948966`], 
          FormBox[
           RowBox[{"5", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[6 Pi, 18.84955592153876], 
          FormBox[
           RowBox[{"6", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[7 Pi, 21.991148575128552`], 
          FormBox[
           RowBox[{"7", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[8 Pi, 25.132741228718345`], 
          FormBox[
           RowBox[{"8", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {
       0, 10297.418870152598`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=1.\"", "\"\[Beta]=1.2\"", "\"\[Beta]=1.4\"", 
       "\"\[Beta]=1.6\"", "\"\[Beta]=1.8\"", "\"\[Beta]=2.\"", 
       "\"\[Beta]=2.2\"", "\"\[Beta]=2.4\"", "\"\[Beta]=2.6\"", 
       "\"\[Beta]=2.8\"", "\"\[Beta]=3.\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], FontSize -> 10.88, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.88}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13235294117647062`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledDownTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #7}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], FontSize -> 10.24, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 10.24}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.10937500000000001`] -> 
                    Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], FontSize -> 11.136, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 11.136}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.14080459770114942`] -> 
                    Baseline)], #9}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDownTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], FontSize -> 11.136, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 11.136}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.14080459770114942`] -> 
                    Baseline)], #10}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.23706896551724144`], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], FontSize -> 8.96, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {11.136, 8.96}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.06401785714285718] -> 
                    Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "8.96`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDiamond]\"", ",", "10.88`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledUpTriangle]\"", ",", "10.24`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledDownTriangle]\"", ",", "10.24`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "10.24`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "10.24`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "10.24`"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyUpTriangle]\"", ",", "11.136`"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDownTriangle]\"", ",", "11.136`"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "8.96`"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.737979987962*^9, 3.73798100123*^9, 3.737981243068*^9, 
  3.737989186476*^9, 3.737989773428*^9, 3.737990619934*^9, 3.737996744398*^9, 
  3.7380098177320004`*^9, 3.738012192408*^9},
 CellLabel->
  "Out[321]=",ExpressionUUID->"500448a4-bfe9-4146-a0f6-a3b3e6903b07"]
}, Open  ]],

Cell[TextData[StyleBox["Find Derivatives",
 FontColor->RGBColor[1, 0.5, 0]]], "Text",
 CellChangeTimes->{{3.737974639395*^9, 
  3.737974721185*^9}},ExpressionUUID->"acd5f5b4-f454-43ae-9ff9-5cc9a52dc1ca"],

Cell[BoxData[
 RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"listt4", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"j", "=", "1"}]}], ",", 
     RowBox[{"j", "<=", 
      RowBox[{"Length", "[", "\[Beta]list", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t4", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\[Phi]ext", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", 
               ",", "\[Phi]4"}], "}"}], "=", 
             RowBox[{"listt3", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "1", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                 "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"\[Phi]f", "=", "0"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"h0", "=", 
             RowBox[{"H", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"a", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]1"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]2"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]y"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]3"}], 
               ",", 
               RowBox[{
                RowBox[{"a", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[Phi]x"}], "-", 
                   RowBox[{
                    FractionBox["1", "2"], "\[Phi]z"}], "+", 
                   FractionBox["\[Phi]w", "4"]}], ")"}]}], "+", "\[Phi]4"}], 
               ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "a"}], " ", "\[Phi]w"}], "+", "\[Phi]f"}], ",", 
               " ", "\[Phi]ext", ",", 
               SubscriptBox["hereH", "arm"], ",", 
               RowBox[{"\[Beta]list", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\[Phi]ext", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "2"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{"ND", "[", 
                RowBox[{
                 RowBox[{"ND", "[", 
                  RowBox[{
                   RowBox[{"ND", "[", 
                    RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\[Phi]y", ",", "1"}], "}"}], ",", "0"}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Phi]z", ",", "1"}], "}"}], ",", "0"}], "]"}], 
               ")"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"xyzvalue", ","}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"ND", "[", 
                   RowBox[{
                    RowBox[{"h0", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Phi]x", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]y", ",", "2"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "4"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ND", "[", 
                 RowBox[{
                  RowBox[{"h0", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"a", "\[Rule]", "1"}], ",", 
                    RowBox[{"\[Phi]y", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]z", "\[Rule]", "0"}], ",", 
                    RowBox[{"\[Phi]w", "\[Rule]", "0"}]}], "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Phi]x", ",", "4"}], "}"}], ",", "0"}], "]"}], 
                ")"}], "/", "24"}]}], "\[IndentingNewLine]", "}"}]}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"listt3", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"listt3", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", "i", ",", "1", ",", "1"}], "]"}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"listt4", "=", 
       RowBox[{"Insert", "[", 
        RowBox[{"listt4", ",", "t4", ",", "j"}], "]"}]}]}]}], "]"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"\[Beta]list", "[", 
    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73790578819*^9, 3.737905817094*^9}, {3.737905928505*^9, 
   3.737905930734*^9}, {3.7379060343719997`*^9, 3.73790605558*^9}, {
   3.737915080697*^9, 3.7379151033570004`*^9}, {3.737915136238*^9, 
   3.737915163516*^9}, {3.7379152018859997`*^9, 3.737915204744*^9}, {
   3.737915262869*^9, 3.737915265118*^9}, {3.737917350358*^9, 
   3.7379173675039997`*^9}, {3.7379173983310003`*^9, 3.73791744863*^9}, {
   3.7379175632139997`*^9, 3.737917573197*^9}, {3.737917777321*^9, 
   3.737917812045*^9}, 3.737917948777*^9, {3.737917993009*^9, 
   3.737917995005*^9}, {3.7379212371359997`*^9, 3.737921270576*^9}, {
   3.7379213273640003`*^9, 3.737921437196*^9}, {3.737921468924*^9, 
   3.7379215051*^9}, {3.737977046237*^9, 3.7379770828190002`*^9}, {
   3.737980110692*^9, 3.737980157883*^9}, {3.7379801955550003`*^9, 
   3.737980252675*^9}, 3.737980657708*^9, {3.738009972591*^9, 
   3.73800997994*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"24f345e3-2bd1-458a-9153-7edf41ef0bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<listt4.txt\>\"", ",", "listt4"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.738058826803*^9, 3.738058853561*^9}, {3.738059114035*^9,
   3.7380591157130003`*^9}},
 CellLabel->
  "In[351]:=",ExpressionUUID->"b7e2c8d1-c766-46f6-858b-6c2c7e14c6fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x2\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyz\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x2y2\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"x4\[Beta]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"listt4", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "All", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.737980399297*^9, 3.737980422034*^9}, {3.73798937751*^9, 
  3.737989382521*^9}, {3.737990241724*^9, 3.7379902435150003`*^9}, {
  3.7380099892349997`*^9, 3.738009995106*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"a9a70368-462d-4a8d-b969-1d83028c641c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<2rd\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xyz\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<3rd\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x2y2\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Cross-Kerr\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x4\[Beta]", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "\[Beta]list", "]"}]}], "}"}]}], "]"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"-", "4"}], "\[Pi]"}], ",", 
     RowBox[{"4", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Self-Kerr\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\[Beta]listname"}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.737980454613*^9, 3.7379804581070004`*^9}, {
   3.7379805105299997`*^9, 3.737980511474*^9}, {3.737980592308*^9, 
   3.7379805960109997`*^9}, 3.737989403723*^9, {3.737989573363*^9, 
   3.7379895841610003`*^9}, {3.7379898316029997`*^9, 3.737989844057*^9}, {
   3.737989886571*^9, 3.737989889802*^9}, {3.737990252493*^9, 
   3.7379902562349997`*^9}, {3.73800987694*^9, 3.7380099033459997`*^9}, {
   3.7380100189969997`*^9, 3.738010036163*^9}, {3.738010174707*^9, 
   3.738010205932*^9}, {3.7380102365959997`*^9, 3.738010240082*^9}, {
   3.73801027562*^9, 3.738010290586*^9}, {3.738058544783*^9, 
   3.738058547483*^9}},
 CellLabel->
  "In[637]:=",ExpressionUUID->"592d4a65-c83f-4b5a-b11c-55056473e671"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
mAsT1n1RdkOcT05Yi8WsjvscxO5o4ODXhprnYRYjVpFfDtRx7nx5da0Y8xyZ
0bPmUw2nvrfF9DHmHopjGExXcxrz7C/XYi7btl0pZLGSw616VeopZrbqv96K
NRWcbsOTO59j9t3ZEzEj8ogT0TxS14HZUuOOyjaZh5yTEat1rzAfPz9Z9vLw
A067eevON5jl/BME9Nzvc4T5tKXfYh4NUnetDMnnBAbZBY1izrrSX7Ut6TbH
JZp06D3masF5OX2rLM6mpZzkj5i1JPZ3qoRf50w9arf4jPncAcElVVsmZ3dM
ccQ45u7HGo8EXAM5BgZ6Cl8w9/oX66o/PE7VW8k7+J+zAg0mLDOjqJDb+/G/
91uWOTTvz71G3SNT8+e/6/XkiUnY+KdTB27YRHz6L5+H3Hc9vnOL2rE/J+zD
f+dh2PhW92oetUUrY/rdf+epJxvdFlBA9S016B/+L559QSpHXIupQZ2ZOwcx
9988e3aaVEZlN2Rz92H+fSOt4fHWcuqJQhPDbswS11vEgjc8pmZVZ/x78d/+
kn55UHkrqTObk7c3Y7ZLJNTyLVRR101t727AfJllufHFtyfUFLezX6r+y09s
cdWR/npq/SDyK8A8EDUkJPWSQ61SffM1B3Mo8JVNv0PU4Zdxr1L/2/9+db6K
3qdU15gy3ijMqjomDyS7nlGl50lmlzE3aLvaBbc1UZ/YqKz1/u98tBKKqQ0t
1GPR34aPYD6vedf2dnUr9XFh7m8jzKsadVxrHj2nFp36EK393/mqTx55ce8F
laj/b1X2v/NXMVw5cq2TelDZ78wo9nvRSctP+H2ri5oSz3P/JWZhGq/IIbtu
an6Qq2E15onvJ3O/e/ZQpW6HJyVivt1MalKLe01ln+e5rImZvdTL4t7YS9W+
0ZQqhzl8Z8zRV6m91Pp4fVF+zI5Zn8f98vuoNr6nt77G6sGmS/nrqprfUMXo
UgHumHmKbF/FmQ9QW+yDLhpjnhnjz7DrG6B6qke+UMbccchTZfHTIDU0lXb1
O1aPYkkUi/18w1RqqODxc5iXJ468cMOPUeMt8arGWL37yVeiauo+RnWS+PMR
h3lSfk2yeuEY1dDRcn4Bq6cDRysceXe+p/pyRSvfw1zRuPl7HnygnhZ8MLqE
1d/z6f0bvx7/RLUa87gSi9Vr98eq/t13PlE7rGj/jmB26oodqP7yidpyZnaI
gNlsjVYuw+czlVBYfKcOq/+UCzfUt10Zp/IptYR8xfrDe2O7o+ezv1KTTJao
eKyf6H4OdesY+UotPVZ/aYIbqzeRud4qshPUNXml0g8xW9dMxkxmTFBLioWr
dTE/3RZW6ZE+SQW/1Z02XFj+N9yWPJ7yjfr8ii/ZDetfq/dbiA2vv1EPPnR2
xGF2MJraISv+nWr8eyv3uxU2iEVoGL+99p263/dLhgPmqNmWy8cSf1AVt6ps
MMP6ofrk/DdFgxmqw4TQmAjWP133CPi9OTVDVU8WFWn9y4aEWKm/sdEz1I/k
mNJQzJME6prxZzNUXG2WzvgCG2470mXz9GepDjcnE8qxfi3eIXUYB3NUhf7b
G9Sw/v6rlFq6Zd8vakn1pEcDNj+0b9sn5uv8i+pBPtvvgPnOPc1LrVd+UbXu
kzN+Y/OHdc72fQFNv6hl8pIkFcwPE6RbX5vPU5vLD6snfsPmA+8/owmuv6lD
1NO7dk+w4Yty6YY1sQvUexTek1zYPNSQf/+CU8ECtaFr1TnuPRtSCfm9j14s
UA2LPIvXYzaUyrp5YuNfqirR6MCWMTbkrWMqoLS/VPWNBcfIo9j+v3rohhQt
Uk9lm2yQx+avobty52e7l6kn2tvM2T1sqOQvti6YW6a67h7V5MOc7LlX6/im
FeouGAsM7GbDIaUjXB3HVqhnQgK4nbqweIoZSQWjK9QYY6+dsh1syH30q/L4
t1Xqe+P5mojn2Hzr+vnfeBQXTJQleLQ1sCHkfK3x0RweyLKwf2dfiM3L1PlT
G0p54Br7R0ppATafiuyIbG3gAZlnRY/4MKc9vP1k7ygPGFYfUSnJx+L7xVCW
k+WFZW5XgT932DAXbCf85SYvPBQ66ng+mw1n4+a7Lqfywf2v9tbfsHne7taO
Y5lX+eE3l5W6bDB2XmtH3Qqz+cFxQ6/gPux+ge3D8qos5YftFmxlO+x+ok13
IrK7hx9IkngqOwCbf0duF/NJrAW2f2b1n4tskJGS4PHOXgsya1H7nXNseJe8
XLy/VABm074E+jixwSOujeddtyBsSCW6vN7HhmfR27axXm6A9oHHazy+J4KL
6Oenm+xF4Wqbrk2DRSL81G7VfR8gDnp3HQ/7MxKg1Gf93xO+m2E5SLYv69FV
4LsyHnkiRRKM+EY6t9xjQWQ60UQyZSts1ZRRmqExwYzvilITQxqEdMbZgRrx
4Fqv3XswSRqOxf0dtVCNh4CA3+HNN6XBTyqgikiJh9tfvXtbiqQhX6P9+zPp
eFhod7rS1iENNRHHXr7niYe869p9naIyIJt2fV63mwHLCr8jBtNlIEDKb+iI
JwMemHgP/CiUhQpCZ1RWDB1mkgh2ow9lIUMt9XtZOB3Uh9+86XgiC0l12Uqc
QDpUntd/U9wmCzljg3ztZ+jASZbsPzshC3m2vQ355nToHml8PU6Rg6bxkwSn
TXT4eUGia/SeHDzQvPnDKDsONGtfHu4slQO1/RORFalxcJkvsrO+Sg5wQTtw
solxsJw61ZHZKgfNe9e5Dl2JA7461O7wRQ5aglplhd3iQIL/3It+BXk40yO9
xZAQB3tucpo778pDeXP8/rGcWPikWqpz+oE8lAYEaXakxsK1Z9mPuKvk4dJO
tLX8aixMfgvL1XguDyn6xUEnQ2Ihk6oTdnNSHq4YOt04aRsLERedpB5J4uCE
79r1PYKx0K/T2/dPGgfC9HS9PdyxoLL20LVDOBxY3h5pS/0TA4MZ+wTGKTh4
5fSqdO+nGFBvlvq9RRsH+5xftm2ujwF6YtJDd10cSKyYpmg+ioF39oLe5fo4
mM5Q8jxcGAOaJBrlnyEOjg4u73HOiQHWj78fzcxwMHDEgevk9Rj4UH0hJ80C
BzwP3jw6zoyBPVETDp9tcOAaLWhqExkDCeZuEup2OHgU3ynn6R8DnyUHe8Kd
sOufdqwLPxUDOh8sr750xYFWDiM88UgMJBU/N97ijgM9q6q5mwdjQFevmvPQ
GwfOVQyFAlIMpJ29UfIpHAfgZ6ve+ikaTOuPMkxzceA9/oPl5xENt+I6Dt64
i4PYlN2PJmyj4beVAdenQhxc/evs5mcUDXfGNQLDynGgGtge30qJhuWNm9zL
nuHAkeJFz/4WBQ9OvAKJcRz8yt78/kRwFNw9E/rt8CQOrPx/dQh6R0Gmr0Ja
3A8c9NUeDxw5HgXx4cHTC79xsFiz+k7AMArcbxKy367Fw+HtR5RyN0WBU267
ySZhPFw2Ykk/F4gC64KA+UMieJBeeyOevEIDqHxxqGELHjzZRhzGOA1kXl1c
uqWEh4ZwwTxcHQ3EB2XuDW7Hw87LHVmkchoIjrVYi6nj4YxpYe/ZAhosfJe6
H6WNh9dJnYPPrtNg+lfT0TpdPAxcV0obZNFgfOk897w+HkyZyE8rmgav1z2z
8zDDA96z+USPHw1eiHjz5VjgwW7ooIeIFw2QpGTZGxs83LUnemadosED8rm1
Jk54IKbi9O7Z0uCuyuZHka54UB6zFFS0pEHmLo5LzSk8fLfgfbhoQoN4PfHK
bd54rO+KBt7RpUGkcb3bqQt4eK53JTZkLw0uW3iuz7qEh9sCSTYlGjTwsRV9
0heEB7M+a1ttNRp4ONee2hCOB5XzL/hJKjRwPuUuYkTDQ1k698g5Cg2OnNtY
dyUWDyDHbSVOpoHpxSee1fF4MHraMyRNoIFe0Enx2QQ8bD8UOhcrT4M9Ees5
Ssl4cKGtE7GVpYFqXNXZEzfwoL+NVhQvTQNygptERgYeZHCyX7kVsPxfF3r6
OgcP/T/TSuXUsfxnVngL5+HhQ9Ppp9nYfgTvHN9qUICH4sYPuAgzLP9lj3wr
y/CgvrD9qYsHlv8qZ5npx9h+E4rW2Plj+W9Y+1zxCR5eCaqk3qfRoLfdUT69
EQ8LXgk5NrdoUPqVtzPkFR6Cvxs4h73D9o87sk3vFx7WXvna5XMuCvymg/V2
LuCBzvdxa3toFEQ05B7DL+PhkQ3hpENCFGQ4TUdx8xFAhmtrAH95FHSnxQ83
ihOg+HS8ms9SFOwVbbyqv4sAorszWZLXo0GYR3XmwEUCSGVdiD89EANbe47w
awQQQElWa+3YtxhQuBUiQwomQNh0QtpRrJ7o6bYZ89EIIKyTE6KhHAsBwady
m64RQP3QeF8yVp+iTJhVj68T4MfuD4zOxFhgbynvyEsngGTvs2OLd2LhfuW/
v9G5BGgYff9Mrj0W3s3dtDZ4SIA5vu2+3tJx8K2x8fTuCgIkn1mM4d0RB4vs
r+HkJwRo/8RVG6YfB5t2aBataSTAv64Ta7aciQP8qlPjfBMB6FvEhzVC40C1
I+rN5+cEqKLkH9mB1Wfjcz28Ld0E2Gol96DycRwc1V7YWtlLgDd6dpbQGgcn
1smr5Q8Q4HCRnGTuYBz4DhgYpg4ToARvnX7oUxyE3fNyih3D4mHJnWn6Fgfx
AckXAz4RIKX6gK/YfBykGdTQPb4SoIPRfUBrJQ7KP66tMJwhgFmxU97a9XTw
H3jZwvxFgP5R0112m+mg1ZE40L1AABcRSdkQWTrUVUouO3ATIaHS9a/2djo0
MxQP+IgRoWzRMavKlA708KkjjyWI4Cgy8rLUig6mfqUef6UwPzxrEGFHh04n
rfgoIvb5t09FS9zpMLDDqOeGBhHrQ+sGTLF+eJMk9HF4DxHyJZMUpaLp4Ly1
6xd+PxGW44+WtzLo8IHn2JZiAyJ8W827gFLoMNXncRzZEgG/dp3r/kI6PHih
fGGNIxHShdZbiz+ggy/nB830OBHkHgf7dJTT4VdBQH6vJxEitO6TZmvpsBoS
+/3rZSJ8nlsGoQ46IF/Tf9vDiCDMO2sr2UOHKPcNon6RRMg+EEZf30cHAYtU
jRUGEZQzL2nWDtNBlJAfIppBhG2p9Fi1KTqQnjev064nQvdaCx2lNQwYr2NI
X2kkwuSxCDk1AQYUPjTf3tRMBIXZ/GUVIQaoZvRZHu7EPm8wlSckygCt859v
nHhHhFKXn94XZBiweKKw8N5HIqz/eGFBR54Bdce8a799IcK4ziYfPgIDQG9+
NGCGCHur3m6JV2SA6aY1CkxuEtx9uEUxRp0BxB6D23FrSBDWSNgksRubT67G
ykWvI0ET77HrBVoM6DVtvRmxngTd9UcN9mszoGStgGSYKAn+anAaenUYENtk
nBy0mQTXH+zK9KEywCWSsTFgK/a6j83lDfpYvLovmBdlSRDfVevMMmSAyJKg
gA+eBNfqdIsvH2LA1yqz6HNkEjzT0Ew5Y82ARn8W12klEswJiU652DHg4o/1
f113kiBUQWWf7SkG9L0XmbTWI8FXTcn6i6HY/JRt5WFhQIIbPcb+NBoWj2PS
BzMTElSe6TW4TmfAnj7xtwetSMB4//jqsxQG3Hwu0a7pRgIRqRoB3RIGuJbK
PJCKJEEJb5dXzCgD9no5K0vGkMCnIbmv/BMDxJSy88UZJGA/yikdm2TAs9vy
2G05CTtf4/X7/zBAIZXAXr1FArdrKy0/N8bDVCjl4gdEgnbX77926WHzoqmG
5n0uMjjtK9Xvy42H6QP3bifxkQGXz1tw6148nN4vtTFEgAz7gsadPUviwVGN
66uZCBk2qk5JjVfHA0i0p3+XJ4NZ4VJAXlc8CH04uaJGJQNfTmIO93I8RL/t
P7P1ABm+pMrq+XAzYbXXpJ/biAxh5oyHffxMmGndUfrqMBls2q+6sESZcLbx
tnStNRncrsyYDksw4WPNZvodWzJUtjS5k2SY0F+y5OrvQgYhE9EcfQUmWNw7
3+F0ggy+rPj8JGUmPL/1fq+BBxmqHQhRQ6pMqE1uFZM4T4aLhYRxKy0m3ApK
bqoKIwNvfHromBETtvrx77wVSYalbG3bGTMmJHkFZdFjyNDn9sl+wYIJMceP
B9hfJUMRT+u62WNYfAbbKEuZZLDftqwR68kEDdFnTN06MoR/a+QxiWFCW8Gc
dfMitv/29OfBtUxYaOWp5fmHxbMz9MfXBiYofMGKDa8CUBa5vCyeMoFG3vWz
RkgB7t5UzlvTxgSd237JZTIK0OLNit7Sz4SyjF+vM3QVYN/i8vuPP5iQlvD7
yEWaAkymKfz0kWZBSwl/fWmsAmid/WzJK8eC+XYJ8vd4BbAfXF/NxrHAWkhr
3jNZAUIv9w6kk1nYnBp43TlPAXp2fzyetIMFEZELfcYtCpCBEqXlDrDgtP+i
rbygIlzrmfUmerCgxDFOadMGRTj2qPsR32kWzOlvWhYQU4SjOl7h78+wIERU
NXduqyLwHtIpv+rNgoQHblPNSoqQfHOe/6E/Cyq+Pr/iZaIIuVUBiwo0Fix2
HbV2M1eEuNWawKdRLNCt+kCytVKEEWHjWvsYFjyPWW6j2ivCZFzO3RA6C4YJ
apvEzyjC+I6/QVcTWMDjfKPgCV0RWILcVd/SWWB0kBTygKUIijVe0YYZLGBt
e2h+h60IXlYl9pmZLNi8+GKOlaYI3FQRFZ0cFlBurOq4FigC57DYx0N5LDjc
497D/1wRingf7qgsYUFy9dydpZeKwJbn93j1gAUDOVcCZroUwf5A3efJUha4
nU+XHnqjCHfuP+gRKWeBv1CHe8kXRQhSc+tUq2RBhoHGos1aCtgO58801bPg
fsmxGw1CFGB6qHY0NrCgenOIhpIIBSSUTjnWcFjQ/7nx/OoWCji/uXsnu5EF
IrEWHwuUKfDMXixKo5kF8j8uRojvoEC3YiZrYwsLVG1TZcN3USBO9dylccxm
CiPHbHQoIOWRtxT3nAWxLWfbV8wpML8qHnzzJQuuqyacOW1NAW9xO9mj7SzI
S33I/9qWAu9dL3cIdbCg0WMBCo5T4JPC1nPenSxY5o+tsL5AgaCxc/t4elgg
5FNoXX+JAj/2Ez5nYZZ60z6tGEyBsl6ztt2vWKB1T1x5hUYBI9WmYw6vWXDR
KDf7XgoF3okNqQT2YfevpU37xNKx9WprTOYxsyW/DoRmUSA6+26nTz/2/fqi
Km6dT4FXbHdFhzcsqLOwLqu7T4Ek11v8LzC/qLpkrlhKAenJslOaAyz4GlcX
t1xFgfL7co/5BlnwZ/odybOOAn2578s8MPPb8T7tQRSYeGVwoBkzkWK6nN9G
AbGT9dTLQyxQZ3uni3ZSYB9Ns6IdMyywNUNfUSDCUeaN7FsWuDx/42v1lgJR
dX81KzF7qy2tr3tHgWN8xyJWMIemyRUpfKKAb+w3lt4wC9JPu39e+kaBG0+Y
/AhzQTed5jFLgRrlpfBFzJV7iuV75ilgZnu+Z+cIC3oFftrnr2L5cdomfQPz
R1+JPyK8SvD7z5BsM+a5gb0pIWuVIK/DXnQGM5ee885xISX4We+wJDnKgo2F
EZ2WIkrwvYD9XgeznGjeudpNSpB1/kGby3/PXwe1CihsVQLhaY8nYf89n/1+
8i5bVgkMBL0r0zH///ltsLnl1/Lf89v/A8ofjxc=
          "]]}, Annotation[#, "Charting`Private`Tag$53172797#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172797#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53172797#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
FZeIi//7v+b/AW2Szq0=
          "]]}, Annotation[#, "Charting`Private`Tag$53172797#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172797#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
aEoMbvaNHLuDiwOcWJ2K3l7cb96wyD5LfRyj+Fk/a0M2YANd3bU3+zhBMTaL
fritZ0XviS33ckRDPUYScf+UYXzLXX7P6ZXKEXyPW8HVt+DDSjeHHmodbLyf
Dd9vl9pt9e/m/HpzzNMBd1n8D1Hvv12cVfErPf64Tasv3xDl6uLEPwkbfYb7
5sazuvtXdXD2n3y6S/QAGw4qx3+LCmznkNIzU6m4RWkdiYOr2jnfpJy89XFn
Xzjy15O7jdNmZHTjAu6uCr2aHJ4Wjv/x1uRi3Ju97QdnhZo55EvtpDrcYT6H
tSJF33G4zY8TenBf9pMdeivbyMmdbL8xj7v3Fv+OC4oNHHmznnerD7LBOGCK
waf0liPVb5cogVv5dtVO0HrDGWkUjNHAzQrOuT+gU8dxGFRDNNwCIdhnH1ot
p/j6kM0R3OOhDhHFxjUcwu3JpXO4T9NNvpqbveJ8zjZdcMH9lrFz9/SJas6b
PMMr3rizw9eOKNshzqGMmbww3BryX70jmyo5jIN5fjG4RRVLSQ09Lzggx1ud
hHuWdK+V70s55znPvM8j3K3UM34wVcY50kDPysVdoLJNyXehhHPkSKVxIe5I
1b8dxXzFHKH/ou2e43ZTbw2YFinkDLWv/16J20zr4VaVzU85m++qfX+F28Zl
vKDB5AlH/Oi83RvcW9zD1+x1yOFsXrp0uBH3oLeGbYlvBifk0r3sZtxJ/l2l
Ksw0TpbLiZttuMsEfm4xOJbE6RhsedWBe6fEnndbb8VwbKKW/btwX94nsKh6
ksFJPDtQ0I27pUircI2tJ+eDxLWTPbg73HP1NZ7a0PwbO93/Oclz/5hZ4m1a
kyef+D+bFZx+vSc1inZyYZzy7/7WdFGJ4+4JtFq/4ILOf+N5xEGz6GEKrV6l
Ja/933wcqOrTv59OE1JtlGv9N597ZYPrPbJoek88+N/9i2e391YL21wab1eT
3VvcXaxLl6aIBTSx5mb1Wty/4uIri6Se0cRe+XhU4ZaIqRX1WV9EK+xrVHvx
Lz/mnCONp4SWZFDzXwluqwiFCt75UloAwYarALdXmJnw24nntNVpbMnsf+MT
kltq0fWSVqw6+zABd8/tXkHpBg5NO3yNVBTum8BbMPUB0QR3POcO/Zf/Hg3e
4o5qmivfJ0133Kp6Rk8km1/RTgSc9L2Iu1LX1sqnvoZmOP7fTut/87MzPJdW
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
          "]]}, Annotation[#, "Charting`Private`Tag$53172797#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Hne0r4lqvNArzKmjYT4L92V/8aFW8XYsMVz3SAPu/gBuNWfZNuzBvMG9LtzG
QdNRXHKtmAK96/oQbvnb9ftBtRmryvC7vIw7LfRBzIcDTZgTlpG0wQrfjzDG
F19qI9Z0zkJNFPcEzTGu3PgF9jXm7FtF3CcjzUYtLZ5jJg3Ya3XcrVH7NWeO
NWD5b8t0dHHfj90wLu+AMMaYQ6gN7j1Soz7xHXVYI1Pc2g63kGwlsa33Gabh
45FyEfcsMaKLa6Qao7o4H3XH3UU55Q/TVRhFeynAC3eJgqKc32IFdrhNSdof
d7zSv+5yrnJscpxT/TbuqypdQTMCpdhll8DnNNwWqjm7FHY+xkTkMp/H4LZz
myhpM3uEHVh0VqfjlvCI5Tnk+ABTLBuQTsL90WePfYVfHgaKi4GpuNmBPZUK
9GzspWajJQt3Fe9vCZ2jbIyv4lDaXdz7RQ++2hWQiF267maTifuyLu+Skk0U
pmhgFp6F+3WZaimP/U2sgPfLrmzc3R6F2nse21EbXxw2+c/sm/rfLFi3qeoX
vSb+a29RcvLlwawEauLQqdX/+uvKFRK18kilRp/8HZbx33oecdxblpNJbV+F
UPZ/+3G4fkA7Jpe6bl7rTxpu+UPioS1eBdQh1/HB5P/i0fTZZW1fSBWM1FZn
4u5Jc3GZJpRQ9byBJx73n+SUurJtT6hyDt+PROEWTWwU8t1cRnVzO8gd9t/8
6HNO1HUVVNSiqhqE2zZOpoZzoZLayers8cHtHW3B3zr5lGosyDd1/b/1CSus
tO6ppWreOed7Hnfv7f6N29sw6uZe7+mTuG8BZ8n0J0TlviHXd/S/+R/cw1ne
3UCVoljyauNW0jJ6JNb5nJqR2Hh0L+46DXtb35YX1JWfHZso/+3P/thCal0j
VUgi9gs/bje1ezbZVU1U4iHdFQ7cq6rP1nCVNlO7/t6O+o0/zxJ7Jqxb81up
xW8yufpw2+06vGKd8Iqa8ljkaipurZS82D+ZnVRX/tySMNx8IesEjti+pq5b
Xmt6A/e3H+ezflzsosZISqUa485+SXihHP6W6jycE/AT///GL3VHr+Xvpj7j
cWL34Q5QuXPsTVI3dfrvF7F63KfYo2M38t5R1w5skIrFLeKZt6Hy5Xuq8kTN
LSncHA9t3oSb9lI/PN3usw73zBB3uu27XmpovEzXKJ5/Oo5c3LU40kftnJFl
FuAOI1DMD3IOUss6HzqScC9/s251kB6ilqc2qK7D890vziIlY8chKutsysSA
Gf58SHIx9twfopZm/1wqxd17rPzUOpXP1ODDRJVzuMvrt/zIhWHqbzPz0Yr/
8m1qD/9XuxHqpV08YYfw/OxYpuTxOmeE2p8jyy2A+3RnWG/V+Aj1Wz398wc8
35tw7c+KcB+ltm0ye3ATN+Va8h6FwDHqxoKLITn4+fDZ0PaY292vVD4O9uFB
QzZoj95y6PjwlaouZncrF3dacNaVXeLfqI9cjsq44rasnrgzkf6N2hz8qO6v
ARsaFPwrnFInqDOOmeqbcWdvzhazY05SfxYL7dqJn1+rDxpl695OUg2//XMY
0MPzkcH33eLCP6hKas/Wp+EWClI1HEj4QcXv+tlbcN/+2eh9PG6K+pn2SoQb
Pw/3TPyeJOvPUOmpj8ba8PPVXp3nxvsLM9RbJmWiIbhjw7b/DQudoWqNkSv2
456QoXKNPZ+hMqNAN4uKx3OKJp6r85P6LjIm8Qp+Xgt3bDeTglmqP9fhLd/x
836umFq8VXOO2nAy9ooPXj+0K2gKXT0zRw1o3/RhC+6cfDXPpsA5qpZNS9Zj
vN6wzFDU9HoxRzV+Vy0/rsqGx7E7mt6a/qbe9J1VN96L78+V+Y+x9n+oJ8l8
GjN4/TIuX7yZK2yBeuVg/qUavD6qy3tw7XTBAjVkLPuCDu4kmbzu0tYF6uTz
jaXNZDYc3s5OO8f/l3qE+t3oLYkNuRuiSCjlL5VD5cjZIQI+/69O2n4PF6mR
jT9E+qXw8+OehNvP18tUrckr1iZb2VDBXWhZMLtMbbQKOYiJ4efpxQP77URW
qLxnQgP24D4iZ72m4/gKtY25nUdMFI+nMIJe8HGFmn1CQL1XmA1ZpXMVdpOr
1B1aqfWa/Gwosx/9N3Z7Dfww3XMllIsNfm41hscyOCBneWlUZAavl6m/L2wu
5oCAfQnpLtMs4BXYHdxUxwHDdmbV2BR+f3ic/fTARw5I0Zvf4/yDBRVzEfIS
4uug3ZWD/8kEC2Z9bfnG09aBocq8g9woC1zCf3d6J3ECt/OSbT5ez9tm7j7O
iuGGw/w/1Xvx+8Hc+o8O9+9yg4agh+Af/P4Q7x7tWlHMDU8PK6sI427R/hb8
uosbHBaQvkktCzQ+ZBdyiq6HSnkt7MlTFuzcLspx5e562OJm9/bsExZ8YiwX
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
          "]]}, Annotation[#, "Charting`Private`Tag$53172797#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
2vrlUG8tTddhJQl89tvd5KmQQ0HbF0PidiVDscns26grcuhcwHW5w2nJIBW4
JZg6JYtaHA6TJa1S4GLea7HMr7Lo5KpRi8m5FKjsCH9S8kkWEUegL9g+BY7L
rk90Dsmi7W6uBp1uKRDeNGMu0CaL2vzZ1TRCU2CGr4eS9FAWfTNMcDlQlAIv
8mh9DDdZdOYO+2mRvynQnbHT6sIHGeTPw+kwcDsVWPI8kz70yaB/au+1PSNT
Qe1hSZ9luwzq/fCSmzUmFeKeKR4/VCuD2rMPhkkmp4JZv5yhbKoM2pRQFLat
KBW6+QS1hixlUJ2FeK1LO+6bczIm7dtQ1RcuVVX+NOhyKZ/YUyuNhq4uZzdH
p8Gb0X9m2uXSqHSY4+ah+DToP6lVc/ShNBJsDWh+npgGw4ebqKfSpVHxatit
B+lpMCX7bue1QGlk5RUj5FSUBuyDS4F1B6RR11xUpW1jGmga6PIfqpNCK4Nn
7W4tpEG+Ys9+s+eS6GGsl9AG63RQS+u+7PVKHJV0uhn5sGWAnNrBIdGHYqhW
poaHJzsDpmqObOR4LIK6lBU7I6UzQfJSrd1VqhC6ve9H0WJCJqy9Frw/e0UA
XbrV9ZnyNxO8MV7Li/+2IDaH05lrR7KgencH+lPBjXpf797AEZcFamLR+oL5
3Ehrj9UQa3wWFC4d61ZN4kZyfD+51nGnNLSPOvtxI1q9rPsfWhZcNW1fG9zL
jdJa6/SHkrNg76U2rfoqLrTVfXvwbUYWPM19VR3+jBMVP8n8eu5RFpQKNJeJ
PedAF6VPXFd6nQXmNgKGYw85UPS2Nwr8bVnw98HZz4VpHEj0cTfvH9xah3+L
aPpzoMVdU0V1HVnQ6icbeHY3B7py9KnwoZ4sGHsfcCSnaCMKiu3pUBnIAoH8
HUNKSewINSa/8xnHnz8X4P37Njvqzq7be+hrFlhhzbx13uzI3EJ2hH8iC7IG
zmLGx9mR8ZcDHA8ms0CJ526eJy870pmT+t77PQt0L3/xeHqTDVFbyp9wzGWB
t2Yqm7YnKzKSujPzeTULEhMlh0/asKLxqr6LKWv486Yzn3oasyKHDRp7j63j
88nNdcpRZkW8+feaHrMwwJ+nuIV9cgPa53G9wYeNAdeH66PabDeggZrdOkOc
DLhz/YvQaXMWlHfs+7qCEAMKBy78uKLDgirDj3x7gfvVrm+Nd9VYUOejWLKd
MAO4J3761m1hQYI9JvfSRRggwZguxZLWmexJf1I5tzKAqCO8vyNijRn+qTP5
hRQDNMPO60+6rjAZ/JeJz4j4eAvB922MVpjnLR2ea5AYYOWWwfpWeYXJefzG
i2e4fS0G6xp+LDOrjzgKV5MZUCZnsTPdY5n5pXvzQIkiA8j1RyVMvJaY2wUq
JoO3M0D43/Yf5dcWmK6mDcFl6gy453rMQMl6gWn9PLt72x4G7Bpxzc/WXGAq
X+RPoOI2ayqwjV7+x9xs1GF7YS8Domhyby8E/2Oq/PirKrSfAaxqIvXioX+Z
8UffJR8/wIAZl5XYkDvzzJErGlN2Ogzoe7ST3+TCPDO92OdTE+6a+QtxUofn
meN6tjsVdRlw+0ZP3LP130wRm50TP3FLpOTH//b7zZRofMHwPMyAwy1mNGen
OeYzhxxbCz0GKG4OF9p7aI4pkd82Vox7i0UtjV1ujvlmXbV6oz4DBkeIiTnD
v5h2N5huFbg9/i4lvrf4xbzv/OEnryEDUoj3k0x1Z5lSZ2tOZhxjQPClIdFt
srPMnkkuk++4m+xlVAeXZ5jaRbyZGsYMsA6YVxXynmHaHDPU7cMdVpSlFmE3
zTzdEfhggykDhjb93u2p/YOZque0oHWcAbca0zWxhQkm35165p4TDJjs1KA5
VU8w3VTLJy/hNhl89z3Kf4KZyd0ckoNbYlooc2DhK3PnwfML3Cfx+olR168s
jjMp/puF3+H+4BrUmLf0mWkus8hmacUAXV8J6baaz0whcaQQirswpNr3V8Bn
prcW65MS3D6J8yTt5U/MJ+3r4htP4+uv3i3y3fJHJvWh6NYS3B7yNRnCS6PM
XKJL50drBmjs+2tsFzDKFH/a1r/xDAPYj+1aL1kaYZZmvTJWxJ3u+8BOb/kD
c8AyI8IDd2trGilg5T0z4EOv0hxu2of+d81B75n641AocJYBNnOCkUKrQ0yf
T6cS1XD/kYz6Xrw6yIyIjKp2wy3vGVg2uvaOuSQPO0dw/7xVZacS8o4p6bGb
sIi7OuW34LX1fuaQ3liY0DkGmL645CvI0s/s8fagH8UdJHJW88iGPuamo7Tx
+7j1lFK+x4f2Mv2zIk3qcAtifRkjG3qZzdsMSG9wF7kcW7/K+oaZ5qAsv4K7
v1ar8QFbNzMiqdzIwIYBUtfsR+Z4u5gKVRVvrHFTA4zU4wQ7meOFezov4b4U
LD32WrqdKXe6Up6Ke+g6x14XhTamTmNNYDpuwxszURsVXzO7Tx82eIBb6VbD
PlBvZUaem9Zpxp12+0H0B40WppW/oHsvbu5w2ucArJn5SfQl7xjuqTtOsRWG
jczL+3uK/uG2vmsybm72kinhsquA9TwDXkftOzB74gXzlQ9ZfDPuohiuCSU7
xLx9vc9aFvcu2fFrcR31THVKnJIibkGFKmLbQB1zD+eEx07cc8TIno1faphD
80NkDdw9lDPBMFPN9Gl0PwG4y5S3KwYuVTJPGef8O4o7TnW9r2JjBbPf6eoW
Y9yXd/bcmOUvZx768ivVHLeZ+j0VZanHzF9ZgmmncJ/3mCprM3nE3O32fstZ
3Nt8Yjh1nB4wz8ibLJzHPXJtl21lYD6zLtntpAPuzJD+KuWEXOaD3P2KF3BX
c//Zpns8k+kn/vSyC+59ogc7Va7Tmd5vxlRccV86xL2sejKK+eceOncJd/dT
9XJO26tME8cTbG64+3yKtXc9Po91Sz+T+8+ZV498M8u4hX1snkT/XW9WZt10
MCceWzna2fffeD15gqIWPqlYd4vzuYv/5fOY0+6n97IxTu9ya2fcU0cb3mtH
52GWXqXtjriVdKRvv/IrxM7PnC63+y+eA9dULG2LsQGhx1tscPenubrOEMow
N67ykdO4/yan1D8Vf4K1LJ5TOIFblN4sGLDlKZa6pWzY9L/5JcxfwNgqsegr
BdyGuK1i5WvZF6qw48d0Sw7h9qea8b3+8QyjtV5v1PovP+HFVZb9z7Gjx96a
bcc9cGuIR6KNiQkUfG8i4A4C9rKZUYTxG2aUSv43/4O72Cv6XmBn+JrGNuFW
1TJ4JNb1EmML06Cs4uurXtPWKuBVI0b7Bl9+4R7ZF1OM1TdjCqQNNYO4Pfbe
P5lb3YJdP17Z2457Tb2OZWN5K+Yn+M+OiXvbrinL1wWvsb/LQsO5uM+rHF21
jO/EVFYijjrg1krJj/mb3YVtcBCLMMPNe5ON/5hVN5Zk5atwEPe3nw45P517
MPYYmqcw7twmQqNaRC+m5CN2ohb//4xb7qNu4OvDVO8Net/DfX1n2Ik3SX3Y
hsxT03dxn8kc/+qd/xYTjw3+ewq3sG8+V1XTO8yYucNiCu8frA9PvokwHsCW
kmJMO3DPjnGkW70dwMJ9kwpKcXccc1ZZ+jKIYePJrl64wwkU04Psw5j7Rxmt
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
          "]]}, Annotation[#, "Charting`Private`Tag$53172797#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
G2DnZRl6mD1hwUcnv5f357+w3RN1fgg+xfe7h4R0U/kX9pH16/wJ7KyAUo+f
Pl/YM2p6L7dhu8dMUQwXPrPbfm/xdsTmr7pws2vhE3v5OWOvCmwXhfIk0fk+
Ni/1QvuRAhbobZk+dNqnj31mPLnTEZvnoNbfR/O9bPRVKuoqdqLHw9N7Fj6y
22i8G5Ow6+sTKD6L79l+3OkcvdjRHzu7av3es9eFWbF/YJ+aFLm55k8P+8gy
u81/sH9LRozm/nnHXt7tv0eykAUKrr75fUtdbA+Fbm5L7B/XS05vCOhim9cd
9j+NXRr3S+Tq3072ZW3qYxds0+fOHiIcnezaPeObw7H91p7Q38XZwf6Ty9lb
gr1HNW6UHvSGLdXtJ/ICW4TWkdTL+YYtE3tiqRk7+9zBv15c7WyJkkOLn7E7
KwxePuRuZcs1CdNXFLFA6uqZ3kmBFvbCuyhLEezbPgd0SJHX7JNt5u0S2M7+
0v2N0q/YJyjRi6rYPdd4dc8pNrEPWK/N1sLeHzgesUylke2o2COkj616vXoL
6NSzG+Q3CuzFTrjx8M5HvTr2GfXqNBNs/tDoLz60WvZrn/ifltgj4faRRftf
sqvD5JAttvUtkwFzsxfsROk2Qwfsxogt2yaOPGf/SGvycsbOvrtiSPU0Yqcq
pK/zwNaSG7hKNlexD/8OCLyKLaJYQjR1V7Llzuak+2NPEjfbln0tZ285SgQE
YbdRj/vDeCn7WeXY2hDsfDV1Fd/5YnbvNT7HcGxS429H0bIidnX4FbcI7Eub
2gInVhew6TWaW+9im+nc26Am9YTtJbejlMS2cRnJbzJ5zE6+kTEZhS3jfpdv
h/1DttrHU0Mx2L1XtWyLfTPZB9a6MJnYyQGdJWpR6WzldR1/Y7FL+X/LGB1O
Zn9rpSvGY28R2/56wzUGu1Q1izPhX/2N+Rc0/otgo9XrEv65tVCngM/Wi011
+fz9nzvccw21ntjQmvaILv5zsteub2ZJ12mG63Kb/tks37pmexqdtqEj5cg/
t90XEbNwj6ddJEfj/82XfdBeu/Aei9Z1mh4X968fu6vfG965TzM6GXn4X3yq
O6RvNHhm0UJiv75k/Itn29UNlra5NE+CnIzG7kxwchpXyqf9kKT30LGnY+Oq
Ctc/pVVHDvpFYosxakV8BAtpDYzId7f/5Rc15UDjLqa9N4qYuIltFalQwTNb
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
          "]]}, Annotation[#, "Charting`Private`Tag$53172797#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
CfqzJEfSLTkGZdOKZ9ZB8zNkj2gH7yLlR6EKH2w9Z0hGz8i1lmds4NRaXSLp
M01y/7VMvJ7KhlG7BbpXwCSp9iuo1j2dDa2ZG4UP2U6SOwLSqtIpF03aMqR3
TZIPzBQceij7eTczXv39TTJbVtRABjU+Eckhv91+k052ZsnLMtmwq8o09KLN
BBl6s/S+cxYbVFfeF9PbOUEGh7TtSaAsdPR1KLfCBInrBbyoo9zZQwtjd42T
DTZNgcrZbLCfngv7dHScrN58xqSJcgTtKfPwjjHy67X6ZWtfsMHzysc1svJj
ZIG6qydBueKcnGbn/Chpd3c6yZbySfdJTTHnUXJmZ/hMLuV7qXFa/md/kTlf
MtIO5LLh4/LfOg5GIySXVaKZXR4b7pZH6xOzg6Sz/6GCCwVsGGrYGmrzcpB0
an1X40X5UGf7j0c3qeuGZswoylK/xGI7Zr+RvdVxZo2UsyUC/zr9GSB/Nbla
bypkQ/fl2+VJc19JT+8rHb8p73CVkqkt+kr+XDpkx/+Smn9eL13H3b+SpqKO
WfKUXcImMaP5L+TWHvvzBynzl1x90D7/mXx53P1cAmV7xaIY8blecrf6kzf6
r9iwdfO0yVn3XrJ/qrX0IGXug9p/M+Z6yOe/jnpaUY52fX5273w3OWO6TcqH
8rt3UZj7wicyT7nzRxnl0O629srbn8in6fTn7ylbTYg+EFv8SFpsiJb/Qnlq
3aMf6YudpIlAvjZHERsUHTyye5fayfBLq0a3UP55t/Cshlc7mSb2wG4P5ZcR
v0Vv/W0jZe6diTxK+XDZFVdRjjbSKglTuEb59mpL/d3LWkkP+a3VMZT3qkX8
CPFpIQOO5C0+oyxKtMb0LGshH64J+/6Ccqrdwb83ON+TxTvuDVZRbnttWP6c
q4mccth/+xdl6VvneiYEG0nFezXEDOVAd2NdhmgD+cX34Zu/lK94yvTVyNSR
ZH/N4KrXVL7v8OrZKdWSmnImYRKUD3iPPuJRrSFbf4nMy1JWu1u6GXTfkTZz
tjMalKP8ngd1b60i2YJ/AnUo898P/epOVJIvrZu7tlIeDrCh5x8oJ0U9LNJ2
Uz758NCAmelbMlVihZox5ZpHmw3GjpWRrxO5zptSTg1eMah2FpEzWh+5TlLW
lh+4xagvIZ35X16xoiyqVEir7SgmV3p9DTpHeYL2oJmnv4gcvXX6si3lZvyU
J4y+JLd/w5Zdppytvl7VY66AXJ8FZtcoU0V5az5PPvmJTDvtSNlxY7P3mHAu
6cx1ScmZsqnuEw116RxS1ubWE1fKZ+yHs2sPZZK8Td3dNyjLugTzbbd5Tppt
YL2/RbnnlrZ1gUcyqWGf7ONBOdarrVD9cSJZfEPwx23KL/mnZHcciSU1NtcI
3aG8ec22Bo074WQiq2/kn6/s5J/XPP6IPOBnes+LclOebi6f9Q3ywJBUxz+3
uqQbaeecIZhVBwf/OfbG7u+mMXcJzuj+gn82zT5ZsY0dQvT91w7/3Jwkuuao
SyTBJ6l871/7qQdtdPKeJBCmP6vvev7Lx57ST0ZBSQTjR5Xhv/jUtsv4Vbul
EPG4TLb7v3gMbmmYW6cT5q/edd+k3BZ1+fKocjZx/0V1hRvlaVZESZ7kC0JQ
Vc7OhfKa8EpRd6E84s3Gd+VO/57v8aQtwVVAOH1++8mesgVd8TX3bCGxdFAk
4wrlm4Gmq2pGXhHbHmRtsfs3PvfTC83b3hAqVR/vWFPuuPtRQKqWJHwnbLZa
Ur4N3NmjvYgY3m6UeeLf82/T5s5vLSOMEt5XmlDWNNyfKdH4lujsCLy8j3KJ
vrWFe3U50RXAeLfjX342B6cTJZXEnUTHXD3K9npPjye+rCKqNxmDFuUl3WIO
ntx3xKfQK/6q//KrPWxe86yGyOBy37XuX/419iyahzQQYX9yb81T74thRHLw
dEIjofZ8XnKCsqAvl/BBiyZibaKa3RDl7z/Ps39ebCaWF24VaqWcWKFcruXf
QhyPm/f+9/4y5lsDl61qJfpeWDKiKd/ZeO/Ye2Yr0ZgebUKnfCp24Jtz8gfi
a3xmsytlcdfkFYUV7YRw+nIOgjJn2vH3/iYdxKj45jtalMf6eKMtPnQQsMzg
uQLl+oMXNeb6O4ltua8FuCjfV8YPb+PuIuqfek2WUuvVwnfzmrMKfQRLSMBS
i/Jv7gzNAzZ9xN7xqQJpysNyPKHaqX2Ed2giyUe541j+Ka6Nn4lwG8OPvdT6
ml+6+mcSfCE8Lh3RffhvvY1sWzV0pp8Yf5/h10it3zZ5mi5NT/qJvYGvywso
Wzbe73g52E90rXV+EUvZmGcz+4HDAPHyVRPzMmXciaWt7vWNmPfo9uWg/Hmf
xTH7uCEiVXi2X5raL4wGbp+t7x4idNd2/uWgHOXDvqYh8534aPT+fX8+Vb8V
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
/gdrI0hb
          "]]}, Annotation[#, "Charting`Private`Tag$53172797#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172797#11"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 579.4366045450724}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 579.4366045450724}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"2rd\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=1.\"", "\"\[Beta]=1.2\"", "\"\[Beta]=1.4\"", 
       "\"\[Beta]=1.6\"", "\"\[Beta]=1.8\"", "\"\[Beta]=2.\"", 
       "\"\[Beta]=2.2\"", "\"\[Beta]=2.4\"", "\"\[Beta]=2.6\"", 
       "\"\[Beta]=2.8\"", "\"\[Beta]=3.\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.73806460274*^9},
 CellLabel->
  "Out[637]=",ExpressionUUID->"f43e2aac-2d64-4539-9ea7-e0a898a57831"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
NP/a/v//e4AAo68/bZ9/x/8AzKQueA==
          "]]}, Annotation[#, "Charting`Private`Tag$53172940#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53172940#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/wHvcMLF
          "]]}, Annotation[#, "Charting`Private`Tag$53172940#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8LQlDPTLKZjkWTqyTToR5jQOKeynUVB6dtF8PDAN0KL32pp4Ct79PPqt91g6
JLrbDDZFU3CblQmtVS0DVG7aJxoGU3DAf+qK98dMcBW/8tfoEgVVe8PcPXfe
AC21ZRvuCxT80kvLM1ibC7xmIRUtThQ87flUynsgF0oj4y6YnKKgnuX7rle7
8mHmZ96Q6UEK0k/qaRxqLIAaIWIHrzEFZx5bmHBSCyFmy+2ktn0UPLnK4FZa
RCEoOVYYHtSiIPuHSXlZ3SJYDN5dxKdBQQmtzeR/OUXwMufZSrsaBUWFrxgk
/SoCp77mykObKEip2vc042Yx7Jw7KCSgSEE50+PLSyvFwMnbe7GTRMHGyVyV
8aMM6FO0aU6UpaDXxaHm/SUMKNZ/Rz4sScE0WvqV558Z4GVnHyQoxtJ/RPLP
BzYm7PP/9KZLiIJduhNlF0WYIJp+cSeNj4J/305Q3ShMGH/4jXaEm+VfL8+3
aTUm5KxZCrXlpKDkQlsKuy4TrGzZvRxWUfBrk9227gNMELi3zvHiXzJyKHMf
tLVmQvMqESvv32RcXOFzKzzNhFBLKcPAn2Q8t6lc8p4zE/bcImtEfSPjQtLe
oZBLTJhf3qSc9B8Z9YW/q5K8mXDvsLpk5jQZv9DWM5J9mXCuWIuncIKMGd8/
P3tzjQnyi/uWb4+ScVTs6erlQCa8MT34X/k7Mp4fbf39J4gJyXmW758MkbFT
/bjiB1Z84MfJzsZ+Mlb8eCh8m1W/xtAJO7rJWMMmrneGhVeX5fbgdTsZA7Xb
9nCz+l394lM40kLGgkTxSKYXE7bpBSVPN5KxYWBvyV4W35nUqPDv9WSMXAgj
elnrKZ5O9P7zlIxx3SpRF84w4eTeDCeOGjK6moSZ8xxjghgt35qvioxd+k18
1WZM6Pp400jsIRkt87V0PA2YoHf98Ual22TU4nsto6rChD8f6qW2Mck4Mhb+
epcCEyrUWnk1C8lIMH3lHVh+Kb5988U0i4zrg0191X4yYERl/INFGhlXjj9M
Hf3IgKzQ2a6TdDLy3Pe0behlAO/G5YeXYsm42lRiYXcZAxoDOIqvRpJxm3XU
UH82AwK7eVNDQsnI7uQQ+CiKAd+uylxJ9iMjv5gvcfYkAwZeau+pdiGjdkxR
Ri8bA5KkDDejExk5vdbtokwVg/ElM5kWezK6+Kxp+dBRDE/ETv97Y0vGwgPd
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
          "]]}, Annotation[#, "Charting`Private`Tag$53172940#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53172940#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53172940#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53172940#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
TNN0/w+ZCCcN
          "]]}, Annotation[#, "Charting`Private`Tag$53172940#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtmnc0l//7x41CRlnZ23tRSSUfSVxGg5SRIi0jUVnZGdl7vI2Qkez1tkpl
c0WKkhEhIimRFEqR0Pf9O+f3z32fx3k+7+t6ned1n+vcf9zSVk7GNkwMDAym
9Mv/3fV0t2r/lZZDBoZhvUknj5aDj3wX2CTorJovc3H5n8ZO6a93BUTobHKW
wyCGE8Rjzx4nCMhhwAmWEIERXtj65/nKHl66TtLZYovb4d9l5UKNrXS2Wkof
/ScAC735p06w0/17CpqV7wnAhBof4zkWOrd++qNawA99xYEVdkx0v47m61Ih
HmjlXzjnsUFBhs6E9AQGNngQcHFLyCqdj5BbL0T/0sib63qc8JvOQo4/9z+f
arltdvDyvR90NpV0u3iHDUOflvCUf6dgQP0rXw1DQfRQFGqpn6Ugvo8JkH8v
jbaZYfYdnykIzx5kDz6noBnbL+HBSQpONLI5Wu5WRF036+cfx+n1FheWjxgq
oepEn9viCAWl3Cr0vz5VQbHaih7OfvrzmbEzZ4w0kYsg7ifSQ0HF+4yX9m/S
wQ1qtDzlJd1/RnglYewITtjahWq3UXBBxd7gMsMJ7Osf3GvUQsGIX9KP+QmG
2KpxeOJiA11n930Y+tYI8wVlDnpXU1DoUuolK8/TaPt8dKEqj4Jeo/c373W9
gGb79LKa79G5fbCkOvUSHrtXe7wrg4K+1xIO7ZmyQHnP5MLpJAqyXf8ceHyn
NX4nGZyXCKFgYudQjjaLHXqEtT6PvkzPx3z1+Mr5G2j7Q9E9zYKCsgn7K6V4
XdDs4j2ZovMUNNps2ijb6YKqyr5+rSYUvNL2k3ZCzQ3Xp/bv+6NDQbIV6dlB
JU8MOVySdYVIQavQDd5hYz/EaG9DSWkKHhGW8aTJ3cK1vuNMw2IUvLljILmc
wR9dL3630eWn4FXWKmFz0wC08ty3ayczBeNOq0sHMwehRklTw+IEGR+yrRH1
D4ei93ycQ+k7Mt5t7gwWKg3Fx/stJK2Hyah+cOjeDFcYKrQyBQ/0kHGodF7e
4HUYio0e1atpJuMvw07lU/oRaCYtvOZUT8Z8+WOK54oi8LbtbDnlMRl/bw0W
GmOIRI6lGJ70cjIGCF9/taUyElc5Xw/7ZpJxp2yNC+F3FCqfyovaf4eMphqd
0cLa0eiS5qb2PYmMKyV8Tzdio/ELUTD7UjQZ78RQS03EY5BgP2MkFE7GmO0T
n3ItY9DiQR1zXxAZe7YWncnMi8Fh9fO2Wt5ktHIbXDkuFYv8obuE/7qTsWjx
wqP35rFo+HLjRfUNMu5nTH/yNjEWY3h6fe0dyBi5I/0jpSMWn5vmKBCvkpHy
x+FDw2osMmW5TIxdJqP/D0JgoHwcqn/STkyxICNDdneEnWkcPnb+/IvVjIzh
B1RmThfH4Y/HNUV4iowhyoJdB7riUGE94uxNAzJmbSErrs7F4TVtc469x8lo
fNBzJJSdigWRO5pmj5BRwkQw4SWBihM9a455WmT0eCcgUn+QimIC3VLn1cn4
+nzoQTCgotn5e6/5VclYdcGlQf8SFW/nOoe82k/GKNtvl7qvU7F3RlM5bA8Z
3zGxzFe7UZFjN9+M+i4yytS+VJi7ScUj7p/Slin0ettOTtn4UDGo4dHxKgIZ
ryZmDm+j682M4et2UvT8Op51D7tQcfWoWaW0GBmVVd/FVtpRUTlOznJEkIwW
znOjQeZUvDGwypvER5/fTxZ/zWNUTDE2ML+9jT6/CfcAz31UbOzNy0nmIOOk
SVwpoygVP5xcmUlhJSNp9Mhy30YcsrzSV7zDTMbZf8kWI+NxuPN4jmfaPxKa
GLhMcDbEoVHnr+b0vyR0Pv3a+VxSHHoc1WPJXCbhlawyjlrbOMxszzpx9ycJ
Lz1eLuVXicNW7Z+3s+bpfrnSY9ab4nD6ydF3976SsDi4fjy5KxY5IVM2Z5qE
e4wkbbPiY3Fv88K13I8kPCjRM+poGItmaocf5L0n4RsPVP7DEYt+9Wl/8kdJ
yD795cbuthjseKwVUdRPQhaNFmdbQgx+V0rtKe4hIYeGGeVEdzTyVX8VKH1J
Qqlw5uJC12i8WHm7oKyNhMekrk/7VkVh8K4vc+UtJPSP5M8YOxqFxbRDSpUN
JDx1vXTj5kgk/iz63Hq/moRXO92bdi1GoBDpIHt1JQlfXLjDKeceger5VKOH
NBJaZgT+JC+Fo7XMpzuPiuj9t1LsxRzDMSJbZeJxHglZtYKcVybDsEIillx7
j4R32sJWy43DsD/zg2NdBgnXZO0WC0ihuCKi/Lg+lYQxTEaz9+uCUSItar0h
iYTcvl/6W48GoY7ge50mKgknOH76rPUG4NXkfTHN0SSsMr9osZl2Cx8mvBN5
EkxClR1RM6y5XqgbpaDyzJXuZ9Gp4jG1Qzef1y69p0iY3SPn0iBnDy8uiMx8
4iOh/GEBpmCfBDC4p6axuo2Ec5al//0yT4SBiYsp2zhJqGptFRSsmgRj1nk6
qptIGBXkM1b15zYsXN2ZQ10i4ogqwxkPjzsg6KFurvqGiJ6v28q/mN+DzBqL
+wZ9RGxIv+wlIpINUn+C2GxeEfGk2JLi0bBskPd9/pjaTsQ7R8zk+S/kgHqQ
Id/UIyIGq3HyxzPnweU4qy5qChGfvBq5UbGzEL70hMgWJBIxYb3Nsi+2EBx5
irzr44i4dVTJfelbIXje/kqZCqPrZ7p0hWlFsPaGK2A1iIjKhkE72dmKIUBQ
cWibPxE5Ksfd31oXQ1S6W6iqJxHVT5X4LwqWwLZ3Ke8MXIl4banQUs65BG6L
1+2zcSKi2IOr38Sfl4DQpdEo7+tE1FGtq34mVgp3s9c/UG2JmKR64bDojVKQ
mZQ8UGBNxD8W4vv4npZCoaxWfP0lItqee8JVuJ0GO2wuT/ecI2LYn8Tm/Wdo
UFUYpj5lSkSc2TW2fp0G+2eKk1dPEfFvJLO4WQAN6uVezm0zJKJT161Nukk0
UL/+TZuoT8Qz99hF3uTToK1sW4bqMSJOLPJ8YnhEg2Pf9/ww0CHikep/M71t
NOjabaJrA0R8+lq9UrePBkY3PLK91YgYpaHa5DRGg8EHd5apKkTsmzmfdnSG
BueW6k8WKNG5iefFm0UaTOwfK6hXpOdf3vZGYpUGNp7/1np2EnG4aEyLzFgG
s7XSJlMUIupnvEj9yVIGTqvatFUCEU08f5lHcJTB0sErTNzSRKTs6OSd3VoG
Xn4RZ4niRNwoqDoszlMG682lVarCROQaEvAm8ZZB18huzr/8RBSJveG1Stcz
fz+0beAmohuf0aw3dxnY86q2+XAS8Wj/2ZRyrjJQU2iRUGMjYv1+Re07W8qA
U0/He42ZiCt5XjWwqQxGbTrfNP4joHz4UF3ZOg1KA0/u8ftLQK9ji9yTv2jg
fbc/5tAyAXmMrgV/nqOBXp3ZzPoPAoqxTw+1TNJA+M2YdvN3Ara843jjOkSD
mQWre7dmCUjZ66fJ9pIGtZwzq+qfCRjk+v5jUBMNIigOZ/59IODSlqGgLxU0
MNX5cb9ljIAFF9mmNO/R4LfPmh28IeDN6RKu9740eJYa+JShj4Dz36wsd1+j
QXI1i9STLgLqmU4nRtDfD6Wv3EOaTwl4Zfljif1OGmxiTdnLhAT0ZigQYxag
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
xQAX
          "]]}, Annotation[#, "Charting`Private`Tag$53172940#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtWnk0ld/3liRJmZN5uu+9r5QUqRDbUJGMkaGSFClkTMbM3IvMZEqZhyuR
QqF2RShCJEoRHxIVaSBJX7+1fv+cs56113n2s59z1hnWOtL2bmYOrCwsLJSV
5v/6Q/obdf5IyyFLSNCHa7XXH6rdDZzlkJBDu+7q31aBGrhVevraJhE5HHEO
zKqiGuHG360LO/jksFvRO35b2AnsKQ2tdGKVw6EFU6d4TRd8LDB7zGeZxMc1
p/vqXd3wdojtuohFEk3ubJeT0/XAVCu1M9fnSHzmpi55Q8sbrTh+CvePkpgW
vDAf3u6H+t6nW8fek8jVtDbsFX8Aqo70eH97Q6KRiLtxh3kgitVXdnH1kvhm
/+WkkfuXcQNFPEiki8RvYk3ewiPBuJwQu4V8TmJtso660OUQHDnrFKnzhETx
C5eGk+JCsae3f6fpQxIr2vnquTeE4WPN/SO2DSQ2Po3jFmKEYaGQjJp/DYlb
K++WvfMKx7TwxMnoWyR+F6suKB8Nx6iZ5bQ0JokcKpRYMcMIPNv6draqgMTV
7pxJnIKRaKV0KPfBdRJ3CT5zTPWMRL3r9QYd2SRmumZlvH8eiVsupRV/TCHR
FNiDuzyiUHRstfnPBBJlNb9OhT+IQi5jz1Wr40h89ztYWmBtNH6lGh+XiCBx
gLn3xFhsNA4nN63bGkJiCK1SWLEtGruX5ev2BpI4dNaB25uFjo/OZ5056Eui
zK01IrXKdLzdz8Fn4U1iuOYuwb9n6FigfemhvTuJSseyhoyT6JhaOe7i7kKi
o+5bg7v36BgpYi5y2YlE4325Gsrv6egT9bg19gyJ0nRGYu8yHc/OKV7MtCOR
+6yOeJYoA61sr8uUHCfxsJgnxiszUP/Zhu47VivzN9VgUa/PQFWVwKDH5iSG
8bXWix9joHz+1JZuExJHX+9taXFioNhG64F3h0k8GXj/aJ0nA7n8WyOn9Vb8
157R++3LwL/ju5R+65Lo73z5UnIAA7+aFo6wa5EYrLrxAcOfge+b+OIF9pHo
8k13YfwiA7vkQtVk9pLo87JtVaUrAzFtZnL7LhJ7JKF28hQDq1fZpu/bQeIt
UdNvOWYMzHft0DHYRqIuR358jyYDUwZVv1nJraxf2uC5K3IMjNhflutIrOhr
zLF9zb3CF+tvIilN4mWTyzais3Rc6jFgHRAjkUXdN/90Bx33bBa/k7iZxPMb
or/XF9LRy/arg74AifuOlHBS/OhYWfhQiJVnZf3kvCq8qU/HqanE9vvrSTzl
szHYdhMd7S8pbdu6msQm4eSPVoXRmNvENvzfMg17/r2aqXGIxsHV/YnXFmno
V71pq7VsNJok+v7YOEfD8eoQ5aKUKIzr1y9u/ULDBvEC/xMHorBNTNQq5BMN
LRPuTIb9jETNsqaGbyM0/NKUrrhHPxL9Z+Jdy4do+OuqXcTglwis3WUneXqA
hkvV639wJkSgwmPW8L4uGo4Mz4totYaj2NuDh+oe0LDxXuvOGe4wtJIWXnK7
T0OWLWq87FmhmHp26iZZS8MLRt7f56RCcf2PON6smzTs+CJX50GE4CLXy4HA
HBqS6hEvZvgDUeVIQcyujBV8ZY3k2Xl/9Mz0Vv+aQkO27W8PbHrlh58IoRsn
Y2moN3iWzT74Eg5oHD+r7U9D9fn98RlJnljrPvFzrRUNpYTVju+cscW52roS
PEJDE35n6jN5a1T4S7f2M6YhT5pSx3WLI1jEkG+aOkBDWAomPdr2YWq+e0Tn
LhpW9eWksGwxBY++Rb4UfhouD56qsbb1gHQzY5tU7hV/zAd5uH96QmN3QV7a
eho6TjAtJ+O9gb3zsGLGahr2j9XXdz6/BDktuYbXvlOx0arb+ZXTZWir1aaX
9FIxccJz4DZvFEhkxvxtSKEiuxy9qt83GXSFhnWbEqiYelpzdwJLCpxLU4p7
EEvFrRn1U4n0FLiTNCTyKJyKEdS0BLPMVNCPUdjz1IuKSie8+1c1pYN3wEvP
7iNU/GxZF1HKng3PTohM/sdPxV5rqw/TdXlgfF1dc5GbiiJ5vBuW5vOgb8Q2
nZuLilyrHEce7M6Hd6cLdFXZqJjuv1BtVJsPs+e25iX8IHDKzs1V5VYBCPlo
2Ki+IrDJ/m+59JUiyKmzqzbuIfDtwf3OD54WgdTvMA6HTgKXVscU9P8rgi2B
rbUJLQTGu8tUObsXg0aYCf/4XQLPkarFrYdK4Ey8fUdCOoFcASectT+Uwqeu
CNmiZAIZo8ZPF3jK4AJvif/9eAK1h2+c+65ZBpdSp8nxKAI5OC41lWSXwdKr
DSGLYQS+dOag27SVQYiQ4mvuYAJ9+ni6dH6UQUyWd6TqJQKLZK+zV+iXA/dQ
+pCxF4Fs2jt4KV7lkCp+T8nBjcDmPrOO5uxy2HzybYy/M4G98+taYp6Uw7Ub
fz8knCWQtfU43XOqHGRGJfcWnSZQ09a0wJeHCcWy2on3TxLoN/glP3MXE+Qd
znzsOkZgmnI+n5oZE6qKozTGLQmUb+wU6LFmwq7J0rTFIyv1H+uqCLZjwn25
55+5TQhk7jxbp+/IBA3nLzrEYQIN7C14dzoz4UkFd7aqHoH5nDZX1dyYoPd1
x5yxLoGch3dRz3kyoWO7ub4DEDh8oCSryZsJph4+N/zVV/SIuveo+TCh/3bG
fMIeApWnjEsmVvCxH/eNipRX8vey/8YVPLLrXdF9RQK95s0LOi8yweHSv6Wu
rQRW+CyGca/wTdVLm4+TBF7wqPNmeDDBbVGHuUghUIDjsIXGBSb8UHNk5ZEm
cN7Gd9WO80zwDaJbE+IEesQsWZxxYMLfB+VVqsIEvq/N2P725IreN9u5/ggQ
KLlgIs2x4kfOrztnG3gIrNd+ZmxrygQXPtUnAVwEbhU+Yv9BjwnqCg8l1DkI
XP67lyVNkwlch3T9l1YTeMersztwxe+3Du2vGv9RsGvpWEDOFib4X+uN2zdP
QZMjhX+S+Jhw6J7V5N85Cj4g/ki6rWGC8Kt3Og++UrBAMLoheb4c6rkmFzUm
KDht6fuzYbAc6KTr0X8fKGh1y3+0rb0cLHXnqh++o+Bhhc9jW+6Vw6+AJSd4
RcHJiqOPltLK4enV0GaWHgpmVX+e9govh7QadqlHHRQc+yjfZuReDsrTPK+1
mil48vvwTg29cvCyIfbr1FDQpeOO+PlvZaDtU35j9S0KehZukXF4UwZ8yduX
npRTcN/jJr4Pj8vgdvveGt18CsoMXrQ4n1wGs3uMpA8kUTD1/pOb5NYyQPPe
QPYrFORbe/9kEm8ZJLhbDTylr/Df1NqT8asUFErtEw6GUPA9r+Zi/MNScBW6
9FfPjYISIfSN0YalMPXz+qCBIQXbCI53vcdL4D4vsYtLn4IeGh/OvNpXAoxt
5YkduhRUG1Si35IoAdLhzkFD9ZV6rgdrLA0Xw0LI3oINeyj4uEtQygeLoTXn
wXKnEgUt406qvr5RDI59bXeN5Cl44M7B2hOnikFl1pCXm0bBUkq4Y4xWMazh
6nXpkqGgkXzF5wrpYuijWbUlSKzwHeKdbVtVDIU672RNRCj4/P7zjzH/FYH3
Sftgnk0UdNSezrraUwS6AR/fdPNSMKU3MLnwQRGM3f6WZLqOghuav3Jixsr+
xL4YZrNmZfzYcBBfdBEctWH1Pr2Kgsu+zp0OF4ugbRX/0Yu/ZTHJUDyb26wI
Kk2URTI/ySJ7kb+E9/oi8P3qkz/SLouSe1J35F8uBK4tS7fdYmTRTI/ty7Wz
BaCSx953Zb0sfh4c7b9wOA9UuzzatdbKIhE5mN+mmgcaf4ce/GSVRcP3gxUK
cnlwwLqm7MSiDG7tcd8nxZ4Hlrx2wds+yWDgHr38XLwBvqH3tnQ+lUFlDS95
VbUbcO+USyhXmAxC//E0z5BceJDw2geDZPClqkoKm30uPG7SdvH2k8HKnta1
NTq58ExY2HLIXQb5O4ZNHdbmwpuelq0VJ2Uwwtn3iGTiNVjUkhww2CeDDQIL
VpPFOaAu81IhdkEavTcmvGz7lAU3+NcrH/khjaleORYOXVmweo3uXtFZafy+
13q7+N0sePbxrg7zozTqbRkcex+SBVY3M62e90ujmWWjWrlwFnjvORW2/q40
ru478fekSSZUGM2+ivWQRuEWfW+tV1eBB+TeHnGVxih7hkjmg6vgtcN+RPSc
NNJucYuuL70KqgJ9U0w7aXQKV+3cF3AV2gbr/j03lsbP5jyOb2Wuwn9nguW4
FKTxXsSvT6M+6SAWsDEobkoKL5wIVA/ekQbnCp8JXZuQwnTPKtCVTIPazqjb
N0elsDJ9vER8QxqYSv37+OKNFD47o3tkw6dUiGqZMeN9LoX6dNd17/NSYYa7
h0xnSuHDc3tNlIVS4XFhSt91FynUCOVX2M6TAtwvjN2qnKRQIcek4djK+Xx8
fj3nozNS2B0vbJA1mwzz+hGao8elUM8cqIY9ybB1xrucYiiFIbohB4NSkiFt
79GQsm1SmDsdLccrmgzdOTusHN9JIp1jlNKukgQshW7p7/okccaABhO0JFBk
3uwz75DE5veH3gkKJ0HiPTlTnQZJ9GtO06r4kwgm/dKHpDIl0fHw5h01jxKh
m5tP/Y25JH5SfJAvaLqCw+YkjTokkPfJArfw73hgiVG0bXkigWts8ldnD8eD
YtKFHPUGCWStSNNSfxoPidenNsuXS2AWRX78bUo8mDSO8nLQJXBmpKMtRjEe
un++XP1YRwIdDFpnLrtdgS6nmo+7GsTxgUrzhCpLHLwcnjfRqBFHgVkNatZ0
LPQfVb9/gCmO/nOZB3lex8KQbkucZbY49ol9egKVsTAl9XqHX4A4PuGprbx1
IhbYBhcDGtVW4o02zJsYA6r62jw6jWJ4x85UyTWdARoY5WdwRww9Dgof845g
gNbu56NHKsQw4Vk4W4InA/QI87tncsTQfnaP+7IRAyxWOdpEBYqh3pMvtY85
GOB+j1HYri6Gfp09J9uD6VAs17PHpEkUNSvX8PEFRIMTrfpRyF1R7MrvVy50
joYtRNKh6puiqCRVNbD/eDRUSpke58sVxfQUw/mUfdFQJ9QT3HdZFL8W7DuY
zhINbWt6nlqBKL48+sHWgREF0x+6zU89EcFjuxM31BVFgmJWt7tnuzBGeFo4
X1wTAfTDPqy/URgP/zEaUlgIh5Fl0dTgemEUzoOgn1PhkHD6bF1ciTBmTBYt
lHWHw9ety3+LI4Vxzyem782ccKh4KB/7VksYNz/Sqlu/OxxWLkdFuvc3Y+1G
rkIVrzCQVtz3ZhNTCOnuLR7FnKFw2OxTukLBCh4JnalnCQVf77QjB7KFMGOJ
80zvrxB4Uf+l42KsED7docMmNRYC/lq5D/uchbDWNva/TY0h0Gf2rzB5qxDa
7fLT8HALgaiLj9w2Vm5Clt5AY766YJi6v38Ne7UgHhYKer4uJghEnRtOXYrj
R3J4m6+IvR8sP+MrmvXgxfNeq04NDlwEL00u83PzGzHrwZmwbWOeUK/UiT/v
cqJ/el1+1Igb3OJ9WiXUxI7zR8UmxurOg5dq5moNN1Y0F+6UnDjtAKqRJ/Um
zy89dEnyazlsaQczTksJwfQfD60ZauIB/pYQ3pytqrnw8eHUuW3Xsw4bQH+D
enP56u6HV33dlUeUd8LJrQf+mie90LQ+rp+mbLcDP+hZWVzIndQcdQpTKOY8
jD9uad7arPZDc7nh1KvvUpb4pkjiwrfuJU13PYnqyyl2GHChQc/iOiscSK0Q
Mct1QKsb2y1zrrBD8inr7IGA8+gY3c463M0JdrUP3uxjdccnEfLycc83wu4v
lllFTzzRlnf8sYA1L0T/uX8hofoifldt1fjgww/ZUl/iXdT88Jbbht/27oIw
8OZC3t7VQfi5V3F+zlcQDjSVqUwLBOGWPeY/w0IFQazdNKOMGoSFLNnf8pMF
4dHMRU7DQ0GYlUROjd4RhMTAiQrF5CCMqNF5a/9bEJyqyFUBlMtoM+/XZB+2
CSRO77yWcyQY2YInQu1ThWAd98ubql9D8ILXaotTOUJgu/VJ1K6FEBw4K0Xa
FQrBagEt/z2soVhhYvPixB0hsNjIHD66KRTNZV6IWPcJQZ5O5fQvjVAsaLlb
YyywGdQtqLovkkJRmytyXD11MxTuDuuT1wjD0ExZfaFUYcDxjIf3bofj1rVF
S1+yhSFE9NaeRw/CccCbWtVcIAyLbEFlvc/CUcFETsizRhhsft+oFR4Lxzfs
28c7XgrDRErVia0CEajsrRoaxisCdrO0Pn/fCJwwMr33JV4E3PS0uZQPRWJS
40uX5nQRYF9llN1gGYnqW8ylsnNFoOi68H4Th0hMXmMZrVcpAvvTTLflhay8
jxuPWxR0ioBI/LTCWF0kZsg5fbPiEgXNTas+/yKj0IAtWK6ZIQqSYUHzfYLR
aNek2qebLApHN4SddKVGo4/Pr8stWaJw4+OPOqHd0Zg/6dr3lCkKivU/q8Kt
onGh43hwe6cotCWeXO7OjsbCNNVXL3jFYKfnkPk8Qccl6q+QwUwx4JFru2+l
z0C+kWp5m3wxUEKdHu3jDKRluva/KReDX94Tg9puDDRbPy4/1CAGsxqzupFp
DCyd6e1//04MPBgawkJjDLSor976n7Q4CFzn9o4Ni8FKfdeBr2Xi8Otfd2NO
byzOJstYva8Wh+jk+JENk7G4c+j168574lC9dltN2lIs1l7Qfl3RLg4SSR1d
n4g4fJgi1H/+kzjEjr3qKfaLw+53j3onSAl4c1W9OIa4gt89NnW9L5GAl0Iv
esSvxKNKw3OjF7ckIEY/IMmzMB592UJfNNVJwEHu86yjDfG4lD7dmdMqAWOb
zGJ5p+ORrRE7bD5KwNejylB3KAE3sTs/66dKgvWLR7W5axNxT9bDlhdFkjBR
qqAn+joR/1O4pe5UKQkag5mVd8cTMelJbs2qOkmoVnrnY/8jEac+B+Upt0nC
UFlezHfeJMzRVA/KmpIEJfdNxr8MkzDE87hIjZAUbOM6+jy5PQnHhQZ7Lh+X
gunNEQLNXcmoPmpy5bmdFIj7Vgr1jiRjckWb3mYHKfjD1u46/y0ZNbTqH1a7
SkEiwe4TIpCCGeev3vzvshRkzFFuptuk4KEmC8ahPCnI1dx8/tNUClbav4RN
E1Iw8fjbw1diaVh0LvCz0ZQU1FQF8tgrpmGOOzUj+qsUEHYu02t00zDmsv/M
wi8p6B89kZvqnIYOWTK5b9dKg0tCM6O7IQ3FXnr+uSEnDcX7/Vhe26VjjBZ/
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
          "]]}, Annotation[#, "Charting`Private`Tag$53172940#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtWnk0Ve/3RqVJZMg8c889hkSUkthopAyllCSZGxRCZR4yz9x7ZUjm+d4S
EqKdVKIMkSghQ6RCsySf7/2t9fvnvOtZe7/PfvZ+3ned88eRs794yImLg4ND
lP34v9V4P6/RXzkl5OBYvPzZnP5gR43/3CppJSz5dvMGp/ghVJX7dENYXAl5
xZt8mvpOI++fp/MaAkoorb3ocfCQB/7nuLVIn1cJ17teT5209Ma5roLDB9co
oXDD6TFj7avYXRLCcuVSwlN/q3YbmAZjs9DcCZ8lEnt8D3bP8YXinWDb1dcW
SPyV9/0OX3MY0o7tcLz5jURbLhttYj4Cj636KdY3SuKTfKuAkFtxuN/L4enY
EImDK/m/+czHo85It9fXNyQWGz7S+bo5ESXvsTp5ekhsU7oWFtSUhOsUpQLE
O0ksEV/789yeZFxKjFUm20kMDF2tbvc0GUdcXMONHpFY2jx5urA6Bbt7+jZb
PCDxuWz4KjG5VGzW3z1i20BiGOeG/oGIVKwqr4o/X0tiNdWH/DORigUi8jt8
q0jcczTSIkqPhvSwpKnIWyTKmFPLryfRMGJ2iU4vJ1GpXyt+xyANfU64GeUX
k2hdmWAWKkdHl6dv527nk+iTLWgcaEfHY5rG2U032dg+rxfS6bjv5j2T55kk
mqLY3rftdNy+lvpnII3dn++xP7bzdFS+TC+aTCXxveVOo3fSDJQYW2b5M5HE
K/zF/i76DOQx8+RcFsfGl7z+8Voz8F/9CGt9FImtO69JTVxg4AxhZiN9jcQD
mjVafwMYOJzSuFo1mMRZ4Q8Z9pEM7FpSqd3uTyKj/GexaiwDH57NcNx7hURq
dXPV2WgG3ulbJXDEi8S47yrCaqEMzDe8/MDencQy1fXUKG8G0lgT593Pk+gq
b6oX48DAcHFL8UBXEm+ntVTtPsBAn4jmp7GOJDqaHRpu38RAl2/q3ul2JLrz
9Imq8TLwmO1N+WIbEuuS1e4FTNJxf9u6rupjJFLydDY8b6Cjzlb/gGZLErM4
BiKVY+mokjet3GVOIrf7lEvZETpK8h7vf3eAROOqvetOStDx38QWzT+7SJxE
95U512k4Y1Ewwm1Aoiz//NrD5jQcahRIENpJYj0YbwlcRkOkz05t2kKigHHb
kVCbVKzktGXs1CAxprRmMYArFfPcnhuZbCRR+McHqnZBCl7bXZrtTCFx6Qjj
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
ce7tlvD//1vAK80v2tJiWfr/A3XrOqg=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53172940#11"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"3rd\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=1.\"", "\"\[Beta]=1.2\"", "\"\[Beta]=1.4\"", 
       "\"\[Beta]=1.6\"", "\"\[Beta]=1.8\"", "\"\[Beta]=2.\"", 
       "\"\[Beta]=2.2\"", "\"\[Beta]=2.4\"", "\"\[Beta]=2.6\"", 
       "\"\[Beta]=2.8\"", "\"\[Beta]=3.\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.738064602967*^9},
 CellLabel->
  "Out[638]=",ExpressionUUID->"5d22a100-aac7-43f9-8178-c62cd48b15ce"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
m52C4bw11Ciidpr5/+JLXfKlstVR0/W6q1wwZiQRmthX66l5Bzl8AzA+m2DN
9+z7Yypnu9ODyP/pE32/3n6khcrEj/0pxXjsyji3+HMmdcam/18rxucR+6O5
90Dd1xqUPfq/+A/uZ68dfkIdWre+uQOrH2Ud04eiL55SucnOS4oYt2p7MMJ7
2qkSeiWzphi/00i8T23tpEb9zM1LwDhQvdixoKGLWv1G2O0RxpuqzSxbq7up
54761LzCWHr/rP2z0mfUcEHFvSSs3t2VjDbsU/qpp656eIxirJNZkrhy+wV1
/kIBgQc7XzyX2fjNGQPUbWave2gYz/w4cueH3yB1IUuppxbjgg7ZdpWYIarF
dM6tKuy8Jq8NJ2zhG6YqHWhIWcE4ct81h5fpw9SYTyOndbDz75L7eTq45BW1
KJS02IexcGjJ9vqOUaooQ/vXNqyfsN5zfBljMUYNFS3Uc8F4fpIjm/FqjKr6
QOrCI4z7zP2U/n56TX2aY9XigfWjaFmy1UH2CWqP7eugMaxfrc/YP/PET1Jd
rMRFSJoU+MX+QNnMZ5IqIhB+OgPjWZmtafvvTlJX73O2c2th+XCodWHb94Eq
X/PY5C/GtW07fxShKWp3Z+70z//121sjfF/dP1Ebeb6U7EMU8KlRDhko/ERl
49f1acXY9UX0WMOXT9RtLPeIFnoUOLRV407syc/Ua1edyoJoFCCfyti/++I0
FU/ZwTFgQIEPJgyHwLyvVGrHXOOCKQV0P5/37Hv7lVpTF16dZob1m6g7J5Sk
Zqgn5alXNQ5RwLZx9tps9gz1JyWn5qo5BZ7svlDne2uWGlXbHKFmhenPWyDq
fuM7NV3XcH3BHst3eSexdeg7tTyId1+VA9aPjL/tlRL6QX09UuEY4oj1l0uq
Jm9SflCbvheEb9Kx+26h8yw96Sd1+5q7taIL1o9ml7/LG85Tfa59jP+A3c8e
mpzBo97zVDfDkeg2LwokRov/ib46TzX4SY0vPILpSaBunX46T91Zll93wgfz
x+W6VBFtgUo5W/JEHLvvhfrELXFokbpx4iLna2xeWKqgVuw6sET9x7fK+T2K
Ar27DwgGuS1R5X+3uhCx+aSwVD206+ISNclqxsoNm19s8/ccCGtfoh5pUFR8
HU2BykSJriGLZepP+UqOhXgsPyd+v0v0WKHKnbD1KkqngNHMot705RUqibzr
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
w/8ByuScLA==
          "]]}, Annotation[#, "Charting`Private`Tag$53173083#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53173083#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
g94XIgc+0+D//49Gh+hbo//7f/T/AOeArP8=
          "]]}, Annotation[#, "Charting`Private`Tag$53173083#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwt23c4le8bAHBZKXvveYZjJHXsdR4rUWZ0zGxK9hFKJSMKlRUihURJKLNS
5052ZklSWSkikiIh/d7vdf3+cn2u1/s89zPe+7mfP46sV4idLyMDA0MaEwPD
f38tzLmMN2QVgIt3wW13ARV0608vsUkpQNQ5kZdhmVRQlp0vFBJTgM5FszSR
FCpw/elY28OnALKnnLgzTlHhn49GGYVLARSXLr/2pFFhaaD0kOVOBZAQDlnK
DqTC4J24qqOMCvBEYVhLxoMKLQJLLpFbJAgIrvGLcqbCw3NHdiSuk4BJ6MMP
FQcq3PrW05CxSoLtvfEu+2yokO2o63NzmQSrlD780wNUON96l/f+IglsxWf7
Ms2oEKkqQn88R4I89vXRdmMq+F9PCuz8QoIDT3d1OyIqOLKtiA5PkWD+Q6Xk
fn0qmEd4d3waI8FvoeLD2TpU0JkYjPgxSoIfwmqrelpUUDqI5P4Nk8Ax7coZ
Qw0qSDRV9XO8JkGVzMegYjUqcOIlz4j1kyAsbt9+VzIVtq6kKpJekgDvsnIp
bC8Vvm/8eaveQYJ9zvwwsYcKE/5Hzxu/IMFhpW73u5gHXw/vtaWTYOSU8WI3
5haK6cSRJyQwX7nzzQR7v/Ze7aXARhIomuE/CGHtlwrL6Z6qJcFfiXF9hPV/
NSF9NrmaBIY4pixQp0LS962rV++RIJL1sWuuJjYfLkHGt8pJIE3bJdGqjc1H
x/ulmlskeCSYbLdPD5sPssWNZzdJ0J6/dE6SQoX9N5sO9BSQoKMqi2RuRAVt
dvk/73JJoLN1rbvTlAqKUVfLZrJIUKK+a7bAnArin5jsV66Q4My2KMYWSypw
WIdvY0ojgSVXcb6OHRUWidauUokk6L2uZy7rSoXxzKc7lM9h/x+1zeuyJxUG
tpQatU+TAGdq+feAP7b+w2x8DhEkOHRcBhqw/XPLKIruFUqCMYmNr17Y/squ
+hwYGkgCDxpTgVscNr6klo5UHxIcfG6cq5eOjW9Z9cQ1DxI08vZPS+dh4zty
U67clQRij1SeWRdh66tx+kyLPQn6nvGKZj2gwt/P6uQ/JiT4lbByJf8tFq9t
6QSrIQlUAx66Dk1SYewp32UBfRIEsmc8O/yNCnD1++xudRK8UnXeR2Z0hETT
uzf8CNh4Plck6e9xBEg9ZSMtSwKjE/FSTw0cYXPwAOOIBAlSTjRZXzroCLQj
i77mAiRABb2/JY45glcUeZcyEwmOmJx5MHPbESh3nz75MSEPnYfXPAt3OcGp
75eDKj7IQ+ljh75RihM0qHtIe4/Ig/vH/Y+P2DmBSgtjwlC/PEiRz6ZoRjuB
xHszi8Zn8vBtlsVdvMMJ1jlejZy+Lg/r7VdCpMKcQePQrRT1PHnYnJ7hj052
hvBrEXqLWfKwj4dTiuuGM3wlCBe5p8qDhdfBj99eOsOIgau/0Sl5ID2NdfZW
dIGG0C8r2x3loTKX/qXshwuEDa3zZfHLwyXF4S2J226QY2ftnM0tD4o7ImKn
6G7QPHCr+Cq7PJw1+SfwctQNWHsPquYxyQP+VUEoE+8RuN52w7LwJxFErKST
GGOPQGeD0YXy10QoXhpn7/Bwh0W13P47/UTwqcndfe6MO/DXzgtVvCTCi361
3fb57nCkOvt25QsiLO76WGsx5A4/y7+0PKglQppGWuMDvAeIEHV31lYTwShX
KDmc7AEGpVds6+4RIeKObYOBkQd4y03n1ZcTASmeYBKy9YALRVoTDbeI8ORD
k/KauwdUSV2Sb7pJhNVY+6XpYA94fX0y+FEBEajnr7jXRHvAmphGw+NcIijf
U99/8pwHSF1L+fskiwinYzNWrC54gInwuMnTK9jz+b/v96Z7wLGr5LRnqUSQ
efsmhJjnAXUZH8SeJxDB7TU5zOiOB5inqGi104iwffhadmSXBwSzJcR2hBDh
bvOhIoZXHpCd9La98zgRSgNsNm+PesBY/DmHl95EMIQzkfu/eUBEzKvwgUNE
GOy+tkuQ1xPy/xAfD1oTQdHX5USJmCfQo2K2vT5AhHVOzZrDeE/YGYFPf2NM
hASVOwPaWp5wMzDy/iiZCLJ470h+L0/odhObneYngt6dDrwz3ROsb+pR1rmx
/obdfra+9IShiSM53BxEkNNeuHB8xBM+et8y0WEmwn398MSwZU9YOqZcfOUX
AYxvhUgmK3jBiXtWa6VLBLj8TiFxVdML1r+FWj/+RgDJ86/uVO7zAubQ+r/T
0wRQ+3CsfNnHC4QjDZx13hCgZX7nKPttL7je6PHAepAAabuy0t/We4HMn3g2
314CsBD+bfxq9wLF0x0NV9oIIPNmM1BxzgsM4m34P9cT4HzBV+EyNW/wuezV
cyWHAB49Ltn8773ha38i7nYmAd6onOW9+cMbgnnLTz2+TIDWjuA9mWw+EJU9
T/qchMWvr/6mTtMHNt9wnluPJ8DMsU6hGWsfOCes+pY7lgAGQaWRSUd9ICU/
4rxOFAGE8x5w8BX4APeHnA/WNAI0cRcxbKv3gWzJR2TfEAKWT20ve/X7gIj7
+5RTxwlQxV4moDXnA4VFfyev+BNAcOLUcjyLL8hNSWvf9iZAPK46yUTWF8pw
RumP3Qmw46ys6ll9X1Dy9ZnpdyGAbLi0FZOnL9SUJRl8phIADjS5iOT6gvrs
navrhwiwS6rZs6TXFx4rvPzGbUMAzuey/IXMfvCikrtAZz8BBocXjF/T/GD4
Yd7vK1oEcBq5ENp92B/+Pquo0RElwKHP7ZdklI5Bz+hujg0BArzvc6uhHz8G
11fr/J/wECDneeO/jMpjoKdCl9JjI0CNguTuxyoBcKrwdZr+bzzkD10QjVU7
Dqsxm0fRGzzwCD725jQMgvbcuFaGQTykFD1NORgfBFdrWWWe9+Chc4DA5v8i
CNTmed4atuJBNSmNR8Q0GGjOBFPjWjx8FbhcNGAaAktaVrL7MvBgKivBOFMQ
CmD/+jTrJTzk8U9OCz8OhSuhjiPtF/DASrybvHMkFFTueF0xO4eHhLFIPkX+
MAgSjvq7PwQPONZIT5akMNAjbzruOI4Hac/nR38Xh2HnWVxdlx8eWIyjda4+
DYPKpNTjFkfwwNvvatT1MwzmVm6+O2CJB+3QYLZ2l3B4zEtQ5zDHQ0NAQnJX
RDhc3FWR3mOCh+2HAt97XQoHkm+dmaUeHqJlFlkPPg2HtXPatzi18IAdGp45
Q+HQcf3ZVi8ZD0cprlePz4eD31BnvZUSHuqFpDPuCdNAY8mSl1seD0Uz6D3P
LhqwcLwO7JfDgw7nTeZVQxoMyTt2XpHCg1N2kpXjYRqUGn/E2YjhoeW4stSE
Hw0i3L1ieYTwYDXGx7h5jAYmMTOjA7x44Kir3Z4ZSAOB3ECNDE48TDSSum4F
0+DTwx8ZtjvwUFmXOrE3lAbXWdfjnVnwcPO0z/jeMBocdmaM8N6GhzO3HVpe
YOau2ukb+BcHc02Phr9g7tzGf/jEHxwko/ljhZjjHcTNzq7g4E+bSdcs1p7u
XZxW8g8cTL2SMeoOocGvTSWF9AUcfFl6J2uM9V9loyZ27SsOyu9219tj8fmX
6rGXfMZBZ5LlAYYAGsismWxWTOJggffpbjN/GowesFyo/YiDR0O0GkUfGmTd
dBhrfoeDPscesUoPGhz86dbf9gYHA/KyzT2uNGA184O+QRx4veyZvORIg+jF
yJKJLhxAQ+b3VSsa7DGKzfrahoNXvF7hxeY0mLuanLj8HAcMR5erfhjTwE0/
z4/5MQ4MlCHlgiYNhDKKqJwNOMi6/7B1UJUGA9N39gs9xEGGzcBCmwINjNIe
KZIqcMAl99uoTowGG+PPxfeU4WDIu37HAz4a1JG7OXRKcNC/wLbitpMG8u9H
Fw/k4+A7w2hw71o4cChuPgxJweZjD7uv/KtwaDvDXBqdhIPpFuf2ro5wODvI
cTUuHgfBX/kbidj++hEtGZV1Cge/JXadFiwPh+EOA93GAByUKE3tnI8Kh2Lf
uBdbFjgQO3zl6zWucHB+dLFuuxkOLsFsQhxDOAhwZt7mMcZBvLN9gtZyGCTV
lSTL6eLgqHHPF9E3YRDI1HpgnxIOZH8TGvrywkCjmHXoEjsOXto/IuBFw0Cn
P6zLcDsONvoPzetsDwODvx+erTDiIFODrLZnJRT2OdXedVuXA4FtX5ZaBkKB
yusRu+urHEgpyJy9mxQK0XGPFHvb5WDd99z3NaZQeOQZGMcRLwdoVIDCvicY
9OReqaSuycLx7up7n1wDoIifXe3QL1mg2k3o1BgEABOLibb4kix0WbhsxskE
QPdMvfG9GVmY7dqdpTl9DBzvX3N8OSwLc3csYzaxfBah5RnPXi8LAQp7L0Wf
OQqVVktvUsNkYcBevVaG7gc8SOH9oSBZiL75xKal1A9oe7wmxI/Jgu7fPwlR
KX6gIzA0d89DFlgVdX9LHPaDzneN/15ay0Jav4Dc4UVfmPaJVeBQkQXheFv+
TDlfkIjhOpM2JwOMxnb1dfnecKy0W7jwiww8nRrlT0r0hobepIf3p2SAJ4M1
JSDYG2xl/s30jcrADPPt9UAjb0hq+27H+1IG3jVdyXea94Lv3IOknHsywNZf
bjiOvKClNGvoZqAM3C40yNi+4QHcfdYhNUdlQIO/vNBpxgNcf7PvfO4jA97L
xZXw2gN+mydSplxlYH2kkruv0gOUv0dU4C1lILrYwozL0wOuah8+d3eXDKRZ
zAycv+EOA9f3OPp9lIbr4ZF/dke6AUNpSM7HIWmo8n2N1O3cQPXe/SH7Hmno
m/35+6iKG6Q/UrA1fiIN3pJDsi4zrmAzLGshc00axGo9nP1cXGGAm09v1F4a
4hWJvGsHXGAgflnaqkcKbIQpCqxWTsCQonqk7YUUPFTYmMzY7QSqGcHX9Z5I
QdJTqSAzXidIvzknolQhBXUzS3673ziCTfMUL9sFKXB6xDO+eMQRBlZeMbUY
S0HG/KMsduw+0X+0dkb9iSRUiFBSq/sc4NX4bxuDWkmghQeGfG9wgOHDeo/3
3ZOEmBDOBOubDvDBpC2NWiAJG0lK1SGhDjAn83bPyRhJ2Jvj4ags4ADM79Zj
mnUlgf/Cj9FoT3vQMTfiMW6WgNPWXYzBfIfAAJJOHqiTAHscg17Ylh0Yar6c
OlQpAee06hzT5+xgP8G+3ue6BBQ5C9bKvrADh21+zkmnJcBs1ljh0gk7CH10
sbRLTwLWY65uPzZuC2UKg1o2T8Xhlhhh0bjdBo7KP3h+rl4cwpi/Kb+ptwFF
QobFg/vigLZyRM7ctsHurbaufDfEgftGnsn3RBtoFB6MHTorDu8UCIZZJjbQ
yTLY7ojEoUGiYHX6ijXMTw7Ye74QA3WFp4vtzZZQNV7zMeOJGLjeK/SaL7KE
0I/pfi21YvBin8+axnlL+DViE40rFQNp9552IytL2OwfKPicKAaOKvgC+amD
wPVsYOrYPqy9Ha/jN3gOgmr+QGh4lyh4vyA7RF20gAsHIxn/gCgkb7fzkA+1
gIkt8ezYJlGIimW03DpsAVe8/RvTykXB86bOK2mCBSwqb/0tOy8KC9XzTxVf
mEMlXSn1vaEosOWF3VVgNQeseLtt8lgE+GuYt86UmMG5XGXNlw9EACWsvLO4
ZAYj5q86be+KwIkTgZOa0WaQXCX57UieCPi0JPaEWZnBl6i6vScjRSDGKjnJ
Y3MflO6cot/fKwLeNUI4liP7QFZVf1TonjD0FId3mmmawkG7rzkqt4RBTSTR
8hfRFKIjrh7aVyAMApt7bJqETKGvaaHnRCpmD7JZ0qoJnDK8QR86Lgzx02fN
NRpNYMjuX2mmsjC0ar/k6NIzgaQTz0O4qoRg1/zL9R6qMTzIDVImlgmBd92h
JnkLY/jwSPSr/g0hyCARI7P0jGHvVphX0GUhyNSP/EeRNYbxJDmHnmAh+HV4
7F/MvBFo5SXopOwWggXJ952BCUYw99iUhfWBILg8XGDKx24R9zIau2l3BAGn
dLaeuc4QAo8qpE/eFASrwP6e+HJDWBDkFH96WRDEn0Y9a7psCEuhQ6oRgYJA
79WsYDtiCKtEb9cpeUGItNdMkmEwBMasc7XPbgiAoJGhX4gtghfHlqOVcwQg
5VpuAK8ZgkTkY5B/SQDee3d7vdBDwLJo1nXitAAcab8Ah0kI2My5x5WdBUB4
DXZpMSDg+le4s0BQANpOc5od96WA+PEnnlFp/KDoUtoZjgwgv7NzH2ciPxC5
WmZcdhuAGHFY6VYMP/jUiZ86IoV5cmmlL4AfvMYVIqo39UGESkwhmvNj91Qj
6TOP9UHAOOPhGxZ+qFVacqvQ0QcOcX8mtVg+KBWJm/Q5qAdp0RGzXZF8oBfP
ZKlnoAfsw3G97sF8oMKyzqagqgc7M67nprrxwYzL3IKhgB6wbX+l9EmXDxiD
j/UGfdQFlp969plrvJC9O+B7Ok0Xtrr5bi+F8UJJSKui1X0dsM0j1gsH8AIE
ZIjuLtGBUl+dNgMvXmjSOq8mnasDFgxen9PseMFa8FOFcpwO5Kg/ICiQeaHe
PPHpuoMO7CqyLvP8xQNxPpBvz6gDrifSyl9F8sBQir7WBV9tqDYqavwTzANn
e54373LVBkaeug4Zfx5olo2xnLDThjsV72eCqTzA2X/ZOhBpw69xRRK7Fg+U
3N+3LimhDUJXM22Tl7mhjuK6890bLaBROOyP/eYCjQk9EU07LTAxpp/3/sIF
Yp9m79Saa4GQWXij2xsuuF1tx6tvqAVNViNidrVcUE26yRepqgWbbqWTOiFc
ULl7JOostxYkntYL4ZjhhEjj7wG+/ZqQ8ygwpXqYA7aLPTs4f1gT/J9KN99t
44AHDeXrz601Qev5q4VbdRxwJ2cl6NZ+TRjt1LLNy+SARkf3oCQdTZAaYRaJ
s+KAseDXB15KaUL56vXbdu3sULc7PsDkqwY0kXthpX4nqPlJmGed1wBV4Uv7
+cp2glONcBzHOQ24s35wQCVnJ5he2p1/6ZQG5D3vGfeP3Aku/VVG5SEaEGXd
s/VOYycw4mGPprMGaBx/qfescQdwpb6uoqtqQF1JV1PSIzbg7l0wqp1SB+Wk
i+jWXTaYNtGe3jamDqXHzDvp19ggOowoSX2nDtmqXW/XTrJBJJOItuCAOtCe
da4G6LDBQGuD9fhTddg72qFm/WQ7+F8aqSjNV4dq3vYa4aescPyRS81zR3Ww
O8JrMXGPFRKrWErj7NVhtcL10518VjgaP2+630Yd9Ex+CupEs8Jh87aQr2bq
0BkpE+NKZoUdM4oupzTVYeL9KdPiuyzwfiMlrU9YHXjLdo8q5jDDExcmLYaP
alC3fIr2M5EZ4mMZyInv1MCR0s7RTGMG0TzORs5hNbgx4kqxtGWGcMWH6nv6
1UCRPaU0hIMZio87uFQ9VwOj0Ongungm8AxklKCWqwFN5xqTQQgj1Io0VNEi
1SA7W/zD4SOMEFmYY3udhvW3WFgXYskIRl/CzneFqsFqSYlvsRIjpEYcTdlz
XA2i2Ss7mGe3wQ9qQpimhxqc/fAs9aXHNhgcHVsRPKAGF85O8zvZMUDhcPHU
b5wa3Bnx+xZmyAALPhG4O7Jq0LX3a2uKKgMs69LNXKXVYOfMwolmLgZ4EMFJ
GBBTA7Gbi9WUnH90qc+P8j/zqgHBUECrN3mLfszreW0LgxronHffPxuwSSdI
2vE+mSBD19qZ20cObNLJ5mPZq2NkcAy8zvhGaZNeKVr3V+0jGU4cetf8/NsG
fVHeN+LxOzLUyB7aUxC8Qf97cu3uzCsyyD/bJ2YVvk4fXKUPd7aRQeD3rm+1
J9fofv4P9bPuk+FWwEFzRec1eiyRV5FYSYa9YwFlRTprdPeUv6VPKshg01bu
cWnjNz0BynUXy8mQmiX7xu/Mb3q5n1tRWAkZGFUFn4nGrdInrivMLuaS4fvR
zSuxF37RddoI0TWJZBiq2sNj5feLPjfr3BqVQIbHv/zSJUx+0SnfWu8ZxpMh
8dxg+qN/P+mvvNOfjcSSQSyvLONn5E/6SZ98E5EYMph02GT5+y7TaeesWnnC
yaDAmcSvYbxMPxnjzrsRSgauQ0+ymGWX6SmWjm9nQsjwboyQXfzhBz1iwLi9
M4gMwavr2e8P/aDPt776U36MDHmE2znWRkv0PGZ71lFPMpw5PiokJbNEb/hx
58+cBxnavKRV3m18p5+Q+L5vy50Mzqd+qfDTvtNjEjNmlI6Q4fzdG6rJnot0
Vb5/O285k2F0+09yiME3+jFgUPh3iAylWW5qHOvz9HU21ddqmEOkO9Xu1s/T
W1acmgLtyMCsWaj+SXmefl1wQumTDRlU/Mw0qeJz9I3J83FzlmRIaC3QoazN
0AvMn6h77ifDbJ92lm/TDJ1nnrOu1YwMVu/ezqdGz9CLT+jtUMQstshfOLL2
hf7Hf2LPuim2/sJp/8L+fKY/qFKwqTEmw8eA062l65/oc18c+0MoZDA6ISb5
8vEn+u3xutU5AzLciW068ePUJ3ohw/mP/pgjsn8RDTam6IuLqzN++mTY+Szw
4tuNSfr8F4fPJ3Wx+ZR7fF1gfZzekXlL6acmGbQ1Vy09T43T30luiadgZj64
99/99TH6l5vFbXKYC05UeJptfKSXNGsZO2mQobMzn3hq8z09sOX9h1E1MmR9
HH7bfvo9nRjyMC0W85Flvov8f0fpuqealwmYV8RT5yv/vqMTxsfHo8hkkAuJ
qRnfekvvtswjq+4lw0JCo6dy7Fu6ItUgZWoPGZryfvKd/DdMNyUyZudgtm45
foKPYZjuZO5IZ8J8WtBVx3TbEH2AgxawvJsMZop58xlxr+mv7+taP8TMRxm6
PrbtNf1HDMc0DfPdowf/RTG+oiu/1pXYVCHD8BO91gqmAXrgW5ZmGcwSJ73G
ljn66dc9gef7LjKknTqgls7XRz/9BbbRMR8/IznRLdlDZ52SbvTGPHqWVeMo
7iU9xan1lBZmi3PfU1kUuuknenXecWFWTHiuidQ66VqVCr6gTIb8xIpLH7U7
6PPCsxkFmHcmZX06RWmnP4ljdozGPHfB90q9RSs9yPZTlQZm5xSrz3Y2L+ik
pnkDEczdqZq6Sw4t9EdSY34bSth4LmOZ2RPonAscZ9ox75X5fDK99xm90uFK
QBVmPlwj4eVIM/0tPXkxF/My4eIgy/Rj+h+la2wJmAdJLmfQ9yZ6Qr5fUwjm
GqVdCjHrDfQJ9qy/bpjTVf4N1bPU08+ee/7WEnPonsFzSzy19J617H0UzDZq
t5SVJB7QNU/UmO/F7B48V/PSqoquvNowQcQsFXGZzdC3gi52+gC7JOaxk3s9
GmLK6EHbebsEMBfGDjcqZZbQs/MqRLkwN+1ckTKyLaRv7H6yyYZZU0i/T/ns
VTpf3+cwFszHjXduqBxOpZvSeqOZMA/UqdWyeUTRGWUEef/zUESlwd4H7pTo
xaRj/7kwyvSrzfUEimfzgznG/+KtcW7TL86gFIXw/P3v+WApn9ChiGuUCNq2
Ytb/5vOgL7nuVhFFnPxpeCfmuX3P3xtcKqW8EhW4yYNZ0VAysSvyDmUkc/mP
8H/x6J5UtveopATu+Dgjg3k4PyDgO76G0j2755gS5tXcvGd1og8pe69bn9XE
LHS1ne8UVx1l8nK2vOl/48v85UdhaqAIKbv72mN2vCL3hHmtkcI9zqnlizk6
zYa7+9sjyk7+fzej/pufpMpG++GnlL8VcnuKMY8kjLKLvaRTwj/zujRhPo2Y
a76PA2XS8qn44H/j19/LXD/UQrnj0OK1Hds/KnrmVcL9LyinX458xWN+puPh
eKqrlWIkQdhhgnlM83Il5Vk7pWhjhDcZc7DG7cMlTR2Ueo+/GxWYt9SaGVhq
Oyl1loOxA5il9s7Zd5d3U0ICtx2Wwfa7u/K+v/YZfZSCqOF9rzHr5ZVdXi3q
p8hwfTFgw74vjngmnoOOA5TM3cUSFMxfF7yLF/wHKR5mmykPMZe04VtVk19T
nmmeQDXY95q+MZS2jXuI0pDJQ/uF+eye8w6vcoYosxPiV3RUyeBS+PkLrewN
RS7V53wPZoETZTsa295S1hMWorZj+YTx3uFXyZYjlNefNZlcMC9NsBY4vhmh
kG81xNRg7j3or7w+/Y5S60PW8MTyURKeZK3P/IHSHOI09g7LV5tf7bs9ZSco
NK7XPiQtMvxkvq9i4TtBoZp+3sjHPCfNkrX37gTlyJ26ZG5tbD0c6l2Y9kxS
NolBsVuY658LLpSiKUoaLWLz53/59tow96z7NOXDQo6kFiKDb51KxMCtaYra
qf2vWjG79ieNNM1MUwYbSEmHDMlwgEWz+GLIZ4rvlvTPSCMykMJy9yrFfqHU
rGQLD5uQYXK/o0PwjVlK1voPzd/mZDD4fNqz9+MsJSmoSOKaBZZv4oqDlCW/
UqL7ed/pHSCD3eO583MFXymcEdHjFw+SoUXpTIPftTnKSteypY41Nv9cJcLu
2d8oJ9eSuVbtsfWuaMc9e/2NUlRhq9jggOUjs/ndkvwLlOv53RrRh7H8ck5t
//uMBUqXGQuJ0RE77360R1OvLFK+e+jm7nLB8tHcyjd50yUKbiyHZRo7nz20
2GhvfZYo081o5oUXGS4nif1JSlyi2JKSXt32xuZTjsLy5QX2vEmqJ8QXi8fl
gmSp0Q/KJwt8lAR23vP3ilnJoGXKVlzQjlGsXvhVTakW0f1FmTU22vMtjgw9
Srp8oW6/KKDrVoXD6pNb5RonOmJ/UejlRb1uWP1id3OXbmTrL8qEGmIYTSLD
g8viHa8tVyg26fpXl1Ox9Qn6PXbZY5Wi/oDjZHkOGfZ9XTb8Er9KibN2ebAz
jwySvoul+rdXKTdarVtCr2H9uX4O+PZ1lbKa2hVjeh3LDwdfr5rTflO6N1wq
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
          "]]}, Annotation[#, "Charting`Private`Tag$53173083#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
//8VKenbCtwiOMP/AGtko1s=
          "]]}, Annotation[#, "Charting`Private`Tag$53173083#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nxH4+5Gh4/xKTQbjZfHM7/f+fmAsZgm/j6FQABeR8GBkc4Bx2Hbj3B4VCvw8
2eC7O3GA0RhcRB1VpsCjgkX+uH/9DE70uCwXY9sXBw/zM/Uzak++TGfB+NhO
T20T5l7Gh0/8Nxf2UsBMvuD7heT3DFYa49tDjPmpvcWfmd8zJDyTB+kY3w62
+neE5R1j+9bs9r+KFOh/qtt8Z0s3I6p2dAiP8a442ucFrrcM6sxs5sIeCpyN
t1TN5u9idNb+7X+B8cHjEqPtEh2M+jtJ1GCMP55gVw/Gv2Hsv0X01MPYImku
k02unWH1SUlAEGP5k00aSLWN8SCzz+bVbgoUpd45N6zVygj5cP3ddYy3p+V8
iae+YrAwq8+dwHjmdEBWnUUzg5Yk+ksPY/cMmwkHu5eMqNtFfVIYt2dq6Mw7
v2DM2ZjZb8H49vltk/K+wHhTncb1VgHb79ITcdmdzxmRyNKyAWN+fAPhzWAj
Y+dsidR1jBcIZ3rYvj5heN8QO3MW4x6yx3E094gxu881PQ7jBwp75BLW6xmh
rT9FgzHOVvzXW8dWx4jdegS5YRyp3JM0z1vDqPuVuW6OsZ3qjd0Ku6oZHeEt
ZnoYHwifefDGppJxIKiRpIKxJP08h0HAHQZf87YiMsaf41R86hPKGemHTEuk
Mb6S2N+gcLGUEWDFqSqG8aPty5KG9lcYtua/3HdirCGk17X7RB5j2uoCPz/G
B422/1F0yWQMUFPdeTHurlWt4fA5wmjc7qfyH/fS7+mrVB+gZhCvNvzHV46Y
TNsVn6RGJTAr/8d2D9xb9K5foJLrRLT5/vO/jF/IkV5I3VG1770AxretAii1
N65RE42XN4QxnjFt+qR/row6bJfSIIGxvIFE6uvYCuqpKscthP/s0Ynb7eRz
jzqo0zm6B+P+otDQOdkHVJUeBztNjFcuFTyvFX1IXbLY52CMsVDeK/547lrq
sVS+Sfv//Lu4FEjdUk8l7+fn8cXYLQv3lHW1gbq/rLI9CuOjZ+142n88ph40
sBBL/S8+afcanPqfUWs+cx+5j/HgyY+cYm8Y1PK8f6nNGB9DrA/mRoC6wplI
Hv7Pfz0V1rreF1SFssfKAli9KOqaVwq/fUntOqZboITxc20ft/jXzVTzlOE8
W4w/a5y/R33+imqavM3tIsbh6jddSh+1Uk8pe0rUY7yp2sjEVtNGFTnmmfAJ
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
1R/+B+EtyZk=
          "]]}, Annotation[#, "Charting`Private`Tag$53173083#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3QPh/wD2Oyp0
          "]]}, Annotation[#, "Charting`Private`Tag$53173083#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Wyj8D8Xkzng=
          "]]}, Annotation[#, "Charting`Private`Tag$53173083#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
YfD//0+Lau0DldMUw+D/AGaR1MU=
          "]]}, Annotation[#, "Charting`Private`Tag$53173083#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Uii5vDKsVoQCy2l5LpnvpRDbtvnP0zgKPE44EzI8hK0vXH35VJYCav4zOS7j
UihK2doxTZUCGy7375d/kUKOkzK4PVoUaLL2e744K4WUjMSUVXQpEHviYM/B
RSn0rxulcB2lANL9PRa2LIV6qDkyRUYUoFVtXH6+KoXuJezfM2pCgTbZc7S7
/kqh/FAWYqcFBa6I6fIc3ZZCD35oXnQ6RQEjHgZC8i4c+nK8ja/0NAWk+o4U
X2bAoSpcZYG7PQW2riWKJuzBIfG9yl6fHCgwYNSRH7cXh2qi7pYzOFPg4W4m
vnOcODQ8ha58caFAYuuxzMh9OMT23EItxI0CDvFX2cMEcKg7QmzqqTsWr053
crAIDj1rt7y7y48CHJvMTAESOJS4Mm7ZG0GBufrjCWfxOBSTU+5hlECBlpAU
Gi8ZHJI87O7hm0aB4B97/zodxKHwkUrr/BIKHH9gEnpGBYdkJx843K6iAM4r
7edpDRxKF0s+p9NAgcFJjgULXRwKDB3Yr91NgapCcw/TIzi0XFo7kPUe89cu
Y+q4IQ7h0JnmqBEKOPL3Oxwzxtb3JofOTVJAfZD7k745DtV9+ZvwaQ7zN8PK
WvckFh+jS7jZEgXmTbL6tU/jEL419oPebwq8ZBky1TyDQ2EVzIqPNyiQ38n7
RtUZhy4eAZbcHQpQLlkfI7njUI+E7e+fdCFw4nBu6wFvHBp6nRHetDsEcDvD
SN4Ph4R7cSKrzCGw/VzgBTEI8+95d2DW3hAYirDVwIfikJ8AebuAPQSqVG4+
kYjEoYhwLePdnCFweeXTQdFzONThfO5bL8ZO1cJVgvE4NOLW5LKGsYbvGVm+
SziktLdOOwRjLpnCMu6rOGQxK7rbgCMEFmbGJDmu4VDD+XrDs2wh8KpY7Dbr
dRyadVFPH2UJgQJHJ6E9WTjkJGLvns8UAiHCd3IY8nCo9NCoZSF9CBh/nOSm
vYVDykZhX2eweAnZkun/ijA9ByfL/TA9/lm4sm6W4JCWz4ik0ioFPrCXXPlz
D4ee3BCcOvCdAo/eTNOvVuJQ7KR9oOsMdl6v4uOXH+GQ4KidTddnCjgf9dhe
rMMhRp73OId+CmjSlUfON+BQO1eUk2gXBb7FEIOnAIfa8gzNuB9ToFXD+8dY
Kw7RH/oqoFtKgYK1+z6fOnFIdKjwXEoOBUwC5VwHejH95Ux0/CMxf/f7jvcO
4NC5ncZH214U2JmvtOsZxqGtf3JzBdaYf64KVu0TOJRVy9q3dZACV8UDel9O
49DD+OWcp9h9dxmtPkGdw6GSh60mwVh94LY+eKRhGYe0zYn1kyPBEGakrFpB
g0e8eP3bZEowLOmVF2fQ41FRrvkDTetg8NIWZI9mwqMOqccM0prBYKdIM3ec
A4/wRwVvtW8FwYAMxUqZB4/oYP0k5XMQmEh9BWF+PHrKO2xF/zwIEO+bvO9i
eLRL3EC4PSQInrGTGYek8Ij45KHTsmkQkPY8Dm6WxqOQxZdTP2WCgLCVczzt
AB5lM5bn+I0EAsuU67YiGY+WjHmTFuUDIeHTkLeAHh5F1LjRfdsKgH8DhkO7
DPBIUbzmRPitAAh/23R4wQiPhrrnzoYfCoDljgPV703waCVz6vP0kD/4tBQL
PbfAIyaHUKHGAH/48mzflbun8Og7S8Td7wz+YF93ZTXZFo+k41qWo/P8YOjh
plOIAx61b7Rk7vzwBdNy/x57FzwayT/nGTl/FjqLJjWOeODRM9k/Hl6TPvA8
s4OL1x+PdFzbejm7vaAoMrO1/hwe+RxSK70U7wYCFMaDRfF4NGV/XL7AxxUy
fCNvXbmER0d3OVXtmLvAJUfHsNPX8EhUWD5ZQNgJfI7IETcL8ChGK+gvn641
KHO+StZpwqNAc2trEocydN1bsWjbwKM6k31uj9Uc0XoH7XPaHTyyIT3crHjj
hAiz2GNIR0DFbIjuwqYzuoAn/XrGQkBy15j+PbFwQ1rFlMxHwgTUlT/5L/CL
F/Jpubj5XZyAAjJf8dyj8UF5E5mucngCMkzVeNMreBatidaRyvYTUL1Lrbnf
ET/06OZq/00dApp43rNnd0MgGntGr/XxMAFxqft1JaoHob0jPCW8BgR0JfVe
8u+nQciHXyXkuikB2Tz9pGj3MBjhskJ5LjsRkKxPRqVbbAiyqLsU0+pGQEUH
Ag5ELYag+P6s6V3eBHTxXuPXVetQNMb5tC4miIAaiuJYBglhKDd1zSr4AgGd
lVL5fKY4HLU/ZHxRnUhA1zZHHz37G45+v+HFf08iIF2n9m8rxhEIt0i4JptG
QHkpRMvfhRHIgkXtt2cmAZU913n4aDECxckanCnNIaASoh5wq0WiakPrtqmb
BNTBFmixNzYSjXl57hcvIiDmlbXevxmRiPVKeNaZEkzfs2WrPywikWb55e38
ewSU9F4wPpQ9Enm357gPVxKQQx7Fo7AzArXTN6hYPiGgbk6zLcGDmL349cFj
7QSUqI7PzfschqqKmHQSuwkoRHb/gb1xYWiUyl/26i0BNXPuK6oQD0Oa/9TD
dD4QUEwybW/Z6VC0GhXJqzxHQPZPWx/EVlKQV8jGKTFmadSbMPB5qzMAPbS7
LMPDJo1cJrw2zg/5o5XDPFtMXNLIanfWxbkJPxTNqXBnRUAaHfUO+/lh8SxK
rXL+1iYjjXRs7s8pTXuiJ3Od530NpRF/4hmH0T4HRHsm517jFWmUm3v1QkMZ
CQz0cdFVKdKoqDGJ/UaFFqTI1RjfTZdGrFcf7R4fPAz7NrpXUnKlUcEi1exo
33Eg5vzTcronjRafGd4///4UmPS59zF2SiPixWnbn3xukNmwcnfztTSqPhzz
WpLgDsO3z4ctv5NGx6Y8y48oeYCzf57QyAdp9Iw98spPPS8IYelxfzgrjWaP
qR0eN/SFm0eUNyx3E9GQzNSNf1+CoOKhdU4zCxEJbGYcF3YOhoZ90coyHEQ0
I+h4ZfRTMAzNtPj/4yei1avcu/5h9Zoj0fTLPVkiIm6FzBUmhoLYj+A47gNE
NChwpQt+hILCqWyRWBIR9bAeZ/5uGQbHCaPWllpE9PlJBR//vnBIbPd5s21M
RDKLNnZFgRGQpZDq7WVBRGHJwaTt5ggoya5h7D9FRHWJvfqv90TC438Dd7Xt
iOief6nPH7NIaPFYR/cciejYgFSc/41I6H0rNMblRkQ2x2KdRAYiYUyVHH3O
i4iK7Ga/LrNHwRZj4hOLICLyu1tt0RgdBSwB9y1ehBJR6l/Kj8sPokDww5sl
6SgiMlDivKXwIQqI5OWUjFgich9r1Mj/FwVq5dyy2xeI6G1q0e16iWg4yq7W
4XmZiEwG/tynoGiwCrd1e5+M+UteIT23jQbX8XO7tNOJaNL5JX90YDQEG9wp
LL9BRHdf55OK4qMhvrr1EFcett/eKke+1GhI55sbjrlFRJqNChE9WdFQeJ4l
bPYOETU4mNpU50bDw1kFbosyIhJLO/zpfnY0NJlaPGqqIKIjnzQ/30+Lhu76
UGPpaiKiGfBRLbgYDR/F8hau12LzmRna/IKjYe5y0+WteiKKYtNyZbGPhj9L
4zjPJiL6GnR40Rnzn9GG7mUfEJF6m9EhB7Fo4AGCo1YbFl/eZbnv61EgRTTa
KusiooVYudzNN1GglO6Xx/mWiL4xetuH3YwCtJ6uGvOeiJReBlsauUWBqVNd
/9chzJ5utI2bdBQ4dH4INP9ERKX7nhytmY4EP8XNvU3jRHT5ncVfkYJIiMkV
fUCYJqK1ncTjOcaRkERz+Nj1OSL6qJbAz/w3AvK83Gc2F4lofPe5Q66FEXCv
98oFj59E9JOmJC1NOwKeqleK9f0moo1aueXooXAYYPp1uuwfEfUlSesd+x0G
XwJ5/3DQySDHXprFXdFhsDKscSN6twwS52ZgO7ARCuz3496accig6n4b2Zzp
EBDlLDn7nEcG7abs/fTANATkIzuYCAIyaI9lfdBsLQUOTS6UpovIIH36q12q
nFg//v///6Jqvicv/vv/7/8AGbwxBQ==
          "]]}, Annotation[#, "Charting`Private`Tag$53173083#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
f1KkU2Zn6JROhf8BuDY4BQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53173083#11"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Cross-Kerr\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=1.\"", "\"\[Beta]=1.2\"", "\"\[Beta]=1.4\"", 
       "\"\[Beta]=1.6\"", "\"\[Beta]=1.8\"", "\"\[Beta]=2.\"", 
       "\"\[Beta]=2.2\"", "\"\[Beta]=2.4\"", "\"\[Beta]=2.6\"", 
       "\"\[Beta]=2.8\"", "\"\[Beta]=3.\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.738064603197*^9},
 CellLabel->
  "Out[639]=",ExpressionUUID->"82b1244e-7a04-4951-8f59-6059927a2e10"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
UM/9hLF4aqdwMH8NY1XlDnPhf/klLXoy2OoYmScufObA9HaKJzWxr9QzrA12
8UtjHBhnK9A985hRJlZgrIlxQ9SDeofhJ4yxJnqFJ8ajV97ySL1gMqbPXlm4
gvElxF45+xEYwix3jAsxvmOsyV471MYgRbv//IqxmpFVuUTvU8YOr232fJi/
WgyOOgU/b2fMLP1r08Z4TO/WA0ZLJ8N6/mvbDYx9dO8eKGh4xti+i+RQj/GG
djMLR3UXQ04ud/4LxnKa0w7dJd0MRMyx34P53VXVYt0h8RXjq7H7U3XsvBil
F99azutlJLA3E/0w5o1kE9zj1Mdovnf6VwPG338ey//p1c8o0Lz32ho7jwUd
lHZ69CBjqPru7C3svCb8HYrbIjDEYE7WDU1hHKpxzXEgbYhhqD+yjVGEg0N3
pr74Fb9mfJsnMlYxFr1QzFXfMcKwkv02H4P1D9b7Bwai944yJr4Exy5hPDfO
meX0epQhKT2c416Cg5d7vFTXPr9huHu26Zhh/SiKQrMxZn/PyFsP1qdi/ezf
d4duN+I4Q2O0QsMV64+/2R+q7fYYZ3h6Fj2Zx3haniNZ8944w/7H4KuoCqwe
jrWH2DQ+MVwuwZWGShzUtor9LEITjIP0UWuDakzPjGGBb66fGf9x7m2rasCB
R42af1/hZ4bUd7M3ntgc6NIbNdrw9TMjlVX3qlwjNtdx6OXfODvFoL45k5va
hAPauduaKmFfGAWCUtsKW3DwydLJ0SfnG6P6ekqNcQcOTKYuub388I3xry2F
xN+J9ZuI/DOqst8ZKY1rs+MY2zVOX5vO+s44fDan8mYXDtpULtd5ZkwzVHsH
Nth6MP35CyRcU2YYDp5HQjwGsXqXdZJbBmcYyoKMDpchrB/t+qEuK/KTIVAu
f/PAa6y/hGtbvkv8yXhsH52zfwT73s13Bh6M/8U4pBC67vEO60fTSzOK5nMM
36+BTlyfcXBUH+c3cnyOMe39wUtpCge3oqRWo67OMXRk34vs+YLpSWJwfHk6
x5iN3WeV8Q2L59B12aId84ynEamu9tj3XuSl1D4CWmBcfSn1ZRc2LyxWMCok
DRcZ+5acmfrY/NGjYijse3iR4fbyoWIXPzYPleheeBa2yHiz5+xPZ+yLape7
zTCgfZERUK1fGCPCBVW3pJ8N7l1iTGxv0RGR4gKfM3/Gbh1dZlhtukz1KHKB
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
rjrK5eHh//+/AJIxPlDvfxcP/wcUno6o
          "]]}, Annotation[#, "Charting`Private`Tag$53173226#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
8bJKqMQePPMxPf7///NRs/KjH1PqBPg/7wRYOA==
          "]]}, Annotation[#, "Charting`Private`Tag$53173226#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53173226#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+W+SHVuv///+EAWtcBM4sfX8P+XWT+4=
          "]]}, Annotation[#, "Charting`Private`Tag$53173226#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53173226#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwtm3c81d//wJFx7b333UZ2VrjHdlVIKvVRUVJJUiERUlIhRIlSRmbJyAy5
L8msjMxUiIwkIXvk9/4+Hr+/7uP5OOf9Oq91Xuf1+uMqHj/veJKFiYlpZRsT
0/9+bel85uuKShBYc9t29bUh7Cy7OouTU4IFlgi9vTcNQVXx1xMxKSXQ8Zr4
0upoCHyrTSuaQkowzZWqwblgAFvuutk0PiVwuvi5C5oMYLYjc98eLiXwcEUi
154YQGduWMFpFiU4ouPiuG5nAG9FZv/z/0cF492LZs+VDeDVtaOc4WtUSLW7
UW6FM4Bn0x/K7y1RIcYpgNw6oQ/3nXe6p85TYdXfiketRR9uvssTfDlDhf62
Y9/P5uuDv4YEo2qKCkQ/Xfnge/rgjFuU7B2hwg+BH1VbrvpA9z3RNDpIBbp+
Krf7Ln0wHO70nRugwqbg8PMwPX1Q2Y3wW71UWCmXEHIk6YNMZUE7TxcVtFF1
VZuIPvASZYOl2qmQ3WggN8emD/9io5Sp76lge4K9/NWKHvxZX+3b0UQFMfWE
dZ7fejB86vRN83oqsJk7nl4d0YPOrl6tvQwq8FaW+V0Y0IO3NMvho9VUoOao
P/Hu0oOSFyV3vSqoYKek5Tz1UQ8yxfE7A0uoEHBQXWGwRQ8e3IibvFVIhSe2
yd7mTXoQ8effgwcvqFAhPVIj3KgH/v+dM3+WQ4Xa0aBwG4xPNX2ZLXpGhRfV
/SZfsP3O2rZPa1Op4F/jebKhVQ9sUit3fXhMBYmtZxeY2vXAgJuy+vkhFW6n
LH292a0HypcfZE8kUIHxslvB/oseSI9uc1qMpUL5rqLy/aN6wGN/kXlbNBVO
xq6LJ0zrwWbVcIHAbSo03KPWMi3rwQzZ3kUunAptZ/PwSSz6MBT/hlP1GhUC
dWdrHfn1oeOfSoXBVUw+13keZVl9qPN85G4dQIVE5qRwcVV9eNWLE9rvi8Vb
+1uaiJE+PDO7zDjuQ4XhqqIBqT1YPhSMefl4UcGsMPwF4RgW/4i3TVHuVDhq
sbSMj9CHU/MafsmuVOAQD/DgeYzlw9FUfI4LFfiq3+4dLMLir3s1+K0TFaS+
BIYrDunD5tgO7VULKuzTncvwtjSAmb2Zw+ym2Lq9DhpzNYDBN0IxIsZU4GLu
JAkEGwA8+DOpvoMKhPtDhacrDCDcMu+pBwnLX60PHN7ahgBRgQ7yilSYKnW4
EHvAEDY6d7H0y1Bh23f/N1aBhnDp6MxJuggVij3PVO+vN4Tjl7W3q26jAmuR
egjPfzuBlvemem6YAtbu4emJyUYQ+Cfm3POvFDiW0nRB460RlO9wlT/RT4FD
dsXSX6aMQO0ty43udgpIOBlUmRoZg8wXa9uKWgpw7HN3PDtoDGs8n/qvplDg
e+iZCz8laKC771nkjiQK3DpfKfHChAYXk32NZhIooJv3Km7lBA1+ksTTjkVR
ANQ8i0Rf0qDfxOWUWSAFzJcT/+jJIBC5uV1y3Y8CTh/5n3apInB4/6+15AIF
LlxNnRc2RtB0MF2NdIYCPVuj0xdcEJT7jC9yOFPAoZNUq5aIYL68Igf2UeBz
1pUdQc8QqG3ePnTFngJ+t7IEdhUhyLqj8mbKigIz3B573ZsRDLdveD8zo8D7
dU+PrC4EMmJtCi4mFHgTTzU5NIjgfoZP+McdFPhpX3AfN4+gY9JUN0KTAqT6
8bfrawi41YUnTbZTIORypdDebaZg5fcjeZmK6Zvw5T9WblO4Xl22q4hIgVBj
nL+gkCnUMt/aPK1AAeWUJX1fCVNYs3YuVJShwELP0atUOVPQjVFyGxCngIvg
qrgywRQudK8JJQhTYNw3eNSXYgqJjvaH7/NTYJDjB6VN2RRqOp6lP+CmwGlj
KY6w7abw3W5lMpGDAofTKuQi1U2B/eNujaRtFIis3sczrmEKqrvSLydvkeG9
ZMS5e5qmsLdlsfbROhmWLMeHbmPsb23LnrJMhsFWbuYWbH9Kw9M9T/6S4T/t
GG87TN5b87/3n/4hgykXW6Modt5EnfXX1F9kODXAkSWN6cODUgjpE2RIU1PL
cyGbglbtrGfGKBka7/H79CiagrOR5atnQ2TIjzF/eF3GFIKrklczv5CBUuRW
4ypmChn6Myi7jwy8YczBXvym0Fxudjuniwx60VX+GRymMKPzsD23nQwBLkTr
rX8IhEt+iT1/T4ZnV3ujQhcR6Guioy+ayBB3+fSI/C8ERwvvZ+XXk0Gy/8Lk
1yEEN7b/nH7JIAOPUuTOEizeuS+MdQqryWC2aHMltRHB35zxt8UlZOhSllDJ
z0MgQd7JVVJIht68gwMNyQhMMmP3lr4gw+X2x1MTtxGcwP9IKsshww3y1VW+
ywhup+kPlz8jQ49BXKaeO4ICubuUylQyWN0/f+eoA4KulO/erx+TISmw6DGz
EIIVKd3yqodkmJWYE3IKp4FccuRmdQIZcp926dSMmICF+JDFm1gyZNZ7OzjQ
TODMA+3o2igyUBuokqRHxlB676tU3Q0yKDjFh47aGgE9Uk2/8RIZZA550pYf
GYBv0KeLHfvIkA3Pwh9y6EDrEanJH8JkOCPc/d3SWhHsU41oa/xkOOr70Tiv
XR66h48m8vOQYUAXEZhEZOHbiWcWhqxkIIfM0ONzxGH2jGp67AIJSvMVL6ez
cYG4v8lhwx4S2JQuPhZo3qClVLgW23eSwJXqOXRFcxtSWL2OO/mRBB1eO99X
zHAg5atN5bENJGC6qUgTeSyATK47CI+VkaAyvuPv2CVJVF9/0XOtmATjDr99
rO9JIxu2B3X8BSTYbRo4IZcpi/be/nzeMJsE95WvdwV1KyD3mOMfYhNJ0Gzx
37cTCUT0sz2ckBWP7eeTpOReIiFvwZzAqhgSfIgu2Hd+Dxldvv+LOhZBgq/+
PjZT0xS00cN7be06CTRaiFwOr6jomrhGH38oCVKeQnqKjxKKfOR70/AyCapS
ay3t+pQR/9fEr/aXSJD4KnfXyVAVdF/2tfbJ8ySgi0VKNcmrIoljXyIDz5LA
r5ZcuLtSFT1J2/weewpbf2rG3m6zHeFH5A2yTpDgVF66DKVzO8ommMVVHSOB
ZxfHn+171ZDKSfeJ9v9IACcqQ3rc1VBRdoTJ2EESFJ1pq9ry2I52TOY+WNuH
6etJC/roqoqqlN5P8zuQYDphvt3TUQXV5/M/NrQhwVXZGr93skqo91XScqw+
xiSST8MhIvpvocouSwfzR+Rs7HcxAhre8S2rSgPjGL367R8V0VSlotMYlQQr
h59b8+6WQ5u1z4sMJUkQAOqiEtLC6MOAOs+6CAkUtkgTD3/wo5Sl0lPVAhgL
ZPNdvcKJjNQYckY4EqC93RuBpSu0wCdd0cbLRFD4V7YYOrTJWAraOI16iCDC
8f29/k48zOrbKVrdI8L3XGHttGh9AKeuq+x3ifCL1+vyyQgDiPVx7m+8TYSH
/3r29IUaglru8Vjra0R4lPxex+GCEZwTv7xpc54I5wtc6utICIy0N5w5zxIh
5Xv0+odUhPUTYaUtHkQQnH/FZCJpCvkRUWdtjxKBVa9PW5LLDKYWUz/v2kOE
nUSTKOURc6gSJO3goRPBQ/RLwMB+C7iz/XncBwsivFs/XBHabAHUk6XWe4yI
EK69NnnhuSWsXDN4xqtPhO5WkTcZklbQlFL776M2EdRGcZlxt6zAo7u5zE6F
CBfxvl5nj1mD7uweQX4KEWxjx9WMWqyBjafLqx2P6cOp1HhP0wa6Kc7NsXJE
CNZ6jT+aZAOZ5t8IDlJEwLs0ecGMDfgeOx4qIEaESd4cbiIXHSyCJgY6BImw
ln/g3i8CHUZfzd3by0mEV+/Tfaod6ZDCvnb9MBsR0k6zx1z0oMOBwyy+J5iJ
ELN1ors7gA78BVwnvTYJMJjzOGb8Dh2amYUP+K0SYCQghiM/mQ7X90tbhywS
YP6ObKRSLh125hH0b80RwGteye1EGR0WNlSU4n4TIKvlft+ROjoUOOhIJf/E
9pNp+rIf6HAq04g7Y4wAJYpcbVk9dFBYsdh4/p0Axp29o+vf6DCwa8/vkm8E
mNgd8Y4wRoeE1P2DNZ8JwJO/WqX4iw67/x5pb+ghACu7kNDaHzqwW3tAWycB
KBeLRIr/0oHxyLu47yMB2jjKeXct0SFgxj9juIUAjoPbbD4s00HTLDThZwMB
uHiD+AxW6DD14Fb4fB0BHF5svHiArWf+jPVbf0OAqx1nzo4v0uGIcZIHaxWm
T8Kzh+qYfLF7aQd5ywnwkycqyA87v+NHro3YKwJ8dWQ+XjNFhzv6xQbyBQQQ
C554gMP0N4t+rUx9jtmfIXf86CAd1ofqpDWzCdD45Zbg2146lGq38hhmEGDG
hPWPXhsdvG992jR7SoC6UV/Ld+/oQPkyMLPrEQESv1cdO1tFh2G10SGnRAI0
2Vfc1iykw6PrvzqOxBOgyHIXt/QzOvAob7w6H0mANVKtzZnbdGgIZs0MiCCA
AO1Ycu8VOoR08jwIu04AI2OZ8wGedJgLkL2cEEgAUyvvHk86HZ5/IJ1O8cf0
C21Yr9ejg7uC2qGsiwRoXq/5dJxEh94mk50VngS4JyFYe/2fDcRJW6uCBwGE
JtVP80zZAP28vWzLcQJ4Hrw0M91tAzVirlsDhwkgcmm6qj7XBtJPhtX/syXA
mIpVOKLbwOHXd0o5rAnw+xYVrarbgAhvfJaAOQEem+irq4jZQERpxi38TgJs
l3T/xP3dGry2vdtlpUIAScHoI/oXsPuTzt59l5sAu64I8jCFWoFh+4UWUw4C
hJWxtGS6WIHJ5tfaRRZMPw8H2w0DK7A6VJJ3ZA0PIYF3fD//tQTbW3Kpgkt4
uML5msuzwxLsyu7cb5jDA8+Jj7T6fEs4KOgauv0nHiw+qLqNuVuCC+297/cf
eODgqDF8jSzB9Zyu54NhPCQfr7x7VsYS3B+nH6N/xUP8Qn0H84oFnG7h2b/Z
hwd+jfDRn58twGv5sm1xFx7c034y1zRZgA9plHayHQ9Qi8sNKrOAgLDXyh8b
8cD92m5nQ5wFXC0kKoS9xcPrmeNMDiEWcO1brOiOWjxM3+TebDlrAbcNPJie
lOHhSPTC7rtWFpA0J9TrlYmHke8KYkfWzeG1m1cYz3U8bMy/bgg9bg61sX3+
EIyHSnpZqoa9Obx9Y+blewUPM+2FPn07zaFVUvLgVx880OWCc3Ci5jDQ2aCa
fwwP+i8u6bE1mcGaqXz/LmM8BLTkODcomYER/pNa1IoivNIeP7r/N4I0YW6d
fQuK8MSX1Wf+M4JtbBYG0rOKcOA5b0881k+1TpSZv5hQBLmc29pDWD12fpns
/L5XEQZbyr2LHRH46rtd5y5ThIFsy5vKl2iQbzfbE3VBEdy5fN4K6xqDAFL6
su+cIkx9rfqhJ2IMlzSPD0ufUYSzP7eR/eaNwFCke+qFqyKMzDKd2lloBM2f
K7be2yuC69XK6FUlI/jhHqrEo6YIDikvKvYSd4JMEF9w9JQCjJUJCchsN4Az
ma3iT8YVoOikaG2qgAGUf4x49XJEAcpZI6Z3LujDXoWtibYBBeg41ChZW60P
EQ1/HAXfK0Ccm/PQL2ze/8PfSU18oQBL82dO/PPB5u/MhO5ULwXwDbxReqdt
B/C32Z8vOq0AC0kJteZlO8BlmZurzl0Bguaq6yRSdsAyPZw24qIALI88WUQ8
d4DqH9/nxD0KwL1J9v2A2wEPDA5cy9uuABZnVr/F7dGBjhRNZ49v8iDhr3lu
fEoLmDLPJ37rlgfBP43r77u0QOPFy26nD/JgNG5xuL1GC+JeK+01r5aHU4K2
VPVYLXDoVbRVSJaH/Oc5Fxx2aEEHv5DRgJM8MHngt7Hd0oSO6/Pydh/kQHoy
zyuOpgFMkRpHG+rlwMZoTopFVQM07nmnGFXLwU2F1GcxEhoQlzolofJcDjrL
N1r/jKqDQ82IIO62HMx3z1EFd6tDx+KnbW/N5SC2J71TmqwG7adLJnZUywLR
L8vEglkVPg0tO5iUyIL7+M+e+hEV6D1gVGX1QhYsbLbeer1Tga8WDdEHH8tC
mBPXjMFtFZhS6NO8EiQLuLbUkhpBFWD9vBZUs1MWoo2qXIxVlcGQbiZgXiMD
eW+NyEvBVDCBiCu7SmXgfmPmrC02x5vqvR/Zly8DFT706HpbKtiQnMrcU2Tg
tFp5hLwEFfYzexyOuCoDB2KkS4NLKeDz+k5mi5EMtPdx7M3H5qBspU59hzfS
4LB7Kf5JJAlOU4rrrpVJA8vJZakbfiRQJt2zLX4pDR6SNm9vupKgQGGvi9BT
aeivzdWo0CVBhXhnaHeINExo3TQV+EGEZrbORmckDakLgSe2YX3Gr+8dTm71
UpAdt+uFkAQBCoaKvt2rloLSB/svqbMTwOdbnMfbEilYvuDocnIBDwv9DgGE
TCm4+4FZRKYTu/ftHY/HwqWgqsOsoDgKD3y1HSNnrKTgxK58teNseNB41OFz
sUUSlqr5jm9yKsLt3f4sqyAJT2VHHtasKsDwP+n7oZWS0D6q1HD/pwLEnjhV
EZ0jCRIqyCO2RQFmVP9tZt+UBJ/rz0/kRSpAPkMl6oupJAgY33XaI6gAWHOd
ZVElAVcuBKX1H5KDaw9V9d4XS4AST8TaUxM56Kd/at6bJwFgyZ8VQ5CDWwWy
00eTJCD84aboz9+yMH65VOuKvwSkv/0ZGx4uC5lcI4yXWhLwKo1JifJaBhQ1
jAfEXohDULOKRJaJNOx2/Jmo9kwc7GLjm18qSUOA74N9Vo/FYcguKrNbRBra
Kn9/8IsSh0PD2ZpXf0lBoOlTRvdZcVD2KPm+/ZEUdDtuZcarioNNc2TG4oYk
RPjVnecrEAMfkyvz470SUPzwnCo5Www+3z/O5tYgAV9fS/40fioG8U815mZL
JEDr34Xj52LEYNnGmmcgTgKGIvD7P3iLgSbLttr2XRKgn3TDMFJdDPYcggqN
RnGYqrJkYy8WhXnNMgv2D2Lw4l5F66VcUVgMMJr7Vi0GXqeV4r6nisLJbvVb
bS/E4Lcor/SbGFG4vufp99UoMZj16dbw9RKFO78u+vjtEYMl8gmXEYoocP1m
LAx3iwJLwrWS2qci4FopGHNvQQTqz8wHqCaKwK7FdjCdEIFw5G7y6K4IeHiL
nWcfEAG2GesWv6sigH8UWvSBIQI4Ov+Q6mERCA18PG4TLQJ8W0+4HouKgGqq
AvdbqghIn612uxwtDJlCD0YyvYThUXOzFW+4MPCuyTW9cBMGKXKvyrMgYZAN
obLUH8D4++xim6cwROcOk/GmwiBxkBxJpguD0JO5/jQxYRAxv/eqh00YvCqX
7O++EwIe6VPbdEKF4Or+BJ4YFSGIDvCdbPEXAt2PT3L88ULA3Rv28Zi3ELhb
HJ73khQCrnspD6OOCEFgML/ZdQ4hwHF8UhndKQQbGpcD9vwQBLa/Rk7xK4LA
tDeleF+aIPxrFcqavSAII07RchyKgrA3iVwm7ikI5O3L1qOSgpB50rDB5Lgg
NFoLarQICYIt0/GxaEdBuFEYLfCKVRASdxSTlLQF4aO+1vDSpABsT7PPdlsQ
AP/iJrJ5iQC4+EXnfPIXgC3NpLJkOwEoNEurWPUWgBMu1deSbASARaC0SeGU
AJwiHspPNROA3OdfJrwPCkDlivFqo64ALAwpU7n1BcA5w0QvQF4AxB7E7701
zw+tswfcKn7wwyUaj9OZZT5Q3nN0vWQnP1iYM26eGOcDisrUgwYNfhCzvlhx
pAfjqOoXEyR+qLTrl3Is4YPDTIGfXQT4YeNI5nfD83zQwemrjsO+C79qdJ5n
ghd+xh9gq0zgg8TXXpGFvTzwEM+auLbCC6feyNfkNfAAbZdkQ9MfXtCv+/T7
WSkP3NTta8wY54WBZv29SfE8cKDmwnpYNy/I9bNKhNnxwIqzgsFoES/kLKVk
OTZyQ7Lf4QhFL16o1P4Ii2VcYKK3fEpwmgc0xO/aCGVzwamtB3PLP3ggd213
h1oiFzyc35k8+Y0Hkuo+DJ3y5wI+9S3cZDsPXLb/8O+zLhdEd/H3HcH00D37
3qi2ghN03SFeIpQHSjNaKiNe48CL4+JstxQPqEbcQc/ycKD+m/f5RxEeyDxD
b2Yk46DQSeBrGx8P3Ndo6Vu5goOs4nPhUyw8cKm2ecnTEAfhw3d/3PzFDVoD
TTr21Rygvh78yaKWGwoFG4vE37DDsNf0WMYZbnA8Kmg7/IId5mJOHNjuzg1L
z11Gcx+xw4VoOAJHucHI4q+oYQA7NHnYsDA5cUOzv0KQizY7LJTsP/zDhBuG
vwRapuexwZs7D1n1xLhBMFt9QDmRFbxnTLRftXJB6Xzgpb/hrJDwkdyq38gF
zrRGnppLrOAy23utsY4Lnva70PbsZYWhPflyy5VcoMwdmXmehxXyUE/y0xwu
MPP54V16fRukhcxxf7rJBZcMk7eZnGeBQy+TSFLWXHD/vvTXA0dZYJ4Rj/cz
x86beVJ6fg8LFFf82OyhccFSRsbJdBUWeNJtpp2nzwUB3PlNrJPMMLqj5dN9
ZS4I+Vob9d6VGdiJXKWB/FxwO+SH8CFHJsiUfX3Z/hsn5PZ7TF8wZQLffmKk
8wAntGj9fBepwQSyp68mefRxAtfEb78aPib4eyM9+l4nJ0ilzhTSErcYp+Sz
ePCNnEAyFdH/eOsfY++lJ4aUIk4wvHnMZtJzg2HCWtTMcQuTtxKcdXTXBmP7
+q3Ut+Gc4OyVwtKjssHgy+RTCbvOCX77PtfUTa8zpjrcHTlDOKFIcZ/mY+91
xvD6tzBLP06g1FpJ2V1cYzx+Y+fm6c4JIsvbp0uurDBayDd47Cw54Znnbrry
4RVG3WRaW4A5J2gNemanGWLrEfv6sk05waEhx/Xu+jJjt0xpAY8JJ0QlKPZ4
BC8zlgR5RLd0OYFFQ7RWMmyJkW93/E2QEif8Ob0RG3p7gUGxYD5VI8AJ3QWa
AnYeCwx93p9ayvycULXgESdjscDA87cfeMzLCeHXOuNeb/1lvK6dqwzjwvyT
lH3vr/9fRuDFvbfdWTnBoskh4dTJeUbSgWDhxhUcKPFGCOuazzP4W+RLXZdx
wLevOoFVcZ7BWjge9m8RB58HSffTv84xvjwwfWz+FwfeS2v3v+ybY1wXag37
+xsHSaSsRHuzWcb77+LbJkdxEHx2QExOYZaBkzLcXzqCg4bj8mqf1/8wUpu2
Xt74joPDgQtqwpf+MPaa95xRGcLBzbynGrfcZhhsTNZNTwdwMMDxV/u8yTTj
ba7eP6FPOMhMOKLDs/aLEfOuJZmvEwfn5Zt18sp+Me4dDBHl7cABq96THaOq
vxhFzwqeCbXhQM3DWu+g9BQjUby1j9aKgxvvHhvSViYYQrcHbyjU42CyzSDh
ZOUEo11tm97Btziw+9z3KypgglF+2cc2rg4HUjPCT/pXxhn2NvaRnICDIvHo
rQurY4yndlZ6Em9w8M3z6rvMtVGGskDny/QKHJj5Scm+rxpl1JZsdS2X4yA3
tNJvLnCUoQBEYweMfe8vkE3WRxhLz7t7OMpwwFXrdadv/TsjdOYIf/wrzJ/4
qhSRtSHG60M54kIFODDQW9rjFjjE6LGPxEe/xOzbrbX1cm2QcYzX2wOH8WO/
527W698Ybv5ViRz5OGhufkQO3PjCqCCt3lJ4joOEb719jVe/MD5d9aXnY3Xs
6LzQHeHNAUZe66KJIcaL0lG/8jc/M3aMRNe75OIAfz6oaOhfH8OZnKpYk42D
3zcq3FRD+xi/nb9eOIRxZdJfoStbvYyYYuLcShYO7N+e9RNi6mWkeB0KNMH4
qqiLoSVzN+Oq+ljW6DMcWCsn/boX1sXgqOQ9Eo+xEK07ZZC5izHzwMrEHOO8
07u3LrN8Yvj9PHv1RQYOequN3j3f1sFgERXvfZCOA5krxwfnedoZPHdWcQcx
jg7cpRMn1MZoYXm0Swrjs8Gyw62yHxiPfWo2s9OwfAlh1z1NeM+wkxTy8sHY
9tqfKDalVsa8xseJnRgr36jTQzrNDBsxabbPqTh4FP787jeDJkZyUljWc4y5
IhJGA2mNDIm/Cw4hGE/dPhlbZvuO8SU5r1EF48ORdmOODvWM2ke1sWwYt0bp
7Zzd/5bB/e2W2/enmD0xnBPKbsAgxA7KpGKspTB2Je5jLSOqhMYWhrEQoYL0
vr+GkXJ94687xvOkO51sP6oYz3pDJm0x7qT+F4z+VDJm72iMaGFcpLJdKWit
nNHlHzQsg3Gc2lZ3GVsZ49HllhEcxj6anddmBUoYDzzCJ5ee4MBB55mqikwx
Q0RObG4c42PeU0Xv7QoYJwMm1/sxlvONwZmefM7osz+J+4jx4BUt1/KgbEZV
yJJoPcZPQnsrVOIzGEeH2IjVGFdyLcqZ7X3CENy9qVmGsZ6YcZtqyAMGIdWK
VozxWXOudbUDUYzRV7t2FWLcUapTgnO9zEh189//P+72zTfRKj5Gs0mt4yn6
n/zLlj8dUm7QfI91DRf8T9+iww3G6fdovmlvX/1vf2emkNg+32TabxLlxiuM
83af1C59lka7UZLkWIHxlFXdF5O7mbRvPIWKtRgrm8qGt/jn0p4uMs81/k+f
nVdUnVzzaec0leo6Me595On5h1hEm7lREz+I8dLDpNpSyVe0pqJ9Hr8xFnvQ
KBTIV0pLCYow+vc/++IXPGjbymkiudOigph/nWPx1awrFbRPq7J/SRgHRDvw
t06/pl3VedVthHFlRH6FU+8bmvKl4zk+GPffGOCWes+gXf73MvkuxlcRa9Gf
IaBZhVXH52P8xFiLtaz7LW01KOjxLMZqRvQC8fZ6GjXoSL4olk+1hq7OgS3v
aOeuuTYaYTyoF5NPq22ktb6gStzD2Fs360BGZRNN7ZDs3lqM/+nUMLGVNNN2
Ssc/+I2xnNaUU2tOK23i12FzRyzfj6labTrda6MlkbaZ62D3xSgpO2YprZ02
8Wll52WMea5vE9jt3EHzTynIqMH45+8T6b9PddJME91q7LD7mNFAfKdxq4um
nSGmG4fd17j17mhm/m6aVKHJq3GMQzRv7v+U2E0jbuhk0DJx8N+TsfFL2T20
pNMJwysYi/hlc1Y09NEe4ejTt7H6wfLiwKdbe/ppZvdFZP5iPDvM/ti5p5/2
90ZNw7EcHHzcfUp17cdn2on03DsIq0cRRKq9MetXmqwj4ac8Vs82fjq1uikO
03gC1IoOYPXxL+tLNduTw7TSo/f7JzGekmdL0MobpqnPzUcEF2Lx2F/23zbN
77T7KukBBUU4KKsT/Z2JRmill/6+UyvB/Jncyz957ActIGxX5rNKHJwsVfPt
ePaDRn1Pu++M9YEu7RH9lRM/aCaawZICVTjYxaaXfuf8GO3yvP7viGocUC88
1FIJHacJ5gatJ9Ti4LuN837vp5O0ir7TddsbcGAydtXt47dJmt4zYbl/GD8K
Sz+nKvuT9ivc4EtHIw4cq6ZuTj3+SYPI5JDgZhy8VQku90ieonGkyqf+fY/5
ny9D/Nj9adq277/mnbqweD9vJNR2TdO+ch032t2N1SPrX+qywr9pFrZDrFY9
WH25pmPz5d5v2gPOeCnTPuy9m2sMOBg7Q5O9sydm/xesHk0tTlMsZ2mt19+Z
rWLvs6s+7lKf+yytnKnRTXIMBzERUqsR4bO0qITDckbjmD/xNLbx+lna++Wh
y3cmMX3+uy2baTZHC3rd8d0ce++FP0rZKaB5WqbEvJEB1i8sFNIKJXYu0DwJ
b26pYv3HB5WdQj5HFmiirVpGNXxYP5Sj69cUukD7Esdtb4/1L46p23f6v1ug
nQypTQ8V5oTiGOmmrj2LNHyfYACnFCd4n1sejHFdon31KmhvoHCC1c950/Hr
SzRX7uywu1g/JHtyJtM4a4lW0Oz62VkFO89lzHP65xLNOXU5ak2NE5R3dy3R
Ly3T4qviAz2xfmpCuZCPLWKFZpBY685kxQm12c8vuOSu0OLF9SNZbTghEZ/d
XdK6QnMv707hscXOk3ry6Dj/Ko282/4x1Y4TMjmjyJC0SvvQoxkYd4ATXCc9
TIJerNFo9tPZhNOcMJAl5z3XsUHLt9Zd8o/hhHL2fMfc+Q2a20Bm4GIcJySc
MtA7JrJJU5D6b29AAifsVnJi+nhwk4bbvMYelYTpk38nPndwk1bcO8I2lsEJ
6SUL5cem/9E+0f0MtSs5odR1bGv8BhPKS/ojojTOCXhB1Ytv7zMhnteah7R+
ckJc3cUfT7KYUBoTvgxNc8I5PFOLUxMTUjg72O41zwnkH1Lxb7mY0ZzftX3b
tjgh6ZQD8ek9ZuSSrZenLskFQd7VNvtTWZBtzA+j8r1Y/09bdOcrZEGxv18l
qu/nAi4B9bCmWhZk0/9NvsCZC5KKM14bDLKggLEvvVXHuKB84Y6ynOw2FLcQ
6CfszQXzgc48E4+2oVsJ+082RnGB563F9oBEVuRSePzvT2w+0XJWn9bMZkVV
+kMy7O1csEo9g/tVxope6xVZU7uweaD1KzrSw4oMf29vCPnCBdm874pNRdhQ
yf38w37TXPA9IT6BK54NfW4+1BzHzw3OaeoHU+6yo3jXqEuMw9ywwDHolveU
HRm2xuIkXLkh7ny0V3khO3qdProVcJIbWkx+hnV0siPaEX1zJx9uMPyWkc8q
xoEy/vvociGCG2SkxFjOPeVAtvKu3+xLuWEoYSPfuBCHbPn+Kc6I8cDV9ecV
toBD4s8PKJ2R5QGJE4feHuzEofn3C0wzBB5w0Crvu/AXh/rdwU5Ukweg4zxL
th4nGiiZPv1mFw9k8I4e5ANOdFlxcPrydR7wuNXCMtTBhbqERalSKzzgwn+2
omWYC1km1w/s3eKBvQ95vEpnuZD7o3O/Eth5wSjHvueOADeaufTBVU+UF4Sa
enJ0HLgRzsxVa1OLF96wj+yObOdGC/q65Hs+vCASsZa4o40HrbHvWqct8AIX
X8ouhUEe9CDe4N7QBi9sPTBm4p7hQYvV4/uj2PhgKuvamWFeXkTf/SCLQ5wP
oIHdKGoPLxJXnFm4b8gHXmzC34c/8KK5Oz9w/OF8UB+uohL9ng/te+OyK0Ke
Hwy3HqSRv/ChOTeNa5eU+OHVFSaxuik+VDIiH+atzQ8Z3j1MS5z8qPWdgHGM
NT9cdw7tPWbDj3wVvBf9ffjBTLUrTLuBHwkNVSgxNfDD8Bljr3PHBJD28cbe
eiMBkMmZzzY8JYCEzrAuvzATAOcfOd85zguglzF0pxQbAeg4KnQwI0QAqbs0
zz5wEgDYN2Ha90QArXK9+vbbSwBSje+Jm34VQPY87JMGqQJwVHDsrcghQXTd
XLvhLpcgsD7qXohyE0RpYtJPVYQE4Tn+HXmbpyDSeb2d0S0pCMvazyLnAgXR
p3fJAnQlQYg74ObYliKIHp5dqc2zEYT6x9++3xoWRKrH1+Z6bgsCldzLtH5K
CKVxuf5OERKCtoIGrYs+Quj5qwCT59JC4KdX5v4zQAhNtnIeaiAKwVub+819
d4QQXVbKlKQnBP+ddYwrfSGEwlgeGMa4CEFMUZu89x8hRExkBvHnQvDXsMnk
u78wKpYhBqc5CEPjviLLphBhFP714Yfuw8KQ5JW8+2WEMNqwbvYTPykMJk/P
Hr6SKIwaYzOlm68IQySzgL9guTCaGtVI738mDPhm55emi8JIP7d5vmFNGPbu
n5LOuCSCOs5qs5x9JQJE7y787SAR5L/kdvFErQgsRdQoed8QQWJXzKe8WkUg
pTJGzzBBBJE3No6VjIjApLT2vk+vRFCS0KGzgiKicG0kKJJlXgTl0NXMlANF
ofA87+pxH1H0H0V4Ic5JDKa7NJbnA0TRZFfwmIi7GCjrOy1eDxNF9F3H/hRd
EoNMpsdzGfGiyO55/WfNBDF4dI86NVIqinSS3owd7hKD8BLzL8dXRRHK62Sc
dhaHw8tX3hy/LoZ87A/kePpLwMP/nlTPR4qhj1vbBXXvSEA3A15fTxBDkavu
m7IpEmB/m6M8I1MMdX1OuinwVgIsJB8UjDSKIRn9TtaHfJKgvrMo9Ti3OHpx
3wFn+1ISWEPHw47fF0f41tamFhZp8L60bb9bijiaXeyXfCcuDf2nFKiumeKo
25dV7puqNOQ7HG47UiqORsfkZs8elAYnfJvUoW5xJPFr7zPmAml41lBWYi8i
gWY0tW/quMmAGc/NMaP7EqhCc0VrflgW8pkyKnemSKCb/YwiyTVZEFusjTLM
lEBeGUxXTwrLwdS3FU39Umxd8lCBp5UcxBd6hWh3S6Cxqf2eGgVyMOLoJK4s
Iok8W5lDO8LlISyZQBe/L4l+upipWWYpgCpH1sbvx5JoUHXdrLtEAfp9yUXv
nkmi96Mf5ALeKoCag5L4xRJJ9GTO4vm/IQUYYFcf+/BJEvGt747gklEEHV/D
sOuCUmhce5LJIEkRxu32vv4dI4WulGRfaEvHw72aT17vEqXQpoVtqXYJHoyU
nRQeP5VC58QOvCp+h4d4toO3bAqkkIa7xrGVCTzQalz2P/sohaQky+ZK1AmQ
pHR6zplHGhkdVM7dqifALtZQpXd3pNH7R/IfGplI4PrGsNsiXhrRNHuumYuT
wN9/KaThkTQS85Ne/b6dBBmT57obX0gjvODOzGP/kWDlg0toy0dptOLpmXq1
ggSZDwx72gRlULfwqYBD/mTYIC9d+5wsg9pMUqhiAlQQGi5WOZwhg1jGJMz+
KVOBknyud+C5DMr+V1TGZ0UFR+4xla/VMojRVxuWd5UKuX+6ege/ySAdTYWo
D7+osL+yWPWHoiyqZb64d7lTCQro5/pn8mQRQ1ZM4SBDBWbj8c6DxbKo3Df3
+u1vKqD1ta/v42tZ9K7EaWhkXQXKvc368ltkkW7PyR3CBqrASBDv9fwpizaE
DkqeKlOFjm91XeNUOXRI39KKpXw7/L0g1j6YI4cKDvV4pX9WB93q93ZthXIo
IMV713+b6hDAGtb2pkIOMcVlpaQLaMBG4q+PKU1yyDAy8nebjgaw1sCHwxNy
6KjPeQ3TEA0QYz/b2kuWRzVV50bui2qC/iNGQ1uWPNpkvr4j5IAW/FArNDpd
II+0W69eVjynBffqn5YwV8ijpT7e+JEbWjA1HZyu0yyPqt36imuLtSCFZhT8
aEoefQ62MfvOpw3XLrpIlYgroGinrP4fbdowJv65M8RFAXmejhx5emoHGI04
3H3vqoCERtq2vl/fAfH5zTYSJxXQiLDNNcunO8DEtJJRfE4BDUyWmZ/r2QFJ
ng9f/ghRQJ/2R7MYW+qC7Zv9d2zTFVAANbqjUVkPCo5/QmLjCihBXFyznccA
ss5cnbabUkD7dl2z/0/FAFJ8yEm3ZhTQtlMdkdtsDSAyJPDPypICEpGKXsq5
ZQAnH+GffuFQRFqtaNmY1RBkPl1cT1NSRDaqUhZ3WHZCpKlwuco5RaTfeII2
L2QMHgpOKqYL2H5RHZunnxFc+hNoqrmiiBov+1WX/0JwrTb9oOKGIrr617++
cxPBY5c/N5hZ8YjT/rAlH94UOpIiv9YJ47H3atvaQ09TMBCsu2umjUdwZ/RC
1rop8LCozZpfxCPjFtzCcWlzkOx0YtfxxyM2m89M27ebAzktSIYYiEcpWZ60
PybmYGrSYsN6HY9mRX3Y/jtuDv6B7unv7uGRQIDH08Zcc7hBj6oofYBHFo+e
4ulV5hAn8epjZjIevfrQR6t7bw7Py7dWw9PxaC7w90rcjDkMzT9ytCzGo6U8
dvssbQuYrqs7vaMMk7+WE/7ewgLW4iZDSK/xKOFuZNWP/RYgoq77gq0Oj3zj
SgZmLluA4j+XusV3eCTE2yo3dNsC1D7e6BtrxiOuH3VidckWYHO2c1tjB2bv
68Ue52oL2G+4IlnejUf975iXeT9YwHFOeY3sfjxiMo8NLflqAT79llaJX/Ho
T+aQSuyaBQTneLlEDOPRpIA7729pS4j0T7jo/wOPymvKzmkbW0KSZdVtj0ns
++gLEkePWsKrUY4yq1k8+o/wOMg+zRJ8+983Ri3g0blD73zb6i1B72Nsf8cK
HrW/3Z4nMWEJNeXiG4eZCehV8pzjqqoVNNyhmJ8XIiAjFHd/f5kV3A755VQq
RkD1K7yOSb1WYHup0GNVioCUX6ueCVq2gjYXvcgbBALaqA7W5tW3hn51686H
OgS0UAz4lhJreETkHv2qT0Bf7iU/DOi0hiOS7QuKxgRkb+cb/mTGGkZYDkrk
WxKQcNOx/VoUG8hcllKeoxNQVCUu7KGZDXhMD+7UtSOggdnREpcjNvCrx+MY
HMC+T3OrnYuzgYJW5Qts/xFQyu6Ub+V5NuDDmLlue4yAuJ4bJDTW2cBCrn92
9ykCyh754FD0xwbKnxhWSnoR0Ob84bRQNjpcif/XctSHgD7KXRUNl6LDv6CI
35MBBCSpnbslZkYH8LHd2h5MQNUOu2oeOdHhxkk+wUthBERZKN5u4kEHq8Of
8JU3CWhaL3d53Z8OOPtEnc07BJSsu/amLYIOreaHrcxiCKiJy5dY/IAO0fpy
zrfiCYiz/Xvbk2d0sNs+cuZDIuavJ/xusUV0EMRnBwk+JiC5+JaQazV06Bbz
vHsglYAkGr+8P9tEh0RutdTHzwjokpPQ9K5OOjgzzRcN5xBQ40GDG9IDdJBa
LHtLysfsnZLZ0fOdDl9/Xun2LCKgLMqdrEuTdEgdNB4vLCWgQ0q2AXO/6XC8
i3lloZKA9nOp7qXP04HY3MBp+IaAVMbWuvwW6TBec0c6tI6AfLqvZ15YpkNe
8Z7t7xoI6PV8rIfeCh28sgVpnK2YvYdn3tRh62qPexzs2ggok+xpx71Eh9nY
5OMJnwjI+0J7Nd9fOrwKP+Lb34vFd/9UXuMMHXyvKEbIfiFg81tEzfafdNDz
Hnt4fIiAeJwuPDQZocPa8by8nFECevjMb/DvZzrUHDxXPT2B2bt0bIdNBx1C
dmt+1JwmINXTGzTdBjog08VB/1kCOiIknlFZSQcW3dez1QsE9Iv/6lbLczo0
KAezMK8SEJa86+6P6XBb3lTEapOAzp7fvzM8kg62ImzkKGYiimY/7oYPoAOh
0zLjFhsROZ8YK046SYeNuxFy4ZxEBH7PHcv3YvGxbXp0jZeItktKTvgb0eEl
B048WJCIVqjJQr0kOkS8s0m4IkpEd67FB7Tz0uFo2B1+f0kisl33qjm6YAN6
Jq1RF2WJSHdeYI2/xAYE1rlw5xWJKGKzjMi9zwYmK3aFnyURET7kk2LunDXU
+UYznVYiojjy5Zj5GGu4OMO76qpJRNSqx8q1DVbQ811gytGUiN5eJqX4kSyh
4OleD3tLIsqtP2BeX2UBEf/Fj+yiE5Hdxwdm0vYWoN8j/MViLxGRf4S+kfAz
h0fNYh903TB5L/s+xVSYgmuhTIFUGBG1i7l3K5oagYHXEWXxm0R0Y4bk/uvg
ThBSepotfIeIjiRJWhl7G0J9hnwqzz0iOrMi/bM3WR/Iifi4f2lE1Mekw+H1
Rwd+XaVeHAEiujbZxfzdQQXeGZyZGXyH+ffv8LjFTSVIWcrz/NJMRJkOIaVp
1RSw81E50d1BRB0qfgOrakQoOqHm1DhMREWa5oIxnlLgb6uj+5yJhJgCdJMP
8ubQ/pjnZMSzklBcm3GmzsEp2mljKf4gHAnBYPTSf1dWaf9pME3uEiAhkfUZ
r5h2HEJiH5J/y5NQo3KaqeO6OKrip7H3EkgIv6lpUVgvhbQ5X12spZDQQy/5
sIVQWWxOeLgrVp2EuGZevPU6o4i4R05satBI6OQ68T9jLzIK/9J7RtKchFY+
u1maP6agf930XmZrElI1EacOvaWiy201ZlO2JKQXUmAyNqKEZpvUCz/ZkZDW
XNw7pXVl5FmXIV3tSEIaM5TFa9yqaLRK9PazAyR08f1XbobwduRSensh6jAJ
8Q1LWFQKq6Hel+uuvkdJaGHQI2k9QA3Z53h/dDlOQgFSpOH19e2oOe27gaUH
tq7rlZvjvx1VJzQJiXmT0G655pqUfapI565h6L8LJEQ9v3RHu1wFFUS8/DXu
h32fP/xZQFAFpV1JeFcRTEIbK9KshkVKSPISu2ZaGAn134041rVARfFeV57c
von5X3qYZqdFRTePHfM/dJeEcpUS7t1IIiNPSxXqegp2vufR20rYOzJq8vT+
aBoJdQhnS/GQ8chFX5D5QyamzwczXXYNRWSvsvw5JZ+EJP64iFeelEM6gvVR
JjUkpCByOjhxVhS95NJdIQPG24QP2FUJIzJrnjv/OxLCIR3bdGzOlVyOMR5+
T0JpvqFCT4AT/ft6+E/YFxK6VqHMxWo2RWvJnXdsWCOh6YrUonxNQVhpYqlm
2SKh8Pefb80IiwB5Anv8tpERtXU348a6GFwnaf+t4iajFPuA4zKfZcAo41JC
kQwZVZ6PC0t2w/Lx8ULXYxMy+tb8I1iMpgGDVaxGn83IqK0uleM/Zk3gHRDJ
FLMmo56qbcGn6zXBU2KH7z17Mso98lI9yEobiA/8RG65klEHrbe3Fev3HEtv
Xn3nTkYFAtTh9G16ENb14AfzGTKSsZgdDAI9GBQsL716gYx0brTW9egaQFLM
ktPF62RUsnPRxEvYCBpfsr8pjCCjYys2YtmNRrD4QYz0O5KMhAOHp2UCjIE4
Tb6rHEtGS16L2yopJlj/r7d4KoGM1ILrUo72mMA1ZesjWQ8x+QdDVpav0aCQ
frBh5DEZQZdW/g5R7BqdPrVdIY2MBMULT3o7IuC5ffnBkUwyWnQnRx4+hcAw
59bmo1wyuqN+YIkYhOBM48OT/flkZLPvd1nnXQRJYzkfRYvJKCf/Ubd7KoJG
1sod+8rISFyC9+hIIYIFQvOTuNdkJHrx7xE7BgKCeT9b2xvM/ocbQ/kfsX4z
bKXHppGMhEq1kvdOIChIw5lEtJLRvPubidR5BN8YEtn1bWRU7kiemN3A9Bui
8jF3Yf4/JPPMht0UDP/p+5v0kdG7A3aUF3ymcFqWPhj0hYzWSWdDZcRM4aHR
IavXQ5g9zxQr0mRMofG/MwVLo2REeakwsBPrZxcCr4jpTJIRh5z4whzZFPCP
7oRcmCYjvq4SgSZlU9j7Onm8YJaMynKzdjK2m8K1/jy76QUyuhD0+NqguikU
LL8uV1oloyqKxS+qpil8FWuVO7VJRrhIu1sZGHPrDkRkMlNQZ8gZV3uMDfdP
zXxno6DYEfPr2hqYvr5rB+S5KKjyXvSKo5opvPzvlpIIHwX9Cu6AHyqmMG8m
soEToqDx3R6Sn6imoKuc3rYpSkEjjPe75EimECSolj4vSUGCSSHpHxRMAVaq
Lk3IUtCLxI0Tw9KmwDpsbfVVkYImr9Z/dcH8QW/qlugkUdA69979lgKmEFPg
9qtBiYJk2AjiTzhNoevBzJuq7RR0Tani7CkWU5AIDoor1KQgV8OolJw1BBm7
HuxINqCgk+SpysSfCCa08LgYYwpaveGjt3sYgapU4cB1Uwoa+rS9MrwXQdlk
c6gXnYLC6BbjUXUI1tr3O7rtoaCcv0lkt3IEJhUjxAN7KWgjQTq28TmC5psb
LbRDFLRZnf7PLh7BV7yGiPAZCnJ/f9HtlQsCRa434xznKGjAZmXa3Q6Bxxz9
9YYPBak1Jk/X0RD8YZw4Oh5AQXsaKN63FRGwHHmY+/o2BUXMuOGs62lgbUEM
KoimIE2VQl/uDBpEqxTveRaHnR8o4HYIux+ia63z0UkU9PLIJlv+ThpQH/4z
cs2lINVLLPd/vDQBu86TnezNFFSw+d7lRIQxPLbUWdvHQUWCt3+HpezYCc9f
HnxYy01FxC90Z32+nVApGqSjJEBFSfk9T60nDKF3rM77nwQVqcnMCow9MgSB
CPvRXGUqOuF5NEma0xDkZy5eE1anIp1p9y3HcQNQO5AoG6JNRa2xN7as3hnA
LvK3g/uMqIg5JvjYnesGENHo+WFzDxVdzIh/eZnTAB6oxZw57YjJ8749nfBb
HzITi9m7DlBR+FbI77JP+lDnsYJyj1GRWP1Ii3qaPnS0SQ8KuVORi1zkn+Tb
+jCoSwsKPk1Fd+Oyz6pd1IcN9ogyxwtUtJe7ZH3NRh+4z+c5vvGjonqjb4cs
dfVBqu/DH0ogFXX1zmYMEvWBSpuNjg+hotnfXBvtIvqglyOsvHmdim4k2kTi
2fXBil+v6dQtKlr70XhxaEUPnC4fdv8URUXNvzMG+H/rwYmhYGbjOCra17A6
XjOiBxet05/m3Kci3muTNX8+Y/Wz8N1OoWQqOq4VHVb8SQ/ixCf7rz6horpZ
5sPcH/XgaSi3/0Q65u92j7PsLXrwckJN2DGbihxH+wZeNOpBjb1jUc1zKjqC
Ln5kxbi1wm8PpZCKqOuOp6Wa9OCzfPLUvRIqUqA+7FjEvp+8VXNro4KKXn35
TyWtTQ+W/wwRT9VQ0W7l2if4Hj1gd972thMw/1G/7I74pgfYi3PMqAFbn2o/
0j2hBwSq7UZ2CxXFhr9eFF3QA624c8mCbVR0j7vMwIlFH9BKnO7VT1RUlTBk
lySkD/aupV3jvVQUqnng8C/Mn0eb+3z2fsHkre4IO2CgD+c01nlrhqgoeuvx
5Ii9PlxNkntB/kFFBc5ZZcmn9SGSyczm3iQVSUme5w2/oQ/Jp0+OrU9Tkc1+
MdEXWLxzO25f95ijojTFyjlx0Idy/Xz5zkUquh1/obnruz504/4eyv5HReMl
qSsuqgYw6iO2LLBNCandtUsx2m8A8/0G94M4lFCDy5222GsGwJ93rc1BQAlF
aIhfKhs0ADnBzLPVIkoo6Uim+iNBQ1C90oQjSyqhtE+a/OLWhrDz+1RWnKwS
omR+1d0Ragj//397FD1e937ztSH8Hz07gp8=
          "]]}, Annotation[#, "Charting`Private`Tag$53173226#6"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.363898, 0.618501, 0.782349], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
pPmPJZW7AsH//x8TbSNb29XfQ/B/8hDZGQ==
          "]]}, Annotation[#, "Charting`Private`Tag$53173226#7"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[1, 0.75, 0], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
EFqc894pC/g/ZKxvRw==
          "]]}, Annotation[#, "Charting`Private`Tag$53173226#8"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.647624, 0.37816, 0.614037], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$53173226#9"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.571589, 0.586483, 0.], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$53173226#10"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.915, 0.3325, 0.2125], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
PPo=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$53173226#11"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Self-Kerr\"", TraditionalForm], PlotRange -> {All, All}, 
     PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=1.\"", "\"\[Beta]=1.2\"", "\"\[Beta]=1.4\"", 
       "\"\[Beta]=1.6\"", "\"\[Beta]=1.8\"", "\"\[Beta]=2.\"", 
       "\"\[Beta]=2.2\"", "\"\[Beta]=2.4\"", "\"\[Beta]=2.6\"", 
       "\"\[Beta]=2.8\"", "\"\[Beta]=3.\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737980436283*^9, 3.737980458928*^9}, 
   3.737980596918*^9, {3.737980680757*^9, 3.737980690823*^9}, 
   3.737981062949*^9, {3.73798900575*^9, 3.737989013972*^9}, 
   3.7379892259230003`*^9, 3.737989537454*^9, 3.7379898174820004`*^9, 
   3.737989927851*^9, 3.73799025726*^9, 3.737996787041*^9, {3.738009866848*^9,
    3.7380099044709997`*^9}, {3.738010181999*^9, 3.7380102070629997`*^9}, 
   3.738010241551*^9, 3.7380147106140003`*^9, 3.738058548224*^9, 
   3.738064603449*^9},
 CellLabel->
  "Out[640]=",ExpressionUUID->"a4285465-580c-4de9-9e3c-adea255a4c01"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Phase Diagram \[Beta]", "Subsection",
 CellChangeTimes->{{3.737981178267*^9, 
  3.737981204065*^9}},ExpressionUUID->"e17fa8a1-74cd-4017-83c2-80ef410353b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"len\[Phi]", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"Table", "[", 
     RowBox[{"i", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"-", "4"}], "Pi"}], ",", 
        RowBox[{"4", "Pi"}], ",", 
        RowBox[{"Pi", "/", "5"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len\[Beta]", "=", 
   RowBox[{"Length", "[", "\[Beta]list", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.737981211611*^9, 3.73798121309*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"d555fc20-703c-431f-9a8f-61db403da0c6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"table\[Beta]crossvs3rd", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"listt4", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"\[Beta]list", "[", 
          RowBox[{"[", "j", "]"}], "]"}], ",", 
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"listt4", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i", ",", "4"}], "]"}], "]"}], "/", 
            RowBox[{"listt4", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "len\[Beta]"}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"table\[Beta]selfvs3rd", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"listt4", "[", 
           RowBox[{"[", 
            RowBox[{"j", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"\[Beta]list", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", 
          RowBox[{"Log10", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"listt4", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "5"}], "]"}], "]"}], "/", 
             RowBox[{"listt4", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "len\[Beta]"}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"table\[Beta]crossvs3rd", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
      "\"\<\[Beta]\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "]"}]}], ",", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "]"}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Phase Diagram lg(Cross-Kerr/3rd)\>\"", ",", "14"}], "]"}]}],
    ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "3"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"Greater", "[", 
        RowBox[{"#3", ",", 
         RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"ColorData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<TemperatureMap\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}], "]"}], ")"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"table\[Beta]selfvs3rd", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(ex\)]\)\>\"", ",", 
      "\"\<\[Beta]\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Thick", ",", "14"}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "4"}], "]"}]}], ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Phase Diagram lg(Self-Kerr/3rd)\>\"", ",", "14"}], "]"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "1"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Boole", "[", 
       RowBox[{"Greater", "[", 
        RowBox[{"#3", ",", 
         RowBox[{"-", "2"}]}], "]"}], "]"}], "&"}], "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{"ColorData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<TemperatureMap\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}], "]"}], ")"}]}], ",", 
   RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7379902674820004`*^9, 3.7379903225620003`*^9}, {
   3.737996798116*^9, 3.737996842251*^9}, {3.737997267692*^9, 
   3.737997290523*^9}, {3.737998012611*^9, 3.737998021395*^9}, 
   3.7379981437320004`*^9, {3.7379983015629997`*^9, 3.737998305098*^9}, {
   3.7379988096029997`*^9, 3.7379988307390003`*^9}, {3.737998886115*^9, 
   3.737998886995*^9}, {3.738001437771*^9, 3.7380014466429996`*^9}, {
   3.738001485516*^9, 3.738001549843*^9}, {3.7380101280629997`*^9, 
   3.738010141355*^9}, {3.7380103585950003`*^9, 3.738010437458*^9}, {
   3.73805834662*^9, 3.738058368834*^9}, {3.738059324683*^9, 
   3.7380593825559998`*^9}, {3.7380599842279997`*^9, 3.738059995876*^9}, {
   3.7380630066280003`*^9, 3.738063044572*^9}, {3.7380632055039997`*^9, 
   3.738063221672*^9}, {3.738063572269*^9, 3.738063603317*^9}, 
   3.7380638109110003`*^9, {3.7380638625179996`*^9, 3.738063869604*^9}, {
   3.738064996859*^9, 3.738065101835*^9}, {3.738065147283*^9, 
   3.738065155182*^9}, 3.7380659888450003`*^9},
 CellLabel->
  "In[698]:=",ExpressionUUID->"302150c6-a349-455c-96ad-a37bafd3a1b1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxdmTGrJEUUhau0aHoMGgaa0WZhsGUcnUBEdvO+oIGhLGK0KAormKiRkWBg
YCYmIspi5l8wbUFBFjUx02iRzgR5YCGIy0Pemz4HzpnkvQO3b31cbp1bXT2+
9d7tu4+klL7PKV39feK5l179bzx9l65/FxP0zevf39RvX//+of7qy6vfv9S/
/Hz1ezhpvhQan6lvXed/NPT5ErpeE5qvjcde//3Oyw+eIS80eKHBCw1eaPBq
vhQan6nBq8+X0PUa42vj4afv3/386yN5ocELDV5o8EKDV/Ol0PhMDV59voSu
1xhfG3/Nzbt/3HmavNDghQYvNHihwav5Umh8pgavPl9C12uMr40HF/c+eP7G
gbzQ4IUGLzR4ocGr+VJofKYGrz5fQtdrjK+NX8ebH33421PkhQYvNHihwQsN
Xs2XQuMzNXj1+RK6XmN8bfxw+/4n978YyQsNXmjwQoMXGryaL4XGZ2rw6vMl
dL3G+Nr49uM3Ptu99iR5ocELDV5o8EKDV/Ol0PhMDV59voSu1xhfG6+88+cL
Pz67Jy80eKHBCw1eaPBqvhQan6nBq8+X0PUa42vj1k+Pv/jmNzfICw1eaPBC
gxcavJovhcZnavDq8yV0vcb42nV+DOSF1vk22HwbbL4NNt8G8mp8ptb5Nth8
G2y+DeQ9+/GOvNA6L3Y2L3Y2L3Y2L3bk1fhMrfNiZ/NiZ/NiR96zv/Xmv735
b2/+25v/9ua/PXk1PlOr//bmv735b0/es19szc+25mdb87Ot+dnW/GxLXo3P
1OpnW/OzrfnZlrzn/deZP3TmD535Q2f+0Jk/dOTV+Eyt/tCZP3TmDx15z/28
sf22sf22sf22sf22sf22Ia/GZ2rdbxvbbxvbbxvynvujWP8W699i/Vusf4v1
byGvxmdq7d9i/Vusfwt5z/W+nLUfLmfth8tZ++Fy1n64nLUfkC+Fxmdq7Qc8
X0LXa4wP9a2z1rfOWt86a33rrPWts9a3zlrfOmt966z1rbPWt85a32q8i/Eu
xrsY72K8i/EuxrsY72K8i/EuxruQN8nvYsJ/4IUGLzR4ocGr+VJofKYGrz5f
qMGr6Vjfyeo7WX0nq+9k9Z2svuAOjWd9J6vvZPWdrL6T8lbjrcZbjbcabzXe
arzVeKvxVuOtxlvJu+4/8kKbP5AX2vxhMn8gr8bTHybzh8n8gbyaj/4bWt8S
5r9h/hvmv2H+G1pfxNN/w/w3zH/D/DfAu84P8kLbfCMvtM23sPlGXo3nfAub
b2Hzjbyaj+cH8kLb+SG0H7qw80PY+YG8Gs/zQ9j5Iez8ENoPHXnX8w95oe18
Rl5oO5+Fnc/Iq/E8n4Wdz8LOZ+TVfDz/Wv/21r+99W9v/dtb//bk1Xief61/
e+vf3vq3J+96ficvtL1fkBfa3i/Iq/n4fkFeaHu/IK+u1xgf399svw223wbb
b4Ptt8H220Bejef7m+23wfbbYPttIO/6/kleaPBCgxfa3o/Jq/n4fkxeaHs/
Jq+u1xgf7x/MH/bmD3vzh735w978YU9ejef9g/nD3vxhb/6wJ+96f0JeaPBC
gxfa7nfIq/l4v0NeaLvfIa+u1xgf78/Mz0bzs9H8bDQ/G83PRvJqPO/PzM9G
87PR/Gwk73r/R15o8EKDF9ruJ8mr+Xg/SV5ou58kr67XGB/vf8kLrf57MP89
mP8ezH8P5NV43v+a/x7Mfw/mvwfyrvfX5IUGLzR4oe1+nbyaj/fr5IW2+3Xy
6nqN8fH7BXmhdV4cbV4cbV4cbV4cyavx/H5h8+Jo8+Jo8+JI3vX7C3mhwQsN
Xmj7PkRezcfvQ+SFtu9D5NX1GuPDfDuRF1rn28nm28nm28nm24m8Gs/vbzbf
TjbfTjbfTuT9HxUqYE8=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxN2Qm412PaB/BzNPaSUkmkaFUqnRYqRYtWaVOkTfuiPVFpoaJMRFSkndJy
UqROFDU05mWWxjtjMNNrfc1qZjDzehljlud+/5/f9f6uy/d6nue+v/d9f793
/3M6TpeMmtZ/6ilFRUW1yxUVpf+KLkyolHBuUeEduQpwfkL1hPLixQmnJZyK
X0G8vHfEK+oTuXMgYt9xnup+mppKZlyaUCehcsJ5CWfgRP508dO9z8SpYk75
nNYLzKzgHfcaZl8AFcXPyPUuJxbaWia0SOhgzpm49RLq21nVhLMTzpKv4l5D
PrzV1PsiuSrqKolluUpqwn+ThKa0n5/bS13aq3vHvXlCA5pi1sX01qOjLh0V
vc8zs6ZcDX0upu08OmroEbFaNFfBq2XeRbjV7KEqRL52QtuEKxKa4TYw9xI1
tfm8KqENbj38OnzHLhomXGZ2Qz0a4DTl42LxhurriV9GT+Qbmx1zr04osb/6
+Ffo14SmWuobuTdSe0WuroSWeF+uf2O8Ru5NaaqLe5Ha8Nw5oQt+NfuLz11L
s9vYYzN92rg3p6MdXkN13RLa89cOp61+jXJ+4t3KvRWd7dQ156u9nq15ayxW
gtfC3BK5VrhX4rfm7YaEPkWFr6UWekT8Otra2Hdn+ynR97aESQmzcbrgT0+4
K2FGQv+E7nxfx0NwrqGnpXx7nFZy1yZ0pLV1bl9doZtY6xy3E35HfgYn3JLQ
I6Gnvu3N6yDewftanF58dM7tpS/tXbzj3o+OvtBV/Jpc71b6tpZvh9NTPLhD
E4bZ0/U8dJTv5d5PPjzfqPcAuV7quotlue5qwv+YhLG035DbyxDa+3jHfULC
cJpi1kB6h9IxhI6u3j3NvFGunz4DaetJRz89IjaI5l54g8wbgNvBblriRf6m
osLnaXzCONzh5t6c0BsnfE4rKnwGx5s5jr/BdjEi4VazR+gxHGcsHwPFR6gf
Kn4rPZEfZXbMnZUw0f6G4Y/XbwxNg9SPdB+pdnyubiIt8R6t/yi8ke5jaRqC
O0BteJ5XVPjau8lOYn/xNXqb2dPtcZw+090n0DETb4S6hQm38zcTZ4Z+I3N+
4j3ZfTKdM9VN4Ot2PafwNkpsIt4kcyfKTcadij+Ft3sT7isqfN+ZpEfE59M2
3b7n2c9EfWMfnewkau+g+/WEnyX8POH+hEV8z+dhBu5k/EVmLhSL3J0Jc2id
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
+MHcjNBwHC84/wZP1jvo
           "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1: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
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Beta]\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, {{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram lg(Cross-Kerr/3rd)\"", 14, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {1., 3.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJzt0PkznAcAxvGVTErSIFhX3VQMUnIJij4RTbSpjRRRQmKWylrtkuiIVJQ2
riGOxCzSyGa0DckQIg0adB1TN7tL1hJX3CK7775v2k0qqTGqf0ffH74zz3x+
fKwi4wOitzIYjL7N1Db7bzPsy2HTQ+Eh4XbQ5CaF8yqfsAyjGbgHLOnd76Rw
qCljn4xPYYUbdUS8MYXghIM3BEIKzZ+22pelUSAqfSfbdSex3FVWtF9AIdDF
QHBYl4J6+vHSWYMJXDTemt+TQkFhGbdr+Q4J6whWIMNkHO/wYrPDwymk7+xO
v+pKwtPjpLalxVOUtA//8KcHBZM3Zqt7+5UINgwcgM0YdjPdU7JMKDxaSIwd
DVfigupUdoTdKBo55RdN1kj4SUTTlykCeZIQnzRHGY61qF+omyCx2Gz7udUV
ApXVYRu3nUcwphX/1dFmEimV33V2Mwl0ZJ9taT0gBSdyNHriRxLMIpnr13cV
mIpiJz1zfQKmKuP4dh4JI5bNJd9VOer4hpz6mWHMOemR1iBxqGHtAMtbDmO3
dMex4mHUxv503VOHRJDZCBVw9QWuTJLU28+GcbnS2SV4QYlvMu9Xh8hWoEg9
XW+6ZRi+88Kn8Q1KXFdmcM5arCDIuvsSHg+Bae6XkpOtxINTZ2y+5D6HsGuf
V2TcEOZCJyx+CVVCJHSZ4T5ahi1XoJb5/hBqimP++N1RCYWtVln8+hJMjXXz
/BskSB7++9zoOoEdBcvBib5LICNeMIutJGjQ18vPkRLY5iE+/KBwEewwh0iz
EjF0wndEzVcRGPuL1W4wtoDkXB6XpyVG3M9q7h6bP1ZViZBqvoCiprrzwiwR
+lfeaPFDCaREstqWoudRvaJK0twYhJ3zy0ViL4ET74k+YtXModPQNe1M0iAy
Ep83H9UgYPnEr7X+1SymjiVn1VADmG15du32jAKqnEEvU89ZvE4U5q9zBuC1
ZfTcaqMCuek3ktXVZ6BZwShmzfbj5iciz5MFCjirSr8dLZ7G7hGfW4KQfkRN
ftBWyFGAHVOgbSeeRHaQ+YCtpA8lI68/NPVRgHpcI+kXjOMV93v/LJ8+9IqE
jffMFUjdLiqM442BnTYvXf6tF2vdmftd/pFD8zThr+slg5j/cYjvnl44tbNq
O2Ry3Kp6d1fjTik8qiqn7pb3gN2k73DioRwOaw5DoVNDuNemwdbQ7wH/1+mK
iTw5Ekr5lmtfiKAvi12KyelGT3WFFSdGjmtu0vIjq724Ih/k9q134e0dnkDl
I0ftuI5VbkknXm44kfYJXdDvJfYk28nBDPOW6jp2wFu7gWe0jXbaaaeddtpp
p5122mmnnXba/9/+L/Vmnus=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.49999999999999`}, {7.5, 
                112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -100.03462603878116`}, 
                    Offset[{4., 0}, {7.5, -100.03462603878116`}]}, {{
                    7.5, -68.87119113573407}, 
                    Offset[{4., 0}, {7.5, -68.87119113573407}]}, {{
                    7.5, -37.707756232686975`}, 
                    Offset[{4., 0}, {7.5, -37.707756232686975`}]}, {{
                    7.5, -6.544321329639889}, 
                    Offset[{4., 0}, {7.5, -6.544321329639889}]}, {{7.5, 
                    24.619113573407198`}, 
                    Offset[{4., 0}, {7.5, 24.619113573407198`}]}, {{7.5, 
                    55.78254847645429}, 
                    Offset[{4., 0}, {7.5, 55.78254847645429}]}, {{7.5, 
                    86.94598337950137}, 
                    Offset[{4., 0}, {7.5, 86.94598337950137}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -112.49999999999999`}, 
                    Offset[{2.5, 0.}, {7.5, -112.49999999999999`}]}, {{
                    7.5, -106.26731301939057`}, 
                    Offset[{2.5, 0.}, {7.5, -106.26731301939057`}]}, {{
                    7.5, -93.80193905817173}, 
                    Offset[{2.5, 0.}, {7.5, -93.80193905817173}]}, {{
                    7.5, -87.56925207756231}, 
                    Offset[{2.5, 0.}, {7.5, -87.56925207756231}]}, {{
                    7.5, -81.3365650969529}, 
                    Offset[{2.5, 0.}, {7.5, -81.3365650969529}]}, {{
                    7.5, -75.10387811634348}, 
                    Offset[{2.5, 0.}, {7.5, -75.10387811634348}]}, {{
                    7.5, -62.63850415512464}, 
                    Offset[{2.5, 0.}, {7.5, -62.63850415512464}]}, {{
                    7.5, -56.40581717451523}, 
                    Offset[{2.5, 0.}, {7.5, -56.40581717451523}]}, {{
                    7.5, -50.17313019390581}, 
                    Offset[{2.5, 0.}, {7.5, -50.17313019390581}]}, {{
                    7.5, -43.94044321329639}, 
                    Offset[{2.5, 0.}, {7.5, -43.94044321329639}]}, {{
                    7.5, -31.475069252077557`}, 
                    Offset[{2.5, 0.}, {7.5, -31.475069252077557`}]}, {{
                    7.5, -25.24238227146814}, 
                    Offset[{2.5, 0.}, {7.5, -25.24238227146814}]}, {{
                    7.5, -19.009695290858723`}, 
                    Offset[{2.5, 0.}, {7.5, -19.009695290858723`}]}, {{
                    7.5, -12.777008310249306`}, 
                    Offset[{2.5, 0.}, {7.5, -12.777008310249306`}]}, {{
                    7.5, -0.311634349030463}, 
                    Offset[{2.5, 0.}, {7.5, -0.311634349030463}]}, {{7.5, 
                    5.921052631578947}, 
                    Offset[{2.5, 0.}, {7.5, 5.921052631578947}]}, {{7.5, 
                    12.153739612188364`}, 
                    Offset[{2.5, 0.}, {7.5, 12.153739612188364`}]}, {{7.5, 
                    18.386426592797783`}, 
                    Offset[{2.5, 0.}, {7.5, 18.386426592797783`}]}, {{7.5, 
                    30.851800554016616`}, 
                    Offset[{2.5, 0.}, {7.5, 30.851800554016616`}]}, {{7.5, 
                    37.084487534626035`}, 
                    Offset[{2.5, 0.}, {7.5, 37.084487534626035`}]}, {{7.5, 
                    43.31717451523545}, 
                    Offset[{2.5, 0.}, {7.5, 43.31717451523545}]}, {{7.5, 
                    49.549861495844866`}, 
                    Offset[{2.5, 0.}, {7.5, 49.549861495844866`}]}, {{7.5, 
                    62.0152354570637}, 
                    Offset[{2.5, 0.}, {7.5, 62.0152354570637}]}, {{7.5, 
                    68.24792243767314}, 
                    Offset[{2.5, 0.}, {7.5, 68.24792243767314}]}, {{7.5, 
                    74.48060941828254}, 
                    Offset[{2.5, 0.}, {7.5, 74.48060941828254}]}, {{7.5, 
                    80.71329639889196}, 
                    Offset[{2.5, 0.}, {7.5, 80.71329639889196}]}, {{7.5, 
                    93.17867036011079}, 
                    Offset[{2.5, 0.}, {7.5, 93.17867036011079}]}, {{7.5, 
                    99.41135734072022}, 
                    Offset[{2.5, 0.}, {7.5, 99.41135734072022}]}, {{7.5, 
                    105.64404432132963`}, 
                    Offset[{2.5, 0.}, {7.5, 105.64404432132963`}]}, {{7.5, 
                    111.87673130193905`}, 
                    Offset[{2.5, 0.}, {7.5, 111.87673130193905`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "1"}], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -100.03462603878116`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -68.87119113573407}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.707756232686975`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -6.544321329639889}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 24.619113573407198`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 55.78254847645429}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 86.94598337950137}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.6666666666666665`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.308746, 0.441842, 0.940894], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2058306666666667, 0.29456133333333334`, 
                    0.6272626666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.308746`", ",", "0.441842`", ",", "0.940894`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.308746, 0.441842, 0.940894]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.308746, 0.441842, 0.940894], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.935699, 0.951565, 0.993729], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6237993333333334, 0.6343766666666667, 0.662486], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.935699`", ",", "0.951565`", ",", "0.993729`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.935699, 0.951565, 0.993729]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.935699, 0.951565, 0.993729], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.995282, 0.992317, 0.727853], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6635213333333334, 0.6615446666666667, 
                    0.48523533333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.995282`", ",", "0.992317`", ",", "0.727853`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.995282, 0.992317, 0.727853]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.995282, 0.992317, 0.727853], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.955963, 0.863115, 0.283425], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6373086666666667, 0.57541, 0.18895], FrameTicks -> None,
                     PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.955963, 0.863115, 0.283425]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.955963, 0.863115, 0.283425], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6028180000000001, 0.438666, 0.161198], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.858405, 0.449932, 0.203562], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5722700000000001, 0.2999546666666667, 0.135708], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.858405`", ",", "0.449932`", ",", "0.203562`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.858405, 0.449932, 0.203562]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.858405, 0.449932, 0.203562], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1.4048914647435087`"}], ",", 
                   "5.819573359649486`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737990381269*^9, 3.737990408086*^9}, 
   3.7379967923120003`*^9, {3.737996829914*^9, 3.737996842825*^9}, {
   3.737997278451*^9, 3.737997291651*^9}, 3.737997924609*^9, 
   3.737998023196*^9, 3.7379981452539997`*^9, 3.737998319484*^9, 
   3.73799859144*^9, {3.7379987389969997`*^9, 3.737998757965*^9}, {
   3.737998788382*^9, 3.7379988320360003`*^9}, {3.737998878531*^9, 
   3.737998889245*^9}, 3.737998931932*^9, {3.738001447895*^9, 
   3.738001457308*^9}, {3.73800148966*^9, 3.738001550729*^9}, 
   3.738014711527*^9, 3.7380583694700003`*^9, {3.7380593298710003`*^9, 
   3.738059383323*^9}, {3.7380599854300003`*^9, 3.738059996744*^9}, {
   3.738063009392*^9, 3.7380630455550003`*^9}, 3.738063223118*^9, {
   3.738063298025*^9, 3.738063321289*^9}, 3.738063520961*^9, {
   3.7380635761949997`*^9, 3.7380636042019997`*^9}, {3.738063670244*^9, 
   3.738063687744*^9}, 3.7380638121099997`*^9, {3.738063865745*^9, 
   3.738063870597*^9}, 3.738064650526*^9, {3.738065974888*^9, 
   3.738065989398*^9}},
 CellLabel->
  "Out[700]=",ExpressionUUID->"fb1368ee-353f-475b-9434-1893846b8408"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxlmT/IHFUUxWfMY5y1GFgY1gyBxZFxzRYikvRzQQULCwmSKigKEWzUykq0
sBAEg40E/9uInSBC2kkhSIg2dloFmU4JH/gQxPAh37dzDpzjNsnhu3Pfj8t9
575507/8+qWr9xVFcbssipN/zz721PP/9vubxenvaIS+cPr7i/qV09/f1J98
fPL7h/rnn05+90bNV4TGl9QXT/OfCX0+ha5Xhear44EXfrvyzJ1HyQsNXmjw
QoMXGryarwiNL6nBq8+n0PUq46vj3rU3rn70xY680OCFBi80eKHBq/mK0PiS
Grz6fApdrzK+Ou5O1Wu/X3mEvNDghQYvNHihwav5itD4khq8+nwKXa8yvjru
HH325uPnBvJCgxcavNDghQav5itC40tq8OrzKXS9yvjq+KW/8M5bvz5MXmjw
QoMXGrzQ4NV8RWh8SQ1efT6FrlcZXx0/XLr13q3rPXmhwQsNXmjwQoNX8xWh
8SU1ePX5FLpeZXx13Hj3xQ83lx8iLzR4ocELDV5o8Gq+IjS+pAavPp9C16uM
r47nXv3jiR/Pb8kLDV5o8EKDFxq8mq8IjS+pwavPp9D1KuOr4+LtB5986etz
5IUGLzR4ocELDV7NV4TGl9Tg1edT6HqV8dXL/OjIC63zrbP51tl862y+deTV
+JJa51tn862z+daR9+DHG/JC67zY2LzY2LzY2LzYkFfjS2qdFxubFxubFxvy
HvytNf9tzX9b89/W/Lc1/23Jq/Eltfpva/7bmv+25D34xdr8bG1+tjY/W5uf
rc3P1uTV+JJa/WxtfrY2P1uT97D/GvOHxvyhMX9ozB8a84eGvBpfUqs/NOYP
jflDQ95DP69sv61sv61sv61sv61sv63Iq/Elte63le23le23FXkP/ZGsf5P1
b7L+Tda/yfo3kVfjS2rt32T9m6x/E3kP9T6etB+OJ+2H40n74XjSfjietB+Q
rwiNL6m1H/B8Cl2vMj7UN09a3zxpffOk9c2T1jdPWt88aX3zpPXNk9Y3T1rf
PGl9s/HOxjsb72y8s/HOxjsb72y8s/HOxjsb70zeQn5HI/4HXmjwQoMXGrya
rwiNL6nBq88navBqOtZ3tPqOVt/R6jtafUerL7hD41nf0eo7Wn1Hq++ovNl4
s/Fm483Gm403G2823my82Xiz8WbyLvuPvNDmD+SFNn8YzR/Iq/H0h9H8YTR/
IK/mo/+G1jeF+W+Y/4b5b5j/htYX8fTfMP8N898w/w3wLvODvNA238gLbfMt
bL6RV+M538LmW9h8I6/m4/mBvNB2fgjthybs/BB2fiCvxvP8EHZ+CDs/hPZD
Q97l/ENeaDufkRfazmdh5zPyajzPZ2Hns7DzGXk1H8+/1r+t9W9r/dta/7bW
vy15NZ7nX+vf1vq3tf5tybuc38kLbe8X5IW29wvyaj6+X5AX2t4vyKvrVcbH
9zfbb53tt872W2f7rbP91pFX4/n+Zvuts/3W2X7ryLu8f5IXGrzQ4IW292Py
aj6+H5MX2t6PyavrVcbH+wfzh635w9b8YWv+sDV/2JJX43n/YP6wNX/Ymj9s
ybvcn5AXGrzQ4IW2+x3yaj7e75AX2u53yKvrVcbH+zPzs978rDc/683PevOz
nrwaz/sz87Pe/Kw3P+vJu9z/kRcavNDghbb7SfJqPt5Pkhfa7ifJq+tVxsf7
X/JCq/8O5r+D+e9g/juQV+N5/2v+O5j/Dua/A3mX+2vyQoMXGrzQdr9OXs3H
+3XyQtv9Onl1vcr4+P2CvNA6L3Y2L3Y2L3Y2L3bk1Xh+v7B5sbN5sbN5sSPv
8v2FvNDghQYvtH0fIq/m4/ch8kLb9yHy6nqV8WG+7ckLrfNtb/Ntb/Ntb/Nt
T16N5/c3m297m297m2978uJ70acn6b69P549/8GN7+7ubuLv37/9+ZfD+4fv
NdVXFbX9/X/9hXx/DpefPjMv/fAN8zP+P5imjq8=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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

           "]], 
          
          PolygonBox[{{454, 43, 44, 455}, {457, 428, 439, 458}, {452, 32, 43, 
           454}, {456, 418, 428, 457}, {453, 22, 32, 452}, {458, 439, 440, 
           459}}]}]}, {}, {}, {}, {}}, {{}, {
        GrayLevel[0], 
        LineBox[{453, 452, 454, 455}, VertexColors -> None], 
        LineBox[{456, 457, 458, 459}, VertexColors -> None]}, {}, {}}}, 
     VertexColors -> CompressedData["
1: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
7uf0jNUrL5tmAje9NbYMHnvhK6ufYtcmBZ9c0yYCX5bOeQHPcbn0Bb6D3345
vFXRjN3P2ul8GcJ8vsnKyX/N55D5y9c5adPfEz0TPZn2g83EWUbhxYLIIVK0
5m//+Rz6vBvfvfmEbTWZtCWe3TtffVDD7p1nrTRg99eCpcnMHwy+Z17Z++0b
3Pe8biNcsEiDuYKV5DTcL6/dZ10LL1dUZ/fjgaYTTOH1i06ze/PY2WnMeedP
ZvfmZuNn2f31EdUL7J6658JZabikz0l2P94qu5zdjy/Iy+/BuFt6PrFx3w/4
snGFzKO5UF8+8roFfkproTq7f3dqyUV9hvY0efQ/nMjepYz+h0ibo+KKQ92k
6O/Ezeh/2Jz6YiP6H5wGj7oZbPxIChR1uXa8of9vUumB/ofZX4R/Ox/rIxOr
7e6hr+DvY1tj9BX0az4+UFtA1/lffCLgr1V198L9VVrWwxPfqMfAUxKqTOC6
0YvG0YewIFYkHJ5a/YjlPOjauAv1gsVu0fATAV6sPiJdfBr8zmZ+1hexPvc6
64uwDJvWjhzliffuwj/zCLIcE6vv9qgvHOhg8ymZ78TmM/78jSJ8rRjX+JxK
uh5zt7ijStfd6Vkt78xMuoidV80w+mHmSqb/4kuk4+oaiPl96iQzdjrUox9m
2qSBDvTDqG364Fozv4t81BaVQz9MqOlFE/TDrC4rm2n7qJvUPREL7Mqj+4hl
hv3ohyn90nXNsqKPKO4NaQmlnz83ozg59MPsjpgu4VQ+QH4LTV+KfhWj2ous
HyagXrcO/TD8XlsXwkPsX72H/8gS1UEfy6/KAtb3MqW3gPW9pJ9esQhut42H
ub67G3OeeW9k4AvDqsTh4f33WD/MGTOlMeSHvvuoif6oJveqFeiP+iM80vv8
dxvpTdlo4k/f95gaG9dvoXR91TMp9LRTG5mxtOUW+qN+liS1oj+qOeR5zZAF
rR8tC0J/VKd1WTz6owTCd2+uKm4jrx2S9NAfJVQw+wr6o1prXljMNW4nF3rX
caE/St3spxb6o7SkJ0mP+XQQp+c3nqI/ymhU8yb6o375S5xv3dpNKlxLGn9G
c8jFyaGB6I/ysJGxrq7oJwLTuxPQH6Vvfn/LWfq+PAt5ER3L3UXuPHAb6NSm
z6NMK/XsgUGyI9o+zdulnpjwzW5Ef5TaouBa9EftVOP7V/ByiAQ6TVR/voI+
r8/9Xfs9cpAo1L27qlNQR0znV/cbS9PP+dQutzn+g+SMoMTEn5fqSPgjo7E1
snR92VTd8fz6IMkXD+hQiKojckOxXk+WccjM5p33A84Nkkn3OjapedWRf8Ov
R9ZS19cJdWz1HiRiVyL2mJ2qI7IfIgj65bKGbraN0pxJNy4HFdCcF24pbrUK
9HeKu6R+5N4g2awwWmj6oo4E+5uadm+g65NttzWX1g7Sdd7H59Kq9eSChdVv
9MvZnf961UZpiORaxwSfWdhAJHm//h6+zCHB2YHFsxqGSN+dbyItgY1kudzK
suoiDvl+q2yJcwh9fsfYT15Y2/p/7pzwf8vfqObLB3jR9fRozJ9z9PP8aHFN
oY3sIJFQGRpPpX7kxa5316mH3B1bOU9mkPwavOLiTd2ts2+xF3WDzp4dy+UG
yZZd01zh4yEXlsA1ZZVU4FNebDsGXxTXthTeV7xqAnyd45EHGPef72UFH+qd
e+q+m9Nx7/0o1oql/qa1eTiAumzJtksNdNyYvMWeadRVcny4blA/Ke/Ny0/9
/wEjropO
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"\[Beta]\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(ex\\)]\\)\"", 
         TraditionalForm], None}}, FrameStyle -> Directive[
       Thickness[Large], 14], FrameTicks -> {{Automatic, Automatic}, {{{
          NCache[(-4) Pi, -12.566370614359172`], 
          FormBox[
           RowBox[{
             RowBox[{"-", "4"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-3) Pi, -9.42477796076938], 
          FormBox[
           RowBox[{
             RowBox[{"-", "3"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[(-2) Pi, -6.283185307179586], 
          FormBox[
           RowBox[{
             RowBox[{"-", "2"}], " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[-Pi, -3.141592653589793], 
          FormBox[
           RowBox[{"-", "\[Pi]"}], TraditionalForm]}, {0, 
          FormBox["0", TraditionalForm]}, {
          NCache[Pi, 3.141592653589793], 
          FormBox["\[Pi]", TraditionalForm]}, {
          NCache[2 Pi, 6.283185307179586], 
          FormBox[
           RowBox[{"2", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[3 Pi, 9.42477796076938], 
          FormBox[
           RowBox[{"3", " ", "\[Pi]"}], TraditionalForm]}, {
          NCache[4 Pi, 12.566370614359172`], 
          FormBox[
           RowBox[{"4", " ", "\[Pi]"}], TraditionalForm]}}, None}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
       "M10DefaultDensityGradient", "GridLinesInFront" -> True}, PlotLabel -> 
     FormBox[
       StyleBox[
       "\"Phase Diagram lg(Self-Kerr/3rd)\"", 14, StripOnInput -> False], 
       TraditionalForm], 
     PlotRange -> {{-12.566370614359172`, 12.566370614359172`}, {1., 3.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1: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
1KX+//N/AdoC9/I=
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.499999999999999, -112.49999999999999`}, {
                7.499999999999999, 112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.499999999999999, -106.27593360995849`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -106.27593360995849`}]}, {{
                    7.499999999999999, -44.03526970954356}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -44.03526970954356}]}, {{
                    7.499999999999999, 18.205394190871367`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    18.205394190871367`}]}, {{7.499999999999999, 
                    80.44605809128629}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    80.44605809128629}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.499999999999999, -90.71576763485476}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -90.71576763485476}]}, {{
                    7.499999999999999, -75.15560165975103}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -75.15560165975103}]}, {{
                    7.499999999999999, -59.59543568464729}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -59.59543568464729}]}, {{
                    7.499999999999999, -28.47510373443983}, 
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -28.47510373443983}]}, {{
                    7.499999999999999, -12.914937759336098`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999999, -12.914937759336098`}]}, {{
                    7.499999999999999, 2.6452282157676343`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    2.6452282157676343`}]}, {{7.499999999999999, 
                    33.765560165975096`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    33.765560165975096`}]}, {{7.499999999999999, 
                    49.32572614107883}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    49.32572614107883}]}, {{7.499999999999999, 
                    64.88589211618256}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    64.88589211618256}]}, {{7.499999999999999, 
                    96.00622406639003}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    96.00622406639003}]}, {{7.499999999999999, 
                    111.56639004149376`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999999, 
                    111.56639004149376`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    RowBox[{"-", "2"}], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -106.27593360995849`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -44.03526970954356}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    18.205394190871367`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    80.44605809128629}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "4.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.178927, 0.305394, 0.933501], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.11928466666666668`, 0.203596, 0.622334], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.178927`", ",", "0.305394`", ",", "0.933501`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.178927, 0.305394, 0.933501]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.178927, 0.305394, 0.933501], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.6666666666666665`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.308746, 0.441842, 0.940894], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.2058306666666667, 0.29456133333333334`, 
                    0.6272626666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.308746`", ",", "0.441842`", ",", "0.940894`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.308746, 0.441842, 0.940894]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.308746, 0.441842, 0.940894], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.453318, 0.567063, 0.950106], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.30221200000000004`, 0.378042, 0.6334040000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.453318`", ",", "0.567063`", ",", "0.950106`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.453318, 0.567063, 0.950106]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.453318, 0.567063, 0.950106], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "3.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.642359, 0.720535, 0.964988], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.42823933333333336`, 0.4803566666666667, 
                    0.6433253333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.642359`", ",", "0.720535`", ",", "0.964988`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.642359, 0.720535, 0.964988]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.642359, 0.720535, 0.964988], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.819984, 0.859297, 0.982692], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.546656, 0.5728646666666667, 0.655128], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.819984`", ",", "0.859297`", ",", "0.982692`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.819984, 0.859297, 0.982692]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.819984, 0.859297, 0.982692], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.935699, 0.951565, 0.993729], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6237993333333334, 0.6343766666666667, 0.662486], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.935699`", ",", "0.951565`", ",", "0.993729`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.935699, 0.951565, 0.993729]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.935699, 0.951565, 0.993729], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.984192, 0.987731, 0.911643], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.656128, 0.6584873333333334, 0.607762], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.984192`", ",", "0.987731`", ",", "0.911643`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.984192, 0.987731, 0.911643]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.984192, 0.987731, 0.911643], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.995282, 0.992317, 0.727853], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6635213333333334, 0.6615446666666667, 
                    0.48523533333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.995282`", ",", "0.992317`", ",", "0.727853`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.995282, 0.992317, 0.727853]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.995282, 0.992317, 0.727853], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992503, 0.986373, 0.425376], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6616686666666667, 0.6575820000000001, 0.283584], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.992503`", ",", "0.986373`", ",", "0.425376`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992503, 0.986373, 0.425376]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992503, 0.986373, 0.425376], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.955963, 0.863115, 0.283425], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6373086666666667, 0.57541, 0.18895], FrameTicks -> None,
                     PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.955963`", ",", "0.863115`", ",", "0.283425`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.955963, 0.863115, 0.283425]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.955963, 0.863115, 0.283425], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.666666666666667`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.904227, 0.657999, 0.241797], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.6028180000000001, 0.438666, 0.161198], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.904227`", ",", "0.657999`", ",", "0.241797`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.904227, 0.657999, 0.241797]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.904227, 0.657999, 0.241797], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.3333333333333335`"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.858405, 0.449932, 0.203562], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5722700000000001, 0.2999546666666667, 0.135708], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.858405`", ",", "0.449932`", ",", "0.203562`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.858405, 0.449932, 0.203562]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.858405, 0.449932, 0.203562], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.817319, 0.134127, 0.164218], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.5448793333333334, 0.089418, 0.10947866666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.817319`", ",", "0.134127`", ",", "0.164218`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.817319, 0.134127, 0.164218]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.817319, 0.134127, 0.164218], Editable -> False,
                     Selectable -> False]}], "}"}]}], "}"}], ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "2.199565215057622`"}], ",", 
                   "5.0251184445773704`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.737990381269*^9, 3.737990408086*^9}, 
   3.7379967923120003`*^9, {3.737996829914*^9, 3.737996842825*^9}, {
   3.737997278451*^9, 3.737997291651*^9}, 3.737997924609*^9, 
   3.737998023196*^9, 3.7379981452539997`*^9, 3.737998319484*^9, 
   3.73799859144*^9, {3.7379987389969997`*^9, 3.737998757965*^9}, {
   3.737998788382*^9, 3.7379988320360003`*^9}, {3.737998878531*^9, 
   3.737998889245*^9}, 3.737998931932*^9, {3.738001447895*^9, 
   3.738001457308*^9}, {3.73800148966*^9, 3.738001550729*^9}, 
   3.738014711527*^9, 3.7380583694700003`*^9, {3.7380593298710003`*^9, 
   3.738059383323*^9}, {3.7380599854300003`*^9, 3.738059996744*^9}, {
   3.738063009392*^9, 3.7380630455550003`*^9}, 3.738063223118*^9, {
   3.738063298025*^9, 3.738063321289*^9}, 3.738063520961*^9, {
   3.7380635761949997`*^9, 3.7380636042019997`*^9}, {3.738063670244*^9, 
   3.738063687744*^9}, 3.7380638121099997`*^9, {3.738063865745*^9, 
   3.738063870597*^9}, 3.738064650526*^9, {3.738065974888*^9, 
   3.7380659895480003`*^9}},
 CellLabel->
  "Out[701]=",ExpressionUUID->"86fe62e9-0e5f-4ee6-8e8f-4e9f9944a7ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ttt", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"listt4", "[", 
          RowBox[{"[", 
           RowBox[{"9", ",", "i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Log10", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"listt4", "[", 
             RowBox[{"[", 
              RowBox[{"9", ",", "i", ",", "4"}], "]"}], "]"}], "/", 
            RowBox[{"listt4", "[", 
             RowBox[{"[", 
              RowBox[{"9", ",", "i", ",", "3"}], "]"}], "]"}]}], "]"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "len\[Phi]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ittt", "=", 
     RowBox[{"Interpolation", "[", "ttt", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"ttt", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"ittt", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"-", "4"}], "Pi"}], ",", 
       RowBox[{"4", "Pi"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.738065169849*^9, {3.738065201618*^9, 3.738065215545*^9}, {
   3.738065267986*^9, 3.73806541909*^9}, {3.73806557141*^9, 
   3.7380656447609997`*^9}, {3.738065683508*^9, 3.7380656948900003`*^9}, 
   3.738065728915*^9, {3.7380657673640003`*^9, 3.7380657707860003`*^9}, {
   3.7380658259309998`*^9, 3.7380658294969997`*^9}},
 CellLabel->
  "In[689]:=",ExpressionUUID->"6a6fd0e5-60ea-4fa6-9a70-ac713d51d7da"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQLaHrEvJbUfMAf6Lc7UfLhBy44m7FeDxQP/Cc0UJg
c8id/X/6ClKnzlM7YLIk9t3q68/3v9vPlvcoRvVArujdvAVHPu1/8GFOmb60
yoHHBy4Vnp/2bv8lReP6mptKB1zMOj8XyLzdfyToZPvJ6YoHNho13Coofrt/
W3P8BLEwhQPpx3e/tZ3zbn9A5mvD4xpyB9imJgR85v2w3+S0uHPiUukDh7tP
3Te+8GE/xH2SB2J4WCsNSj9C3SN2gHf3ZrWmJx+h9oscWByx51cg7yeofYIH
6lYp+a5++hFqPt+BdSEZH7+mf4Sax3ng1c5Ez8+9H6D6WQ6stuL5/HwyzD3/
9ldO5lrI9eUVVP7L/vURb3Vyep5C+U/2bxdoMtgsfGM/AxSEXLXfPMFGzAEq
b89yV79+EVAeqt9+K0fojRqgfqj59vOdBJb9/Qwzn8UhNjnxzi2g/VD3OTRH
fvMAuQ/qfged4kMZ74Huh/rPwXLbQ8G1T+H+d1hTF3PYG+h/aPg4HO6Zp9fw
BOZfSYcu/8muhsDwg4avg9JjuWcmF2DmyznknEn5+wkY/tD4cUi6OzvUHhg/
0PhzUG2487MQGH/Q+HXwnVKwIQ8Yv9D4d2CUypp8ERj/0PThID9h2a75R2Du
UXMo7/eXir73fD80fTlcOOF24zAwfUHTn8Os26+6UoDpDwDpOFRh
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{All, All}, {All, All}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-12.566370614359172`, 
    12.566370614359172`}, {-1.173004563389749, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.738065170553*^9, {3.738065204531*^9, 3.7380652161289997`*^9}, {
   3.738065318061*^9, 3.738065360988*^9}, 3.73806542083*^9, {
   3.738065579789*^9, 3.738065594133*^9}, {3.738065633342*^9, 
   3.738065646742*^9}, 3.7380656956540003`*^9, {3.73806572987*^9, 
   3.738065740304*^9}, {3.7380657718789997`*^9, 3.7380657785360003`*^9}, 
   3.738065830034*^9},
 CellLabel->
  "Out[691]=",ExpressionUUID->"12135273-dabb-4c84-b9e7-fd06986a6f74"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1:eJw1mnk41N/3wO0khBlrCrNGu6RQ3kelpFCiRZQtSiIt2qS0IOQTSkXKlpKt
RdLm2JIkSyEK2ZcxM2YmoiS/9/eP3z8zz+u5d+4596z3PM/oewQ47JMQExOb
R37879vlWMer4f4egnM+zO2CbiOeCAnJnp7dSywdX9HjoNWC/rebZw3u7SU6
XywQmXNbcV/BomP16b3E9EzhpfX539GlLqylaKCX8NR0y33g0Y6bpFekXgno
Ix4HOUmm2nbiGr3/pI886yPqzt3NPaLchWbmAwecx/uIskVHK1s/duG8wJtG
88/1E6Xvj/t8XtCDutEjCZTyfuJBc4j47c89qP5gw+SkzACh0PRh4d7AXpRq
Hy+viRkg/g19d3NM7MPJcft5zz8PEO7MkFNFjH4UqT6MTlYfJES3Na3DHvZj
l/VOJ/+7g8Tak1zDD3cG0KIv2P1T+yBRpSutNVdmEBNDUw8tmDNERJyf46Pi
O4i/5lSeinIZItr0cu8XVQ2iwyvOZU7SEKEZPn+fAW0I87bPitv4fYiIN1U2
ORU0hPI/l919qM0hMoo/P3z7bgjL5p8t9L7NIb7tqnt+2omDc6tSy961cIic
4InDcxM4eNqrspahOUz4RrXPUvzMwWax4W8Xd5Cs8IvmMmMYjZJnDXQnDBOS
YS/N9FcNY4yp8U/L5mHiSsi9gUDfYeQ07ZxOUeMS24J1X3leH8b1R87OFHPi
Ei+kn6xReDWMaUppGnuvcwn51I8qod+H8d+jSnrxFy6R3tj/4uvEMDpvGF48
h8Ijmlmn3zFVuVjYM2tVsAOP+Dtnqvo8m4uq542tv8fyiP0wsPPfSi766+xy
NGvgEYHUx9PP1nOxuuis221lPuGnV2f/YgsXWU5pfhP2fOIJ53XrnB1cvCis
PLnjPz5x/Tdv4dQuLnZeHb5UWMsnfL+0tfmSvMpQOVZNaYSI/jcdFOzExVuV
xsnHbEcIW/G66A12XBz12JX1JXqEkPIozetay8Ut02efG9WMELIP7A65mXCx
2bahs0paQORs5+9sZXJR6k6P90mmgLAe15DwIO9jxBnjsq0ExNJZa3/P+juM
bivljn71EhDFjIHaiW7SnmHav8MuCYh1xWcoRu+H8U3jgnMmGQJCy+PkjoaH
pH1phHR/uYCIS3Cczw0fRs3ArVE3egSEbHe47i0v0t7oqWIlKSRqqq9UcCxI
e++OmJOxRkikXP3q8Y3LwfqsxPRtHkLC+Zjq2bQSDv4bzzGQvCAk3qj8ueIT
x0Hn6w3LPUqFRP2V3LcWSzhI+aRtpwciIlGvaNfZHUO4ZvbCxrq9ImLi0MHm
iDlDePgA4XzunIjIywj/sLp7EGukvbw7ikXEiYEWxz8+g3jJIjfkzuqfRMdR
YY2WzwA+jUapza4/Cee3/z7UMAaw81tD5GTwT6KNtrS0qasflQx6lbPv/CRe
Goqttbnbj6tO/EpwfvOTsN7d84Nw7kffd3Jz5Nt+Ej/MHObVqPXjLcrs9JeT
P4kv9hU5Ug19WOm+0ODA7FEi9pLRwfvRfTiaT+Rrmo8SBRUzlVvT+rBmvrnq
YddRws/ZftfrV32Y/sDk+Ptzo0T9f7sP+n/uQ4d7C82DKkaJnpVFLtbi/fgk
Zvb7L7ZjhIzu8K0ml370PzTeEeP2i/ilEpyYOXMABwzzlaTDJght68C2bJtB
LM58FOjycIKYHLcbdHYdxARaZuOz6gkizdLasT9gENdrJyd6zPpNXBE/ifHX
BzFjRhSr5NZvIrzWWHZb2yC6DXpbnMn+Q/w7uv9cwb4h/HZ/rr+w/i9xLq1j
QbQHBwtlchweiv4S/YH525YHcjDex3TFXuoUoaTTa/f+HAc3GziKfdoxRUxv
C9R/cIeDxTlX4h52TBHc2311e5s4mPpstHAv9x/xeuct003Ww1jg1jfdf1EM
dnZp132gc5GmsuBI2XUxWHDhtnT/Ei5eKz3Sm3xfDFwHLMIEq7l4iCb2wfG9
GJg43/lUT+YTq1c7rkxeHKzdf20sjSTzxWcL426sOKgKq9NP8rh4xv+1tdM9
CQiZUFv6K5OHa4gxL6V8Ccj5Y2ll/4SH8sqLQ98XS8DA5vKSpNc8vPUk7aVp
hwT4+X6znFXPw8LRK4Zz50gC1ZpT5DHBQ9HpnQoDiZLw+LzSj0/r+egbPlZ3
MkEKMt40j0y18dFo52Lu0kwp8HIctKD38/H3vANyw8+l4FVWId1ihI8R1W3g
2iQFhtX8WkfxEcxUrHhiSZWGtVdjY2SYI9gVHxcvHycN945XVl3wHcGdKYt3
3LkqA0q3Nb+p80dwVLbDPeuuDOzeIamQ9WsErwVE+xXmywBlUd/iJdMj+MFi
KLS+QQbmhgS8VpIToFl7Wo6Uuiw0nzsc+0pTgDra6hKH7srChW7vf8qmAvwR
/zdndb4cpOV0SbQfF2Dw5KMXNiVyYFbaturcKQFqeu4q29EgB2SnuaFzVoBb
jAq/Bv6UA72BkQLrSwIsqQ+QyFwxAwxvr8w7HifANMWeHUolM0Df+nmJQZ4A
vcM/SPyol4dA36BElW4Busw6+OJDpzzUHCk+N9orwK03FfwKBPLw38NPh74M
CHDVA/umK8ozYdlFrYOXeQJUfd/0wHjLTLC2stN+NSHAtzLdmyPrZoLpOe9q
HyUhUsP+JCyvVQBeB/Ngp4kQ5ZXubNLrUIA1fgMvN5gKcfrGarGZfAUw27PY
OttciJz75w90KirC2HZDQx8QYsk7mVVRtoogGH627OlGIfpJU7o6axQhlrWl
LWG3EMsvzZ8f/VEJqMruZnXBQjSbvpHC+q4EU3coFa9DhPj0lJh6KUcJBkw1
2jPOCzHNv0ns14xZMIPgo98lIV7Yea55r/UsePS8x+VLlBDXLPgSuuzdLHC0
XXT9720hvspcPf6pcRa4Ktbsf5okxKX6D/32986CZJuFLV7JQlSOKs6uFVeG
WS3qkZgiRLHz8QmS+srw7WyM3eYHQuw8sNrv0F5lkOJv/VP+TIg6D0SZZj7K
EFsg3rD2uRB39j7okg1Qhuh9A7YlhUKs36O6Iy1EGdRpS1fnvyTvv23A8muy
MiStq5Teh0K8tzpWw7JNGbznmf5YUi3Eb6fXOyj1KkNblX7AmY9CVC+ajP4+
rAxjJU8fl9UIMcbIWyJoUhn2bHu0aUOdEEPY5rxH2iqwCCZG5zUKcY9KXxl1
lwq8Ntr63K5diFKJjaNR7ipgo3dpRXCHEB/RKliSvioQHVvcff+HEMeXpUcK
T6uAvIToBa9LiNe2uzvU3lGBH5uDEu37hWjyY8slq/sq0Hhv/6s9A0Js94HC
N7kq8FH9trzvoBANT+lqZxerACdHhzjOIf2X1N4V3qkCyroRynv4QvRlfKJM
D6qAxQqrarsR0r65b6yChCpQPqz82lwgRJfipCwvCVWY3LfKSl4kxF+duwIt
GaqwZd1byukxIc5jNYtN+qjC94ZlO+9PCrE2753RkcOqEPhGZWjXXyEeX/Hc
a+ikKsga3yuWnxJimfX1qq9XVMFNZqm5+z8h7j7ocK0gWxV4bTPiusREKDFq
WTa/QBWeNq52OykuwofBS0fT3qhCTYPw1EwJEY5eVd4Z+0kVFmiuiWdJijDm
ca2u/4gqlJ92Pb5EWoTGpsVb+8ZVYc+agy+ySP5WmnvRRYwC6eEfNunKiJD9
JXrARoUCu97/8J8muXZ3sFaZFgV+/Ng0fUBWhMd6D24ypVHA9OnhvnqSS8Zs
8tnLKHCzZHNhvJwIvUPMuu6aU+CJdlHaCMmKsoYU9XUU+OC7bnDDDBE6a844
IeVEAYbBvAs8ksVSJx6ecaXAmefLWszkRZhpMPhNtI8CU0erIi+R/NPsvUVX
EAUelo/JKc4UYeW2x1bvQyhQUrKjeAPJt/xub84NI89X+rDpHMkHL1/YFh9D
3ufDnyfPSLa4e9D5VAIFlijeFfaSrPLC0X3vXQrYj3nOpCiIsLdu9X6rTAp0
J09Nryb5xSArYH4eBd7TdOr3kRwprhykUkiBrnuHgyNJdtX+HTz+lgKzluZI
55C8ZFn3xfZ3FFgqOudXTbLk5o+R5Z8oYDB950kfyc1eBbFZTRT4erSgaYrk
rLPJt/5rp8BsvxOtqooiDE4Iu3e8jwJNkjffMki2zw/I3M2jQP/2igvLSKZV
7cy1HKPA4tDHBgTJY52WBewpCly7q/BsA8lVvw1fK0pTgVN9RdeW5CRVatlP
BSro0FoD7En2nz9V1UqlglxJdoYdyZbr+utQhwpKD23sbUimutY132dQYY9C
no4lyQPHi9qjFlDhq9q6BmOSX8Wk9gYak+fpgz+T5KsPIod3rKJCbWTT6P/0
dys5Klq9jgox+Su8/3e/Za0uv+mbqTA1fLu8l2QZkZWYvCMV8M5ipQ8kt8ov
lhXspsLRuQs2PCI5h66p1OxJhbefygIiSN7qxJmddpQK19nR181JZvh/oUWc
oYJXFDNemeRfYW8M/C9SYct/rLBu0p93imJWmMVTYXpogd1ZkgMaTljoJVFB
+s8t5nqS13DcrGTSqZCrY/ZrJsmDs5dt+/yUCt4KQ+ExZHy9NtZxLnpFhddx
rps2kRxjK+1+t4wKK+42KkiTbHzuq7/vZyosfHEzJoCM1/PdZyIlRFQoUlXO
1yPje9ukV+zgbyr86jG59I7MBxbV7latuBrs15108yG5xkovM1FFDfw3GJik
kfmkmVVRarRUDZ6cfXV4VEqEw6W5VZqmarCqzDcjlOTibwl1/0AN5LZvG5pJ
spfCgfbqLWow2J6YrUHmc36A4m+Pw2oQdC11mQKZ/9wvS8ZFJ9WA2h7nGETW
B8OVjmMXQtXA/PddpfZpIWaIJQnT4tRAsY/pmELWk8TYeZzuAnL9UJn9P7Ie
fR3bNHjkrRrEa+7xsiWZ6hzQL1GpBpvnbJ17+48Q/6MVdtO+qkH9id0RrN9C
vPRs7XeP32pwc1vTXq1fZL3S8GkViavD8ZzpD7ZkvZs+E/n1grw6xAy+7QsZ
FeLpdQ1f0marw1576sqvZH0MaNpT071aHcZe/j3iRtZT5/FTbz0uqEOp+u5b
zWR9vrk7+bUoUh2oL+y/NJP1uxFLXl6IV4ftdltbvvQJ0T5CtjAtQx0uRzmE
lPYIcZ3WjbzuSnVYcVvG14/sB4vNH9/zmKkBVneXFM9vJvvHuf5Qj+sacNT1
6VVyTkD/o5JO7nc0wJLhmkotEWKLj948twwNCCeSF1UUCzFni3Ota4EGKCQ4
Fc9+I0RHWq32rkYNaCkY4eWQ/TD93fNn9lRNyLFW2b8rm+zPCpf7Vl3XhLw1
6xOH4sjfi6UVmd/RhGtONX/sYsn+N1YcZZahCXsaHmo+/Y98T7RPLF1ZoAl2
rPbrgdFCjMv3C1nWqAleK4Krmy4LsdvBUcOQqgUJl79LLT8pxNDb9I0a17Wg
1H6eAot8XyyQvf+Xl6QFcXf5s2x3kfofYz2uSNeCx9JXTY7sEOKiLQYaR55p
gcrvnvHCbWQ/llncV/NZCwxOjycZbhai8TGz0Asq2pBOSRa+WSXEfrutL3kx
2uBMYaim6Qhxk9Q5g4orsyG/bAFNuUWAeRsPtfCz5sD9Ju+VSssFuDIR39Xe
14VbS2pOfjMawd5F+av25+lCkyhwvHjhCMaW330m/kIXrCM2jd6fN4Ic7tlU
4ypdyB/jJJ2ZO4J3iFVnEzm6cHynsvwG+RE8f8RF+5mGHlxamJp0oJuPfRqt
DSEueqAXLXWTeoOPq7q3XP3opgfj+vQDNtf4GJdTZa25Tw8OmQs9L0Xx0cKy
CJ8c0oPQ9f/pSV/g4y3fm7m9IXrg/u1UvXkAH23eOl2xSdUD6W7LzhgbPuZ5
fAb1fj3YWuR1wEGaj/cPBHPtOHrwpOt6pZU4H+8cZt0K5+uBS6TsCWKKh5Eh
p0cmfunBZaUw7fVjPNyXSLv7XVYfvjemH0jr46HO5yOTKQb6sGLEUv3Bex5S
WnUetC7Uh1+WC5fIVZDzQmelg6qRPjQOpJYcLuHhBE/70UUzfejqmri68yUP
v8wo3+m9idwfqtVyKZuUZ0kpnH9IH7JlpTXdYnkYav3W3StQH1RKNemWMTw8
ae+jmHxcHw6m/n1vGMVDb9fXXkoh+sCPkpmneZmHlqc8KcIYfej/02HheoqU
9/jZ4cLH+nB5fGsZ152HIy9cdUYK9GF+6FFCYy8P+4tlq9gv9aH+8RbxzS48
bKzZrXu7lJR3K4PTuJ2H+YOStWc+64NJyvkT+zeT8vQc51uO6kPUvtO3Xpjy
8OjIaculE/pQ0W1o/mYFD88Xp+7Q/6sPE4u1vn1czsMkl5GL4lI0qO+4Hq5g
xMP6W5FtpRQa5ClumVKfzyPfY09ETzRoYBRp0hFkwEOOSYtc2mwa5OqynnSz
eSjVxFx+gU4DGTOZhx0MHpqqlF5ds4wGL7JVTA7q8nB950C60Qoa7AuIkFw0
l4eO+UqvaOY0kL3xpWhKh4f+ti79EmtpkPqoxqlCm4dndC7+Fa2nQasf7/Rr
LR5GDGep9tjQIHR5lUSJJg/TroxblDvQICMk9rlQnbz/zrlOz7bTwLVBNEeX
5Ddsq4PpzjSQrvvp6azGw+pfB0Pj99DgdadtZjqVh1/fxd286EGDlIBXkpMU
HvZef5l71JsGn3tFiW4kizw7yz19aRCY9TiyUZWH00ay37b50yCZlSvcTrKC
xCLB2iM0OPYulT+gwkOtBkcZ4yAaaI5sSAknmZVyRodxmgaZCruYJiQbB6QZ
UUNoYBEec+enMul/iw/WUhdoIF6Vyigh2U5RsGf0Mg0UV25uSyLZpU39eO8V
GlyEDd1hJB/IXh3VeJW8v81mp1CSg057pVbE0oCFVMcoki9ujHpRcIMG12Wd
pzJIvqb59FPGbRoMRjcF1JKcPNDScz2ZBmuLoFqW1OdR4fTvS6k0KBc5zt9K
8ovLLOXj92kQef/jk0ckVzjasvZl0eC56Z5gKnnfz/Rjq5xySf9pVmbFkPxD
lOhg9YQGRY/e7NQi7cUtLd2//DkZP7smHxSQ/OfaYAjzJQ2qY8wL3Uh7y7rN
uqH2lgbvn5qkzSH9QV1ski1dSoO+RZmRwyTr/3MpHauggZXf2phq0n+LPl38
2ldFxlPj+4+vNHhofbBBsrKeBgbvDwbUkfHgZDahVdhIns/4pzpKxovHDN0l
mS00sNnqetCQjKfDLVbrE9poYPYjYs9uks8+8HMJ66RBsXOZ7jaSI4PijwT1
0kDetOWiK8m3rF5FeA/SIDuGNnma5PvUrrvbuTSYf/j3WDbJT3tkn68X0EBN
VNArIPlYy8fKqFEatEVGPnGYw8MVn/5rqZ+gwexJVdlPJP8p3cZRm6IBsTbs
mBsZ728KNf46i9Oh0FPniiKZDyHZ3xVTpOnAc1FsbCQZUu7p9s2gg8Pi2N5C
PR5K3PBcaqhEB8fvPzYW6PPw3RX22gBVOux1Xxr/iUbmQ8iwY4E6HbpK39pL
kvlmczTf+7c2Hayn3ihtZ5Lxuf/oSQtdOkhQffZWsnhY67Ii8iKdDsEyo/WO
88j42DqZVMWmA70pSSRuyMNt6zFXcQEdfM4nbKsl871l8YaGm8Z0OOHvpfx+
MQ8TGTN72lbSQffpg8jRpTx01aob1V9NB+3GOaFrjXnYLbFDM8eKDm8KLuha
k/UmY1zbULiRDsSxrr5/5mQ94naYm9jR4SNl275WCx4ON3nvLdlOh4JRu5rJ
dTzMqzYMlN5NB77Jxs/rrEn/If+CzV469Dub1D7bxMPRh0GZjT50qNn4oVd6
Gw//nQnjDZ6kg3+d0CTSk4clh22mF56lQ9r89ATV/WQ+7FNSORpKB6lDst7v
/HgoZ59gPHWF5NSqazlBZD1Y67x+TQwdQq7fkO8+w8PolXN3hsfRoc1/bMm6
UB6q0DLPqCTR4Xerbcm1aLLeqvte3X6PDjcOFm4IjuNhwsxF95LS6VDdF1uU
cIuH2mPPy5g5dCi6ERrvfJ+HjKp3M8ze0iFvxLNlYSlZv99cmX2ulLTX54tO
KVU8zHpiu7DiHR1iUpqXr68n4z2paYtdLR3WSY65LOok48m/76bHDzr0DBuP
nJPg4x+PrKwHPXSINlNYkjyTj292HHrNHaBD1slmWxGVj2A51hEkoMN4Bd11
/Tyyn1KlWVHiDOBnlR67v5WP9AartHBpBriN1JU17ebj36thcy/NYEBms+ie
mTcfG23eJ55XZEB+ScH5xsN8zJWV0zirwoBjSimt6Wf4GFZhHX9KjQH9eoRu
Vhgf94RemRWkxYCxnTqVvbF8XGFRHXVkDgOiGh+1rMnko/KkvFyAPsmbi6vT
Svk4+GLTpYNMBkgfF2Ubt/Ox9Fi02H4DBpTzcs3HJvh4hK/4220pAzrtnLzG
loxgU5cyx8GSAZut731ISBvBvLtbve2tGGB1cIPSWhzBsN1x3Zs2MsCxLfuv
ZNsIrmyifF+3lQHdFJrvd3kBJlap15i4M2AOfyyvbJ0A3fJ18rRDGaBVEvjo
1wsBmvq5GmpcZkDY0+e/FlUKUNXgbiblCin/g0L8jkYBlqfp3lOIZcDnzFKz
owIBshJo1/6lMECyufttJluIw8HzjnSXkPoPD9rHXRNihekBfkcFA9SS/U4p
JAvxzq8s3+9VDDAKXMl3yRKi3eH5no31DNhSenzlafJ9+9hzkWNlJwOs39Lf
nyTf11f0AurLehmw0fJy2QnyPe/Rnr8ZBxkg5/NBBsj5n7JjqVWRgAGLv1YO
MrVFGGRjbPJIjAmhMssitSxFOLL2QVqcFBPcFdQocjYi3L9ae9YZOSaopm26
+txBhLuXiA1uUmZCrlqt8QZPETYaHHU0pjJhHO9vnXdQhHb0/hIdTSa0xA1Z
lB0RIajX3ObpMmH2pk8HtEPJ+XIWIdNMZ0LP34mEpnByfpzx9EgxmwkShx8e
XRtDzocSzB+Z88nzI1NPeFwn56u/Nzf9t5gJasseaS9NFOG9MfmiE8uY4Gsf
0Zh7j5yvRs4y3FYwoe2d+JyvGSKc2e05tYQgz9/VsdIgT4SXvjcf0FpL6rP2
06TdUxH+a9zYLL6BCU/0AhbMLhThido3azg2TEhuvrIm+qUIBe8X53+2Y0Ld
pp7nKW9E6FuaNvu1AxNOelv+244i7HmlFpG+nQlVCr7xuaUidCmIGI1yZoKQ
QeellZPzf+6k27E9THCxydEfIffbP/D/5OLBBGrTgeypZ+T8ntJlauXNBIWx
0ehHD8h5NP69qro/E+Ttf8zpuyrClFPxFS/OMmFbz88e6e0i1DoqszQllAnM
a4q3F28QYZzfqeSIy6R+YR+NJFeK8PLevUG7rjJhNPvet1xNUl+r+fMm7zDh
oe2t/abkPGSsUh5l8YYJJvnr+/zWCjFX3mSCVcIE/xhTZvdiIbKksrxmVZD2
1gvx1CTnAa3xmNWdH5kQXuST+umnAP+1OY+EfmdC68Kc/y6mCPDDQ5HDuz9M
qOkYNivtHMGJ9xKvJaaZMFERHbEmfwRZA2RzkWTBKTn3hd5nR/ACc9nPVzNZ
cOm/z6vSNUdwVdrR+Mc6LOD80i/YvYmPj5NGvyRZsODiWIGS2H0udrySWtW6
hgUv++Sd3AO4qPiNmqG+gQX9X+x/3jPloq/m8mOx9iy4ENc0Xv5pGBk3jlPD
3VjQLNT0UBrjoEPB5eAKLxZ4z1+cVVrMwdAvN3rFD7DAellcVUAEBztUCguC
A8n1hENbPs7m4K2YX45HLrBAU7LsXf+aIazMlXmbH8aCQblw5RaFIRyrUWfy
Isn9ub+edTUPIoPLumr4HwtyH+m4yaYOosPMFWM+8SxofCX1bvPBQTxvuMH1
/k0WtN58Ffd8+SDmb9zxrjuJBW8nN56yEhvEjv0+C/VSWDBwS8hYJxhAhYgT
N1wzWPBNtuPxTf1BNHsQPpX4kAWuN/TmTjgM4oHKm/taclggEIRW2l4axEqp
ouXbnpP768oXn+4n5YVONFlXssDZdYWJZeYQ5qXIWYRVs8AjytPueeMQtqNm
ZnktC6QlRwPcJTho9m9lkMVXFjyL9jKR3M3B/XM2dpz5zoK0qaaYD5c5eHPV
rvUvf5DyjtfuOJDPwdHTp9SNB1mw3uxEWvM/DtISr4QEcllg1Ff09RhjGLe+
vN2fJ2DBGqeM3qvWw3i+JcuOO8qCdlMJuvzBYcwbf1lo8JsF/muSuA1Rw9im
Xj3XZ4oFh+euTPr0aBhnmnwLyxBnw66zqRF974dx/7E/23Xl2XA19G/YzL/D
mLs73ICqxIbywAdXj6lwUbSG+ldOlQ3rEnDPAIOLJoaptVNqbDjeZlq+xYSL
Z1QWpYq02FC1dOalZCsulky8Ojowhw1JF+f5vnLgolTnhvVt+mzYgWEW1125
uPF9o2YDkw2+n7WrNby5GJPnPvzOgA0mj1qblvpx8csN/ttXC9nAMC4yrCPj
UfPsmWv5S8nzXLNj2w5z0dVLzjNjORukqA+/rCfX0zbdWH7blA2V69Jf/vHl
4oARTS5mNRus22MV+jy5uEA7/9sFSzb8rN5/Q7SLi4fFV+WesGKD0aTOHGVb
Lj4frDrnt5EN+3an+xmu5uKfOicHd1s2TLQINi8y5KLFi27G9q1s2On+J0yO
ysWLdwPGbZzY0N1V0HP/zzBWXf77gdjFBglrtQU/24dR8dCVO8aubNALVTZo
fzuMDo7qAQbubMg4nZS+JXEYb5qnW87dxybn7Wwvs6Okf2hLqJQDbAjxMl4e
TvpTX/5tv+whcv/iBR107WH0Fm58+fcwG2oOh8+bGuDgo5bmKOExNgSqmbdP
P+GQHdVzT/9JNrTJr3qneZKDxg8ES74Hs+GixbksYzMOnow5K1l/ng0/kn87
wMQQSrjefPgygg1iN3y0vvkM4YZ1jDN50Wy4L2tVZak1hNHzn9imX2ND9O6F
bpsrB1HtT7Uo+hYbWl1E/lOqg+jcteNd6B1S/96iE2efDuDdqt6bQSlsUJba
c3Wb7QDOu/lvldtDNji+0ZB8fqwfD4VEzXLKYYP3EvUxLfF+fLpPs3vjY9K+
gkqNiIg+NDc2Cl9WxIY9ihTKsohetGvY1yBTxYb+LN22LOtujC8SpU9+JM87
ddrOIrsLW+6dCxLUseGc2GLTNXJd6O5/e/a3r2wo+Co0IR9emOnE4td+Z4OL
k2Cj05925Kx6VlL+gw06eRtv7Axrw2MzP+3LHWDDFucCnRunW/GlaNfKtGE2
lHjeDg7t/or/Wvvlb46Q/nt23kXLohmTqzdYnx5lw///3+T/AIIZes4=
       "]]},
     Annotation[#, "Charting`Private`Tag$53183236#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -1.172899074063677},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{(-4) Pi, 4 
      Pi}, {-1.172899074063677, -0.3144231741553215}}, {{-12.566370614359172`,
     12.566370614359172`}, {-1.172899074063677, -0.3144231741553215}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.738065170553*^9, {3.738065204531*^9, 3.7380652161289997`*^9}, {
   3.738065318061*^9, 3.738065360988*^9}, 3.73806542083*^9, {
   3.738065579789*^9, 3.738065594133*^9}, {3.738065633342*^9, 
   3.738065646742*^9}, 3.7380656956540003`*^9, {3.73806572987*^9, 
   3.738065740304*^9}, {3.7380657718789997`*^9, 3.7380657785360003`*^9}, 
   3.73806583008*^9},
 CellLabel->
  "Out[692]=",ExpressionUUID->"f9b60577-22b6-4a8e-8bde-341ee026a771"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 998},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.9 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 425, 9, 87, "Input",ExpressionUUID->"41b9eada-926d-4f9b-b6cf-5982c86c502e"],
Cell[CellGroupData[{
Cell[1008, 33, 232, 3, 88, "Section",ExpressionUUID->"6969e32b-6cd5-4880-8da6-9cc177d65628"],
Cell[1243, 38, 4771, 117, 765, "Input",ExpressionUUID->"54b54782-c0ea-4eed-912c-f75c74c0e58a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6051, 160, 155, 3, 125, "Section",ExpressionUUID->"8ea9f4e5-c859-46c2-b708-7d315745f382"],
Cell[6209, 165, 164, 3, 65, "Text",ExpressionUUID->"0bfa07cf-22b2-4fc4-82c1-12fab99d6641"],
Cell[CellGroupData[{
Cell[6398, 172, 4892, 92, 330, "Input",ExpressionUUID->"b02f79c5-1699-4357-a47d-01fc21ef7a5d"],
Cell[11293, 266, 777, 11, 60, "Output",ExpressionUUID->"b9f16c2f-a829-4825-b88f-05062ff318c9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12119, 283, 172, 3, 125, "Section",ExpressionUUID->"4905469d-de32-4058-bb2b-f92c640f70d5"],
Cell[CellGroupData[{
Cell[12316, 290, 1312, 32, 90, "Input",ExpressionUUID->"1488c04b-ad32-4201-aa59-ca2c1baab2ea"],
Cell[13631, 324, 850, 16, 60, "Output",ExpressionUUID->"21826583-5ee5-4dd3-9cf1-f0247ebffdbd"]
}, Open  ]],
Cell[14496, 343, 2410, 45, 53, "Input",ExpressionUUID->"22cf45a3-2ca1-49ba-9eac-6d27afc99f6f"],
Cell[CellGroupData[{
Cell[16931, 392, 1425, 38, 90, "Input",ExpressionUUID->"f5b14626-761d-4254-a232-ba78fd801876"],
Cell[18359, 432, 119594, 2099, 463, "Output",ExpressionUUID->"f58ee45b-d172-48f4-895a-4ba34f715362"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137990, 2536, 1359, 32, 53, "Input",ExpressionUUID->"f65a3e19-1355-4f3a-a2c2-25d20524d50b"],
Cell[139352, 2570, 182496, 3131, 458, "Output",ExpressionUUID->"4eb20307-327e-4d8d-b39d-e9212cbeea58"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[321897, 5707, 154, 2, 125, "Section",ExpressionUUID->"5a99d994-908d-4150-81e1-531ce0275825"],
Cell[322054, 5711, 4591, 114, 314, "Input",ExpressionUUID->"c152647a-67b7-4d47-ba23-8bcce28fd3a9"],
Cell[CellGroupData[{
Cell[326670, 5829, 169, 2, 100, "Subsection",ExpressionUUID->"e90ec7eb-29c1-426f-ba17-d648abb9c5b0"],
Cell[326842, 5833, 1000, 23, 115, "Input",ExpressionUUID->"f4546922-6b78-442b-9994-811c33321bf4"],
Cell[327845, 5858, 4704, 106, 559, "Input",ExpressionUUID->"66fc426c-75a0-4d9e-b7cd-d9c4bfbaa955"],
Cell[332552, 5966, 266, 6, 77, "Input",ExpressionUUID->"c6a1c4d7-c240-46b6-afe2-46ca0f9488df"],
Cell[CellGroupData[{
Cell[332843, 5976, 1319, 34, 226, "Input",ExpressionUUID->"e98a9a52-b65c-4c99-9a6a-9ba6c61c4ef2"],
Cell[334165, 6012, 43220, 905, 496, "Output",ExpressionUUID->"5e126f80-dab1-4393-aa65-8e7727e71f9c"]
}, Open  ]],
Cell[377400, 6920, 203, 3, 65, "Text",ExpressionUUID->"7c32633e-ac44-4f33-9e6f-bac726fb1023"],
Cell[377606, 6925, 8186, 189, 944, "Input",ExpressionUUID->"7a5beacc-ffae-4c9a-96de-1baaa80a76e9"],
Cell[385795, 7116, 271, 6, 77, "Input",ExpressionUUID->"10e7b32b-c15e-44f7-a91e-0d990b781413"],
Cell[386069, 7124, 2801, 68, 226, "Input",ExpressionUUID->"ed235432-2ae6-451c-982c-f86a0d1a39dc"],
Cell[CellGroupData[{
Cell[388895, 7196, 4131, 101, 374, "Input",ExpressionUUID->"13fdade2-56ae-4899-9bdc-483635922e11"],
Cell[393029, 7299, 116864, 2053, 514, "Output",ExpressionUUID->"2d845973-d686-422f-91b3-397b0a58b991"],
Cell[509896, 9354, 105702, 1871, 508, "Output",ExpressionUUID->"bf0d4dac-10d9-4840-92b0-f4e5e789202c"],
Cell[615601, 11227, 171698, 2952, 519, "Output",ExpressionUUID->"6ebc1aad-5084-48ce-bf2e-c92229ea2b83"],
Cell[787302, 14181, 171387, 2947, 541, "Output",ExpressionUUID->"3cad1df9-7fba-4b2f-a87c-88dfdd6ab212"]
}, Open  ]],
Cell[958704, 17131, 142, 2, 92, "Input",ExpressionUUID->"37217412-a6fa-43a5-8f5c-c38761a96037"]
}, Open  ]],
Cell[CellGroupData[{
Cell[958883, 17138, 202, 2, 100, "Subsection",ExpressionUUID->"5ddef5c8-b972-4641-9cf9-e24edaa3b92e"],
Cell[959088, 17142, 769, 20, 115, "Input",ExpressionUUID->"0f92135d-211e-481a-81ff-046ef142ffe3"],
Cell[CellGroupData[{
Cell[959882, 17166, 8266, 193, 929, "Input",ExpressionUUID->"b378d9d1-f660-4e5b-bd70-2b26059dc113"],
Cell[968151, 17361, 62258, 1183, 787, "Output",ExpressionUUID->"8cd47702-15ab-436e-82a4-e67361eadfc6"],
Cell[1030412, 18546, 64225, 1193, 787, "Output",ExpressionUUID->"fa0fad37-ffc7-448a-9ade-92a85639de36"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1094686, 19745, 168, 2, 100, "Subsection",ExpressionUUID->"61b5a43c-801a-44c4-88eb-eaecfbb476f3"],
Cell[CellGroupData[{
Cell[1094879, 19751, 1878, 50, 226, "Input",ExpressionUUID->"d29eadb8-faca-4e3d-bbcd-3fd41aa0c9c6"],
Cell[1096760, 19803, 693, 13, 85, "Output",ExpressionUUID->"499a7080-4386-4919-9664-60b1b5932cd4"]
}, Open  ]],
Cell[1097468, 19819, 3974, 94, 559, "Input",ExpressionUUID->"4efba044-d2a3-4eb6-8c4e-07628b6b508e"],
Cell[1101445, 19915, 271, 6, 77, "Input",ExpressionUUID->"b51afc67-3eca-4b5e-8af5-847cf48d8bff"],
Cell[CellGroupData[{
Cell[1101741, 19925, 1248, 33, 226, "Input",ExpressionUUID->"341762ae-b1e9-44e3-a221-be614060e88e"],
Cell[1102992, 19960, 63817, 1329, 580, "Output",ExpressionUUID->"500448a4-bfe9-4146-a0f6-a3b3e6903b07"]
}, Open  ]],
Cell[1166824, 21292, 203, 3, 65, "Text",ExpressionUUID->"acd5f5b4-f454-43ae-9ff9-5cc9a52dc1ca"],
Cell[1167030, 21297, 8117, 188, 944, "Input",ExpressionUUID->"24f345e3-2bd1-458a-9153-7edf41ef0bb3"],
Cell[1175150, 21487, 314, 7, 77, "Input",ExpressionUUID->"b7e2c8d1-c766-46f6-858b-6c2c7e14c6fc"],
Cell[1175467, 21496, 2038, 57, 189, "Input",ExpressionUUID->"a9a70368-462d-4a8d-b969-1d83028c641c"],
Cell[CellGroupData[{
Cell[1177530, 21557, 3524, 93, 374, "Input",ExpressionUUID->"592d4a65-c83f-4b5a-b11c-55056473e671"],
Cell[1181057, 21652, 196519, 3426, 523, "Output",ExpressionUUID->"f43e2aac-2d64-4539-9ea7-e0a898a57831"],
Cell[1377579, 25080, 178305, 3131, 508, "Output",ExpressionUUID->"5d22a100-aac7-43f9-8178-c62cd48b15ce"],
Cell[1555887, 28213, 266745, 4580, 508, "Output",ExpressionUUID->"82b1244e-7a04-4951-8f59-6059927a2e10"],
Cell[1822635, 32795, 266008, 4568, 508, "Output",ExpressionUUID->"a4285465-580c-4de9-9e3c-adea255a4c01"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2088692, 37369, 161, 2, 100, "Subsection",ExpressionUUID->"e17fa8a1-74cd-4017-83c2-80ef410353b8"],
Cell[2088856, 37373, 617, 18, 115, "Input",ExpressionUUID->"d555fc20-703c-431f-9a8f-61db403da0c6"],
Cell[CellGroupData[{
Cell[2089498, 37395, 6739, 168, 929, "Input",ExpressionUUID->"302150c6-a349-455c-96ad-a37bafd3a1b1"],
Cell[2096240, 37565, 65383, 1209, 796, "Output",ExpressionUUID->"fb1368ee-353f-475b-9434-1893846b8408"],
Cell[2161626, 38776, 63173, 1177, 796, "Output",ExpressionUUID->"86fe62e9-0e5f-4ee6-8e8f-4e9f9944a7ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2224836, 39958, 1808, 48, 263, "Input",ExpressionUUID->"6a6fd0e5-60ea-4fa6-9a70-ac713d51d7da"],
Cell[2226647, 40008, 2339, 55, 479, "Output",ExpressionUUID->"12135273-dabb-4c84-b9e7-fd06986a6f74"],
Cell[2228989, 40065, 24784, 426, 486, "Output",ExpressionUUID->"f9b60577-22b6-4a8e-8bde-341ee026a771"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

